// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: wfo/vanalytics/v2/flag_review.proto

package vanalyticsv2

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CreateFlagReviewRequest is a request for creating a flag review.
type CreateFlagReviewRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// FlagReview resource to create.
	FlagReview    *FlagReview `protobuf:"bytes,1,opt,name=flag_review,json=flagReview,proto3" json:"flag_review,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateFlagReviewRequest) Reset() {
	*x = CreateFlagReviewRequest{}
	mi := &file_wfo_vanalytics_v2_flag_review_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateFlagReviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFlagReviewRequest) ProtoMessage() {}

func (x *CreateFlagReviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wfo_vanalytics_v2_flag_review_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFlagReviewRequest.ProtoReflect.Descriptor instead.
func (*CreateFlagReviewRequest) Descriptor() ([]byte, []int) {
	return file_wfo_vanalytics_v2_flag_review_proto_rawDescGZIP(), []int{0}
}

func (x *CreateFlagReviewRequest) GetFlagReview() *FlagReview {
	if x != nil {
		return x.FlagReview
	}
	return nil
}

// BulkCreateFlagReviewRequest is a request for creating many flag reviews.
type BulkCreateFlagReviewRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optional. The ID of the flag for the flag reviews. When not provided
	// all deleted flags will be given a review.
	FlagSid int64 `protobuf:"varint,1,opt,name=flag_sid,json=flagSid,proto3" json:"flag_sid,omitempty"`
	// Optional. Any notes written for the flag reviews.
	Notes         string `protobuf:"bytes,2,opt,name=notes,proto3" json:"notes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BulkCreateFlagReviewRequest) Reset() {
	*x = BulkCreateFlagReviewRequest{}
	mi := &file_wfo_vanalytics_v2_flag_review_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BulkCreateFlagReviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkCreateFlagReviewRequest) ProtoMessage() {}

func (x *BulkCreateFlagReviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wfo_vanalytics_v2_flag_review_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkCreateFlagReviewRequest.ProtoReflect.Descriptor instead.
func (*BulkCreateFlagReviewRequest) Descriptor() ([]byte, []int) {
	return file_wfo_vanalytics_v2_flag_review_proto_rawDescGZIP(), []int{1}
}

func (x *BulkCreateFlagReviewRequest) GetFlagSid() int64 {
	if x != nil {
		return x.FlagSid
	}
	return 0
}

func (x *BulkCreateFlagReviewRequest) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

// BulkCreateFlagReviewResponse is a response for creating many flag reviews.
type BulkCreateFlagReviewResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BulkCreateFlagReviewResponse) Reset() {
	*x = BulkCreateFlagReviewResponse{}
	mi := &file_wfo_vanalytics_v2_flag_review_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BulkCreateFlagReviewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkCreateFlagReviewResponse) ProtoMessage() {}

func (x *BulkCreateFlagReviewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wfo_vanalytics_v2_flag_review_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkCreateFlagReviewResponse.ProtoReflect.Descriptor instead.
func (*BulkCreateFlagReviewResponse) Descriptor() ([]byte, []int) {
	return file_wfo_vanalytics_v2_flag_review_proto_rawDescGZIP(), []int{2}
}

// ListFlagReviewsRequest is a request for listing reviews on a transcript.
type ListFlagReviewsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optional. The number of reviews to include in a single response. When not
	// provided this defaults to 100.
	PageSize uint32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Optional. The order by which reviews will be listed. Follows sql order by
	// syntax. When not provided the order defaults to "flag_review_sid desc".
	// Supported order by includes:
	//   - (flag_review_sid desc)
	//   - (flag_review_sid)
	OrderBy string `protobuf:"bytes,3,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	// Optional. The next_page_token returned from a previous List request, if any.
	// When provided all other request fields are ignored.
	PageToken string `protobuf:"bytes,4,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Optional. The transcript sid to look for reviews on.
	TranscriptSid int64 `protobuf:"varint,5,opt,name=transcript_sid,json=transcriptSid,proto3" json:"transcript_sid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListFlagReviewsRequest) Reset() {
	*x = ListFlagReviewsRequest{}
	mi := &file_wfo_vanalytics_v2_flag_review_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFlagReviewsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFlagReviewsRequest) ProtoMessage() {}

func (x *ListFlagReviewsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wfo_vanalytics_v2_flag_review_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFlagReviewsRequest.ProtoReflect.Descriptor instead.
func (*ListFlagReviewsRequest) Descriptor() ([]byte, []int) {
	return file_wfo_vanalytics_v2_flag_review_proto_rawDescGZIP(), []int{3}
}

func (x *ListFlagReviewsRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListFlagReviewsRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

func (x *ListFlagReviewsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListFlagReviewsRequest) GetTranscriptSid() int64 {
	if x != nil {
		return x.TranscriptSid
	}
	return 0
}

// ListFlagReviewsResponse is a response for listing reviews on a transcript.
type ListFlagReviewsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Token to retrieve the next page of reviews, or empty if there are no
	// more reviews in the list.
	NextPageToken string `protobuf:"bytes,1,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	// List of flag reviews.
	FlagReviews   []*FlagReview `protobuf:"bytes,2,rep,name=flag_reviews,json=flagReviews,proto3" json:"flag_reviews,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListFlagReviewsResponse) Reset() {
	*x = ListFlagReviewsResponse{}
	mi := &file_wfo_vanalytics_v2_flag_review_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFlagReviewsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFlagReviewsResponse) ProtoMessage() {}

func (x *ListFlagReviewsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wfo_vanalytics_v2_flag_review_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFlagReviewsResponse.ProtoReflect.Descriptor instead.
func (*ListFlagReviewsResponse) Descriptor() ([]byte, []int) {
	return file_wfo_vanalytics_v2_flag_review_proto_rawDescGZIP(), []int{4}
}

func (x *ListFlagReviewsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListFlagReviewsResponse) GetFlagReviews() []*FlagReview {
	if x != nil {
		return x.FlagReviews
	}
	return nil
}

// FlagReview resource in the Vanalytics API. It represents a flag review
// for transcripts that have been flagged.
type FlagReview struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Output only. The unique id of this flag review.
	FlagReviewSid int64 `protobuf:"varint,1,opt,name=flag_review_sid,json=flagReviewSid,proto3" json:"flag_review_sid,omitempty"`
	// Required. The transcript_sid of the reviewed transcript.
	TranscriptSid int64 `protobuf:"varint,2,opt,name=transcript_sid,json=transcriptSid,proto3" json:"transcript_sid,omitempty"`
	// Output only. The timestamp when this flag review was created. Assigned by the
	// server.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// Optional. Any notes written for the flag review.
	Notes string `protobuf:"bytes,5,opt,name=notes,proto3" json:"notes,omitempty"`
	// The ID of the flag snapshot for this flag review.
	FlagSnapshotSid int64 `protobuf:"varint,8,opt,name=flag_snapshot_sid,json=flagSnapshotSid,proto3" json:"flag_snapshot_sid,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *FlagReview) Reset() {
	*x = FlagReview{}
	mi := &file_wfo_vanalytics_v2_flag_review_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FlagReview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlagReview) ProtoMessage() {}

func (x *FlagReview) ProtoReflect() protoreflect.Message {
	mi := &file_wfo_vanalytics_v2_flag_review_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlagReview.ProtoReflect.Descriptor instead.
func (*FlagReview) Descriptor() ([]byte, []int) {
	return file_wfo_vanalytics_v2_flag_review_proto_rawDescGZIP(), []int{5}
}

func (x *FlagReview) GetFlagReviewSid() int64 {
	if x != nil {
		return x.FlagReviewSid
	}
	return 0
}

func (x *FlagReview) GetTranscriptSid() int64 {
	if x != nil {
		return x.TranscriptSid
	}
	return 0
}

func (x *FlagReview) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *FlagReview) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *FlagReview) GetFlagSnapshotSid() int64 {
	if x != nil {
		return x.FlagSnapshotSid
	}
	return 0
}

var File_wfo_vanalytics_v2_flag_review_proto protoreflect.FileDescriptor

var file_wfo_vanalytics_v2_flag_review_proto_rawDesc = string([]byte{
	0x0a, 0x23, 0x77, 0x66, 0x6f, 0x2f, 0x76, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73,
	0x2f, 0x76, 0x32, 0x2f, 0x66, 0x6c, 0x61, 0x67, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x77, 0x66, 0x6f, 0x2e, 0x76, 0x61, 0x6e, 0x61, 0x6c,
	0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x32, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x59, 0x0a, 0x17, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x0b, 0x66, 0x6c, 0x61, 0x67, 0x5f, 0x72, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x77, 0x66, 0x6f, 0x2e,
	0x76, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x46, 0x6c,
	0x61, 0x67, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x0a, 0x66, 0x6c, 0x61, 0x67, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x22, 0x4e, 0x0a, 0x1b, 0x42, 0x75, 0x6c, 0x6b, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x6c, 0x61, 0x67, 0x5f, 0x73, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x66, 0x6c, 0x61, 0x67, 0x53, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e,
	0x6f, 0x74, 0x65, 0x73, 0x22, 0x1e, 0x0a, 0x1c, 0x42, 0x75, 0x6c, 0x6b, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x96, 0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x6c, 0x61,
	0x67, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x53, 0x69, 0x64, 0x22, 0x83, 0x01,
	0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x6c, 0x61, 0x67, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78,
	0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x40, 0x0a, 0x0c, 0x66, 0x6c, 0x61, 0x67, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x77, 0x66, 0x6f, 0x2e, 0x76, 0x61,
	0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x46, 0x6c, 0x61, 0x67,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x0b, 0x66, 0x6c, 0x61, 0x67, 0x52, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x73, 0x22, 0xda, 0x01, 0x0a, 0x0a, 0x46, 0x6c, 0x61, 0x67, 0x52, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x12, 0x26, 0x0a, 0x0f, 0x66, 0x6c, 0x61, 0x67, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x66, 0x6c, 0x61,
	0x67, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x53, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x53, 0x69,
	0x64, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e,
	0x6f, 0x74, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x66, 0x6c, 0x61, 0x67, 0x5f, 0x73, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0f, 0x66, 0x6c, 0x61, 0x67, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x53, 0x69, 0x64,
	0x42, 0xc9, 0x01, 0x0a, 0x15, 0x63, 0x6f, 0x6d, 0x2e, 0x77, 0x66, 0x6f, 0x2e, 0x76, 0x61, 0x6e,
	0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x32, 0x42, 0x0f, 0x46, 0x6c, 0x61, 0x67,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x39, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x63, 0x6e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2f, 0x61, 0x70, 0x69, 0x2d, 0x67, 0x6f, 0x2f, 0x77, 0x66, 0x6f, 0x2f, 0x76, 0x61,
	0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2f, 0x76, 0x32, 0x3b, 0x76, 0x61, 0x6e, 0x61,
	0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x76, 0x32, 0xa2, 0x02, 0x03, 0x57, 0x56, 0x58, 0xaa, 0x02,
	0x11, 0x57, 0x66, 0x6f, 0x2e, 0x56, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e,
	0x56, 0x32, 0xca, 0x02, 0x11, 0x57, 0x66, 0x6f, 0x5c, 0x56, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74,
	0x69, 0x63, 0x73, 0x5c, 0x56, 0x32, 0xe2, 0x02, 0x1d, 0x57, 0x66, 0x6f, 0x5c, 0x56, 0x61, 0x6e,
	0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x5c, 0x56, 0x32, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x13, 0x57, 0x66, 0x6f, 0x3a, 0x3a, 0x56, 0x61,
	0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x3a, 0x3a, 0x56, 0x32, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_wfo_vanalytics_v2_flag_review_proto_rawDescOnce sync.Once
	file_wfo_vanalytics_v2_flag_review_proto_rawDescData []byte
)

func file_wfo_vanalytics_v2_flag_review_proto_rawDescGZIP() []byte {
	file_wfo_vanalytics_v2_flag_review_proto_rawDescOnce.Do(func() {
		file_wfo_vanalytics_v2_flag_review_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_wfo_vanalytics_v2_flag_review_proto_rawDesc), len(file_wfo_vanalytics_v2_flag_review_proto_rawDesc)))
	})
	return file_wfo_vanalytics_v2_flag_review_proto_rawDescData
}

var file_wfo_vanalytics_v2_flag_review_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_wfo_vanalytics_v2_flag_review_proto_goTypes = []any{
	(*CreateFlagReviewRequest)(nil),      // 0: wfo.vanalytics.v2.CreateFlagReviewRequest
	(*BulkCreateFlagReviewRequest)(nil),  // 1: wfo.vanalytics.v2.BulkCreateFlagReviewRequest
	(*BulkCreateFlagReviewResponse)(nil), // 2: wfo.vanalytics.v2.BulkCreateFlagReviewResponse
	(*ListFlagReviewsRequest)(nil),       // 3: wfo.vanalytics.v2.ListFlagReviewsRequest
	(*ListFlagReviewsResponse)(nil),      // 4: wfo.vanalytics.v2.ListFlagReviewsResponse
	(*FlagReview)(nil),                   // 5: wfo.vanalytics.v2.FlagReview
	(*timestamppb.Timestamp)(nil),        // 6: google.protobuf.Timestamp
}
var file_wfo_vanalytics_v2_flag_review_proto_depIdxs = []int32{
	5, // 0: wfo.vanalytics.v2.CreateFlagReviewRequest.flag_review:type_name -> wfo.vanalytics.v2.FlagReview
	5, // 1: wfo.vanalytics.v2.ListFlagReviewsResponse.flag_reviews:type_name -> wfo.vanalytics.v2.FlagReview
	6, // 2: wfo.vanalytics.v2.FlagReview.create_time:type_name -> google.protobuf.Timestamp
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_wfo_vanalytics_v2_flag_review_proto_init() }
func file_wfo_vanalytics_v2_flag_review_proto_init() {
	if File_wfo_vanalytics_v2_flag_review_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wfo_vanalytics_v2_flag_review_proto_rawDesc), len(file_wfo_vanalytics_v2_flag_review_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wfo_vanalytics_v2_flag_review_proto_goTypes,
		DependencyIndexes: file_wfo_vanalytics_v2_flag_review_proto_depIdxs,
		MessageInfos:      file_wfo_vanalytics_v2_flag_review_proto_msgTypes,
	}.Build()
	File_wfo_vanalytics_v2_flag_review_proto = out.File
	file_wfo_vanalytics_v2_flag_review_proto_goTypes = nil
	file_wfo_vanalytics_v2_flag_review_proto_depIdxs = nil
}
