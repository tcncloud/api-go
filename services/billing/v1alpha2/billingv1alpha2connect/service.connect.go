// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: services/billing/v1alpha2/service.proto

package billingv1alpha2connect

import (
	context "context"
	errors "errors"
	connect_go "github.com/bufbuild/connect-go"
	v1alpha2 "github.com/tcncloud/api-go/services/billing/v1alpha2"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect_go.IsAtLeastVersion0_1_0

const (
	// BillingServiceName is the fully-qualified name of the BillingService service.
	BillingServiceName = "services.billing.v1alpha2.BillingService"
)

// These constants are the fully-qualified names of the RPCs defined in this package. They're
// exposed at runtime as Spec.Procedure and as the final two segments of the HTTP route.
//
// Note that these are different from the fully-qualified method names used by
// google.golang.org/protobuf/reflect/protoreflect. To convert from these constants to
// reflection-formatted method names, remove the leading slash and convert the remaining slash to a
// period.
const (
	// BillingServiceCreateDefaultRateDefinitionProcedure is the fully-qualified name of the
	// BillingService's CreateDefaultRateDefinition RPC.
	BillingServiceCreateDefaultRateDefinitionProcedure = "/services.billing.v1alpha2.BillingService/CreateDefaultRateDefinition"
	// BillingServiceCreateDefaultRateDefinitionsProcedure is the fully-qualified name of the
	// BillingService's CreateDefaultRateDefinitions RPC.
	BillingServiceCreateDefaultRateDefinitionsProcedure = "/services.billing.v1alpha2.BillingService/CreateDefaultRateDefinitions"
	// BillingServiceCreateRateDefinitionProcedure is the fully-qualified name of the BillingService's
	// CreateRateDefinition RPC.
	BillingServiceCreateRateDefinitionProcedure = "/services.billing.v1alpha2.BillingService/CreateRateDefinition"
	// BillingServiceCreateRateDefinitionsProcedure is the fully-qualified name of the BillingService's
	// CreateRateDefinitions RPC.
	BillingServiceCreateRateDefinitionsProcedure = "/services.billing.v1alpha2.BillingService/CreateRateDefinitions"
	// BillingServiceDeleteDefaultRateDefinitionProcedure is the fully-qualified name of the
	// BillingService's DeleteDefaultRateDefinition RPC.
	BillingServiceDeleteDefaultRateDefinitionProcedure = "/services.billing.v1alpha2.BillingService/DeleteDefaultRateDefinition"
	// BillingServiceDeleteDefaultRateDefinitionsProcedure is the fully-qualified name of the
	// BillingService's DeleteDefaultRateDefinitions RPC.
	BillingServiceDeleteDefaultRateDefinitionsProcedure = "/services.billing.v1alpha2.BillingService/DeleteDefaultRateDefinitions"
	// BillingServiceDeleteRateDefinitionProcedure is the fully-qualified name of the BillingService's
	// DeleteRateDefinition RPC.
	BillingServiceDeleteRateDefinitionProcedure = "/services.billing.v1alpha2.BillingService/DeleteRateDefinition"
	// BillingServiceDeleteRateDefinitionsProcedure is the fully-qualified name of the BillingService's
	// DeleteRateDefinitions RPC.
	BillingServiceDeleteRateDefinitionsProcedure = "/services.billing.v1alpha2.BillingService/DeleteRateDefinitions"
	// BillingServiceExportInvoiceProcedure is the fully-qualified name of the BillingService's
	// ExportInvoice RPC.
	BillingServiceExportInvoiceProcedure = "/services.billing.v1alpha2.BillingService/ExportInvoice"
	// BillingServiceGetRateDefinitionProcedure is the fully-qualified name of the BillingService's
	// GetRateDefinition RPC.
	BillingServiceGetRateDefinitionProcedure = "/services.billing.v1alpha2.BillingService/GetRateDefinition"
	// BillingServiceGetRateHistoryProcedure is the fully-qualified name of the BillingService's
	// GetRateHistory RPC.
	BillingServiceGetRateHistoryProcedure = "/services.billing.v1alpha2.BillingService/GetRateHistory"
	// BillingServiceListActiveRateDefinitionsProcedure is the fully-qualified name of the
	// BillingService's ListActiveRateDefinitions RPC.
	BillingServiceListActiveRateDefinitionsProcedure = "/services.billing.v1alpha2.BillingService/ListActiveRateDefinitions"
	// BillingServiceListRateDefinitionsProcedure is the fully-qualified name of the BillingService's
	// ListRateDefinitions RPC.
	BillingServiceListRateDefinitionsProcedure = "/services.billing.v1alpha2.BillingService/ListRateDefinitions"
	// BillingServiceUpdateDefaultRateDefinitionProcedure is the fully-qualified name of the
	// BillingService's UpdateDefaultRateDefinition RPC.
	BillingServiceUpdateDefaultRateDefinitionProcedure = "/services.billing.v1alpha2.BillingService/UpdateDefaultRateDefinition"
	// BillingServiceUpdateRateDefinitionProcedure is the fully-qualified name of the BillingService's
	// UpdateRateDefinition RPC.
	BillingServiceUpdateRateDefinitionProcedure = "/services.billing.v1alpha2.BillingService/UpdateRateDefinition"
)

// BillingServiceClient is a client for the services.billing.v1alpha2.BillingService service.
type BillingServiceClient interface {
	// Creates a rate definition for the REGION.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.AlreadyExists: A rate definition with the same data already exists.
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	CreateDefaultRateDefinition(context.Context, *connect_go.Request[v1alpha2.CreateDefaultRateDefinitionRequest]) (*connect_go.Response[v1alpha2.CreateDefaultRateDefinitionResponse], error)
	// Creates rate definitions for the REGION.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.AlreadyExists: A rate definition with the same data already exists.
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	CreateDefaultRateDefinitions(context.Context, *connect_go.Request[v1alpha2.CreateDefaultRateDefinitionsRequest]) (*connect_go.Response[v1alpha2.CreateDefaultRateDefinitionsResponse], error)
	// Creates a rate definition for an ORG.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.AlreadyExists: A rate definition with the same data already exists.
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable. Likely a transient issue with a downstream service.
	CreateRateDefinition(context.Context, *connect_go.Request[v1alpha2.CreateRateDefinitionRequest]) (*connect_go.Response[v1alpha2.CreateRateDefinitionResponse], error)
	// Creates rate definitions for an ORG.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.AlreadyExists: A rate definition with the same data already exists.
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable. Likely a transient issue with a downstream service.
	CreateRateDefinitions(context.Context, *connect_go.Request[v1alpha2.CreateRateDefinitionsRequest]) (*connect_go.Response[v1alpha2.CreateRateDefinitionsResponse], error)
	// Deletes a rate definition from the REGION.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The rate definition doesn't exist.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	DeleteDefaultRateDefinition(context.Context, *connect_go.Request[v1alpha2.DeleteDefaultRateDefinitionRequest]) (*connect_go.Response[v1alpha2.DeleteDefaultRateDefinitionResponse], error)
	// Deletes rate definitions from the REGION.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The rate definition doesn't exist.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	DeleteDefaultRateDefinitions(context.Context, *connect_go.Request[v1alpha2.DeleteDefaultRateDefinitionsRequest]) (*connect_go.Response[v1alpha2.DeleteDefaultRateDefinitionsResponse], error)
	// Deletes a rate definition from an ORG.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The specified rate definition doesn't exist.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable. Likely a transient issue with a downstream service.
	DeleteRateDefinition(context.Context, *connect_go.Request[v1alpha2.DeleteRateDefinitionRequest]) (*connect_go.Response[v1alpha2.DeleteRateDefinitionResponse], error)
	// Deletes rate definitions from an ORG.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The specified rate definition doesn't exist.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable. Likely a transient issue with a downstream service.
	DeleteRateDefinitions(context.Context, *connect_go.Request[v1alpha2.DeleteRateDefinitionsRequest]) (*connect_go.Response[v1alpha2.DeleteRateDefinitionsResponse], error)
	// Exports an invoice.
	// Required permissions:
	//
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable. Likely a transient issue with a downstream service.
	ExportInvoice(context.Context, *connect_go.Request[v1alpha2.ExportInvoiceRequest]) (*connect_go.Response[v1alpha2.ExportInvoiceResponse], error)
	// Returns the specified rate definition.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The specified rate definition doesn't exist.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	GetRateDefinition(context.Context, *connect_go.Request[v1alpha2.GetRateDefinitionRequest]) (*connect_go.Response[v1alpha2.GetRateDefinitionResponse], error)
	// Returns the rate history for the ORG or REGION.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	GetRateHistory(context.Context, *connect_go.Request[v1alpha2.GetRateHistoryRequest]) (*connect_go.Response[v1alpha2.GetRateHistoryResponse], error)
	// Lists active rate definitions.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	ListActiveRateDefinitions(context.Context, *connect_go.Request[v1alpha2.ListActiveRateDefinitionsRequest]) (*connect_go.Response[v1alpha2.ListActiveRateDefinitionsResponse], error)
	// Lists rate definitions.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	ListRateDefinitions(context.Context, *connect_go.Request[v1alpha2.ListRateDefinitionsRequest]) (*connect_go.Response[v1alpha2.ListRateDefinitionsResponse], error)
	// Updates a default rate definition.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The specified rate definition doesn't exist.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	UpdateDefaultRateDefinition(context.Context, *connect_go.Request[v1alpha2.UpdateDefaultRateDefinitionRequest]) (*connect_go.Response[v1alpha2.UpdateDefaultRateDefinitionResponse], error)
	// Updates a rate definition.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The specified rate definition doesn't exist.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	UpdateRateDefinition(context.Context, *connect_go.Request[v1alpha2.UpdateRateDefinitionRequest]) (*connect_go.Response[v1alpha2.UpdateRateDefinitionResponse], error)
}

// NewBillingServiceClient constructs a client for the services.billing.v1alpha2.BillingService
// service. By default, it uses the Connect protocol with the binary Protobuf Codec, asks for
// gzipped responses, and sends uncompressed requests. To use the gRPC or gRPC-Web protocols, supply
// the connect.WithGRPC() or connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewBillingServiceClient(httpClient connect_go.HTTPClient, baseURL string, opts ...connect_go.ClientOption) BillingServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	return &billingServiceClient{
		createDefaultRateDefinition: connect_go.NewClient[v1alpha2.CreateDefaultRateDefinitionRequest, v1alpha2.CreateDefaultRateDefinitionResponse](
			httpClient,
			baseURL+BillingServiceCreateDefaultRateDefinitionProcedure,
			opts...,
		),
		createDefaultRateDefinitions: connect_go.NewClient[v1alpha2.CreateDefaultRateDefinitionsRequest, v1alpha2.CreateDefaultRateDefinitionsResponse](
			httpClient,
			baseURL+BillingServiceCreateDefaultRateDefinitionsProcedure,
			opts...,
		),
		createRateDefinition: connect_go.NewClient[v1alpha2.CreateRateDefinitionRequest, v1alpha2.CreateRateDefinitionResponse](
			httpClient,
			baseURL+BillingServiceCreateRateDefinitionProcedure,
			opts...,
		),
		createRateDefinitions: connect_go.NewClient[v1alpha2.CreateRateDefinitionsRequest, v1alpha2.CreateRateDefinitionsResponse](
			httpClient,
			baseURL+BillingServiceCreateRateDefinitionsProcedure,
			opts...,
		),
		deleteDefaultRateDefinition: connect_go.NewClient[v1alpha2.DeleteDefaultRateDefinitionRequest, v1alpha2.DeleteDefaultRateDefinitionResponse](
			httpClient,
			baseURL+BillingServiceDeleteDefaultRateDefinitionProcedure,
			opts...,
		),
		deleteDefaultRateDefinitions: connect_go.NewClient[v1alpha2.DeleteDefaultRateDefinitionsRequest, v1alpha2.DeleteDefaultRateDefinitionsResponse](
			httpClient,
			baseURL+BillingServiceDeleteDefaultRateDefinitionsProcedure,
			opts...,
		),
		deleteRateDefinition: connect_go.NewClient[v1alpha2.DeleteRateDefinitionRequest, v1alpha2.DeleteRateDefinitionResponse](
			httpClient,
			baseURL+BillingServiceDeleteRateDefinitionProcedure,
			opts...,
		),
		deleteRateDefinitions: connect_go.NewClient[v1alpha2.DeleteRateDefinitionsRequest, v1alpha2.DeleteRateDefinitionsResponse](
			httpClient,
			baseURL+BillingServiceDeleteRateDefinitionsProcedure,
			opts...,
		),
		exportInvoice: connect_go.NewClient[v1alpha2.ExportInvoiceRequest, v1alpha2.ExportInvoiceResponse](
			httpClient,
			baseURL+BillingServiceExportInvoiceProcedure,
			opts...,
		),
		getRateDefinition: connect_go.NewClient[v1alpha2.GetRateDefinitionRequest, v1alpha2.GetRateDefinitionResponse](
			httpClient,
			baseURL+BillingServiceGetRateDefinitionProcedure,
			opts...,
		),
		getRateHistory: connect_go.NewClient[v1alpha2.GetRateHistoryRequest, v1alpha2.GetRateHistoryResponse](
			httpClient,
			baseURL+BillingServiceGetRateHistoryProcedure,
			opts...,
		),
		listActiveRateDefinitions: connect_go.NewClient[v1alpha2.ListActiveRateDefinitionsRequest, v1alpha2.ListActiveRateDefinitionsResponse](
			httpClient,
			baseURL+BillingServiceListActiveRateDefinitionsProcedure,
			opts...,
		),
		listRateDefinitions: connect_go.NewClient[v1alpha2.ListRateDefinitionsRequest, v1alpha2.ListRateDefinitionsResponse](
			httpClient,
			baseURL+BillingServiceListRateDefinitionsProcedure,
			opts...,
		),
		updateDefaultRateDefinition: connect_go.NewClient[v1alpha2.UpdateDefaultRateDefinitionRequest, v1alpha2.UpdateDefaultRateDefinitionResponse](
			httpClient,
			baseURL+BillingServiceUpdateDefaultRateDefinitionProcedure,
			opts...,
		),
		updateRateDefinition: connect_go.NewClient[v1alpha2.UpdateRateDefinitionRequest, v1alpha2.UpdateRateDefinitionResponse](
			httpClient,
			baseURL+BillingServiceUpdateRateDefinitionProcedure,
			opts...,
		),
	}
}

// billingServiceClient implements BillingServiceClient.
type billingServiceClient struct {
	createDefaultRateDefinition  *connect_go.Client[v1alpha2.CreateDefaultRateDefinitionRequest, v1alpha2.CreateDefaultRateDefinitionResponse]
	createDefaultRateDefinitions *connect_go.Client[v1alpha2.CreateDefaultRateDefinitionsRequest, v1alpha2.CreateDefaultRateDefinitionsResponse]
	createRateDefinition         *connect_go.Client[v1alpha2.CreateRateDefinitionRequest, v1alpha2.CreateRateDefinitionResponse]
	createRateDefinitions        *connect_go.Client[v1alpha2.CreateRateDefinitionsRequest, v1alpha2.CreateRateDefinitionsResponse]
	deleteDefaultRateDefinition  *connect_go.Client[v1alpha2.DeleteDefaultRateDefinitionRequest, v1alpha2.DeleteDefaultRateDefinitionResponse]
	deleteDefaultRateDefinitions *connect_go.Client[v1alpha2.DeleteDefaultRateDefinitionsRequest, v1alpha2.DeleteDefaultRateDefinitionsResponse]
	deleteRateDefinition         *connect_go.Client[v1alpha2.DeleteRateDefinitionRequest, v1alpha2.DeleteRateDefinitionResponse]
	deleteRateDefinitions        *connect_go.Client[v1alpha2.DeleteRateDefinitionsRequest, v1alpha2.DeleteRateDefinitionsResponse]
	exportInvoice                *connect_go.Client[v1alpha2.ExportInvoiceRequest, v1alpha2.ExportInvoiceResponse]
	getRateDefinition            *connect_go.Client[v1alpha2.GetRateDefinitionRequest, v1alpha2.GetRateDefinitionResponse]
	getRateHistory               *connect_go.Client[v1alpha2.GetRateHistoryRequest, v1alpha2.GetRateHistoryResponse]
	listActiveRateDefinitions    *connect_go.Client[v1alpha2.ListActiveRateDefinitionsRequest, v1alpha2.ListActiveRateDefinitionsResponse]
	listRateDefinitions          *connect_go.Client[v1alpha2.ListRateDefinitionsRequest, v1alpha2.ListRateDefinitionsResponse]
	updateDefaultRateDefinition  *connect_go.Client[v1alpha2.UpdateDefaultRateDefinitionRequest, v1alpha2.UpdateDefaultRateDefinitionResponse]
	updateRateDefinition         *connect_go.Client[v1alpha2.UpdateRateDefinitionRequest, v1alpha2.UpdateRateDefinitionResponse]
}

// CreateDefaultRateDefinition calls
// services.billing.v1alpha2.BillingService.CreateDefaultRateDefinition.
func (c *billingServiceClient) CreateDefaultRateDefinition(ctx context.Context, req *connect_go.Request[v1alpha2.CreateDefaultRateDefinitionRequest]) (*connect_go.Response[v1alpha2.CreateDefaultRateDefinitionResponse], error) {
	return c.createDefaultRateDefinition.CallUnary(ctx, req)
}

// CreateDefaultRateDefinitions calls
// services.billing.v1alpha2.BillingService.CreateDefaultRateDefinitions.
func (c *billingServiceClient) CreateDefaultRateDefinitions(ctx context.Context, req *connect_go.Request[v1alpha2.CreateDefaultRateDefinitionsRequest]) (*connect_go.Response[v1alpha2.CreateDefaultRateDefinitionsResponse], error) {
	return c.createDefaultRateDefinitions.CallUnary(ctx, req)
}

// CreateRateDefinition calls services.billing.v1alpha2.BillingService.CreateRateDefinition.
func (c *billingServiceClient) CreateRateDefinition(ctx context.Context, req *connect_go.Request[v1alpha2.CreateRateDefinitionRequest]) (*connect_go.Response[v1alpha2.CreateRateDefinitionResponse], error) {
	return c.createRateDefinition.CallUnary(ctx, req)
}

// CreateRateDefinitions calls services.billing.v1alpha2.BillingService.CreateRateDefinitions.
func (c *billingServiceClient) CreateRateDefinitions(ctx context.Context, req *connect_go.Request[v1alpha2.CreateRateDefinitionsRequest]) (*connect_go.Response[v1alpha2.CreateRateDefinitionsResponse], error) {
	return c.createRateDefinitions.CallUnary(ctx, req)
}

// DeleteDefaultRateDefinition calls
// services.billing.v1alpha2.BillingService.DeleteDefaultRateDefinition.
func (c *billingServiceClient) DeleteDefaultRateDefinition(ctx context.Context, req *connect_go.Request[v1alpha2.DeleteDefaultRateDefinitionRequest]) (*connect_go.Response[v1alpha2.DeleteDefaultRateDefinitionResponse], error) {
	return c.deleteDefaultRateDefinition.CallUnary(ctx, req)
}

// DeleteDefaultRateDefinitions calls
// services.billing.v1alpha2.BillingService.DeleteDefaultRateDefinitions.
func (c *billingServiceClient) DeleteDefaultRateDefinitions(ctx context.Context, req *connect_go.Request[v1alpha2.DeleteDefaultRateDefinitionsRequest]) (*connect_go.Response[v1alpha2.DeleteDefaultRateDefinitionsResponse], error) {
	return c.deleteDefaultRateDefinitions.CallUnary(ctx, req)
}

// DeleteRateDefinition calls services.billing.v1alpha2.BillingService.DeleteRateDefinition.
func (c *billingServiceClient) DeleteRateDefinition(ctx context.Context, req *connect_go.Request[v1alpha2.DeleteRateDefinitionRequest]) (*connect_go.Response[v1alpha2.DeleteRateDefinitionResponse], error) {
	return c.deleteRateDefinition.CallUnary(ctx, req)
}

// DeleteRateDefinitions calls services.billing.v1alpha2.BillingService.DeleteRateDefinitions.
func (c *billingServiceClient) DeleteRateDefinitions(ctx context.Context, req *connect_go.Request[v1alpha2.DeleteRateDefinitionsRequest]) (*connect_go.Response[v1alpha2.DeleteRateDefinitionsResponse], error) {
	return c.deleteRateDefinitions.CallUnary(ctx, req)
}

// ExportInvoice calls services.billing.v1alpha2.BillingService.ExportInvoice.
func (c *billingServiceClient) ExportInvoice(ctx context.Context, req *connect_go.Request[v1alpha2.ExportInvoiceRequest]) (*connect_go.Response[v1alpha2.ExportInvoiceResponse], error) {
	return c.exportInvoice.CallUnary(ctx, req)
}

// GetRateDefinition calls services.billing.v1alpha2.BillingService.GetRateDefinition.
func (c *billingServiceClient) GetRateDefinition(ctx context.Context, req *connect_go.Request[v1alpha2.GetRateDefinitionRequest]) (*connect_go.Response[v1alpha2.GetRateDefinitionResponse], error) {
	return c.getRateDefinition.CallUnary(ctx, req)
}

// GetRateHistory calls services.billing.v1alpha2.BillingService.GetRateHistory.
func (c *billingServiceClient) GetRateHistory(ctx context.Context, req *connect_go.Request[v1alpha2.GetRateHistoryRequest]) (*connect_go.Response[v1alpha2.GetRateHistoryResponse], error) {
	return c.getRateHistory.CallUnary(ctx, req)
}

// ListActiveRateDefinitions calls
// services.billing.v1alpha2.BillingService.ListActiveRateDefinitions.
func (c *billingServiceClient) ListActiveRateDefinitions(ctx context.Context, req *connect_go.Request[v1alpha2.ListActiveRateDefinitionsRequest]) (*connect_go.Response[v1alpha2.ListActiveRateDefinitionsResponse], error) {
	return c.listActiveRateDefinitions.CallUnary(ctx, req)
}

// ListRateDefinitions calls services.billing.v1alpha2.BillingService.ListRateDefinitions.
func (c *billingServiceClient) ListRateDefinitions(ctx context.Context, req *connect_go.Request[v1alpha2.ListRateDefinitionsRequest]) (*connect_go.Response[v1alpha2.ListRateDefinitionsResponse], error) {
	return c.listRateDefinitions.CallUnary(ctx, req)
}

// UpdateDefaultRateDefinition calls
// services.billing.v1alpha2.BillingService.UpdateDefaultRateDefinition.
func (c *billingServiceClient) UpdateDefaultRateDefinition(ctx context.Context, req *connect_go.Request[v1alpha2.UpdateDefaultRateDefinitionRequest]) (*connect_go.Response[v1alpha2.UpdateDefaultRateDefinitionResponse], error) {
	return c.updateDefaultRateDefinition.CallUnary(ctx, req)
}

// UpdateRateDefinition calls services.billing.v1alpha2.BillingService.UpdateRateDefinition.
func (c *billingServiceClient) UpdateRateDefinition(ctx context.Context, req *connect_go.Request[v1alpha2.UpdateRateDefinitionRequest]) (*connect_go.Response[v1alpha2.UpdateRateDefinitionResponse], error) {
	return c.updateRateDefinition.CallUnary(ctx, req)
}

// BillingServiceHandler is an implementation of the services.billing.v1alpha2.BillingService
// service.
type BillingServiceHandler interface {
	// Creates a rate definition for the REGION.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.AlreadyExists: A rate definition with the same data already exists.
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	CreateDefaultRateDefinition(context.Context, *connect_go.Request[v1alpha2.CreateDefaultRateDefinitionRequest]) (*connect_go.Response[v1alpha2.CreateDefaultRateDefinitionResponse], error)
	// Creates rate definitions for the REGION.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.AlreadyExists: A rate definition with the same data already exists.
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	CreateDefaultRateDefinitions(context.Context, *connect_go.Request[v1alpha2.CreateDefaultRateDefinitionsRequest]) (*connect_go.Response[v1alpha2.CreateDefaultRateDefinitionsResponse], error)
	// Creates a rate definition for an ORG.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.AlreadyExists: A rate definition with the same data already exists.
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable. Likely a transient issue with a downstream service.
	CreateRateDefinition(context.Context, *connect_go.Request[v1alpha2.CreateRateDefinitionRequest]) (*connect_go.Response[v1alpha2.CreateRateDefinitionResponse], error)
	// Creates rate definitions for an ORG.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.AlreadyExists: A rate definition with the same data already exists.
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable. Likely a transient issue with a downstream service.
	CreateRateDefinitions(context.Context, *connect_go.Request[v1alpha2.CreateRateDefinitionsRequest]) (*connect_go.Response[v1alpha2.CreateRateDefinitionsResponse], error)
	// Deletes a rate definition from the REGION.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The rate definition doesn't exist.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	DeleteDefaultRateDefinition(context.Context, *connect_go.Request[v1alpha2.DeleteDefaultRateDefinitionRequest]) (*connect_go.Response[v1alpha2.DeleteDefaultRateDefinitionResponse], error)
	// Deletes rate definitions from the REGION.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The rate definition doesn't exist.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	DeleteDefaultRateDefinitions(context.Context, *connect_go.Request[v1alpha2.DeleteDefaultRateDefinitionsRequest]) (*connect_go.Response[v1alpha2.DeleteDefaultRateDefinitionsResponse], error)
	// Deletes a rate definition from an ORG.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The specified rate definition doesn't exist.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable. Likely a transient issue with a downstream service.
	DeleteRateDefinition(context.Context, *connect_go.Request[v1alpha2.DeleteRateDefinitionRequest]) (*connect_go.Response[v1alpha2.DeleteRateDefinitionResponse], error)
	// Deletes rate definitions from an ORG.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The specified rate definition doesn't exist.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable. Likely a transient issue with a downstream service.
	DeleteRateDefinitions(context.Context, *connect_go.Request[v1alpha2.DeleteRateDefinitionsRequest]) (*connect_go.Response[v1alpha2.DeleteRateDefinitionsResponse], error)
	// Exports an invoice.
	// Required permissions:
	//
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable. Likely a transient issue with a downstream service.
	ExportInvoice(context.Context, *connect_go.Request[v1alpha2.ExportInvoiceRequest]) (*connect_go.Response[v1alpha2.ExportInvoiceResponse], error)
	// Returns the specified rate definition.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The specified rate definition doesn't exist.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	GetRateDefinition(context.Context, *connect_go.Request[v1alpha2.GetRateDefinitionRequest]) (*connect_go.Response[v1alpha2.GetRateDefinitionResponse], error)
	// Returns the rate history for the ORG or REGION.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	GetRateHistory(context.Context, *connect_go.Request[v1alpha2.GetRateHistoryRequest]) (*connect_go.Response[v1alpha2.GetRateHistoryResponse], error)
	// Lists active rate definitions.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	ListActiveRateDefinitions(context.Context, *connect_go.Request[v1alpha2.ListActiveRateDefinitionsRequest]) (*connect_go.Response[v1alpha2.ListActiveRateDefinitionsResponse], error)
	// Lists rate definitions.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	ListRateDefinitions(context.Context, *connect_go.Request[v1alpha2.ListRateDefinitionsRequest]) (*connect_go.Response[v1alpha2.ListRateDefinitionsResponse], error)
	// Updates a default rate definition.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The specified rate definition doesn't exist.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	UpdateDefaultRateDefinition(context.Context, *connect_go.Request[v1alpha2.UpdateDefaultRateDefinitionRequest]) (*connect_go.Response[v1alpha2.UpdateDefaultRateDefinitionResponse], error)
	// Updates a rate definition.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The specified rate definition doesn't exist.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	UpdateRateDefinition(context.Context, *connect_go.Request[v1alpha2.UpdateRateDefinitionRequest]) (*connect_go.Response[v1alpha2.UpdateRateDefinitionResponse], error)
}

// NewBillingServiceHandler builds an HTTP handler from the service implementation. It returns the
// path on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewBillingServiceHandler(svc BillingServiceHandler, opts ...connect_go.HandlerOption) (string, http.Handler) {
	billingServiceCreateDefaultRateDefinitionHandler := connect_go.NewUnaryHandler(
		BillingServiceCreateDefaultRateDefinitionProcedure,
		svc.CreateDefaultRateDefinition,
		opts...,
	)
	billingServiceCreateDefaultRateDefinitionsHandler := connect_go.NewUnaryHandler(
		BillingServiceCreateDefaultRateDefinitionsProcedure,
		svc.CreateDefaultRateDefinitions,
		opts...,
	)
	billingServiceCreateRateDefinitionHandler := connect_go.NewUnaryHandler(
		BillingServiceCreateRateDefinitionProcedure,
		svc.CreateRateDefinition,
		opts...,
	)
	billingServiceCreateRateDefinitionsHandler := connect_go.NewUnaryHandler(
		BillingServiceCreateRateDefinitionsProcedure,
		svc.CreateRateDefinitions,
		opts...,
	)
	billingServiceDeleteDefaultRateDefinitionHandler := connect_go.NewUnaryHandler(
		BillingServiceDeleteDefaultRateDefinitionProcedure,
		svc.DeleteDefaultRateDefinition,
		opts...,
	)
	billingServiceDeleteDefaultRateDefinitionsHandler := connect_go.NewUnaryHandler(
		BillingServiceDeleteDefaultRateDefinitionsProcedure,
		svc.DeleteDefaultRateDefinitions,
		opts...,
	)
	billingServiceDeleteRateDefinitionHandler := connect_go.NewUnaryHandler(
		BillingServiceDeleteRateDefinitionProcedure,
		svc.DeleteRateDefinition,
		opts...,
	)
	billingServiceDeleteRateDefinitionsHandler := connect_go.NewUnaryHandler(
		BillingServiceDeleteRateDefinitionsProcedure,
		svc.DeleteRateDefinitions,
		opts...,
	)
	billingServiceExportInvoiceHandler := connect_go.NewUnaryHandler(
		BillingServiceExportInvoiceProcedure,
		svc.ExportInvoice,
		opts...,
	)
	billingServiceGetRateDefinitionHandler := connect_go.NewUnaryHandler(
		BillingServiceGetRateDefinitionProcedure,
		svc.GetRateDefinition,
		opts...,
	)
	billingServiceGetRateHistoryHandler := connect_go.NewUnaryHandler(
		BillingServiceGetRateHistoryProcedure,
		svc.GetRateHistory,
		opts...,
	)
	billingServiceListActiveRateDefinitionsHandler := connect_go.NewUnaryHandler(
		BillingServiceListActiveRateDefinitionsProcedure,
		svc.ListActiveRateDefinitions,
		opts...,
	)
	billingServiceListRateDefinitionsHandler := connect_go.NewUnaryHandler(
		BillingServiceListRateDefinitionsProcedure,
		svc.ListRateDefinitions,
		opts...,
	)
	billingServiceUpdateDefaultRateDefinitionHandler := connect_go.NewUnaryHandler(
		BillingServiceUpdateDefaultRateDefinitionProcedure,
		svc.UpdateDefaultRateDefinition,
		opts...,
	)
	billingServiceUpdateRateDefinitionHandler := connect_go.NewUnaryHandler(
		BillingServiceUpdateRateDefinitionProcedure,
		svc.UpdateRateDefinition,
		opts...,
	)
	return "/services.billing.v1alpha2.BillingService/", http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		switch r.URL.Path {
		case BillingServiceCreateDefaultRateDefinitionProcedure:
			billingServiceCreateDefaultRateDefinitionHandler.ServeHTTP(w, r)
		case BillingServiceCreateDefaultRateDefinitionsProcedure:
			billingServiceCreateDefaultRateDefinitionsHandler.ServeHTTP(w, r)
		case BillingServiceCreateRateDefinitionProcedure:
			billingServiceCreateRateDefinitionHandler.ServeHTTP(w, r)
		case BillingServiceCreateRateDefinitionsProcedure:
			billingServiceCreateRateDefinitionsHandler.ServeHTTP(w, r)
		case BillingServiceDeleteDefaultRateDefinitionProcedure:
			billingServiceDeleteDefaultRateDefinitionHandler.ServeHTTP(w, r)
		case BillingServiceDeleteDefaultRateDefinitionsProcedure:
			billingServiceDeleteDefaultRateDefinitionsHandler.ServeHTTP(w, r)
		case BillingServiceDeleteRateDefinitionProcedure:
			billingServiceDeleteRateDefinitionHandler.ServeHTTP(w, r)
		case BillingServiceDeleteRateDefinitionsProcedure:
			billingServiceDeleteRateDefinitionsHandler.ServeHTTP(w, r)
		case BillingServiceExportInvoiceProcedure:
			billingServiceExportInvoiceHandler.ServeHTTP(w, r)
		case BillingServiceGetRateDefinitionProcedure:
			billingServiceGetRateDefinitionHandler.ServeHTTP(w, r)
		case BillingServiceGetRateHistoryProcedure:
			billingServiceGetRateHistoryHandler.ServeHTTP(w, r)
		case BillingServiceListActiveRateDefinitionsProcedure:
			billingServiceListActiveRateDefinitionsHandler.ServeHTTP(w, r)
		case BillingServiceListRateDefinitionsProcedure:
			billingServiceListRateDefinitionsHandler.ServeHTTP(w, r)
		case BillingServiceUpdateDefaultRateDefinitionProcedure:
			billingServiceUpdateDefaultRateDefinitionHandler.ServeHTTP(w, r)
		case BillingServiceUpdateRateDefinitionProcedure:
			billingServiceUpdateRateDefinitionHandler.ServeHTTP(w, r)
		default:
			http.NotFound(w, r)
		}
	})
}

// UnimplementedBillingServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedBillingServiceHandler struct{}

func (UnimplementedBillingServiceHandler) CreateDefaultRateDefinition(context.Context, *connect_go.Request[v1alpha2.CreateDefaultRateDefinitionRequest]) (*connect_go.Response[v1alpha2.CreateDefaultRateDefinitionResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha2.BillingService.CreateDefaultRateDefinition is not implemented"))
}

func (UnimplementedBillingServiceHandler) CreateDefaultRateDefinitions(context.Context, *connect_go.Request[v1alpha2.CreateDefaultRateDefinitionsRequest]) (*connect_go.Response[v1alpha2.CreateDefaultRateDefinitionsResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha2.BillingService.CreateDefaultRateDefinitions is not implemented"))
}

func (UnimplementedBillingServiceHandler) CreateRateDefinition(context.Context, *connect_go.Request[v1alpha2.CreateRateDefinitionRequest]) (*connect_go.Response[v1alpha2.CreateRateDefinitionResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha2.BillingService.CreateRateDefinition is not implemented"))
}

func (UnimplementedBillingServiceHandler) CreateRateDefinitions(context.Context, *connect_go.Request[v1alpha2.CreateRateDefinitionsRequest]) (*connect_go.Response[v1alpha2.CreateRateDefinitionsResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha2.BillingService.CreateRateDefinitions is not implemented"))
}

func (UnimplementedBillingServiceHandler) DeleteDefaultRateDefinition(context.Context, *connect_go.Request[v1alpha2.DeleteDefaultRateDefinitionRequest]) (*connect_go.Response[v1alpha2.DeleteDefaultRateDefinitionResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha2.BillingService.DeleteDefaultRateDefinition is not implemented"))
}

func (UnimplementedBillingServiceHandler) DeleteDefaultRateDefinitions(context.Context, *connect_go.Request[v1alpha2.DeleteDefaultRateDefinitionsRequest]) (*connect_go.Response[v1alpha2.DeleteDefaultRateDefinitionsResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha2.BillingService.DeleteDefaultRateDefinitions is not implemented"))
}

func (UnimplementedBillingServiceHandler) DeleteRateDefinition(context.Context, *connect_go.Request[v1alpha2.DeleteRateDefinitionRequest]) (*connect_go.Response[v1alpha2.DeleteRateDefinitionResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha2.BillingService.DeleteRateDefinition is not implemented"))
}

func (UnimplementedBillingServiceHandler) DeleteRateDefinitions(context.Context, *connect_go.Request[v1alpha2.DeleteRateDefinitionsRequest]) (*connect_go.Response[v1alpha2.DeleteRateDefinitionsResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha2.BillingService.DeleteRateDefinitions is not implemented"))
}

func (UnimplementedBillingServiceHandler) ExportInvoice(context.Context, *connect_go.Request[v1alpha2.ExportInvoiceRequest]) (*connect_go.Response[v1alpha2.ExportInvoiceResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha2.BillingService.ExportInvoice is not implemented"))
}

func (UnimplementedBillingServiceHandler) GetRateDefinition(context.Context, *connect_go.Request[v1alpha2.GetRateDefinitionRequest]) (*connect_go.Response[v1alpha2.GetRateDefinitionResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha2.BillingService.GetRateDefinition is not implemented"))
}

func (UnimplementedBillingServiceHandler) GetRateHistory(context.Context, *connect_go.Request[v1alpha2.GetRateHistoryRequest]) (*connect_go.Response[v1alpha2.GetRateHistoryResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha2.BillingService.GetRateHistory is not implemented"))
}

func (UnimplementedBillingServiceHandler) ListActiveRateDefinitions(context.Context, *connect_go.Request[v1alpha2.ListActiveRateDefinitionsRequest]) (*connect_go.Response[v1alpha2.ListActiveRateDefinitionsResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha2.BillingService.ListActiveRateDefinitions is not implemented"))
}

func (UnimplementedBillingServiceHandler) ListRateDefinitions(context.Context, *connect_go.Request[v1alpha2.ListRateDefinitionsRequest]) (*connect_go.Response[v1alpha2.ListRateDefinitionsResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha2.BillingService.ListRateDefinitions is not implemented"))
}

func (UnimplementedBillingServiceHandler) UpdateDefaultRateDefinition(context.Context, *connect_go.Request[v1alpha2.UpdateDefaultRateDefinitionRequest]) (*connect_go.Response[v1alpha2.UpdateDefaultRateDefinitionResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha2.BillingService.UpdateDefaultRateDefinition is not implemented"))
}

func (UnimplementedBillingServiceHandler) UpdateRateDefinition(context.Context, *connect_go.Request[v1alpha2.UpdateRateDefinitionRequest]) (*connect_go.Response[v1alpha2.UpdateRateDefinitionResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha2.BillingService.UpdateRateDefinition is not implemented"))
}
