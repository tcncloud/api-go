// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: services/billing/v1alpha1/service.proto

package billingv1alpha1connect

import (
	context "context"
	errors "errors"
	connect_go "github.com/bufbuild/connect-go"
	v1alpha1 "github.com/tcncloud/api-go/services/billing/v1alpha1"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect_go.IsAtLeastVersion0_1_0

const (
	// BillingServiceName is the fully-qualified name of the BillingService service.
	BillingServiceName = "services.billing.v1alpha1.BillingService"
)

// These constants are the fully-qualified names of the RPCs defined in this package. They're
// exposed at runtime as Spec.Procedure and as the final two segments of the HTTP route.
//
// Note that these are different from the fully-qualified method names used by
// google.golang.org/protobuf/reflect/protoreflect. To convert from these constants to
// reflection-formatted method names, remove the leading slash and convert the remaining slash to a
// period.
const (
	// BillingServiceCommitBillingPlanProcedure is the fully-qualified name of the BillingService's
	// CommitBillingPlan RPC.
	BillingServiceCommitBillingPlanProcedure = "/services.billing.v1alpha1.BillingService/CommitBillingPlan"
	// BillingServiceCommitDefaultBillingPlanProcedure is the fully-qualified name of the
	// BillingService's CommitDefaultBillingPlan RPC.
	BillingServiceCommitDefaultBillingPlanProcedure = "/services.billing.v1alpha1.BillingService/CommitDefaultBillingPlan"
	// BillingServiceCreateBillingPlanProcedure is the fully-qualified name of the BillingService's
	// CreateBillingPlan RPC.
	BillingServiceCreateBillingPlanProcedure = "/services.billing.v1alpha1.BillingService/CreateBillingPlan"
	// BillingServiceCreateDefaultBillingPlanProcedure is the fully-qualified name of the
	// BillingService's CreateDefaultBillingPlan RPC.
	BillingServiceCreateDefaultBillingPlanProcedure = "/services.billing.v1alpha1.BillingService/CreateDefaultBillingPlan"
	// BillingServiceCreateDefaultRateDefinitionProcedure is the fully-qualified name of the
	// BillingService's CreateDefaultRateDefinition RPC.
	BillingServiceCreateDefaultRateDefinitionProcedure = "/services.billing.v1alpha1.BillingService/CreateDefaultRateDefinition"
	// BillingServiceCreateInvoiceProcedure is the fully-qualified name of the BillingService's
	// CreateInvoice RPC.
	BillingServiceCreateInvoiceProcedure = "/services.billing.v1alpha1.BillingService/CreateInvoice"
	// BillingServiceCreateRateDefinitionProcedure is the fully-qualified name of the BillingService's
	// CreateRateDefinition RPC.
	BillingServiceCreateRateDefinitionProcedure = "/services.billing.v1alpha1.BillingService/CreateRateDefinition"
	// BillingServiceDeleteBillingPlanProcedure is the fully-qualified name of the BillingService's
	// DeleteBillingPlan RPC.
	BillingServiceDeleteBillingPlanProcedure = "/services.billing.v1alpha1.BillingService/DeleteBillingPlan"
	// BillingServiceDeleteDefaultBillingPlanProcedure is the fully-qualified name of the
	// BillingService's DeleteDefaultBillingPlan RPC.
	BillingServiceDeleteDefaultBillingPlanProcedure = "/services.billing.v1alpha1.BillingService/DeleteDefaultBillingPlan"
	// BillingServiceDeleteDefaultRateDefinitionProcedure is the fully-qualified name of the
	// BillingService's DeleteDefaultRateDefinition RPC.
	BillingServiceDeleteDefaultRateDefinitionProcedure = "/services.billing.v1alpha1.BillingService/DeleteDefaultRateDefinition"
	// BillingServiceDeleteInvoiceProcedure is the fully-qualified name of the BillingService's
	// DeleteInvoice RPC.
	BillingServiceDeleteInvoiceProcedure = "/services.billing.v1alpha1.BillingService/DeleteInvoice"
	// BillingServiceDeleteRateDefinitionProcedure is the fully-qualified name of the BillingService's
	// DeleteRateDefinition RPC.
	BillingServiceDeleteRateDefinitionProcedure = "/services.billing.v1alpha1.BillingService/DeleteRateDefinition"
	// BillingServiceDuplicateBillingPlanProcedure is the fully-qualified name of the BillingService's
	// DuplicateBillingPlan RPC.
	BillingServiceDuplicateBillingPlanProcedure = "/services.billing.v1alpha1.BillingService/DuplicateBillingPlan"
	// BillingServiceDuplicateDefaultBillingPlanProcedure is the fully-qualified name of the
	// BillingService's DuplicateDefaultBillingPlan RPC.
	BillingServiceDuplicateDefaultBillingPlanProcedure = "/services.billing.v1alpha1.BillingService/DuplicateDefaultBillingPlan"
	// BillingServiceExportInvoiceProcedure is the fully-qualified name of the BillingService's
	// ExportInvoice RPC.
	BillingServiceExportInvoiceProcedure = "/services.billing.v1alpha1.BillingService/ExportInvoice"
	// BillingServiceGetActiveBillingPlanProcedure is the fully-qualified name of the BillingService's
	// GetActiveBillingPlan RPC.
	BillingServiceGetActiveBillingPlanProcedure = "/services.billing.v1alpha1.BillingService/GetActiveBillingPlan"
	// BillingServiceGetBillingPlanProcedure is the fully-qualified name of the BillingService's
	// GetBillingPlan RPC.
	BillingServiceGetBillingPlanProcedure = "/services.billing.v1alpha1.BillingService/GetBillingPlan"
	// BillingServiceGetInvoiceProcedure is the fully-qualified name of the BillingService's GetInvoice
	// RPC.
	BillingServiceGetInvoiceProcedure = "/services.billing.v1alpha1.BillingService/GetInvoice"
	// BillingServiceGetRateDefinitionProcedure is the fully-qualified name of the BillingService's
	// GetRateDefinition RPC.
	BillingServiceGetRateDefinitionProcedure = "/services.billing.v1alpha1.BillingService/GetRateDefinition"
	// BillingServiceListBillingPlansProcedure is the fully-qualified name of the BillingService's
	// ListBillingPlans RPC.
	BillingServiceListBillingPlansProcedure = "/services.billing.v1alpha1.BillingService/ListBillingPlans"
	// BillingServiceListInvoicesProcedure is the fully-qualified name of the BillingService's
	// ListInvoices RPC.
	BillingServiceListInvoicesProcedure = "/services.billing.v1alpha1.BillingService/ListInvoices"
	// BillingServiceListRateDefinitionsProcedure is the fully-qualified name of the BillingService's
	// ListRateDefinitions RPC.
	BillingServiceListRateDefinitionsProcedure = "/services.billing.v1alpha1.BillingService/ListRateDefinitions"
	// BillingServiceUpdateBillingPlanProcedure is the fully-qualified name of the BillingService's
	// UpdateBillingPlan RPC.
	BillingServiceUpdateBillingPlanProcedure = "/services.billing.v1alpha1.BillingService/UpdateBillingPlan"
	// BillingServiceUpdateDefaultBillingPlanProcedure is the fully-qualified name of the
	// BillingService's UpdateDefaultBillingPlan RPC.
	BillingServiceUpdateDefaultBillingPlanProcedure = "/services.billing.v1alpha1.BillingService/UpdateDefaultBillingPlan"
	// BillingServiceUpdateDefaultRateDefinitionProcedure is the fully-qualified name of the
	// BillingService's UpdateDefaultRateDefinition RPC.
	BillingServiceUpdateDefaultRateDefinitionProcedure = "/services.billing.v1alpha1.BillingService/UpdateDefaultRateDefinition"
	// BillingServiceUpdateInvoiceProcedure is the fully-qualified name of the BillingService's
	// UpdateInvoice RPC.
	BillingServiceUpdateInvoiceProcedure = "/services.billing.v1alpha1.BillingService/UpdateInvoice"
	// BillingServiceUpdateRateDefinitionProcedure is the fully-qualified name of the BillingService's
	// UpdateRateDefinition RPC.
	BillingServiceUpdateRateDefinitionProcedure = "/services.billing.v1alpha1.BillingService/UpdateRateDefinition"
)

// BillingServiceClient is a client for the services.billing.v1alpha1.BillingService service.
type BillingServiceClient interface {
	// Commits a billing plan for the ORG, finalizing it's creation and allowing it
	// to become active.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.FailedPrecondition: The billing plan is already committed.
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The specified billing plan doesn't exist.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable. Likely a transient issue with a downstream service.
	CommitBillingPlan(context.Context, *connect_go.Request[v1alpha1.CommitBillingPlanRequest]) (*connect_go.Response[v1alpha1.CommitBillingPlanResponse], error)
	// Commits a default billing plan for the REGION, finalizing it's creation and allowing it
	// to become active.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.FailedPrecondition: The default billing plan is already committed.
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The specified default billing plan doesn't exist.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	CommitDefaultBillingPlan(context.Context, *connect_go.Request[v1alpha1.CommitDefaultBillingPlanRequest]) (*connect_go.Response[v1alpha1.CommitDefaultBillingPlanResponse], error)
	// Creates a billing plan for the ORG.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable. Likely a transient issue with a downstream service.
	CreateBillingPlan(context.Context, *connect_go.Request[v1alpha1.CreateBillingPlanRequest]) (*connect_go.Response[v1alpha1.CreateBillingPlanResponse], error)
	// Creates the default billing plan for the REGION.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	CreateDefaultBillingPlan(context.Context, *connect_go.Request[v1alpha1.CreateDefaultBillingPlanRequest]) (*connect_go.Response[v1alpha1.CreateDefaultBillingPlanResponse], error)
	// Creates a default rate definition for a default billing plan for the REGION.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.AlreadyExists: A rate definition with the same feature already exists.
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The default billing plan doesn't exist.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	CreateDefaultRateDefinition(context.Context, *connect_go.Request[v1alpha1.CreateDefaultRateDefinitionRequest]) (*connect_go.Response[v1alpha1.CreateDefaultRateDefinitionResponse], error)
	// Creates an invoice for the ORG for the specified billing cycle.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.AlreadyExists: An invoice already exists for the specified billing cycle.
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable. Likely a transient issue with a downstream service.
	//
	// Deprecated: do not use.
	CreateInvoice(context.Context, *connect_go.Request[v1alpha1.CreateInvoiceRequest]) (*connect_go.Response[v1alpha1.CreateInvoiceResponse], error)
	// Creates a rate definition for a Billing Plan in an ORG.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.AlreadyExists: A rate definition with the same feature id already exists.
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The specified billing plan or rate definition group doesn't exist.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable. Likely a transient issue with a downstream service.
	CreateRateDefinition(context.Context, *connect_go.Request[v1alpha1.CreateRateDefinitionRequest]) (*connect_go.Response[v1alpha1.CreateRateDefinitionResponse], error)
	// Deletes an inactive billing plan. A billing plan is inactive if it hasn't started.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.FailedPrecondition: The billing plan is active.
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The specified billing plan doesn't exist.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable. Likely a transient issue with a downstream service.
	DeleteBillingPlan(context.Context, *connect_go.Request[v1alpha1.DeleteBillingPlanRequest]) (*connect_go.Response[v1alpha1.DeleteBillingPlanResponse], error)
	// Deletes an inactive default billing plan for the REGION. A billing plan is inactive
	// if it hasn't started.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.FailedPrecondition: The billing plan is active.
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The default billing plan doesn't exist.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	DeleteDefaultBillingPlan(context.Context, *connect_go.Request[v1alpha1.DeleteDefaultBillingPlanRequest]) (*connect_go.Response[v1alpha1.DeleteDefaultBillingPlanResponse], error)
	// Deletes a rate definition from the default billing plan for the REGION.
	//   - The default billing plan must be inactive.
	//
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.FailedPrecondition: The billing plan is active.
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The rate definition doesn't exist.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	DeleteDefaultRateDefinition(context.Context, *connect_go.Request[v1alpha1.DeleteDefaultRateDefinitionRequest]) (*connect_go.Response[v1alpha1.DeleteDefaultRateDefinitionResponse], error)
	// Deletes an invoice.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The specified invoice doesn't exist.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable. Likely a transient issue with a downstream service.
	//
	// Deprecated: do not use.
	DeleteInvoice(context.Context, *connect_go.Request[v1alpha1.DeleteInvoiceRequest]) (*connect_go.Response[v1alpha1.DeleteInvoiceResponse], error)
	// Deletes a rate definition from a Billing Plan in an ORG.
	//   - The billing plan must be inactive.
	//
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.FailedPrecondition: The billing plan is active.
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The specified billing plan or rate definition group doesn't exist.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable. Likely a transient issue with a downstream service.
	DeleteRateDefinition(context.Context, *connect_go.Request[v1alpha1.DeleteRateDefinitionRequest]) (*connect_go.Response[v1alpha1.DeleteRateDefinitionResponse], error)
	// Duplicates a billing plan. This copies the billing plan and all of its rate definitions.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The specified billing plan doesn't exist.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable. Likely a transient issue with a downstream service.
	DuplicateBillingPlan(context.Context, *connect_go.Request[v1alpha1.DuplicateBillingPlanRequest]) (*connect_go.Response[v1alpha1.DuplicateBillingPlanResponse], error)
	// Duplicates a default billing plan. This copies the billing plan, all of its rate definitions,
	// and all of its rate definition groups and features.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The specified billing plan doesn't exist.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable. Likely a transient issue with a downstream service.
	DuplicateDefaultBillingPlan(context.Context, *connect_go.Request[v1alpha1.DuplicateDefaultBillingPlanRequest]) (*connect_go.Response[v1alpha1.DuplicateDefaultBillingPlanResponse], error)
	// Exports an invoice.
	// Required permissions:
	//
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable. Likely a transient issue with a downstream service.
	ExportInvoice(context.Context, *connect_go.Request[v1alpha1.ExportInvoiceRequest]) (*connect_go.Response[v1alpha1.ExportInvoiceResponse], error)
	// Returns the active billing plan for the ORG or REGION. The active billing plan is a billing plan
	// whose start_time has passed and end_time has not passed. If multiple satisfy that requirement, the
	// newest one is considered active. If no plan is active, it indicates the ORG is using REGION defaults,
	// or that the REGION has not been set up for billing yet.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: There isn't an active billing plan.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable. Likely a transient issue with a downstream service.
	GetActiveBillingPlan(context.Context, *connect_go.Request[v1alpha1.GetActiveBillingPlanRequest]) (*connect_go.Response[v1alpha1.GetActiveBillingPlanResponse], error)
	// Returns the specified billing plan.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The specified billing plan doesn't exist.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable. Likely a transient issue with a downstream service.
	GetBillingPlan(context.Context, *connect_go.Request[v1alpha1.GetBillingPlanRequest]) (*connect_go.Response[v1alpha1.GetBillingPlanResponse], error)
	// Returns the specified invoice.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The specified invoice doesn't exist.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable. Likely a transient issue with a downstream service.
	//
	// Deprecated: do not use.
	GetInvoice(context.Context, *connect_go.Request[v1alpha1.GetInvoiceRequest]) (*connect_go.Response[v1alpha1.GetInvoiceResponse], error)
	// Returns the specified rate definition.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The specified rate definition doesn't exist.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	GetRateDefinition(context.Context, *connect_go.Request[v1alpha1.GetRateDefinitionRequest]) (*connect_go.Response[v1alpha1.GetRateDefinitionResponse], error)
	// Lists billing plans.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable. Likely a transient issue with a downstream service.
	ListBillingPlans(context.Context, *connect_go.Request[v1alpha1.ListBillingPlansRequest]) (*connect_go.Response[v1alpha1.ListBillingPlansResponse], error)
	// Lists invoices.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable. Likely a transient issue with a downstream service.
	//
	// Deprecated: do not use.
	ListInvoices(context.Context, *connect_go.Request[v1alpha1.ListInvoicesRequest]) (*connect_go.Response[v1alpha1.ListInvoicesResponse], error)
	// Lists rate definitions.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	ListRateDefinitions(context.Context, *connect_go.Request[v1alpha1.ListRateDefinitionsRequest]) (*connect_go.Response[v1alpha1.ListRateDefinitionsResponse], error)
	// Updates an inactive billing plan. A billing plan is inactive if it hasn't started.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.FailedPrecondition: The billing plan is active.
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The specified billing plan doesn't exist.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable. Likely a transient issue with a downstream service.
	UpdateBillingPlan(context.Context, *connect_go.Request[v1alpha1.UpdateBillingPlanRequest]) (*connect_go.Response[v1alpha1.UpdateBillingPlanResponse], error)
	// Updates an inactive default billing plan for the REGION. A billing plan is inactive
	// if it hasn't started.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.FailedPrecondition: The billing plan is active.
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable. Likely a transient issue with a downstream service.
	UpdateDefaultBillingPlan(context.Context, *connect_go.Request[v1alpha1.UpdateDefaultBillingPlanRequest]) (*connect_go.Response[v1alpha1.UpdateDefaultBillingPlanResponse], error)
	// Updates a default rate definition.
	//   - The billing plan must be inactive.
	//
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.FailedPrecondition: The billing plan is active.
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The specified rate definition doesn't exist.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	UpdateDefaultRateDefinition(context.Context, *connect_go.Request[v1alpha1.UpdateDefaultRateDefinitionRequest]) (*connect_go.Response[v1alpha1.UpdateDefaultRateDefinitionResponse], error)
	// Updates the specified invoice.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The specified invoice doesn't exist.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable. Likely a transient issue with a downstream service.
	//
	// Deprecated: do not use.
	UpdateInvoice(context.Context, *connect_go.Request[v1alpha1.UpdateInvoiceRequest]) (*connect_go.Response[v1alpha1.UpdateInvoiceResponse], error)
	// Updates a rate definition.
	//   - The billing plan must be inactive.
	//
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.FailedPrecondition: The billing plan is active.
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The specified rate definition doesn't exist.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	UpdateRateDefinition(context.Context, *connect_go.Request[v1alpha1.UpdateRateDefinitionRequest]) (*connect_go.Response[v1alpha1.UpdateRateDefinitionResponse], error)
}

// NewBillingServiceClient constructs a client for the services.billing.v1alpha1.BillingService
// service. By default, it uses the Connect protocol with the binary Protobuf Codec, asks for
// gzipped responses, and sends uncompressed requests. To use the gRPC or gRPC-Web protocols, supply
// the connect.WithGRPC() or connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewBillingServiceClient(httpClient connect_go.HTTPClient, baseURL string, opts ...connect_go.ClientOption) BillingServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	return &billingServiceClient{
		commitBillingPlan: connect_go.NewClient[v1alpha1.CommitBillingPlanRequest, v1alpha1.CommitBillingPlanResponse](
			httpClient,
			baseURL+BillingServiceCommitBillingPlanProcedure,
			opts...,
		),
		commitDefaultBillingPlan: connect_go.NewClient[v1alpha1.CommitDefaultBillingPlanRequest, v1alpha1.CommitDefaultBillingPlanResponse](
			httpClient,
			baseURL+BillingServiceCommitDefaultBillingPlanProcedure,
			opts...,
		),
		createBillingPlan: connect_go.NewClient[v1alpha1.CreateBillingPlanRequest, v1alpha1.CreateBillingPlanResponse](
			httpClient,
			baseURL+BillingServiceCreateBillingPlanProcedure,
			opts...,
		),
		createDefaultBillingPlan: connect_go.NewClient[v1alpha1.CreateDefaultBillingPlanRequest, v1alpha1.CreateDefaultBillingPlanResponse](
			httpClient,
			baseURL+BillingServiceCreateDefaultBillingPlanProcedure,
			opts...,
		),
		createDefaultRateDefinition: connect_go.NewClient[v1alpha1.CreateDefaultRateDefinitionRequest, v1alpha1.CreateDefaultRateDefinitionResponse](
			httpClient,
			baseURL+BillingServiceCreateDefaultRateDefinitionProcedure,
			opts...,
		),
		createInvoice: connect_go.NewClient[v1alpha1.CreateInvoiceRequest, v1alpha1.CreateInvoiceResponse](
			httpClient,
			baseURL+BillingServiceCreateInvoiceProcedure,
			opts...,
		),
		createRateDefinition: connect_go.NewClient[v1alpha1.CreateRateDefinitionRequest, v1alpha1.CreateRateDefinitionResponse](
			httpClient,
			baseURL+BillingServiceCreateRateDefinitionProcedure,
			opts...,
		),
		deleteBillingPlan: connect_go.NewClient[v1alpha1.DeleteBillingPlanRequest, v1alpha1.DeleteBillingPlanResponse](
			httpClient,
			baseURL+BillingServiceDeleteBillingPlanProcedure,
			opts...,
		),
		deleteDefaultBillingPlan: connect_go.NewClient[v1alpha1.DeleteDefaultBillingPlanRequest, v1alpha1.DeleteDefaultBillingPlanResponse](
			httpClient,
			baseURL+BillingServiceDeleteDefaultBillingPlanProcedure,
			opts...,
		),
		deleteDefaultRateDefinition: connect_go.NewClient[v1alpha1.DeleteDefaultRateDefinitionRequest, v1alpha1.DeleteDefaultRateDefinitionResponse](
			httpClient,
			baseURL+BillingServiceDeleteDefaultRateDefinitionProcedure,
			opts...,
		),
		deleteInvoice: connect_go.NewClient[v1alpha1.DeleteInvoiceRequest, v1alpha1.DeleteInvoiceResponse](
			httpClient,
			baseURL+BillingServiceDeleteInvoiceProcedure,
			opts...,
		),
		deleteRateDefinition: connect_go.NewClient[v1alpha1.DeleteRateDefinitionRequest, v1alpha1.DeleteRateDefinitionResponse](
			httpClient,
			baseURL+BillingServiceDeleteRateDefinitionProcedure,
			opts...,
		),
		duplicateBillingPlan: connect_go.NewClient[v1alpha1.DuplicateBillingPlanRequest, v1alpha1.DuplicateBillingPlanResponse](
			httpClient,
			baseURL+BillingServiceDuplicateBillingPlanProcedure,
			opts...,
		),
		duplicateDefaultBillingPlan: connect_go.NewClient[v1alpha1.DuplicateDefaultBillingPlanRequest, v1alpha1.DuplicateDefaultBillingPlanResponse](
			httpClient,
			baseURL+BillingServiceDuplicateDefaultBillingPlanProcedure,
			opts...,
		),
		exportInvoice: connect_go.NewClient[v1alpha1.ExportInvoiceRequest, v1alpha1.ExportInvoiceResponse](
			httpClient,
			baseURL+BillingServiceExportInvoiceProcedure,
			opts...,
		),
		getActiveBillingPlan: connect_go.NewClient[v1alpha1.GetActiveBillingPlanRequest, v1alpha1.GetActiveBillingPlanResponse](
			httpClient,
			baseURL+BillingServiceGetActiveBillingPlanProcedure,
			opts...,
		),
		getBillingPlan: connect_go.NewClient[v1alpha1.GetBillingPlanRequest, v1alpha1.GetBillingPlanResponse](
			httpClient,
			baseURL+BillingServiceGetBillingPlanProcedure,
			opts...,
		),
		getInvoice: connect_go.NewClient[v1alpha1.GetInvoiceRequest, v1alpha1.GetInvoiceResponse](
			httpClient,
			baseURL+BillingServiceGetInvoiceProcedure,
			opts...,
		),
		getRateDefinition: connect_go.NewClient[v1alpha1.GetRateDefinitionRequest, v1alpha1.GetRateDefinitionResponse](
			httpClient,
			baseURL+BillingServiceGetRateDefinitionProcedure,
			opts...,
		),
		listBillingPlans: connect_go.NewClient[v1alpha1.ListBillingPlansRequest, v1alpha1.ListBillingPlansResponse](
			httpClient,
			baseURL+BillingServiceListBillingPlansProcedure,
			opts...,
		),
		listInvoices: connect_go.NewClient[v1alpha1.ListInvoicesRequest, v1alpha1.ListInvoicesResponse](
			httpClient,
			baseURL+BillingServiceListInvoicesProcedure,
			opts...,
		),
		listRateDefinitions: connect_go.NewClient[v1alpha1.ListRateDefinitionsRequest, v1alpha1.ListRateDefinitionsResponse](
			httpClient,
			baseURL+BillingServiceListRateDefinitionsProcedure,
			opts...,
		),
		updateBillingPlan: connect_go.NewClient[v1alpha1.UpdateBillingPlanRequest, v1alpha1.UpdateBillingPlanResponse](
			httpClient,
			baseURL+BillingServiceUpdateBillingPlanProcedure,
			opts...,
		),
		updateDefaultBillingPlan: connect_go.NewClient[v1alpha1.UpdateDefaultBillingPlanRequest, v1alpha1.UpdateDefaultBillingPlanResponse](
			httpClient,
			baseURL+BillingServiceUpdateDefaultBillingPlanProcedure,
			opts...,
		),
		updateDefaultRateDefinition: connect_go.NewClient[v1alpha1.UpdateDefaultRateDefinitionRequest, v1alpha1.UpdateDefaultRateDefinitionResponse](
			httpClient,
			baseURL+BillingServiceUpdateDefaultRateDefinitionProcedure,
			opts...,
		),
		updateInvoice: connect_go.NewClient[v1alpha1.UpdateInvoiceRequest, v1alpha1.UpdateInvoiceResponse](
			httpClient,
			baseURL+BillingServiceUpdateInvoiceProcedure,
			opts...,
		),
		updateRateDefinition: connect_go.NewClient[v1alpha1.UpdateRateDefinitionRequest, v1alpha1.UpdateRateDefinitionResponse](
			httpClient,
			baseURL+BillingServiceUpdateRateDefinitionProcedure,
			opts...,
		),
	}
}

// billingServiceClient implements BillingServiceClient.
type billingServiceClient struct {
	commitBillingPlan           *connect_go.Client[v1alpha1.CommitBillingPlanRequest, v1alpha1.CommitBillingPlanResponse]
	commitDefaultBillingPlan    *connect_go.Client[v1alpha1.CommitDefaultBillingPlanRequest, v1alpha1.CommitDefaultBillingPlanResponse]
	createBillingPlan           *connect_go.Client[v1alpha1.CreateBillingPlanRequest, v1alpha1.CreateBillingPlanResponse]
	createDefaultBillingPlan    *connect_go.Client[v1alpha1.CreateDefaultBillingPlanRequest, v1alpha1.CreateDefaultBillingPlanResponse]
	createDefaultRateDefinition *connect_go.Client[v1alpha1.CreateDefaultRateDefinitionRequest, v1alpha1.CreateDefaultRateDefinitionResponse]
	createInvoice               *connect_go.Client[v1alpha1.CreateInvoiceRequest, v1alpha1.CreateInvoiceResponse]
	createRateDefinition        *connect_go.Client[v1alpha1.CreateRateDefinitionRequest, v1alpha1.CreateRateDefinitionResponse]
	deleteBillingPlan           *connect_go.Client[v1alpha1.DeleteBillingPlanRequest, v1alpha1.DeleteBillingPlanResponse]
	deleteDefaultBillingPlan    *connect_go.Client[v1alpha1.DeleteDefaultBillingPlanRequest, v1alpha1.DeleteDefaultBillingPlanResponse]
	deleteDefaultRateDefinition *connect_go.Client[v1alpha1.DeleteDefaultRateDefinitionRequest, v1alpha1.DeleteDefaultRateDefinitionResponse]
	deleteInvoice               *connect_go.Client[v1alpha1.DeleteInvoiceRequest, v1alpha1.DeleteInvoiceResponse]
	deleteRateDefinition        *connect_go.Client[v1alpha1.DeleteRateDefinitionRequest, v1alpha1.DeleteRateDefinitionResponse]
	duplicateBillingPlan        *connect_go.Client[v1alpha1.DuplicateBillingPlanRequest, v1alpha1.DuplicateBillingPlanResponse]
	duplicateDefaultBillingPlan *connect_go.Client[v1alpha1.DuplicateDefaultBillingPlanRequest, v1alpha1.DuplicateDefaultBillingPlanResponse]
	exportInvoice               *connect_go.Client[v1alpha1.ExportInvoiceRequest, v1alpha1.ExportInvoiceResponse]
	getActiveBillingPlan        *connect_go.Client[v1alpha1.GetActiveBillingPlanRequest, v1alpha1.GetActiveBillingPlanResponse]
	getBillingPlan              *connect_go.Client[v1alpha1.GetBillingPlanRequest, v1alpha1.GetBillingPlanResponse]
	getInvoice                  *connect_go.Client[v1alpha1.GetInvoiceRequest, v1alpha1.GetInvoiceResponse]
	getRateDefinition           *connect_go.Client[v1alpha1.GetRateDefinitionRequest, v1alpha1.GetRateDefinitionResponse]
	listBillingPlans            *connect_go.Client[v1alpha1.ListBillingPlansRequest, v1alpha1.ListBillingPlansResponse]
	listInvoices                *connect_go.Client[v1alpha1.ListInvoicesRequest, v1alpha1.ListInvoicesResponse]
	listRateDefinitions         *connect_go.Client[v1alpha1.ListRateDefinitionsRequest, v1alpha1.ListRateDefinitionsResponse]
	updateBillingPlan           *connect_go.Client[v1alpha1.UpdateBillingPlanRequest, v1alpha1.UpdateBillingPlanResponse]
	updateDefaultBillingPlan    *connect_go.Client[v1alpha1.UpdateDefaultBillingPlanRequest, v1alpha1.UpdateDefaultBillingPlanResponse]
	updateDefaultRateDefinition *connect_go.Client[v1alpha1.UpdateDefaultRateDefinitionRequest, v1alpha1.UpdateDefaultRateDefinitionResponse]
	updateInvoice               *connect_go.Client[v1alpha1.UpdateInvoiceRequest, v1alpha1.UpdateInvoiceResponse]
	updateRateDefinition        *connect_go.Client[v1alpha1.UpdateRateDefinitionRequest, v1alpha1.UpdateRateDefinitionResponse]
}

// CommitBillingPlan calls services.billing.v1alpha1.BillingService.CommitBillingPlan.
func (c *billingServiceClient) CommitBillingPlan(ctx context.Context, req *connect_go.Request[v1alpha1.CommitBillingPlanRequest]) (*connect_go.Response[v1alpha1.CommitBillingPlanResponse], error) {
	return c.commitBillingPlan.CallUnary(ctx, req)
}

// CommitDefaultBillingPlan calls services.billing.v1alpha1.BillingService.CommitDefaultBillingPlan.
func (c *billingServiceClient) CommitDefaultBillingPlan(ctx context.Context, req *connect_go.Request[v1alpha1.CommitDefaultBillingPlanRequest]) (*connect_go.Response[v1alpha1.CommitDefaultBillingPlanResponse], error) {
	return c.commitDefaultBillingPlan.CallUnary(ctx, req)
}

// CreateBillingPlan calls services.billing.v1alpha1.BillingService.CreateBillingPlan.
func (c *billingServiceClient) CreateBillingPlan(ctx context.Context, req *connect_go.Request[v1alpha1.CreateBillingPlanRequest]) (*connect_go.Response[v1alpha1.CreateBillingPlanResponse], error) {
	return c.createBillingPlan.CallUnary(ctx, req)
}

// CreateDefaultBillingPlan calls services.billing.v1alpha1.BillingService.CreateDefaultBillingPlan.
func (c *billingServiceClient) CreateDefaultBillingPlan(ctx context.Context, req *connect_go.Request[v1alpha1.CreateDefaultBillingPlanRequest]) (*connect_go.Response[v1alpha1.CreateDefaultBillingPlanResponse], error) {
	return c.createDefaultBillingPlan.CallUnary(ctx, req)
}

// CreateDefaultRateDefinition calls
// services.billing.v1alpha1.BillingService.CreateDefaultRateDefinition.
func (c *billingServiceClient) CreateDefaultRateDefinition(ctx context.Context, req *connect_go.Request[v1alpha1.CreateDefaultRateDefinitionRequest]) (*connect_go.Response[v1alpha1.CreateDefaultRateDefinitionResponse], error) {
	return c.createDefaultRateDefinition.CallUnary(ctx, req)
}

// CreateInvoice calls services.billing.v1alpha1.BillingService.CreateInvoice.
//
// Deprecated: do not use.
func (c *billingServiceClient) CreateInvoice(ctx context.Context, req *connect_go.Request[v1alpha1.CreateInvoiceRequest]) (*connect_go.Response[v1alpha1.CreateInvoiceResponse], error) {
	return c.createInvoice.CallUnary(ctx, req)
}

// CreateRateDefinition calls services.billing.v1alpha1.BillingService.CreateRateDefinition.
func (c *billingServiceClient) CreateRateDefinition(ctx context.Context, req *connect_go.Request[v1alpha1.CreateRateDefinitionRequest]) (*connect_go.Response[v1alpha1.CreateRateDefinitionResponse], error) {
	return c.createRateDefinition.CallUnary(ctx, req)
}

// DeleteBillingPlan calls services.billing.v1alpha1.BillingService.DeleteBillingPlan.
func (c *billingServiceClient) DeleteBillingPlan(ctx context.Context, req *connect_go.Request[v1alpha1.DeleteBillingPlanRequest]) (*connect_go.Response[v1alpha1.DeleteBillingPlanResponse], error) {
	return c.deleteBillingPlan.CallUnary(ctx, req)
}

// DeleteDefaultBillingPlan calls services.billing.v1alpha1.BillingService.DeleteDefaultBillingPlan.
func (c *billingServiceClient) DeleteDefaultBillingPlan(ctx context.Context, req *connect_go.Request[v1alpha1.DeleteDefaultBillingPlanRequest]) (*connect_go.Response[v1alpha1.DeleteDefaultBillingPlanResponse], error) {
	return c.deleteDefaultBillingPlan.CallUnary(ctx, req)
}

// DeleteDefaultRateDefinition calls
// services.billing.v1alpha1.BillingService.DeleteDefaultRateDefinition.
func (c *billingServiceClient) DeleteDefaultRateDefinition(ctx context.Context, req *connect_go.Request[v1alpha1.DeleteDefaultRateDefinitionRequest]) (*connect_go.Response[v1alpha1.DeleteDefaultRateDefinitionResponse], error) {
	return c.deleteDefaultRateDefinition.CallUnary(ctx, req)
}

// DeleteInvoice calls services.billing.v1alpha1.BillingService.DeleteInvoice.
//
// Deprecated: do not use.
func (c *billingServiceClient) DeleteInvoice(ctx context.Context, req *connect_go.Request[v1alpha1.DeleteInvoiceRequest]) (*connect_go.Response[v1alpha1.DeleteInvoiceResponse], error) {
	return c.deleteInvoice.CallUnary(ctx, req)
}

// DeleteRateDefinition calls services.billing.v1alpha1.BillingService.DeleteRateDefinition.
func (c *billingServiceClient) DeleteRateDefinition(ctx context.Context, req *connect_go.Request[v1alpha1.DeleteRateDefinitionRequest]) (*connect_go.Response[v1alpha1.DeleteRateDefinitionResponse], error) {
	return c.deleteRateDefinition.CallUnary(ctx, req)
}

// DuplicateBillingPlan calls services.billing.v1alpha1.BillingService.DuplicateBillingPlan.
func (c *billingServiceClient) DuplicateBillingPlan(ctx context.Context, req *connect_go.Request[v1alpha1.DuplicateBillingPlanRequest]) (*connect_go.Response[v1alpha1.DuplicateBillingPlanResponse], error) {
	return c.duplicateBillingPlan.CallUnary(ctx, req)
}

// DuplicateDefaultBillingPlan calls
// services.billing.v1alpha1.BillingService.DuplicateDefaultBillingPlan.
func (c *billingServiceClient) DuplicateDefaultBillingPlan(ctx context.Context, req *connect_go.Request[v1alpha1.DuplicateDefaultBillingPlanRequest]) (*connect_go.Response[v1alpha1.DuplicateDefaultBillingPlanResponse], error) {
	return c.duplicateDefaultBillingPlan.CallUnary(ctx, req)
}

// ExportInvoice calls services.billing.v1alpha1.BillingService.ExportInvoice.
func (c *billingServiceClient) ExportInvoice(ctx context.Context, req *connect_go.Request[v1alpha1.ExportInvoiceRequest]) (*connect_go.Response[v1alpha1.ExportInvoiceResponse], error) {
	return c.exportInvoice.CallUnary(ctx, req)
}

// GetActiveBillingPlan calls services.billing.v1alpha1.BillingService.GetActiveBillingPlan.
func (c *billingServiceClient) GetActiveBillingPlan(ctx context.Context, req *connect_go.Request[v1alpha1.GetActiveBillingPlanRequest]) (*connect_go.Response[v1alpha1.GetActiveBillingPlanResponse], error) {
	return c.getActiveBillingPlan.CallUnary(ctx, req)
}

// GetBillingPlan calls services.billing.v1alpha1.BillingService.GetBillingPlan.
func (c *billingServiceClient) GetBillingPlan(ctx context.Context, req *connect_go.Request[v1alpha1.GetBillingPlanRequest]) (*connect_go.Response[v1alpha1.GetBillingPlanResponse], error) {
	return c.getBillingPlan.CallUnary(ctx, req)
}

// GetInvoice calls services.billing.v1alpha1.BillingService.GetInvoice.
//
// Deprecated: do not use.
func (c *billingServiceClient) GetInvoice(ctx context.Context, req *connect_go.Request[v1alpha1.GetInvoiceRequest]) (*connect_go.Response[v1alpha1.GetInvoiceResponse], error) {
	return c.getInvoice.CallUnary(ctx, req)
}

// GetRateDefinition calls services.billing.v1alpha1.BillingService.GetRateDefinition.
func (c *billingServiceClient) GetRateDefinition(ctx context.Context, req *connect_go.Request[v1alpha1.GetRateDefinitionRequest]) (*connect_go.Response[v1alpha1.GetRateDefinitionResponse], error) {
	return c.getRateDefinition.CallUnary(ctx, req)
}

// ListBillingPlans calls services.billing.v1alpha1.BillingService.ListBillingPlans.
func (c *billingServiceClient) ListBillingPlans(ctx context.Context, req *connect_go.Request[v1alpha1.ListBillingPlansRequest]) (*connect_go.Response[v1alpha1.ListBillingPlansResponse], error) {
	return c.listBillingPlans.CallUnary(ctx, req)
}

// ListInvoices calls services.billing.v1alpha1.BillingService.ListInvoices.
//
// Deprecated: do not use.
func (c *billingServiceClient) ListInvoices(ctx context.Context, req *connect_go.Request[v1alpha1.ListInvoicesRequest]) (*connect_go.Response[v1alpha1.ListInvoicesResponse], error) {
	return c.listInvoices.CallUnary(ctx, req)
}

// ListRateDefinitions calls services.billing.v1alpha1.BillingService.ListRateDefinitions.
func (c *billingServiceClient) ListRateDefinitions(ctx context.Context, req *connect_go.Request[v1alpha1.ListRateDefinitionsRequest]) (*connect_go.Response[v1alpha1.ListRateDefinitionsResponse], error) {
	return c.listRateDefinitions.CallUnary(ctx, req)
}

// UpdateBillingPlan calls services.billing.v1alpha1.BillingService.UpdateBillingPlan.
func (c *billingServiceClient) UpdateBillingPlan(ctx context.Context, req *connect_go.Request[v1alpha1.UpdateBillingPlanRequest]) (*connect_go.Response[v1alpha1.UpdateBillingPlanResponse], error) {
	return c.updateBillingPlan.CallUnary(ctx, req)
}

// UpdateDefaultBillingPlan calls services.billing.v1alpha1.BillingService.UpdateDefaultBillingPlan.
func (c *billingServiceClient) UpdateDefaultBillingPlan(ctx context.Context, req *connect_go.Request[v1alpha1.UpdateDefaultBillingPlanRequest]) (*connect_go.Response[v1alpha1.UpdateDefaultBillingPlanResponse], error) {
	return c.updateDefaultBillingPlan.CallUnary(ctx, req)
}

// UpdateDefaultRateDefinition calls
// services.billing.v1alpha1.BillingService.UpdateDefaultRateDefinition.
func (c *billingServiceClient) UpdateDefaultRateDefinition(ctx context.Context, req *connect_go.Request[v1alpha1.UpdateDefaultRateDefinitionRequest]) (*connect_go.Response[v1alpha1.UpdateDefaultRateDefinitionResponse], error) {
	return c.updateDefaultRateDefinition.CallUnary(ctx, req)
}

// UpdateInvoice calls services.billing.v1alpha1.BillingService.UpdateInvoice.
//
// Deprecated: do not use.
func (c *billingServiceClient) UpdateInvoice(ctx context.Context, req *connect_go.Request[v1alpha1.UpdateInvoiceRequest]) (*connect_go.Response[v1alpha1.UpdateInvoiceResponse], error) {
	return c.updateInvoice.CallUnary(ctx, req)
}

// UpdateRateDefinition calls services.billing.v1alpha1.BillingService.UpdateRateDefinition.
func (c *billingServiceClient) UpdateRateDefinition(ctx context.Context, req *connect_go.Request[v1alpha1.UpdateRateDefinitionRequest]) (*connect_go.Response[v1alpha1.UpdateRateDefinitionResponse], error) {
	return c.updateRateDefinition.CallUnary(ctx, req)
}

// BillingServiceHandler is an implementation of the services.billing.v1alpha1.BillingService
// service.
type BillingServiceHandler interface {
	// Commits a billing plan for the ORG, finalizing it's creation and allowing it
	// to become active.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.FailedPrecondition: The billing plan is already committed.
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The specified billing plan doesn't exist.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable. Likely a transient issue with a downstream service.
	CommitBillingPlan(context.Context, *connect_go.Request[v1alpha1.CommitBillingPlanRequest]) (*connect_go.Response[v1alpha1.CommitBillingPlanResponse], error)
	// Commits a default billing plan for the REGION, finalizing it's creation and allowing it
	// to become active.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.FailedPrecondition: The default billing plan is already committed.
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The specified default billing plan doesn't exist.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	CommitDefaultBillingPlan(context.Context, *connect_go.Request[v1alpha1.CommitDefaultBillingPlanRequest]) (*connect_go.Response[v1alpha1.CommitDefaultBillingPlanResponse], error)
	// Creates a billing plan for the ORG.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable. Likely a transient issue with a downstream service.
	CreateBillingPlan(context.Context, *connect_go.Request[v1alpha1.CreateBillingPlanRequest]) (*connect_go.Response[v1alpha1.CreateBillingPlanResponse], error)
	// Creates the default billing plan for the REGION.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	CreateDefaultBillingPlan(context.Context, *connect_go.Request[v1alpha1.CreateDefaultBillingPlanRequest]) (*connect_go.Response[v1alpha1.CreateDefaultBillingPlanResponse], error)
	// Creates a default rate definition for a default billing plan for the REGION.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.AlreadyExists: A rate definition with the same feature already exists.
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The default billing plan doesn't exist.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	CreateDefaultRateDefinition(context.Context, *connect_go.Request[v1alpha1.CreateDefaultRateDefinitionRequest]) (*connect_go.Response[v1alpha1.CreateDefaultRateDefinitionResponse], error)
	// Creates an invoice for the ORG for the specified billing cycle.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.AlreadyExists: An invoice already exists for the specified billing cycle.
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable. Likely a transient issue with a downstream service.
	//
	// Deprecated: do not use.
	CreateInvoice(context.Context, *connect_go.Request[v1alpha1.CreateInvoiceRequest]) (*connect_go.Response[v1alpha1.CreateInvoiceResponse], error)
	// Creates a rate definition for a Billing Plan in an ORG.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.AlreadyExists: A rate definition with the same feature id already exists.
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The specified billing plan or rate definition group doesn't exist.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable. Likely a transient issue with a downstream service.
	CreateRateDefinition(context.Context, *connect_go.Request[v1alpha1.CreateRateDefinitionRequest]) (*connect_go.Response[v1alpha1.CreateRateDefinitionResponse], error)
	// Deletes an inactive billing plan. A billing plan is inactive if it hasn't started.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.FailedPrecondition: The billing plan is active.
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The specified billing plan doesn't exist.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable. Likely a transient issue with a downstream service.
	DeleteBillingPlan(context.Context, *connect_go.Request[v1alpha1.DeleteBillingPlanRequest]) (*connect_go.Response[v1alpha1.DeleteBillingPlanResponse], error)
	// Deletes an inactive default billing plan for the REGION. A billing plan is inactive
	// if it hasn't started.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.FailedPrecondition: The billing plan is active.
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The default billing plan doesn't exist.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	DeleteDefaultBillingPlan(context.Context, *connect_go.Request[v1alpha1.DeleteDefaultBillingPlanRequest]) (*connect_go.Response[v1alpha1.DeleteDefaultBillingPlanResponse], error)
	// Deletes a rate definition from the default billing plan for the REGION.
	//   - The default billing plan must be inactive.
	//
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.FailedPrecondition: The billing plan is active.
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The rate definition doesn't exist.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	DeleteDefaultRateDefinition(context.Context, *connect_go.Request[v1alpha1.DeleteDefaultRateDefinitionRequest]) (*connect_go.Response[v1alpha1.DeleteDefaultRateDefinitionResponse], error)
	// Deletes an invoice.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The specified invoice doesn't exist.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable. Likely a transient issue with a downstream service.
	//
	// Deprecated: do not use.
	DeleteInvoice(context.Context, *connect_go.Request[v1alpha1.DeleteInvoiceRequest]) (*connect_go.Response[v1alpha1.DeleteInvoiceResponse], error)
	// Deletes a rate definition from a Billing Plan in an ORG.
	//   - The billing plan must be inactive.
	//
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.FailedPrecondition: The billing plan is active.
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The specified billing plan or rate definition group doesn't exist.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable. Likely a transient issue with a downstream service.
	DeleteRateDefinition(context.Context, *connect_go.Request[v1alpha1.DeleteRateDefinitionRequest]) (*connect_go.Response[v1alpha1.DeleteRateDefinitionResponse], error)
	// Duplicates a billing plan. This copies the billing plan and all of its rate definitions.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The specified billing plan doesn't exist.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable. Likely a transient issue with a downstream service.
	DuplicateBillingPlan(context.Context, *connect_go.Request[v1alpha1.DuplicateBillingPlanRequest]) (*connect_go.Response[v1alpha1.DuplicateBillingPlanResponse], error)
	// Duplicates a default billing plan. This copies the billing plan, all of its rate definitions,
	// and all of its rate definition groups and features.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The specified billing plan doesn't exist.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable. Likely a transient issue with a downstream service.
	DuplicateDefaultBillingPlan(context.Context, *connect_go.Request[v1alpha1.DuplicateDefaultBillingPlanRequest]) (*connect_go.Response[v1alpha1.DuplicateDefaultBillingPlanResponse], error)
	// Exports an invoice.
	// Required permissions:
	//
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable. Likely a transient issue with a downstream service.
	ExportInvoice(context.Context, *connect_go.Request[v1alpha1.ExportInvoiceRequest]) (*connect_go.Response[v1alpha1.ExportInvoiceResponse], error)
	// Returns the active billing plan for the ORG or REGION. The active billing plan is a billing plan
	// whose start_time has passed and end_time has not passed. If multiple satisfy that requirement, the
	// newest one is considered active. If no plan is active, it indicates the ORG is using REGION defaults,
	// or that the REGION has not been set up for billing yet.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: There isn't an active billing plan.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable. Likely a transient issue with a downstream service.
	GetActiveBillingPlan(context.Context, *connect_go.Request[v1alpha1.GetActiveBillingPlanRequest]) (*connect_go.Response[v1alpha1.GetActiveBillingPlanResponse], error)
	// Returns the specified billing plan.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The specified billing plan doesn't exist.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable. Likely a transient issue with a downstream service.
	GetBillingPlan(context.Context, *connect_go.Request[v1alpha1.GetBillingPlanRequest]) (*connect_go.Response[v1alpha1.GetBillingPlanResponse], error)
	// Returns the specified invoice.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The specified invoice doesn't exist.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable. Likely a transient issue with a downstream service.
	//
	// Deprecated: do not use.
	GetInvoice(context.Context, *connect_go.Request[v1alpha1.GetInvoiceRequest]) (*connect_go.Response[v1alpha1.GetInvoiceResponse], error)
	// Returns the specified rate definition.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The specified rate definition doesn't exist.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	GetRateDefinition(context.Context, *connect_go.Request[v1alpha1.GetRateDefinitionRequest]) (*connect_go.Response[v1alpha1.GetRateDefinitionResponse], error)
	// Lists billing plans.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable. Likely a transient issue with a downstream service.
	ListBillingPlans(context.Context, *connect_go.Request[v1alpha1.ListBillingPlansRequest]) (*connect_go.Response[v1alpha1.ListBillingPlansResponse], error)
	// Lists invoices.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable. Likely a transient issue with a downstream service.
	//
	// Deprecated: do not use.
	ListInvoices(context.Context, *connect_go.Request[v1alpha1.ListInvoicesRequest]) (*connect_go.Response[v1alpha1.ListInvoicesResponse], error)
	// Lists rate definitions.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	ListRateDefinitions(context.Context, *connect_go.Request[v1alpha1.ListRateDefinitionsRequest]) (*connect_go.Response[v1alpha1.ListRateDefinitionsResponse], error)
	// Updates an inactive billing plan. A billing plan is inactive if it hasn't started.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.FailedPrecondition: The billing plan is active.
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The specified billing plan doesn't exist.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable. Likely a transient issue with a downstream service.
	UpdateBillingPlan(context.Context, *connect_go.Request[v1alpha1.UpdateBillingPlanRequest]) (*connect_go.Response[v1alpha1.UpdateBillingPlanResponse], error)
	// Updates an inactive default billing plan for the REGION. A billing plan is inactive
	// if it hasn't started.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.FailedPrecondition: The billing plan is active.
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable. Likely a transient issue with a downstream service.
	UpdateDefaultBillingPlan(context.Context, *connect_go.Request[v1alpha1.UpdateDefaultBillingPlanRequest]) (*connect_go.Response[v1alpha1.UpdateDefaultBillingPlanResponse], error)
	// Updates a default rate definition.
	//   - The billing plan must be inactive.
	//
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.FailedPrecondition: The billing plan is active.
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The specified rate definition doesn't exist.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	UpdateDefaultRateDefinition(context.Context, *connect_go.Request[v1alpha1.UpdateDefaultRateDefinitionRequest]) (*connect_go.Response[v1alpha1.UpdateDefaultRateDefinitionResponse], error)
	// Updates the specified invoice.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The specified invoice doesn't exist.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable. Likely a transient issue with a downstream service.
	//
	// Deprecated: do not use.
	UpdateInvoice(context.Context, *connect_go.Request[v1alpha1.UpdateInvoiceRequest]) (*connect_go.Response[v1alpha1.UpdateInvoiceResponse], error)
	// Updates a rate definition.
	//   - The billing plan must be inactive.
	//
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.FailedPrecondition: The billing plan is active.
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The specified rate definition doesn't exist.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	UpdateRateDefinition(context.Context, *connect_go.Request[v1alpha1.UpdateRateDefinitionRequest]) (*connect_go.Response[v1alpha1.UpdateRateDefinitionResponse], error)
}

// NewBillingServiceHandler builds an HTTP handler from the service implementation. It returns the
// path on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewBillingServiceHandler(svc BillingServiceHandler, opts ...connect_go.HandlerOption) (string, http.Handler) {
	billingServiceCommitBillingPlanHandler := connect_go.NewUnaryHandler(
		BillingServiceCommitBillingPlanProcedure,
		svc.CommitBillingPlan,
		opts...,
	)
	billingServiceCommitDefaultBillingPlanHandler := connect_go.NewUnaryHandler(
		BillingServiceCommitDefaultBillingPlanProcedure,
		svc.CommitDefaultBillingPlan,
		opts...,
	)
	billingServiceCreateBillingPlanHandler := connect_go.NewUnaryHandler(
		BillingServiceCreateBillingPlanProcedure,
		svc.CreateBillingPlan,
		opts...,
	)
	billingServiceCreateDefaultBillingPlanHandler := connect_go.NewUnaryHandler(
		BillingServiceCreateDefaultBillingPlanProcedure,
		svc.CreateDefaultBillingPlan,
		opts...,
	)
	billingServiceCreateDefaultRateDefinitionHandler := connect_go.NewUnaryHandler(
		BillingServiceCreateDefaultRateDefinitionProcedure,
		svc.CreateDefaultRateDefinition,
		opts...,
	)
	billingServiceCreateInvoiceHandler := connect_go.NewUnaryHandler(
		BillingServiceCreateInvoiceProcedure,
		svc.CreateInvoice,
		opts...,
	)
	billingServiceCreateRateDefinitionHandler := connect_go.NewUnaryHandler(
		BillingServiceCreateRateDefinitionProcedure,
		svc.CreateRateDefinition,
		opts...,
	)
	billingServiceDeleteBillingPlanHandler := connect_go.NewUnaryHandler(
		BillingServiceDeleteBillingPlanProcedure,
		svc.DeleteBillingPlan,
		opts...,
	)
	billingServiceDeleteDefaultBillingPlanHandler := connect_go.NewUnaryHandler(
		BillingServiceDeleteDefaultBillingPlanProcedure,
		svc.DeleteDefaultBillingPlan,
		opts...,
	)
	billingServiceDeleteDefaultRateDefinitionHandler := connect_go.NewUnaryHandler(
		BillingServiceDeleteDefaultRateDefinitionProcedure,
		svc.DeleteDefaultRateDefinition,
		opts...,
	)
	billingServiceDeleteInvoiceHandler := connect_go.NewUnaryHandler(
		BillingServiceDeleteInvoiceProcedure,
		svc.DeleteInvoice,
		opts...,
	)
	billingServiceDeleteRateDefinitionHandler := connect_go.NewUnaryHandler(
		BillingServiceDeleteRateDefinitionProcedure,
		svc.DeleteRateDefinition,
		opts...,
	)
	billingServiceDuplicateBillingPlanHandler := connect_go.NewUnaryHandler(
		BillingServiceDuplicateBillingPlanProcedure,
		svc.DuplicateBillingPlan,
		opts...,
	)
	billingServiceDuplicateDefaultBillingPlanHandler := connect_go.NewUnaryHandler(
		BillingServiceDuplicateDefaultBillingPlanProcedure,
		svc.DuplicateDefaultBillingPlan,
		opts...,
	)
	billingServiceExportInvoiceHandler := connect_go.NewUnaryHandler(
		BillingServiceExportInvoiceProcedure,
		svc.ExportInvoice,
		opts...,
	)
	billingServiceGetActiveBillingPlanHandler := connect_go.NewUnaryHandler(
		BillingServiceGetActiveBillingPlanProcedure,
		svc.GetActiveBillingPlan,
		opts...,
	)
	billingServiceGetBillingPlanHandler := connect_go.NewUnaryHandler(
		BillingServiceGetBillingPlanProcedure,
		svc.GetBillingPlan,
		opts...,
	)
	billingServiceGetInvoiceHandler := connect_go.NewUnaryHandler(
		BillingServiceGetInvoiceProcedure,
		svc.GetInvoice,
		opts...,
	)
	billingServiceGetRateDefinitionHandler := connect_go.NewUnaryHandler(
		BillingServiceGetRateDefinitionProcedure,
		svc.GetRateDefinition,
		opts...,
	)
	billingServiceListBillingPlansHandler := connect_go.NewUnaryHandler(
		BillingServiceListBillingPlansProcedure,
		svc.ListBillingPlans,
		opts...,
	)
	billingServiceListInvoicesHandler := connect_go.NewUnaryHandler(
		BillingServiceListInvoicesProcedure,
		svc.ListInvoices,
		opts...,
	)
	billingServiceListRateDefinitionsHandler := connect_go.NewUnaryHandler(
		BillingServiceListRateDefinitionsProcedure,
		svc.ListRateDefinitions,
		opts...,
	)
	billingServiceUpdateBillingPlanHandler := connect_go.NewUnaryHandler(
		BillingServiceUpdateBillingPlanProcedure,
		svc.UpdateBillingPlan,
		opts...,
	)
	billingServiceUpdateDefaultBillingPlanHandler := connect_go.NewUnaryHandler(
		BillingServiceUpdateDefaultBillingPlanProcedure,
		svc.UpdateDefaultBillingPlan,
		opts...,
	)
	billingServiceUpdateDefaultRateDefinitionHandler := connect_go.NewUnaryHandler(
		BillingServiceUpdateDefaultRateDefinitionProcedure,
		svc.UpdateDefaultRateDefinition,
		opts...,
	)
	billingServiceUpdateInvoiceHandler := connect_go.NewUnaryHandler(
		BillingServiceUpdateInvoiceProcedure,
		svc.UpdateInvoice,
		opts...,
	)
	billingServiceUpdateRateDefinitionHandler := connect_go.NewUnaryHandler(
		BillingServiceUpdateRateDefinitionProcedure,
		svc.UpdateRateDefinition,
		opts...,
	)
	return "/services.billing.v1alpha1.BillingService/", http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		switch r.URL.Path {
		case BillingServiceCommitBillingPlanProcedure:
			billingServiceCommitBillingPlanHandler.ServeHTTP(w, r)
		case BillingServiceCommitDefaultBillingPlanProcedure:
			billingServiceCommitDefaultBillingPlanHandler.ServeHTTP(w, r)
		case BillingServiceCreateBillingPlanProcedure:
			billingServiceCreateBillingPlanHandler.ServeHTTP(w, r)
		case BillingServiceCreateDefaultBillingPlanProcedure:
			billingServiceCreateDefaultBillingPlanHandler.ServeHTTP(w, r)
		case BillingServiceCreateDefaultRateDefinitionProcedure:
			billingServiceCreateDefaultRateDefinitionHandler.ServeHTTP(w, r)
		case BillingServiceCreateInvoiceProcedure:
			billingServiceCreateInvoiceHandler.ServeHTTP(w, r)
		case BillingServiceCreateRateDefinitionProcedure:
			billingServiceCreateRateDefinitionHandler.ServeHTTP(w, r)
		case BillingServiceDeleteBillingPlanProcedure:
			billingServiceDeleteBillingPlanHandler.ServeHTTP(w, r)
		case BillingServiceDeleteDefaultBillingPlanProcedure:
			billingServiceDeleteDefaultBillingPlanHandler.ServeHTTP(w, r)
		case BillingServiceDeleteDefaultRateDefinitionProcedure:
			billingServiceDeleteDefaultRateDefinitionHandler.ServeHTTP(w, r)
		case BillingServiceDeleteInvoiceProcedure:
			billingServiceDeleteInvoiceHandler.ServeHTTP(w, r)
		case BillingServiceDeleteRateDefinitionProcedure:
			billingServiceDeleteRateDefinitionHandler.ServeHTTP(w, r)
		case BillingServiceDuplicateBillingPlanProcedure:
			billingServiceDuplicateBillingPlanHandler.ServeHTTP(w, r)
		case BillingServiceDuplicateDefaultBillingPlanProcedure:
			billingServiceDuplicateDefaultBillingPlanHandler.ServeHTTP(w, r)
		case BillingServiceExportInvoiceProcedure:
			billingServiceExportInvoiceHandler.ServeHTTP(w, r)
		case BillingServiceGetActiveBillingPlanProcedure:
			billingServiceGetActiveBillingPlanHandler.ServeHTTP(w, r)
		case BillingServiceGetBillingPlanProcedure:
			billingServiceGetBillingPlanHandler.ServeHTTP(w, r)
		case BillingServiceGetInvoiceProcedure:
			billingServiceGetInvoiceHandler.ServeHTTP(w, r)
		case BillingServiceGetRateDefinitionProcedure:
			billingServiceGetRateDefinitionHandler.ServeHTTP(w, r)
		case BillingServiceListBillingPlansProcedure:
			billingServiceListBillingPlansHandler.ServeHTTP(w, r)
		case BillingServiceListInvoicesProcedure:
			billingServiceListInvoicesHandler.ServeHTTP(w, r)
		case BillingServiceListRateDefinitionsProcedure:
			billingServiceListRateDefinitionsHandler.ServeHTTP(w, r)
		case BillingServiceUpdateBillingPlanProcedure:
			billingServiceUpdateBillingPlanHandler.ServeHTTP(w, r)
		case BillingServiceUpdateDefaultBillingPlanProcedure:
			billingServiceUpdateDefaultBillingPlanHandler.ServeHTTP(w, r)
		case BillingServiceUpdateDefaultRateDefinitionProcedure:
			billingServiceUpdateDefaultRateDefinitionHandler.ServeHTTP(w, r)
		case BillingServiceUpdateInvoiceProcedure:
			billingServiceUpdateInvoiceHandler.ServeHTTP(w, r)
		case BillingServiceUpdateRateDefinitionProcedure:
			billingServiceUpdateRateDefinitionHandler.ServeHTTP(w, r)
		default:
			http.NotFound(w, r)
		}
	})
}

// UnimplementedBillingServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedBillingServiceHandler struct{}

func (UnimplementedBillingServiceHandler) CommitBillingPlan(context.Context, *connect_go.Request[v1alpha1.CommitBillingPlanRequest]) (*connect_go.Response[v1alpha1.CommitBillingPlanResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha1.BillingService.CommitBillingPlan is not implemented"))
}

func (UnimplementedBillingServiceHandler) CommitDefaultBillingPlan(context.Context, *connect_go.Request[v1alpha1.CommitDefaultBillingPlanRequest]) (*connect_go.Response[v1alpha1.CommitDefaultBillingPlanResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha1.BillingService.CommitDefaultBillingPlan is not implemented"))
}

func (UnimplementedBillingServiceHandler) CreateBillingPlan(context.Context, *connect_go.Request[v1alpha1.CreateBillingPlanRequest]) (*connect_go.Response[v1alpha1.CreateBillingPlanResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha1.BillingService.CreateBillingPlan is not implemented"))
}

func (UnimplementedBillingServiceHandler) CreateDefaultBillingPlan(context.Context, *connect_go.Request[v1alpha1.CreateDefaultBillingPlanRequest]) (*connect_go.Response[v1alpha1.CreateDefaultBillingPlanResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha1.BillingService.CreateDefaultBillingPlan is not implemented"))
}

func (UnimplementedBillingServiceHandler) CreateDefaultRateDefinition(context.Context, *connect_go.Request[v1alpha1.CreateDefaultRateDefinitionRequest]) (*connect_go.Response[v1alpha1.CreateDefaultRateDefinitionResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha1.BillingService.CreateDefaultRateDefinition is not implemented"))
}

func (UnimplementedBillingServiceHandler) CreateInvoice(context.Context, *connect_go.Request[v1alpha1.CreateInvoiceRequest]) (*connect_go.Response[v1alpha1.CreateInvoiceResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha1.BillingService.CreateInvoice is not implemented"))
}

func (UnimplementedBillingServiceHandler) CreateRateDefinition(context.Context, *connect_go.Request[v1alpha1.CreateRateDefinitionRequest]) (*connect_go.Response[v1alpha1.CreateRateDefinitionResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha1.BillingService.CreateRateDefinition is not implemented"))
}

func (UnimplementedBillingServiceHandler) DeleteBillingPlan(context.Context, *connect_go.Request[v1alpha1.DeleteBillingPlanRequest]) (*connect_go.Response[v1alpha1.DeleteBillingPlanResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha1.BillingService.DeleteBillingPlan is not implemented"))
}

func (UnimplementedBillingServiceHandler) DeleteDefaultBillingPlan(context.Context, *connect_go.Request[v1alpha1.DeleteDefaultBillingPlanRequest]) (*connect_go.Response[v1alpha1.DeleteDefaultBillingPlanResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha1.BillingService.DeleteDefaultBillingPlan is not implemented"))
}

func (UnimplementedBillingServiceHandler) DeleteDefaultRateDefinition(context.Context, *connect_go.Request[v1alpha1.DeleteDefaultRateDefinitionRequest]) (*connect_go.Response[v1alpha1.DeleteDefaultRateDefinitionResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha1.BillingService.DeleteDefaultRateDefinition is not implemented"))
}

func (UnimplementedBillingServiceHandler) DeleteInvoice(context.Context, *connect_go.Request[v1alpha1.DeleteInvoiceRequest]) (*connect_go.Response[v1alpha1.DeleteInvoiceResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha1.BillingService.DeleteInvoice is not implemented"))
}

func (UnimplementedBillingServiceHandler) DeleteRateDefinition(context.Context, *connect_go.Request[v1alpha1.DeleteRateDefinitionRequest]) (*connect_go.Response[v1alpha1.DeleteRateDefinitionResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha1.BillingService.DeleteRateDefinition is not implemented"))
}

func (UnimplementedBillingServiceHandler) DuplicateBillingPlan(context.Context, *connect_go.Request[v1alpha1.DuplicateBillingPlanRequest]) (*connect_go.Response[v1alpha1.DuplicateBillingPlanResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha1.BillingService.DuplicateBillingPlan is not implemented"))
}

func (UnimplementedBillingServiceHandler) DuplicateDefaultBillingPlan(context.Context, *connect_go.Request[v1alpha1.DuplicateDefaultBillingPlanRequest]) (*connect_go.Response[v1alpha1.DuplicateDefaultBillingPlanResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha1.BillingService.DuplicateDefaultBillingPlan is not implemented"))
}

func (UnimplementedBillingServiceHandler) ExportInvoice(context.Context, *connect_go.Request[v1alpha1.ExportInvoiceRequest]) (*connect_go.Response[v1alpha1.ExportInvoiceResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha1.BillingService.ExportInvoice is not implemented"))
}

func (UnimplementedBillingServiceHandler) GetActiveBillingPlan(context.Context, *connect_go.Request[v1alpha1.GetActiveBillingPlanRequest]) (*connect_go.Response[v1alpha1.GetActiveBillingPlanResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha1.BillingService.GetActiveBillingPlan is not implemented"))
}

func (UnimplementedBillingServiceHandler) GetBillingPlan(context.Context, *connect_go.Request[v1alpha1.GetBillingPlanRequest]) (*connect_go.Response[v1alpha1.GetBillingPlanResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha1.BillingService.GetBillingPlan is not implemented"))
}

func (UnimplementedBillingServiceHandler) GetInvoice(context.Context, *connect_go.Request[v1alpha1.GetInvoiceRequest]) (*connect_go.Response[v1alpha1.GetInvoiceResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha1.BillingService.GetInvoice is not implemented"))
}

func (UnimplementedBillingServiceHandler) GetRateDefinition(context.Context, *connect_go.Request[v1alpha1.GetRateDefinitionRequest]) (*connect_go.Response[v1alpha1.GetRateDefinitionResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha1.BillingService.GetRateDefinition is not implemented"))
}

func (UnimplementedBillingServiceHandler) ListBillingPlans(context.Context, *connect_go.Request[v1alpha1.ListBillingPlansRequest]) (*connect_go.Response[v1alpha1.ListBillingPlansResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha1.BillingService.ListBillingPlans is not implemented"))
}

func (UnimplementedBillingServiceHandler) ListInvoices(context.Context, *connect_go.Request[v1alpha1.ListInvoicesRequest]) (*connect_go.Response[v1alpha1.ListInvoicesResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha1.BillingService.ListInvoices is not implemented"))
}

func (UnimplementedBillingServiceHandler) ListRateDefinitions(context.Context, *connect_go.Request[v1alpha1.ListRateDefinitionsRequest]) (*connect_go.Response[v1alpha1.ListRateDefinitionsResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha1.BillingService.ListRateDefinitions is not implemented"))
}

func (UnimplementedBillingServiceHandler) UpdateBillingPlan(context.Context, *connect_go.Request[v1alpha1.UpdateBillingPlanRequest]) (*connect_go.Response[v1alpha1.UpdateBillingPlanResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha1.BillingService.UpdateBillingPlan is not implemented"))
}

func (UnimplementedBillingServiceHandler) UpdateDefaultBillingPlan(context.Context, *connect_go.Request[v1alpha1.UpdateDefaultBillingPlanRequest]) (*connect_go.Response[v1alpha1.UpdateDefaultBillingPlanResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha1.BillingService.UpdateDefaultBillingPlan is not implemented"))
}

func (UnimplementedBillingServiceHandler) UpdateDefaultRateDefinition(context.Context, *connect_go.Request[v1alpha1.UpdateDefaultRateDefinitionRequest]) (*connect_go.Response[v1alpha1.UpdateDefaultRateDefinitionResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha1.BillingService.UpdateDefaultRateDefinition is not implemented"))
}

func (UnimplementedBillingServiceHandler) UpdateInvoice(context.Context, *connect_go.Request[v1alpha1.UpdateInvoiceRequest]) (*connect_go.Response[v1alpha1.UpdateInvoiceResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha1.BillingService.UpdateInvoice is not implemented"))
}

func (UnimplementedBillingServiceHandler) UpdateRateDefinition(context.Context, *connect_go.Request[v1alpha1.UpdateRateDefinitionRequest]) (*connect_go.Response[v1alpha1.UpdateRateDefinitionResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha1.BillingService.UpdateRateDefinition is not implemented"))
}
