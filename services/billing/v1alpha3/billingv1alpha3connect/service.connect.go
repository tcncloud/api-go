// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: services/billing/v1alpha3/service.proto

package billingv1alpha3connect

import (
	context "context"
	errors "errors"
	connect_go "github.com/bufbuild/connect-go"
	v1alpha3 "github.com/tcncloud/api-go/services/billing/v1alpha3"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect_go.IsAtLeastVersion0_1_0

const (
	// BillingServiceName is the fully-qualified name of the BillingService service.
	BillingServiceName = "services.billing.v1alpha3.BillingService"
)

// These constants are the fully-qualified names of the RPCs defined in this package. They're
// exposed at runtime as Spec.Procedure and as the final two segments of the HTTP route.
//
// Note that these are different from the fully-qualified method names used by
// google.golang.org/protobuf/reflect/protoreflect. To convert from these constants to
// reflection-formatted method names, remove the leading slash and convert the remaining slash to a
// period.
const (
	// BillingServiceListProductsProcedure is the fully-qualified name of the BillingService's
	// ListProducts RPC.
	BillingServiceListProductsProcedure = "/services.billing.v1alpha3.BillingService/ListProducts"
	// BillingServiceApplyBillingPlanDraftProcedure is the fully-qualified name of the BillingService's
	// ApplyBillingPlanDraft RPC.
	BillingServiceApplyBillingPlanDraftProcedure = "/services.billing.v1alpha3.BillingService/ApplyBillingPlanDraft"
	// BillingServiceCreateBillingPlanProcedure is the fully-qualified name of the BillingService's
	// CreateBillingPlan RPC.
	BillingServiceCreateBillingPlanProcedure = "/services.billing.v1alpha3.BillingService/CreateBillingPlan"
	// BillingServiceDeleteBillingPlanProcedure is the fully-qualified name of the BillingService's
	// DeleteBillingPlan RPC.
	BillingServiceDeleteBillingPlanProcedure = "/services.billing.v1alpha3.BillingService/DeleteBillingPlan"
	// BillingServiceGetBillingPlanProcedure is the fully-qualified name of the BillingService's
	// GetBillingPlan RPC.
	BillingServiceGetBillingPlanProcedure = "/services.billing.v1alpha3.BillingService/GetBillingPlan"
	// BillingServiceListBillingPlansProcedure is the fully-qualified name of the BillingService's
	// ListBillingPlans RPC.
	BillingServiceListBillingPlansProcedure = "/services.billing.v1alpha3.BillingService/ListBillingPlans"
	// BillingServiceUpdateBillingPlanProcedure is the fully-qualified name of the BillingService's
	// UpdateBillingPlan RPC.
	BillingServiceUpdateBillingPlanProcedure = "/services.billing.v1alpha3.BillingService/UpdateBillingPlan"
	// BillingServiceApplyDefaultBillingPlanDraftProcedure is the fully-qualified name of the
	// BillingService's ApplyDefaultBillingPlanDraft RPC.
	BillingServiceApplyDefaultBillingPlanDraftProcedure = "/services.billing.v1alpha3.BillingService/ApplyDefaultBillingPlanDraft"
	// BillingServiceCreateDefaultBillingPlanProcedure is the fully-qualified name of the
	// BillingService's CreateDefaultBillingPlan RPC.
	BillingServiceCreateDefaultBillingPlanProcedure = "/services.billing.v1alpha3.BillingService/CreateDefaultBillingPlan"
	// BillingServiceDeleteDefaultBillingPlanProcedure is the fully-qualified name of the
	// BillingService's DeleteDefaultBillingPlan RPC.
	BillingServiceDeleteDefaultBillingPlanProcedure = "/services.billing.v1alpha3.BillingService/DeleteDefaultBillingPlan"
	// BillingServiceGetDefaultBillingPlanProcedure is the fully-qualified name of the BillingService's
	// GetDefaultBillingPlan RPC.
	BillingServiceGetDefaultBillingPlanProcedure = "/services.billing.v1alpha3.BillingService/GetDefaultBillingPlan"
	// BillingServiceListDefaultBillingPlansProcedure is the fully-qualified name of the
	// BillingService's ListDefaultBillingPlans RPC.
	BillingServiceListDefaultBillingPlansProcedure = "/services.billing.v1alpha3.BillingService/ListDefaultBillingPlans"
	// BillingServiceUpdateDefaultBillingPlanProcedure is the fully-qualified name of the
	// BillingService's UpdateDefaultBillingPlan RPC.
	BillingServiceUpdateDefaultBillingPlanProcedure = "/services.billing.v1alpha3.BillingService/UpdateDefaultBillingPlan"
	// BillingServiceCreateRateDefinitionProcedure is the fully-qualified name of the BillingService's
	// CreateRateDefinition RPC.
	BillingServiceCreateRateDefinitionProcedure = "/services.billing.v1alpha3.BillingService/CreateRateDefinition"
	// BillingServiceDeleteRateDefinitionProcedure is the fully-qualified name of the BillingService's
	// DeleteRateDefinition RPC.
	BillingServiceDeleteRateDefinitionProcedure = "/services.billing.v1alpha3.BillingService/DeleteRateDefinition"
	// BillingServiceGetRateDefinitionProcedure is the fully-qualified name of the BillingService's
	// GetRateDefinition RPC.
	BillingServiceGetRateDefinitionProcedure = "/services.billing.v1alpha3.BillingService/GetRateDefinition"
	// BillingServiceListRateDefinitionsProcedure is the fully-qualified name of the BillingService's
	// ListRateDefinitions RPC.
	BillingServiceListRateDefinitionsProcedure = "/services.billing.v1alpha3.BillingService/ListRateDefinitions"
	// BillingServiceUpdateRateDefinitionProcedure is the fully-qualified name of the BillingService's
	// UpdateRateDefinition RPC.
	BillingServiceUpdateRateDefinitionProcedure = "/services.billing.v1alpha3.BillingService/UpdateRateDefinition"
	// BillingServiceCreateDefaultRateDefinitionProcedure is the fully-qualified name of the
	// BillingService's CreateDefaultRateDefinition RPC.
	BillingServiceCreateDefaultRateDefinitionProcedure = "/services.billing.v1alpha3.BillingService/CreateDefaultRateDefinition"
	// BillingServiceDeleteDefaultRateDefinitionProcedure is the fully-qualified name of the
	// BillingService's DeleteDefaultRateDefinition RPC.
	BillingServiceDeleteDefaultRateDefinitionProcedure = "/services.billing.v1alpha3.BillingService/DeleteDefaultRateDefinition"
	// BillingServiceGetDefaultRateDefinitionProcedure is the fully-qualified name of the
	// BillingService's GetDefaultRateDefinition RPC.
	BillingServiceGetDefaultRateDefinitionProcedure = "/services.billing.v1alpha3.BillingService/GetDefaultRateDefinition"
	// BillingServiceListDefaultRateDefinitionsProcedure is the fully-qualified name of the
	// BillingService's ListDefaultRateDefinitions RPC.
	BillingServiceListDefaultRateDefinitionsProcedure = "/services.billing.v1alpha3.BillingService/ListDefaultRateDefinitions"
	// BillingServiceUpdateDefaultRateDefinitionProcedure is the fully-qualified name of the
	// BillingService's UpdateDefaultRateDefinition RPC.
	BillingServiceUpdateDefaultRateDefinitionProcedure = "/services.billing.v1alpha3.BillingService/UpdateDefaultRateDefinition"
	// BillingServiceExportInvoiceProcedure is the fully-qualified name of the BillingService's
	// ExportInvoice RPC.
	BillingServiceExportInvoiceProcedure = "/services.billing.v1alpha3.BillingService/ExportInvoice"
)

// BillingServiceClient is a client for the services.billing.v1alpha3.BillingService service.
type BillingServiceClient interface {
	// Lists the products.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	ListProducts(context.Context, *connect_go.Request[v1alpha3.ListProductsRequest]) (*connect_go.Response[v1alpha3.ListProductsResponse], error)
	// Applies a draft billing plan.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The draft billing plan was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	ApplyBillingPlanDraft(context.Context, *connect_go.Request[v1alpha3.ApplyBillingPlanDraftRequest]) (*connect_go.Response[v1alpha3.ApplyBillingPlanDraftResponse], error)
	// Creates a new billing plan.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	CreateBillingPlan(context.Context, *connect_go.Request[v1alpha3.CreateBillingPlanRequest]) (*connect_go.Response[v1alpha3.CreateBillingPlanResponse], error)
	// Deletes a billing plan.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The billing plan was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	DeleteBillingPlan(context.Context, *connect_go.Request[v1alpha3.DeleteBillingPlanRequest]) (*connect_go.Response[v1alpha3.DeleteBillingPlanResponse], error)
	// Gets a billing plan.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The billing plan was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	GetBillingPlan(context.Context, *connect_go.Request[v1alpha3.GetBillingPlanRequest]) (*connect_go.Response[v1alpha3.GetBillingPlanResponse], error)
	// Lists billing plans.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	ListBillingPlans(context.Context, *connect_go.Request[v1alpha3.ListBillingPlansRequest]) (*connect_go.Response[v1alpha3.ListBillingPlansResponse], error)
	// Updates a billing plan.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The billing plan was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	UpdateBillingPlan(context.Context, *connect_go.Request[v1alpha3.UpdateBillingPlanRequest]) (*connect_go.Response[v1alpha3.UpdateBillingPlanResponse], error)
	// Applies a default draft billing plan.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The draft billing plan was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	ApplyDefaultBillingPlanDraft(context.Context, *connect_go.Request[v1alpha3.ApplyDefaultBillingPlanDraftRequest]) (*connect_go.Response[v1alpha3.ApplyDefaultBillingPlanDraftResponse], error)
	// Creates a new default billing plan.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	CreateDefaultBillingPlan(context.Context, *connect_go.Request[v1alpha3.CreateDefaultBillingPlanRequest]) (*connect_go.Response[v1alpha3.CreateDefaultBillingPlanResponse], error)
	// Deletes a default billing plan.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The billing plan was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	DeleteDefaultBillingPlan(context.Context, *connect_go.Request[v1alpha3.DeleteDefaultBillingPlanRequest]) (*connect_go.Response[v1alpha3.DeleteDefaultBillingPlanResponse], error)
	// Gets a default billing plan.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The default billing plan was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	GetDefaultBillingPlan(context.Context, *connect_go.Request[v1alpha3.GetDefaultBillingPlanRequest]) (*connect_go.Response[v1alpha3.GetDefaultBillingPlanResponse], error)
	// Lists default billing plans.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	ListDefaultBillingPlans(context.Context, *connect_go.Request[v1alpha3.ListDefaultBillingPlansRequest]) (*connect_go.Response[v1alpha3.ListDefaultBillingPlansResponse], error)
	// Updates a default billing plan.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The billing plan was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	UpdateDefaultBillingPlan(context.Context, *connect_go.Request[v1alpha3.UpdateDefaultBillingPlanRequest]) (*connect_go.Response[v1alpha3.UpdateDefaultBillingPlanResponse], error)
	// Creates a new rate definition.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The billing plan was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	CreateRateDefinition(context.Context, *connect_go.Request[v1alpha3.CreateRateDefinitionRequest]) (*connect_go.Response[v1alpha3.CreateRateDefinitionResponse], error)
	// Deletes a rate definition.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The rate definition was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	DeleteRateDefinition(context.Context, *connect_go.Request[v1alpha3.DeleteRateDefinitionRequest]) (*connect_go.Response[v1alpha3.DeleteRateDefinitionResponse], error)
	// Gets a rate definition.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The rate definition was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	GetRateDefinition(context.Context, *connect_go.Request[v1alpha3.GetRateDefinitionRequest]) (*connect_go.Response[v1alpha3.GetRateDefinitionResponse], error)
	// Lists rate definitions.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The rate definition was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	ListRateDefinitions(context.Context, *connect_go.Request[v1alpha3.ListRateDefinitionsRequest]) (*connect_go.Response[v1alpha3.ListRateDefinitionsResponse], error)
	// Updates a rate definition.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The rate definition was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	UpdateRateDefinition(context.Context, *connect_go.Request[v1alpha3.UpdateRateDefinitionRequest]) (*connect_go.Response[v1alpha3.UpdateRateDefinitionResponse], error)
	// Creates a new rate definition for a default plan.
	//   - Creating a rate definition on an existing SKU: the sku_id must be provided.
	//   - Creating a rate definition on a new SKU: the product must be provided and the sku_id omitted.
	//
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The billing plan was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	CreateDefaultRateDefinition(context.Context, *connect_go.Request[v1alpha3.CreateDefaultRateDefinitionRequest]) (*connect_go.Response[v1alpha3.CreateDefaultRateDefinitionResponse], error)
	// Deletes a rate definition for a default billing plan.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The rate definition was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	DeleteDefaultRateDefinition(context.Context, *connect_go.Request[v1alpha3.DeleteDefaultRateDefinitionRequest]) (*connect_go.Response[v1alpha3.DeleteDefaultRateDefinitionResponse], error)
	// Gets a rate definition for a default billing plan.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The rate definition was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	GetDefaultRateDefinition(context.Context, *connect_go.Request[v1alpha3.GetDefaultRateDefinitionRequest]) (*connect_go.Response[v1alpha3.GetDefaultRateDefinitionResponse], error)
	// Lists rate definitions for a default billing plan.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The rate definition was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	ListDefaultRateDefinitions(context.Context, *connect_go.Request[v1alpha3.ListDefaultRateDefinitionsRequest]) (*connect_go.Response[v1alpha3.ListDefaultRateDefinitionsResponse], error)
	// Updates a rate definition for a default billing plan.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The rate definition was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	UpdateDefaultRateDefinition(context.Context, *connect_go.Request[v1alpha3.UpdateDefaultRateDefinitionRequest]) (*connect_go.Response[v1alpha3.UpdateDefaultRateDefinitionResponse], error)
	// Exports an invoice.
	// Required permissions:
	//
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable. Likely a transient issue with a downstream service.
	ExportInvoice(context.Context, *connect_go.Request[v1alpha3.ExportInvoiceRequest]) (*connect_go.Response[v1alpha3.ExportInvoiceResponse], error)
}

// NewBillingServiceClient constructs a client for the services.billing.v1alpha3.BillingService
// service. By default, it uses the Connect protocol with the binary Protobuf Codec, asks for
// gzipped responses, and sends uncompressed requests. To use the gRPC or gRPC-Web protocols, supply
// the connect.WithGRPC() or connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewBillingServiceClient(httpClient connect_go.HTTPClient, baseURL string, opts ...connect_go.ClientOption) BillingServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	return &billingServiceClient{
		listProducts: connect_go.NewClient[v1alpha3.ListProductsRequest, v1alpha3.ListProductsResponse](
			httpClient,
			baseURL+BillingServiceListProductsProcedure,
			opts...,
		),
		applyBillingPlanDraft: connect_go.NewClient[v1alpha3.ApplyBillingPlanDraftRequest, v1alpha3.ApplyBillingPlanDraftResponse](
			httpClient,
			baseURL+BillingServiceApplyBillingPlanDraftProcedure,
			opts...,
		),
		createBillingPlan: connect_go.NewClient[v1alpha3.CreateBillingPlanRequest, v1alpha3.CreateBillingPlanResponse](
			httpClient,
			baseURL+BillingServiceCreateBillingPlanProcedure,
			opts...,
		),
		deleteBillingPlan: connect_go.NewClient[v1alpha3.DeleteBillingPlanRequest, v1alpha3.DeleteBillingPlanResponse](
			httpClient,
			baseURL+BillingServiceDeleteBillingPlanProcedure,
			opts...,
		),
		getBillingPlan: connect_go.NewClient[v1alpha3.GetBillingPlanRequest, v1alpha3.GetBillingPlanResponse](
			httpClient,
			baseURL+BillingServiceGetBillingPlanProcedure,
			opts...,
		),
		listBillingPlans: connect_go.NewClient[v1alpha3.ListBillingPlansRequest, v1alpha3.ListBillingPlansResponse](
			httpClient,
			baseURL+BillingServiceListBillingPlansProcedure,
			opts...,
		),
		updateBillingPlan: connect_go.NewClient[v1alpha3.UpdateBillingPlanRequest, v1alpha3.UpdateBillingPlanResponse](
			httpClient,
			baseURL+BillingServiceUpdateBillingPlanProcedure,
			opts...,
		),
		applyDefaultBillingPlanDraft: connect_go.NewClient[v1alpha3.ApplyDefaultBillingPlanDraftRequest, v1alpha3.ApplyDefaultBillingPlanDraftResponse](
			httpClient,
			baseURL+BillingServiceApplyDefaultBillingPlanDraftProcedure,
			opts...,
		),
		createDefaultBillingPlan: connect_go.NewClient[v1alpha3.CreateDefaultBillingPlanRequest, v1alpha3.CreateDefaultBillingPlanResponse](
			httpClient,
			baseURL+BillingServiceCreateDefaultBillingPlanProcedure,
			opts...,
		),
		deleteDefaultBillingPlan: connect_go.NewClient[v1alpha3.DeleteDefaultBillingPlanRequest, v1alpha3.DeleteDefaultBillingPlanResponse](
			httpClient,
			baseURL+BillingServiceDeleteDefaultBillingPlanProcedure,
			opts...,
		),
		getDefaultBillingPlan: connect_go.NewClient[v1alpha3.GetDefaultBillingPlanRequest, v1alpha3.GetDefaultBillingPlanResponse](
			httpClient,
			baseURL+BillingServiceGetDefaultBillingPlanProcedure,
			opts...,
		),
		listDefaultBillingPlans: connect_go.NewClient[v1alpha3.ListDefaultBillingPlansRequest, v1alpha3.ListDefaultBillingPlansResponse](
			httpClient,
			baseURL+BillingServiceListDefaultBillingPlansProcedure,
			opts...,
		),
		updateDefaultBillingPlan: connect_go.NewClient[v1alpha3.UpdateDefaultBillingPlanRequest, v1alpha3.UpdateDefaultBillingPlanResponse](
			httpClient,
			baseURL+BillingServiceUpdateDefaultBillingPlanProcedure,
			opts...,
		),
		createRateDefinition: connect_go.NewClient[v1alpha3.CreateRateDefinitionRequest, v1alpha3.CreateRateDefinitionResponse](
			httpClient,
			baseURL+BillingServiceCreateRateDefinitionProcedure,
			opts...,
		),
		deleteRateDefinition: connect_go.NewClient[v1alpha3.DeleteRateDefinitionRequest, v1alpha3.DeleteRateDefinitionResponse](
			httpClient,
			baseURL+BillingServiceDeleteRateDefinitionProcedure,
			opts...,
		),
		getRateDefinition: connect_go.NewClient[v1alpha3.GetRateDefinitionRequest, v1alpha3.GetRateDefinitionResponse](
			httpClient,
			baseURL+BillingServiceGetRateDefinitionProcedure,
			opts...,
		),
		listRateDefinitions: connect_go.NewClient[v1alpha3.ListRateDefinitionsRequest, v1alpha3.ListRateDefinitionsResponse](
			httpClient,
			baseURL+BillingServiceListRateDefinitionsProcedure,
			opts...,
		),
		updateRateDefinition: connect_go.NewClient[v1alpha3.UpdateRateDefinitionRequest, v1alpha3.UpdateRateDefinitionResponse](
			httpClient,
			baseURL+BillingServiceUpdateRateDefinitionProcedure,
			opts...,
		),
		createDefaultRateDefinition: connect_go.NewClient[v1alpha3.CreateDefaultRateDefinitionRequest, v1alpha3.CreateDefaultRateDefinitionResponse](
			httpClient,
			baseURL+BillingServiceCreateDefaultRateDefinitionProcedure,
			opts...,
		),
		deleteDefaultRateDefinition: connect_go.NewClient[v1alpha3.DeleteDefaultRateDefinitionRequest, v1alpha3.DeleteDefaultRateDefinitionResponse](
			httpClient,
			baseURL+BillingServiceDeleteDefaultRateDefinitionProcedure,
			opts...,
		),
		getDefaultRateDefinition: connect_go.NewClient[v1alpha3.GetDefaultRateDefinitionRequest, v1alpha3.GetDefaultRateDefinitionResponse](
			httpClient,
			baseURL+BillingServiceGetDefaultRateDefinitionProcedure,
			opts...,
		),
		listDefaultRateDefinitions: connect_go.NewClient[v1alpha3.ListDefaultRateDefinitionsRequest, v1alpha3.ListDefaultRateDefinitionsResponse](
			httpClient,
			baseURL+BillingServiceListDefaultRateDefinitionsProcedure,
			opts...,
		),
		updateDefaultRateDefinition: connect_go.NewClient[v1alpha3.UpdateDefaultRateDefinitionRequest, v1alpha3.UpdateDefaultRateDefinitionResponse](
			httpClient,
			baseURL+BillingServiceUpdateDefaultRateDefinitionProcedure,
			opts...,
		),
		exportInvoice: connect_go.NewClient[v1alpha3.ExportInvoiceRequest, v1alpha3.ExportInvoiceResponse](
			httpClient,
			baseURL+BillingServiceExportInvoiceProcedure,
			opts...,
		),
	}
}

// billingServiceClient implements BillingServiceClient.
type billingServiceClient struct {
	listProducts                 *connect_go.Client[v1alpha3.ListProductsRequest, v1alpha3.ListProductsResponse]
	applyBillingPlanDraft        *connect_go.Client[v1alpha3.ApplyBillingPlanDraftRequest, v1alpha3.ApplyBillingPlanDraftResponse]
	createBillingPlan            *connect_go.Client[v1alpha3.CreateBillingPlanRequest, v1alpha3.CreateBillingPlanResponse]
	deleteBillingPlan            *connect_go.Client[v1alpha3.DeleteBillingPlanRequest, v1alpha3.DeleteBillingPlanResponse]
	getBillingPlan               *connect_go.Client[v1alpha3.GetBillingPlanRequest, v1alpha3.GetBillingPlanResponse]
	listBillingPlans             *connect_go.Client[v1alpha3.ListBillingPlansRequest, v1alpha3.ListBillingPlansResponse]
	updateBillingPlan            *connect_go.Client[v1alpha3.UpdateBillingPlanRequest, v1alpha3.UpdateBillingPlanResponse]
	applyDefaultBillingPlanDraft *connect_go.Client[v1alpha3.ApplyDefaultBillingPlanDraftRequest, v1alpha3.ApplyDefaultBillingPlanDraftResponse]
	createDefaultBillingPlan     *connect_go.Client[v1alpha3.CreateDefaultBillingPlanRequest, v1alpha3.CreateDefaultBillingPlanResponse]
	deleteDefaultBillingPlan     *connect_go.Client[v1alpha3.DeleteDefaultBillingPlanRequest, v1alpha3.DeleteDefaultBillingPlanResponse]
	getDefaultBillingPlan        *connect_go.Client[v1alpha3.GetDefaultBillingPlanRequest, v1alpha3.GetDefaultBillingPlanResponse]
	listDefaultBillingPlans      *connect_go.Client[v1alpha3.ListDefaultBillingPlansRequest, v1alpha3.ListDefaultBillingPlansResponse]
	updateDefaultBillingPlan     *connect_go.Client[v1alpha3.UpdateDefaultBillingPlanRequest, v1alpha3.UpdateDefaultBillingPlanResponse]
	createRateDefinition         *connect_go.Client[v1alpha3.CreateRateDefinitionRequest, v1alpha3.CreateRateDefinitionResponse]
	deleteRateDefinition         *connect_go.Client[v1alpha3.DeleteRateDefinitionRequest, v1alpha3.DeleteRateDefinitionResponse]
	getRateDefinition            *connect_go.Client[v1alpha3.GetRateDefinitionRequest, v1alpha3.GetRateDefinitionResponse]
	listRateDefinitions          *connect_go.Client[v1alpha3.ListRateDefinitionsRequest, v1alpha3.ListRateDefinitionsResponse]
	updateRateDefinition         *connect_go.Client[v1alpha3.UpdateRateDefinitionRequest, v1alpha3.UpdateRateDefinitionResponse]
	createDefaultRateDefinition  *connect_go.Client[v1alpha3.CreateDefaultRateDefinitionRequest, v1alpha3.CreateDefaultRateDefinitionResponse]
	deleteDefaultRateDefinition  *connect_go.Client[v1alpha3.DeleteDefaultRateDefinitionRequest, v1alpha3.DeleteDefaultRateDefinitionResponse]
	getDefaultRateDefinition     *connect_go.Client[v1alpha3.GetDefaultRateDefinitionRequest, v1alpha3.GetDefaultRateDefinitionResponse]
	listDefaultRateDefinitions   *connect_go.Client[v1alpha3.ListDefaultRateDefinitionsRequest, v1alpha3.ListDefaultRateDefinitionsResponse]
	updateDefaultRateDefinition  *connect_go.Client[v1alpha3.UpdateDefaultRateDefinitionRequest, v1alpha3.UpdateDefaultRateDefinitionResponse]
	exportInvoice                *connect_go.Client[v1alpha3.ExportInvoiceRequest, v1alpha3.ExportInvoiceResponse]
}

// ListProducts calls services.billing.v1alpha3.BillingService.ListProducts.
func (c *billingServiceClient) ListProducts(ctx context.Context, req *connect_go.Request[v1alpha3.ListProductsRequest]) (*connect_go.Response[v1alpha3.ListProductsResponse], error) {
	return c.listProducts.CallUnary(ctx, req)
}

// ApplyBillingPlanDraft calls services.billing.v1alpha3.BillingService.ApplyBillingPlanDraft.
func (c *billingServiceClient) ApplyBillingPlanDraft(ctx context.Context, req *connect_go.Request[v1alpha3.ApplyBillingPlanDraftRequest]) (*connect_go.Response[v1alpha3.ApplyBillingPlanDraftResponse], error) {
	return c.applyBillingPlanDraft.CallUnary(ctx, req)
}

// CreateBillingPlan calls services.billing.v1alpha3.BillingService.CreateBillingPlan.
func (c *billingServiceClient) CreateBillingPlan(ctx context.Context, req *connect_go.Request[v1alpha3.CreateBillingPlanRequest]) (*connect_go.Response[v1alpha3.CreateBillingPlanResponse], error) {
	return c.createBillingPlan.CallUnary(ctx, req)
}

// DeleteBillingPlan calls services.billing.v1alpha3.BillingService.DeleteBillingPlan.
func (c *billingServiceClient) DeleteBillingPlan(ctx context.Context, req *connect_go.Request[v1alpha3.DeleteBillingPlanRequest]) (*connect_go.Response[v1alpha3.DeleteBillingPlanResponse], error) {
	return c.deleteBillingPlan.CallUnary(ctx, req)
}

// GetBillingPlan calls services.billing.v1alpha3.BillingService.GetBillingPlan.
func (c *billingServiceClient) GetBillingPlan(ctx context.Context, req *connect_go.Request[v1alpha3.GetBillingPlanRequest]) (*connect_go.Response[v1alpha3.GetBillingPlanResponse], error) {
	return c.getBillingPlan.CallUnary(ctx, req)
}

// ListBillingPlans calls services.billing.v1alpha3.BillingService.ListBillingPlans.
func (c *billingServiceClient) ListBillingPlans(ctx context.Context, req *connect_go.Request[v1alpha3.ListBillingPlansRequest]) (*connect_go.Response[v1alpha3.ListBillingPlansResponse], error) {
	return c.listBillingPlans.CallUnary(ctx, req)
}

// UpdateBillingPlan calls services.billing.v1alpha3.BillingService.UpdateBillingPlan.
func (c *billingServiceClient) UpdateBillingPlan(ctx context.Context, req *connect_go.Request[v1alpha3.UpdateBillingPlanRequest]) (*connect_go.Response[v1alpha3.UpdateBillingPlanResponse], error) {
	return c.updateBillingPlan.CallUnary(ctx, req)
}

// ApplyDefaultBillingPlanDraft calls
// services.billing.v1alpha3.BillingService.ApplyDefaultBillingPlanDraft.
func (c *billingServiceClient) ApplyDefaultBillingPlanDraft(ctx context.Context, req *connect_go.Request[v1alpha3.ApplyDefaultBillingPlanDraftRequest]) (*connect_go.Response[v1alpha3.ApplyDefaultBillingPlanDraftResponse], error) {
	return c.applyDefaultBillingPlanDraft.CallUnary(ctx, req)
}

// CreateDefaultBillingPlan calls services.billing.v1alpha3.BillingService.CreateDefaultBillingPlan.
func (c *billingServiceClient) CreateDefaultBillingPlan(ctx context.Context, req *connect_go.Request[v1alpha3.CreateDefaultBillingPlanRequest]) (*connect_go.Response[v1alpha3.CreateDefaultBillingPlanResponse], error) {
	return c.createDefaultBillingPlan.CallUnary(ctx, req)
}

// DeleteDefaultBillingPlan calls services.billing.v1alpha3.BillingService.DeleteDefaultBillingPlan.
func (c *billingServiceClient) DeleteDefaultBillingPlan(ctx context.Context, req *connect_go.Request[v1alpha3.DeleteDefaultBillingPlanRequest]) (*connect_go.Response[v1alpha3.DeleteDefaultBillingPlanResponse], error) {
	return c.deleteDefaultBillingPlan.CallUnary(ctx, req)
}

// GetDefaultBillingPlan calls services.billing.v1alpha3.BillingService.GetDefaultBillingPlan.
func (c *billingServiceClient) GetDefaultBillingPlan(ctx context.Context, req *connect_go.Request[v1alpha3.GetDefaultBillingPlanRequest]) (*connect_go.Response[v1alpha3.GetDefaultBillingPlanResponse], error) {
	return c.getDefaultBillingPlan.CallUnary(ctx, req)
}

// ListDefaultBillingPlans calls services.billing.v1alpha3.BillingService.ListDefaultBillingPlans.
func (c *billingServiceClient) ListDefaultBillingPlans(ctx context.Context, req *connect_go.Request[v1alpha3.ListDefaultBillingPlansRequest]) (*connect_go.Response[v1alpha3.ListDefaultBillingPlansResponse], error) {
	return c.listDefaultBillingPlans.CallUnary(ctx, req)
}

// UpdateDefaultBillingPlan calls services.billing.v1alpha3.BillingService.UpdateDefaultBillingPlan.
func (c *billingServiceClient) UpdateDefaultBillingPlan(ctx context.Context, req *connect_go.Request[v1alpha3.UpdateDefaultBillingPlanRequest]) (*connect_go.Response[v1alpha3.UpdateDefaultBillingPlanResponse], error) {
	return c.updateDefaultBillingPlan.CallUnary(ctx, req)
}

// CreateRateDefinition calls services.billing.v1alpha3.BillingService.CreateRateDefinition.
func (c *billingServiceClient) CreateRateDefinition(ctx context.Context, req *connect_go.Request[v1alpha3.CreateRateDefinitionRequest]) (*connect_go.Response[v1alpha3.CreateRateDefinitionResponse], error) {
	return c.createRateDefinition.CallUnary(ctx, req)
}

// DeleteRateDefinition calls services.billing.v1alpha3.BillingService.DeleteRateDefinition.
func (c *billingServiceClient) DeleteRateDefinition(ctx context.Context, req *connect_go.Request[v1alpha3.DeleteRateDefinitionRequest]) (*connect_go.Response[v1alpha3.DeleteRateDefinitionResponse], error) {
	return c.deleteRateDefinition.CallUnary(ctx, req)
}

// GetRateDefinition calls services.billing.v1alpha3.BillingService.GetRateDefinition.
func (c *billingServiceClient) GetRateDefinition(ctx context.Context, req *connect_go.Request[v1alpha3.GetRateDefinitionRequest]) (*connect_go.Response[v1alpha3.GetRateDefinitionResponse], error) {
	return c.getRateDefinition.CallUnary(ctx, req)
}

// ListRateDefinitions calls services.billing.v1alpha3.BillingService.ListRateDefinitions.
func (c *billingServiceClient) ListRateDefinitions(ctx context.Context, req *connect_go.Request[v1alpha3.ListRateDefinitionsRequest]) (*connect_go.Response[v1alpha3.ListRateDefinitionsResponse], error) {
	return c.listRateDefinitions.CallUnary(ctx, req)
}

// UpdateRateDefinition calls services.billing.v1alpha3.BillingService.UpdateRateDefinition.
func (c *billingServiceClient) UpdateRateDefinition(ctx context.Context, req *connect_go.Request[v1alpha3.UpdateRateDefinitionRequest]) (*connect_go.Response[v1alpha3.UpdateRateDefinitionResponse], error) {
	return c.updateRateDefinition.CallUnary(ctx, req)
}

// CreateDefaultRateDefinition calls
// services.billing.v1alpha3.BillingService.CreateDefaultRateDefinition.
func (c *billingServiceClient) CreateDefaultRateDefinition(ctx context.Context, req *connect_go.Request[v1alpha3.CreateDefaultRateDefinitionRequest]) (*connect_go.Response[v1alpha3.CreateDefaultRateDefinitionResponse], error) {
	return c.createDefaultRateDefinition.CallUnary(ctx, req)
}

// DeleteDefaultRateDefinition calls
// services.billing.v1alpha3.BillingService.DeleteDefaultRateDefinition.
func (c *billingServiceClient) DeleteDefaultRateDefinition(ctx context.Context, req *connect_go.Request[v1alpha3.DeleteDefaultRateDefinitionRequest]) (*connect_go.Response[v1alpha3.DeleteDefaultRateDefinitionResponse], error) {
	return c.deleteDefaultRateDefinition.CallUnary(ctx, req)
}

// GetDefaultRateDefinition calls services.billing.v1alpha3.BillingService.GetDefaultRateDefinition.
func (c *billingServiceClient) GetDefaultRateDefinition(ctx context.Context, req *connect_go.Request[v1alpha3.GetDefaultRateDefinitionRequest]) (*connect_go.Response[v1alpha3.GetDefaultRateDefinitionResponse], error) {
	return c.getDefaultRateDefinition.CallUnary(ctx, req)
}

// ListDefaultRateDefinitions calls
// services.billing.v1alpha3.BillingService.ListDefaultRateDefinitions.
func (c *billingServiceClient) ListDefaultRateDefinitions(ctx context.Context, req *connect_go.Request[v1alpha3.ListDefaultRateDefinitionsRequest]) (*connect_go.Response[v1alpha3.ListDefaultRateDefinitionsResponse], error) {
	return c.listDefaultRateDefinitions.CallUnary(ctx, req)
}

// UpdateDefaultRateDefinition calls
// services.billing.v1alpha3.BillingService.UpdateDefaultRateDefinition.
func (c *billingServiceClient) UpdateDefaultRateDefinition(ctx context.Context, req *connect_go.Request[v1alpha3.UpdateDefaultRateDefinitionRequest]) (*connect_go.Response[v1alpha3.UpdateDefaultRateDefinitionResponse], error) {
	return c.updateDefaultRateDefinition.CallUnary(ctx, req)
}

// ExportInvoice calls services.billing.v1alpha3.BillingService.ExportInvoice.
func (c *billingServiceClient) ExportInvoice(ctx context.Context, req *connect_go.Request[v1alpha3.ExportInvoiceRequest]) (*connect_go.Response[v1alpha3.ExportInvoiceResponse], error) {
	return c.exportInvoice.CallUnary(ctx, req)
}

// BillingServiceHandler is an implementation of the services.billing.v1alpha3.BillingService
// service.
type BillingServiceHandler interface {
	// Lists the products.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	ListProducts(context.Context, *connect_go.Request[v1alpha3.ListProductsRequest]) (*connect_go.Response[v1alpha3.ListProductsResponse], error)
	// Applies a draft billing plan.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The draft billing plan was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	ApplyBillingPlanDraft(context.Context, *connect_go.Request[v1alpha3.ApplyBillingPlanDraftRequest]) (*connect_go.Response[v1alpha3.ApplyBillingPlanDraftResponse], error)
	// Creates a new billing plan.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	CreateBillingPlan(context.Context, *connect_go.Request[v1alpha3.CreateBillingPlanRequest]) (*connect_go.Response[v1alpha3.CreateBillingPlanResponse], error)
	// Deletes a billing plan.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The billing plan was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	DeleteBillingPlan(context.Context, *connect_go.Request[v1alpha3.DeleteBillingPlanRequest]) (*connect_go.Response[v1alpha3.DeleteBillingPlanResponse], error)
	// Gets a billing plan.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The billing plan was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	GetBillingPlan(context.Context, *connect_go.Request[v1alpha3.GetBillingPlanRequest]) (*connect_go.Response[v1alpha3.GetBillingPlanResponse], error)
	// Lists billing plans.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	ListBillingPlans(context.Context, *connect_go.Request[v1alpha3.ListBillingPlansRequest]) (*connect_go.Response[v1alpha3.ListBillingPlansResponse], error)
	// Updates a billing plan.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The billing plan was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	UpdateBillingPlan(context.Context, *connect_go.Request[v1alpha3.UpdateBillingPlanRequest]) (*connect_go.Response[v1alpha3.UpdateBillingPlanResponse], error)
	// Applies a default draft billing plan.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The draft billing plan was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	ApplyDefaultBillingPlanDraft(context.Context, *connect_go.Request[v1alpha3.ApplyDefaultBillingPlanDraftRequest]) (*connect_go.Response[v1alpha3.ApplyDefaultBillingPlanDraftResponse], error)
	// Creates a new default billing plan.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	CreateDefaultBillingPlan(context.Context, *connect_go.Request[v1alpha3.CreateDefaultBillingPlanRequest]) (*connect_go.Response[v1alpha3.CreateDefaultBillingPlanResponse], error)
	// Deletes a default billing plan.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The billing plan was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	DeleteDefaultBillingPlan(context.Context, *connect_go.Request[v1alpha3.DeleteDefaultBillingPlanRequest]) (*connect_go.Response[v1alpha3.DeleteDefaultBillingPlanResponse], error)
	// Gets a default billing plan.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The default billing plan was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	GetDefaultBillingPlan(context.Context, *connect_go.Request[v1alpha3.GetDefaultBillingPlanRequest]) (*connect_go.Response[v1alpha3.GetDefaultBillingPlanResponse], error)
	// Lists default billing plans.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	ListDefaultBillingPlans(context.Context, *connect_go.Request[v1alpha3.ListDefaultBillingPlansRequest]) (*connect_go.Response[v1alpha3.ListDefaultBillingPlansResponse], error)
	// Updates a default billing plan.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The billing plan was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	UpdateDefaultBillingPlan(context.Context, *connect_go.Request[v1alpha3.UpdateDefaultBillingPlanRequest]) (*connect_go.Response[v1alpha3.UpdateDefaultBillingPlanResponse], error)
	// Creates a new rate definition.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The billing plan was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	CreateRateDefinition(context.Context, *connect_go.Request[v1alpha3.CreateRateDefinitionRequest]) (*connect_go.Response[v1alpha3.CreateRateDefinitionResponse], error)
	// Deletes a rate definition.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The rate definition was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	DeleteRateDefinition(context.Context, *connect_go.Request[v1alpha3.DeleteRateDefinitionRequest]) (*connect_go.Response[v1alpha3.DeleteRateDefinitionResponse], error)
	// Gets a rate definition.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The rate definition was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	GetRateDefinition(context.Context, *connect_go.Request[v1alpha3.GetRateDefinitionRequest]) (*connect_go.Response[v1alpha3.GetRateDefinitionResponse], error)
	// Lists rate definitions.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The rate definition was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	ListRateDefinitions(context.Context, *connect_go.Request[v1alpha3.ListRateDefinitionsRequest]) (*connect_go.Response[v1alpha3.ListRateDefinitionsResponse], error)
	// Updates a rate definition.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The rate definition was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	UpdateRateDefinition(context.Context, *connect_go.Request[v1alpha3.UpdateRateDefinitionRequest]) (*connect_go.Response[v1alpha3.UpdateRateDefinitionResponse], error)
	// Creates a new rate definition for a default plan.
	//   - Creating a rate definition on an existing SKU: the sku_id must be provided.
	//   - Creating a rate definition on a new SKU: the product must be provided and the sku_id omitted.
	//
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The billing plan was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	CreateDefaultRateDefinition(context.Context, *connect_go.Request[v1alpha3.CreateDefaultRateDefinitionRequest]) (*connect_go.Response[v1alpha3.CreateDefaultRateDefinitionResponse], error)
	// Deletes a rate definition for a default billing plan.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The rate definition was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	DeleteDefaultRateDefinition(context.Context, *connect_go.Request[v1alpha3.DeleteDefaultRateDefinitionRequest]) (*connect_go.Response[v1alpha3.DeleteDefaultRateDefinitionResponse], error)
	// Gets a rate definition for a default billing plan.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The rate definition was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	GetDefaultRateDefinition(context.Context, *connect_go.Request[v1alpha3.GetDefaultRateDefinitionRequest]) (*connect_go.Response[v1alpha3.GetDefaultRateDefinitionResponse], error)
	// Lists rate definitions for a default billing plan.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The rate definition was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	ListDefaultRateDefinitions(context.Context, *connect_go.Request[v1alpha3.ListDefaultRateDefinitionsRequest]) (*connect_go.Response[v1alpha3.ListDefaultRateDefinitionsResponse], error)
	// Updates a rate definition for a default billing plan.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The rate definition was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	UpdateDefaultRateDefinition(context.Context, *connect_go.Request[v1alpha3.UpdateDefaultRateDefinitionRequest]) (*connect_go.Response[v1alpha3.UpdateDefaultRateDefinitionResponse], error)
	// Exports an invoice.
	// Required permissions:
	//
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable. Likely a transient issue with a downstream service.
	ExportInvoice(context.Context, *connect_go.Request[v1alpha3.ExportInvoiceRequest]) (*connect_go.Response[v1alpha3.ExportInvoiceResponse], error)
}

// NewBillingServiceHandler builds an HTTP handler from the service implementation. It returns the
// path on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewBillingServiceHandler(svc BillingServiceHandler, opts ...connect_go.HandlerOption) (string, http.Handler) {
	billingServiceListProductsHandler := connect_go.NewUnaryHandler(
		BillingServiceListProductsProcedure,
		svc.ListProducts,
		opts...,
	)
	billingServiceApplyBillingPlanDraftHandler := connect_go.NewUnaryHandler(
		BillingServiceApplyBillingPlanDraftProcedure,
		svc.ApplyBillingPlanDraft,
		opts...,
	)
	billingServiceCreateBillingPlanHandler := connect_go.NewUnaryHandler(
		BillingServiceCreateBillingPlanProcedure,
		svc.CreateBillingPlan,
		opts...,
	)
	billingServiceDeleteBillingPlanHandler := connect_go.NewUnaryHandler(
		BillingServiceDeleteBillingPlanProcedure,
		svc.DeleteBillingPlan,
		opts...,
	)
	billingServiceGetBillingPlanHandler := connect_go.NewUnaryHandler(
		BillingServiceGetBillingPlanProcedure,
		svc.GetBillingPlan,
		opts...,
	)
	billingServiceListBillingPlansHandler := connect_go.NewUnaryHandler(
		BillingServiceListBillingPlansProcedure,
		svc.ListBillingPlans,
		opts...,
	)
	billingServiceUpdateBillingPlanHandler := connect_go.NewUnaryHandler(
		BillingServiceUpdateBillingPlanProcedure,
		svc.UpdateBillingPlan,
		opts...,
	)
	billingServiceApplyDefaultBillingPlanDraftHandler := connect_go.NewUnaryHandler(
		BillingServiceApplyDefaultBillingPlanDraftProcedure,
		svc.ApplyDefaultBillingPlanDraft,
		opts...,
	)
	billingServiceCreateDefaultBillingPlanHandler := connect_go.NewUnaryHandler(
		BillingServiceCreateDefaultBillingPlanProcedure,
		svc.CreateDefaultBillingPlan,
		opts...,
	)
	billingServiceDeleteDefaultBillingPlanHandler := connect_go.NewUnaryHandler(
		BillingServiceDeleteDefaultBillingPlanProcedure,
		svc.DeleteDefaultBillingPlan,
		opts...,
	)
	billingServiceGetDefaultBillingPlanHandler := connect_go.NewUnaryHandler(
		BillingServiceGetDefaultBillingPlanProcedure,
		svc.GetDefaultBillingPlan,
		opts...,
	)
	billingServiceListDefaultBillingPlansHandler := connect_go.NewUnaryHandler(
		BillingServiceListDefaultBillingPlansProcedure,
		svc.ListDefaultBillingPlans,
		opts...,
	)
	billingServiceUpdateDefaultBillingPlanHandler := connect_go.NewUnaryHandler(
		BillingServiceUpdateDefaultBillingPlanProcedure,
		svc.UpdateDefaultBillingPlan,
		opts...,
	)
	billingServiceCreateRateDefinitionHandler := connect_go.NewUnaryHandler(
		BillingServiceCreateRateDefinitionProcedure,
		svc.CreateRateDefinition,
		opts...,
	)
	billingServiceDeleteRateDefinitionHandler := connect_go.NewUnaryHandler(
		BillingServiceDeleteRateDefinitionProcedure,
		svc.DeleteRateDefinition,
		opts...,
	)
	billingServiceGetRateDefinitionHandler := connect_go.NewUnaryHandler(
		BillingServiceGetRateDefinitionProcedure,
		svc.GetRateDefinition,
		opts...,
	)
	billingServiceListRateDefinitionsHandler := connect_go.NewUnaryHandler(
		BillingServiceListRateDefinitionsProcedure,
		svc.ListRateDefinitions,
		opts...,
	)
	billingServiceUpdateRateDefinitionHandler := connect_go.NewUnaryHandler(
		BillingServiceUpdateRateDefinitionProcedure,
		svc.UpdateRateDefinition,
		opts...,
	)
	billingServiceCreateDefaultRateDefinitionHandler := connect_go.NewUnaryHandler(
		BillingServiceCreateDefaultRateDefinitionProcedure,
		svc.CreateDefaultRateDefinition,
		opts...,
	)
	billingServiceDeleteDefaultRateDefinitionHandler := connect_go.NewUnaryHandler(
		BillingServiceDeleteDefaultRateDefinitionProcedure,
		svc.DeleteDefaultRateDefinition,
		opts...,
	)
	billingServiceGetDefaultRateDefinitionHandler := connect_go.NewUnaryHandler(
		BillingServiceGetDefaultRateDefinitionProcedure,
		svc.GetDefaultRateDefinition,
		opts...,
	)
	billingServiceListDefaultRateDefinitionsHandler := connect_go.NewUnaryHandler(
		BillingServiceListDefaultRateDefinitionsProcedure,
		svc.ListDefaultRateDefinitions,
		opts...,
	)
	billingServiceUpdateDefaultRateDefinitionHandler := connect_go.NewUnaryHandler(
		BillingServiceUpdateDefaultRateDefinitionProcedure,
		svc.UpdateDefaultRateDefinition,
		opts...,
	)
	billingServiceExportInvoiceHandler := connect_go.NewUnaryHandler(
		BillingServiceExportInvoiceProcedure,
		svc.ExportInvoice,
		opts...,
	)
	return "/services.billing.v1alpha3.BillingService/", http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		switch r.URL.Path {
		case BillingServiceListProductsProcedure:
			billingServiceListProductsHandler.ServeHTTP(w, r)
		case BillingServiceApplyBillingPlanDraftProcedure:
			billingServiceApplyBillingPlanDraftHandler.ServeHTTP(w, r)
		case BillingServiceCreateBillingPlanProcedure:
			billingServiceCreateBillingPlanHandler.ServeHTTP(w, r)
		case BillingServiceDeleteBillingPlanProcedure:
			billingServiceDeleteBillingPlanHandler.ServeHTTP(w, r)
		case BillingServiceGetBillingPlanProcedure:
			billingServiceGetBillingPlanHandler.ServeHTTP(w, r)
		case BillingServiceListBillingPlansProcedure:
			billingServiceListBillingPlansHandler.ServeHTTP(w, r)
		case BillingServiceUpdateBillingPlanProcedure:
			billingServiceUpdateBillingPlanHandler.ServeHTTP(w, r)
		case BillingServiceApplyDefaultBillingPlanDraftProcedure:
			billingServiceApplyDefaultBillingPlanDraftHandler.ServeHTTP(w, r)
		case BillingServiceCreateDefaultBillingPlanProcedure:
			billingServiceCreateDefaultBillingPlanHandler.ServeHTTP(w, r)
		case BillingServiceDeleteDefaultBillingPlanProcedure:
			billingServiceDeleteDefaultBillingPlanHandler.ServeHTTP(w, r)
		case BillingServiceGetDefaultBillingPlanProcedure:
			billingServiceGetDefaultBillingPlanHandler.ServeHTTP(w, r)
		case BillingServiceListDefaultBillingPlansProcedure:
			billingServiceListDefaultBillingPlansHandler.ServeHTTP(w, r)
		case BillingServiceUpdateDefaultBillingPlanProcedure:
			billingServiceUpdateDefaultBillingPlanHandler.ServeHTTP(w, r)
		case BillingServiceCreateRateDefinitionProcedure:
			billingServiceCreateRateDefinitionHandler.ServeHTTP(w, r)
		case BillingServiceDeleteRateDefinitionProcedure:
			billingServiceDeleteRateDefinitionHandler.ServeHTTP(w, r)
		case BillingServiceGetRateDefinitionProcedure:
			billingServiceGetRateDefinitionHandler.ServeHTTP(w, r)
		case BillingServiceListRateDefinitionsProcedure:
			billingServiceListRateDefinitionsHandler.ServeHTTP(w, r)
		case BillingServiceUpdateRateDefinitionProcedure:
			billingServiceUpdateRateDefinitionHandler.ServeHTTP(w, r)
		case BillingServiceCreateDefaultRateDefinitionProcedure:
			billingServiceCreateDefaultRateDefinitionHandler.ServeHTTP(w, r)
		case BillingServiceDeleteDefaultRateDefinitionProcedure:
			billingServiceDeleteDefaultRateDefinitionHandler.ServeHTTP(w, r)
		case BillingServiceGetDefaultRateDefinitionProcedure:
			billingServiceGetDefaultRateDefinitionHandler.ServeHTTP(w, r)
		case BillingServiceListDefaultRateDefinitionsProcedure:
			billingServiceListDefaultRateDefinitionsHandler.ServeHTTP(w, r)
		case BillingServiceUpdateDefaultRateDefinitionProcedure:
			billingServiceUpdateDefaultRateDefinitionHandler.ServeHTTP(w, r)
		case BillingServiceExportInvoiceProcedure:
			billingServiceExportInvoiceHandler.ServeHTTP(w, r)
		default:
			http.NotFound(w, r)
		}
	})
}

// UnimplementedBillingServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedBillingServiceHandler struct{}

func (UnimplementedBillingServiceHandler) ListProducts(context.Context, *connect_go.Request[v1alpha3.ListProductsRequest]) (*connect_go.Response[v1alpha3.ListProductsResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha3.BillingService.ListProducts is not implemented"))
}

func (UnimplementedBillingServiceHandler) ApplyBillingPlanDraft(context.Context, *connect_go.Request[v1alpha3.ApplyBillingPlanDraftRequest]) (*connect_go.Response[v1alpha3.ApplyBillingPlanDraftResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha3.BillingService.ApplyBillingPlanDraft is not implemented"))
}

func (UnimplementedBillingServiceHandler) CreateBillingPlan(context.Context, *connect_go.Request[v1alpha3.CreateBillingPlanRequest]) (*connect_go.Response[v1alpha3.CreateBillingPlanResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha3.BillingService.CreateBillingPlan is not implemented"))
}

func (UnimplementedBillingServiceHandler) DeleteBillingPlan(context.Context, *connect_go.Request[v1alpha3.DeleteBillingPlanRequest]) (*connect_go.Response[v1alpha3.DeleteBillingPlanResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha3.BillingService.DeleteBillingPlan is not implemented"))
}

func (UnimplementedBillingServiceHandler) GetBillingPlan(context.Context, *connect_go.Request[v1alpha3.GetBillingPlanRequest]) (*connect_go.Response[v1alpha3.GetBillingPlanResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha3.BillingService.GetBillingPlan is not implemented"))
}

func (UnimplementedBillingServiceHandler) ListBillingPlans(context.Context, *connect_go.Request[v1alpha3.ListBillingPlansRequest]) (*connect_go.Response[v1alpha3.ListBillingPlansResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha3.BillingService.ListBillingPlans is not implemented"))
}

func (UnimplementedBillingServiceHandler) UpdateBillingPlan(context.Context, *connect_go.Request[v1alpha3.UpdateBillingPlanRequest]) (*connect_go.Response[v1alpha3.UpdateBillingPlanResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha3.BillingService.UpdateBillingPlan is not implemented"))
}

func (UnimplementedBillingServiceHandler) ApplyDefaultBillingPlanDraft(context.Context, *connect_go.Request[v1alpha3.ApplyDefaultBillingPlanDraftRequest]) (*connect_go.Response[v1alpha3.ApplyDefaultBillingPlanDraftResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha3.BillingService.ApplyDefaultBillingPlanDraft is not implemented"))
}

func (UnimplementedBillingServiceHandler) CreateDefaultBillingPlan(context.Context, *connect_go.Request[v1alpha3.CreateDefaultBillingPlanRequest]) (*connect_go.Response[v1alpha3.CreateDefaultBillingPlanResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha3.BillingService.CreateDefaultBillingPlan is not implemented"))
}

func (UnimplementedBillingServiceHandler) DeleteDefaultBillingPlan(context.Context, *connect_go.Request[v1alpha3.DeleteDefaultBillingPlanRequest]) (*connect_go.Response[v1alpha3.DeleteDefaultBillingPlanResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha3.BillingService.DeleteDefaultBillingPlan is not implemented"))
}

func (UnimplementedBillingServiceHandler) GetDefaultBillingPlan(context.Context, *connect_go.Request[v1alpha3.GetDefaultBillingPlanRequest]) (*connect_go.Response[v1alpha3.GetDefaultBillingPlanResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha3.BillingService.GetDefaultBillingPlan is not implemented"))
}

func (UnimplementedBillingServiceHandler) ListDefaultBillingPlans(context.Context, *connect_go.Request[v1alpha3.ListDefaultBillingPlansRequest]) (*connect_go.Response[v1alpha3.ListDefaultBillingPlansResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha3.BillingService.ListDefaultBillingPlans is not implemented"))
}

func (UnimplementedBillingServiceHandler) UpdateDefaultBillingPlan(context.Context, *connect_go.Request[v1alpha3.UpdateDefaultBillingPlanRequest]) (*connect_go.Response[v1alpha3.UpdateDefaultBillingPlanResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha3.BillingService.UpdateDefaultBillingPlan is not implemented"))
}

func (UnimplementedBillingServiceHandler) CreateRateDefinition(context.Context, *connect_go.Request[v1alpha3.CreateRateDefinitionRequest]) (*connect_go.Response[v1alpha3.CreateRateDefinitionResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha3.BillingService.CreateRateDefinition is not implemented"))
}

func (UnimplementedBillingServiceHandler) DeleteRateDefinition(context.Context, *connect_go.Request[v1alpha3.DeleteRateDefinitionRequest]) (*connect_go.Response[v1alpha3.DeleteRateDefinitionResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha3.BillingService.DeleteRateDefinition is not implemented"))
}

func (UnimplementedBillingServiceHandler) GetRateDefinition(context.Context, *connect_go.Request[v1alpha3.GetRateDefinitionRequest]) (*connect_go.Response[v1alpha3.GetRateDefinitionResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha3.BillingService.GetRateDefinition is not implemented"))
}

func (UnimplementedBillingServiceHandler) ListRateDefinitions(context.Context, *connect_go.Request[v1alpha3.ListRateDefinitionsRequest]) (*connect_go.Response[v1alpha3.ListRateDefinitionsResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha3.BillingService.ListRateDefinitions is not implemented"))
}

func (UnimplementedBillingServiceHandler) UpdateRateDefinition(context.Context, *connect_go.Request[v1alpha3.UpdateRateDefinitionRequest]) (*connect_go.Response[v1alpha3.UpdateRateDefinitionResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha3.BillingService.UpdateRateDefinition is not implemented"))
}

func (UnimplementedBillingServiceHandler) CreateDefaultRateDefinition(context.Context, *connect_go.Request[v1alpha3.CreateDefaultRateDefinitionRequest]) (*connect_go.Response[v1alpha3.CreateDefaultRateDefinitionResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha3.BillingService.CreateDefaultRateDefinition is not implemented"))
}

func (UnimplementedBillingServiceHandler) DeleteDefaultRateDefinition(context.Context, *connect_go.Request[v1alpha3.DeleteDefaultRateDefinitionRequest]) (*connect_go.Response[v1alpha3.DeleteDefaultRateDefinitionResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha3.BillingService.DeleteDefaultRateDefinition is not implemented"))
}

func (UnimplementedBillingServiceHandler) GetDefaultRateDefinition(context.Context, *connect_go.Request[v1alpha3.GetDefaultRateDefinitionRequest]) (*connect_go.Response[v1alpha3.GetDefaultRateDefinitionResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha3.BillingService.GetDefaultRateDefinition is not implemented"))
}

func (UnimplementedBillingServiceHandler) ListDefaultRateDefinitions(context.Context, *connect_go.Request[v1alpha3.ListDefaultRateDefinitionsRequest]) (*connect_go.Response[v1alpha3.ListDefaultRateDefinitionsResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha3.BillingService.ListDefaultRateDefinitions is not implemented"))
}

func (UnimplementedBillingServiceHandler) UpdateDefaultRateDefinition(context.Context, *connect_go.Request[v1alpha3.UpdateDefaultRateDefinitionRequest]) (*connect_go.Response[v1alpha3.UpdateDefaultRateDefinitionResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha3.BillingService.UpdateDefaultRateDefinition is not implemented"))
}

func (UnimplementedBillingServiceHandler) ExportInvoice(context.Context, *connect_go.Request[v1alpha3.ExportInvoiceRequest]) (*connect_go.Response[v1alpha3.ExportInvoiceResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("services.billing.v1alpha3.BillingService.ExportInvoice is not implemented"))
}
