// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.4.0
// - protoc             (unknown)
// source: services/billing/v1alpha3/service.proto

package billingv1alpha3

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.62.0 or later.
const _ = grpc.SupportPackageIsVersion8

const (
	BillingService_ListProducts_FullMethodName                 = "/services.billing.v1alpha3.BillingService/ListProducts"
	BillingService_ApplyBillingPlanDraft_FullMethodName        = "/services.billing.v1alpha3.BillingService/ApplyBillingPlanDraft"
	BillingService_CreateBillingPlan_FullMethodName            = "/services.billing.v1alpha3.BillingService/CreateBillingPlan"
	BillingService_DeleteBillingPlan_FullMethodName            = "/services.billing.v1alpha3.BillingService/DeleteBillingPlan"
	BillingService_GetBillingPlan_FullMethodName               = "/services.billing.v1alpha3.BillingService/GetBillingPlan"
	BillingService_ListBillingPlans_FullMethodName             = "/services.billing.v1alpha3.BillingService/ListBillingPlans"
	BillingService_UpdateBillingPlan_FullMethodName            = "/services.billing.v1alpha3.BillingService/UpdateBillingPlan"
	BillingService_ApplyDefaultBillingPlanDraft_FullMethodName = "/services.billing.v1alpha3.BillingService/ApplyDefaultBillingPlanDraft"
	BillingService_CreateDefaultBillingPlan_FullMethodName     = "/services.billing.v1alpha3.BillingService/CreateDefaultBillingPlan"
	BillingService_DeleteDefaultBillingPlan_FullMethodName     = "/services.billing.v1alpha3.BillingService/DeleteDefaultBillingPlan"
	BillingService_GetDefaultBillingPlan_FullMethodName        = "/services.billing.v1alpha3.BillingService/GetDefaultBillingPlan"
	BillingService_ListDefaultBillingPlans_FullMethodName      = "/services.billing.v1alpha3.BillingService/ListDefaultBillingPlans"
	BillingService_UpdateDefaultBillingPlan_FullMethodName     = "/services.billing.v1alpha3.BillingService/UpdateDefaultBillingPlan"
	BillingService_CreateRateDefinition_FullMethodName         = "/services.billing.v1alpha3.BillingService/CreateRateDefinition"
	BillingService_DeleteRateDefinition_FullMethodName         = "/services.billing.v1alpha3.BillingService/DeleteRateDefinition"
	BillingService_GetRateDefinition_FullMethodName            = "/services.billing.v1alpha3.BillingService/GetRateDefinition"
	BillingService_ListRateDefinitions_FullMethodName          = "/services.billing.v1alpha3.BillingService/ListRateDefinitions"
	BillingService_UpdateRateDefinition_FullMethodName         = "/services.billing.v1alpha3.BillingService/UpdateRateDefinition"
	BillingService_CreateDefaultRateDefinition_FullMethodName  = "/services.billing.v1alpha3.BillingService/CreateDefaultRateDefinition"
	BillingService_DeleteDefaultRateDefinition_FullMethodName  = "/services.billing.v1alpha3.BillingService/DeleteDefaultRateDefinition"
	BillingService_GetDefaultRateDefinition_FullMethodName     = "/services.billing.v1alpha3.BillingService/GetDefaultRateDefinition"
	BillingService_ListDefaultRateDefinitions_FullMethodName   = "/services.billing.v1alpha3.BillingService/ListDefaultRateDefinitions"
	BillingService_UpdateDefaultRateDefinition_FullMethodName  = "/services.billing.v1alpha3.BillingService/UpdateDefaultRateDefinition"
	BillingService_ExportInvoice_FullMethodName                = "/services.billing.v1alpha3.BillingService/ExportInvoice"
)

// BillingServiceClient is the client API for BillingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type BillingServiceClient interface {
	// Lists the products.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	ListProducts(ctx context.Context, in *ListProductsRequest, opts ...grpc.CallOption) (*ListProductsResponse, error)
	// Applies a draft billing plan.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The draft billing plan was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	ApplyBillingPlanDraft(ctx context.Context, in *ApplyBillingPlanDraftRequest, opts ...grpc.CallOption) (*ApplyBillingPlanDraftResponse, error)
	// Creates a new billing plan.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	CreateBillingPlan(ctx context.Context, in *CreateBillingPlanRequest, opts ...grpc.CallOption) (*CreateBillingPlanResponse, error)
	// Deletes a billing plan.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The billing plan was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	DeleteBillingPlan(ctx context.Context, in *DeleteBillingPlanRequest, opts ...grpc.CallOption) (*DeleteBillingPlanResponse, error)
	// Gets a billing plan.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The billing plan was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	GetBillingPlan(ctx context.Context, in *GetBillingPlanRequest, opts ...grpc.CallOption) (*GetBillingPlanResponse, error)
	// Lists billing plans.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	ListBillingPlans(ctx context.Context, in *ListBillingPlansRequest, opts ...grpc.CallOption) (*ListBillingPlansResponse, error)
	// Updates a billing plan.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The billing plan was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	UpdateBillingPlan(ctx context.Context, in *UpdateBillingPlanRequest, opts ...grpc.CallOption) (*UpdateBillingPlanResponse, error)
	// Applies a default draft billing plan.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The draft billing plan was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	ApplyDefaultBillingPlanDraft(ctx context.Context, in *ApplyDefaultBillingPlanDraftRequest, opts ...grpc.CallOption) (*ApplyDefaultBillingPlanDraftResponse, error)
	// Creates a new default billing plan.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	CreateDefaultBillingPlan(ctx context.Context, in *CreateDefaultBillingPlanRequest, opts ...grpc.CallOption) (*CreateDefaultBillingPlanResponse, error)
	// Deletes a default billing plan.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The billing plan was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	DeleteDefaultBillingPlan(ctx context.Context, in *DeleteDefaultBillingPlanRequest, opts ...grpc.CallOption) (*DeleteDefaultBillingPlanResponse, error)
	// Gets a default billing plan.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The default billing plan was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	GetDefaultBillingPlan(ctx context.Context, in *GetDefaultBillingPlanRequest, opts ...grpc.CallOption) (*GetDefaultBillingPlanResponse, error)
	// Lists default billing plans.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	ListDefaultBillingPlans(ctx context.Context, in *ListDefaultBillingPlansRequest, opts ...grpc.CallOption) (*ListDefaultBillingPlansResponse, error)
	// Updates a default billing plan.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The billing plan was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	UpdateDefaultBillingPlan(ctx context.Context, in *UpdateDefaultBillingPlanRequest, opts ...grpc.CallOption) (*UpdateDefaultBillingPlanResponse, error)
	// Creates a new rate definition.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The billing plan was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	CreateRateDefinition(ctx context.Context, in *CreateRateDefinitionRequest, opts ...grpc.CallOption) (*CreateRateDefinitionResponse, error)
	// Deletes a rate definition.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The rate definition was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	DeleteRateDefinition(ctx context.Context, in *DeleteRateDefinitionRequest, opts ...grpc.CallOption) (*DeleteRateDefinitionResponse, error)
	// Gets a rate definition.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The rate definition was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	GetRateDefinition(ctx context.Context, in *GetRateDefinitionRequest, opts ...grpc.CallOption) (*GetRateDefinitionResponse, error)
	// Lists rate definitions.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The rate definition was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	ListRateDefinitions(ctx context.Context, in *ListRateDefinitionsRequest, opts ...grpc.CallOption) (*ListRateDefinitionsResponse, error)
	// Updates a rate definition.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The rate definition was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	UpdateRateDefinition(ctx context.Context, in *UpdateRateDefinitionRequest, opts ...grpc.CallOption) (*UpdateRateDefinitionResponse, error)
	// Creates a new rate definition for a default plan.
	//   - Creating a rate definition on an existing SKU: the sku_id must be provided.
	//   - Creating a rate definition on a new SKU: the product must be provided and the sku_id omitted.
	//
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The billing plan was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	CreateDefaultRateDefinition(ctx context.Context, in *CreateDefaultRateDefinitionRequest, opts ...grpc.CallOption) (*CreateDefaultRateDefinitionResponse, error)
	// Deletes a rate definition for a default billing plan.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The rate definition was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	DeleteDefaultRateDefinition(ctx context.Context, in *DeleteDefaultRateDefinitionRequest, opts ...grpc.CallOption) (*DeleteDefaultRateDefinitionResponse, error)
	// Gets a rate definition for a default billing plan.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The rate definition was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	GetDefaultRateDefinition(ctx context.Context, in *GetDefaultRateDefinitionRequest, opts ...grpc.CallOption) (*GetDefaultRateDefinitionResponse, error)
	// Lists rate definitions for a default billing plan.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The rate definition was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	ListDefaultRateDefinitions(ctx context.Context, in *ListDefaultRateDefinitionsRequest, opts ...grpc.CallOption) (*ListDefaultRateDefinitionsResponse, error)
	// Updates a rate definition for a default billing plan.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The rate definition was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	UpdateDefaultRateDefinition(ctx context.Context, in *UpdateDefaultRateDefinitionRequest, opts ...grpc.CallOption) (*UpdateDefaultRateDefinitionResponse, error)
	// Exports an invoice.
	// Required permissions:
	//
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable. Likely a transient issue with a downstream service.
	ExportInvoice(ctx context.Context, in *ExportInvoiceRequest, opts ...grpc.CallOption) (*ExportInvoiceResponse, error)
}

type billingServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewBillingServiceClient(cc grpc.ClientConnInterface) BillingServiceClient {
	return &billingServiceClient{cc}
}

func (c *billingServiceClient) ListProducts(ctx context.Context, in *ListProductsRequest, opts ...grpc.CallOption) (*ListProductsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListProductsResponse)
	err := c.cc.Invoke(ctx, BillingService_ListProducts_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *billingServiceClient) ApplyBillingPlanDraft(ctx context.Context, in *ApplyBillingPlanDraftRequest, opts ...grpc.CallOption) (*ApplyBillingPlanDraftResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ApplyBillingPlanDraftResponse)
	err := c.cc.Invoke(ctx, BillingService_ApplyBillingPlanDraft_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *billingServiceClient) CreateBillingPlan(ctx context.Context, in *CreateBillingPlanRequest, opts ...grpc.CallOption) (*CreateBillingPlanResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateBillingPlanResponse)
	err := c.cc.Invoke(ctx, BillingService_CreateBillingPlan_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *billingServiceClient) DeleteBillingPlan(ctx context.Context, in *DeleteBillingPlanRequest, opts ...grpc.CallOption) (*DeleteBillingPlanResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(DeleteBillingPlanResponse)
	err := c.cc.Invoke(ctx, BillingService_DeleteBillingPlan_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *billingServiceClient) GetBillingPlan(ctx context.Context, in *GetBillingPlanRequest, opts ...grpc.CallOption) (*GetBillingPlanResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetBillingPlanResponse)
	err := c.cc.Invoke(ctx, BillingService_GetBillingPlan_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *billingServiceClient) ListBillingPlans(ctx context.Context, in *ListBillingPlansRequest, opts ...grpc.CallOption) (*ListBillingPlansResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListBillingPlansResponse)
	err := c.cc.Invoke(ctx, BillingService_ListBillingPlans_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *billingServiceClient) UpdateBillingPlan(ctx context.Context, in *UpdateBillingPlanRequest, opts ...grpc.CallOption) (*UpdateBillingPlanResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UpdateBillingPlanResponse)
	err := c.cc.Invoke(ctx, BillingService_UpdateBillingPlan_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *billingServiceClient) ApplyDefaultBillingPlanDraft(ctx context.Context, in *ApplyDefaultBillingPlanDraftRequest, opts ...grpc.CallOption) (*ApplyDefaultBillingPlanDraftResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ApplyDefaultBillingPlanDraftResponse)
	err := c.cc.Invoke(ctx, BillingService_ApplyDefaultBillingPlanDraft_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *billingServiceClient) CreateDefaultBillingPlan(ctx context.Context, in *CreateDefaultBillingPlanRequest, opts ...grpc.CallOption) (*CreateDefaultBillingPlanResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateDefaultBillingPlanResponse)
	err := c.cc.Invoke(ctx, BillingService_CreateDefaultBillingPlan_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *billingServiceClient) DeleteDefaultBillingPlan(ctx context.Context, in *DeleteDefaultBillingPlanRequest, opts ...grpc.CallOption) (*DeleteDefaultBillingPlanResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(DeleteDefaultBillingPlanResponse)
	err := c.cc.Invoke(ctx, BillingService_DeleteDefaultBillingPlan_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *billingServiceClient) GetDefaultBillingPlan(ctx context.Context, in *GetDefaultBillingPlanRequest, opts ...grpc.CallOption) (*GetDefaultBillingPlanResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetDefaultBillingPlanResponse)
	err := c.cc.Invoke(ctx, BillingService_GetDefaultBillingPlan_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *billingServiceClient) ListDefaultBillingPlans(ctx context.Context, in *ListDefaultBillingPlansRequest, opts ...grpc.CallOption) (*ListDefaultBillingPlansResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListDefaultBillingPlansResponse)
	err := c.cc.Invoke(ctx, BillingService_ListDefaultBillingPlans_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *billingServiceClient) UpdateDefaultBillingPlan(ctx context.Context, in *UpdateDefaultBillingPlanRequest, opts ...grpc.CallOption) (*UpdateDefaultBillingPlanResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UpdateDefaultBillingPlanResponse)
	err := c.cc.Invoke(ctx, BillingService_UpdateDefaultBillingPlan_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *billingServiceClient) CreateRateDefinition(ctx context.Context, in *CreateRateDefinitionRequest, opts ...grpc.CallOption) (*CreateRateDefinitionResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateRateDefinitionResponse)
	err := c.cc.Invoke(ctx, BillingService_CreateRateDefinition_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *billingServiceClient) DeleteRateDefinition(ctx context.Context, in *DeleteRateDefinitionRequest, opts ...grpc.CallOption) (*DeleteRateDefinitionResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(DeleteRateDefinitionResponse)
	err := c.cc.Invoke(ctx, BillingService_DeleteRateDefinition_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *billingServiceClient) GetRateDefinition(ctx context.Context, in *GetRateDefinitionRequest, opts ...grpc.CallOption) (*GetRateDefinitionResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetRateDefinitionResponse)
	err := c.cc.Invoke(ctx, BillingService_GetRateDefinition_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *billingServiceClient) ListRateDefinitions(ctx context.Context, in *ListRateDefinitionsRequest, opts ...grpc.CallOption) (*ListRateDefinitionsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListRateDefinitionsResponse)
	err := c.cc.Invoke(ctx, BillingService_ListRateDefinitions_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *billingServiceClient) UpdateRateDefinition(ctx context.Context, in *UpdateRateDefinitionRequest, opts ...grpc.CallOption) (*UpdateRateDefinitionResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UpdateRateDefinitionResponse)
	err := c.cc.Invoke(ctx, BillingService_UpdateRateDefinition_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *billingServiceClient) CreateDefaultRateDefinition(ctx context.Context, in *CreateDefaultRateDefinitionRequest, opts ...grpc.CallOption) (*CreateDefaultRateDefinitionResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateDefaultRateDefinitionResponse)
	err := c.cc.Invoke(ctx, BillingService_CreateDefaultRateDefinition_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *billingServiceClient) DeleteDefaultRateDefinition(ctx context.Context, in *DeleteDefaultRateDefinitionRequest, opts ...grpc.CallOption) (*DeleteDefaultRateDefinitionResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(DeleteDefaultRateDefinitionResponse)
	err := c.cc.Invoke(ctx, BillingService_DeleteDefaultRateDefinition_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *billingServiceClient) GetDefaultRateDefinition(ctx context.Context, in *GetDefaultRateDefinitionRequest, opts ...grpc.CallOption) (*GetDefaultRateDefinitionResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetDefaultRateDefinitionResponse)
	err := c.cc.Invoke(ctx, BillingService_GetDefaultRateDefinition_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *billingServiceClient) ListDefaultRateDefinitions(ctx context.Context, in *ListDefaultRateDefinitionsRequest, opts ...grpc.CallOption) (*ListDefaultRateDefinitionsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListDefaultRateDefinitionsResponse)
	err := c.cc.Invoke(ctx, BillingService_ListDefaultRateDefinitions_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *billingServiceClient) UpdateDefaultRateDefinition(ctx context.Context, in *UpdateDefaultRateDefinitionRequest, opts ...grpc.CallOption) (*UpdateDefaultRateDefinitionResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UpdateDefaultRateDefinitionResponse)
	err := c.cc.Invoke(ctx, BillingService_UpdateDefaultRateDefinition_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *billingServiceClient) ExportInvoice(ctx context.Context, in *ExportInvoiceRequest, opts ...grpc.CallOption) (*ExportInvoiceResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ExportInvoiceResponse)
	err := c.cc.Invoke(ctx, BillingService_ExportInvoice_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BillingServiceServer is the server API for BillingService service.
// All implementations must embed UnimplementedBillingServiceServer
// for forward compatibility
type BillingServiceServer interface {
	// Lists the products.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	ListProducts(context.Context, *ListProductsRequest) (*ListProductsResponse, error)
	// Applies a draft billing plan.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The draft billing plan was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	ApplyBillingPlanDraft(context.Context, *ApplyBillingPlanDraftRequest) (*ApplyBillingPlanDraftResponse, error)
	// Creates a new billing plan.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	CreateBillingPlan(context.Context, *CreateBillingPlanRequest) (*CreateBillingPlanResponse, error)
	// Deletes a billing plan.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The billing plan was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	DeleteBillingPlan(context.Context, *DeleteBillingPlanRequest) (*DeleteBillingPlanResponse, error)
	// Gets a billing plan.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The billing plan was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	GetBillingPlan(context.Context, *GetBillingPlanRequest) (*GetBillingPlanResponse, error)
	// Lists billing plans.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	ListBillingPlans(context.Context, *ListBillingPlansRequest) (*ListBillingPlansResponse, error)
	// Updates a billing plan.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The billing plan was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	UpdateBillingPlan(context.Context, *UpdateBillingPlanRequest) (*UpdateBillingPlanResponse, error)
	// Applies a default draft billing plan.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The draft billing plan was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	ApplyDefaultBillingPlanDraft(context.Context, *ApplyDefaultBillingPlanDraftRequest) (*ApplyDefaultBillingPlanDraftResponse, error)
	// Creates a new default billing plan.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	CreateDefaultBillingPlan(context.Context, *CreateDefaultBillingPlanRequest) (*CreateDefaultBillingPlanResponse, error)
	// Deletes a default billing plan.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The billing plan was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	DeleteDefaultBillingPlan(context.Context, *DeleteDefaultBillingPlanRequest) (*DeleteDefaultBillingPlanResponse, error)
	// Gets a default billing plan.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The default billing plan was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	GetDefaultBillingPlan(context.Context, *GetDefaultBillingPlanRequest) (*GetDefaultBillingPlanResponse, error)
	// Lists default billing plans.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	ListDefaultBillingPlans(context.Context, *ListDefaultBillingPlansRequest) (*ListDefaultBillingPlansResponse, error)
	// Updates a default billing plan.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The billing plan was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	UpdateDefaultBillingPlan(context.Context, *UpdateDefaultBillingPlanRequest) (*UpdateDefaultBillingPlanResponse, error)
	// Creates a new rate definition.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The billing plan was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	CreateRateDefinition(context.Context, *CreateRateDefinitionRequest) (*CreateRateDefinitionResponse, error)
	// Deletes a rate definition.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The rate definition was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	DeleteRateDefinition(context.Context, *DeleteRateDefinitionRequest) (*DeleteRateDefinitionResponse, error)
	// Gets a rate definition.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The rate definition was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	GetRateDefinition(context.Context, *GetRateDefinitionRequest) (*GetRateDefinitionResponse, error)
	// Lists rate definitions.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The rate definition was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	ListRateDefinitions(context.Context, *ListRateDefinitionsRequest) (*ListRateDefinitionsResponse, error)
	// Updates a rate definition.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The rate definition was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	UpdateRateDefinition(context.Context, *UpdateRateDefinitionRequest) (*UpdateRateDefinitionResponse, error)
	// Creates a new rate definition for a default plan.
	//   - Creating a rate definition on an existing SKU: the sku_id must be provided.
	//   - Creating a rate definition on a new SKU: the product must be provided and the sku_id omitted.
	//
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The billing plan was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	CreateDefaultRateDefinition(context.Context, *CreateDefaultRateDefinitionRequest) (*CreateDefaultRateDefinitionResponse, error)
	// Deletes a rate definition for a default billing plan.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The rate definition was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	DeleteDefaultRateDefinition(context.Context, *DeleteDefaultRateDefinitionRequest) (*DeleteDefaultRateDefinitionResponse, error)
	// Gets a rate definition for a default billing plan.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The rate definition was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	GetDefaultRateDefinition(context.Context, *GetDefaultRateDefinitionRequest) (*GetDefaultRateDefinitionResponse, error)
	// Lists rate definitions for a default billing plan.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The rate definition was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	ListDefaultRateDefinitions(context.Context, *ListDefaultRateDefinitionsRequest) (*ListDefaultRateDefinitionsResponse, error)
	// Updates a rate definition for a default billing plan.
	// Required permissions:
	//
	//	CUSTOMER_SUPPORT
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.NotFound: The rate definition was not found.
	//   - grpc.PermissionDenied: The caller does not have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable.
	UpdateDefaultRateDefinition(context.Context, *UpdateDefaultRateDefinitionRequest) (*UpdateDefaultRateDefinitionResponse, error)
	// Exports an invoice.
	// Required permissions:
	//
	//	TCN_BILLING_ADMIN
	//
	// Errors:
	//   - grpc.Internal: An internal error occurred.
	//   - grpc.InvalidArgument: The request is invalid.
	//   - grpc.PermissionDenied: Caller doesn't have the required permissions.
	//   - grpc.Unavailable: The operation is currently unavailable. Likely a transient issue with a downstream service.
	ExportInvoice(context.Context, *ExportInvoiceRequest) (*ExportInvoiceResponse, error)
	mustEmbedUnimplementedBillingServiceServer()
}

// UnimplementedBillingServiceServer must be embedded to have forward compatible implementations.
type UnimplementedBillingServiceServer struct {
}

func (UnimplementedBillingServiceServer) ListProducts(context.Context, *ListProductsRequest) (*ListProductsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListProducts not implemented")
}
func (UnimplementedBillingServiceServer) ApplyBillingPlanDraft(context.Context, *ApplyBillingPlanDraftRequest) (*ApplyBillingPlanDraftResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApplyBillingPlanDraft not implemented")
}
func (UnimplementedBillingServiceServer) CreateBillingPlan(context.Context, *CreateBillingPlanRequest) (*CreateBillingPlanResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateBillingPlan not implemented")
}
func (UnimplementedBillingServiceServer) DeleteBillingPlan(context.Context, *DeleteBillingPlanRequest) (*DeleteBillingPlanResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteBillingPlan not implemented")
}
func (UnimplementedBillingServiceServer) GetBillingPlan(context.Context, *GetBillingPlanRequest) (*GetBillingPlanResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBillingPlan not implemented")
}
func (UnimplementedBillingServiceServer) ListBillingPlans(context.Context, *ListBillingPlansRequest) (*ListBillingPlansResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListBillingPlans not implemented")
}
func (UnimplementedBillingServiceServer) UpdateBillingPlan(context.Context, *UpdateBillingPlanRequest) (*UpdateBillingPlanResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateBillingPlan not implemented")
}
func (UnimplementedBillingServiceServer) ApplyDefaultBillingPlanDraft(context.Context, *ApplyDefaultBillingPlanDraftRequest) (*ApplyDefaultBillingPlanDraftResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApplyDefaultBillingPlanDraft not implemented")
}
func (UnimplementedBillingServiceServer) CreateDefaultBillingPlan(context.Context, *CreateDefaultBillingPlanRequest) (*CreateDefaultBillingPlanResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDefaultBillingPlan not implemented")
}
func (UnimplementedBillingServiceServer) DeleteDefaultBillingPlan(context.Context, *DeleteDefaultBillingPlanRequest) (*DeleteDefaultBillingPlanResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteDefaultBillingPlan not implemented")
}
func (UnimplementedBillingServiceServer) GetDefaultBillingPlan(context.Context, *GetDefaultBillingPlanRequest) (*GetDefaultBillingPlanResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDefaultBillingPlan not implemented")
}
func (UnimplementedBillingServiceServer) ListDefaultBillingPlans(context.Context, *ListDefaultBillingPlansRequest) (*ListDefaultBillingPlansResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListDefaultBillingPlans not implemented")
}
func (UnimplementedBillingServiceServer) UpdateDefaultBillingPlan(context.Context, *UpdateDefaultBillingPlanRequest) (*UpdateDefaultBillingPlanResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateDefaultBillingPlan not implemented")
}
func (UnimplementedBillingServiceServer) CreateRateDefinition(context.Context, *CreateRateDefinitionRequest) (*CreateRateDefinitionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRateDefinition not implemented")
}
func (UnimplementedBillingServiceServer) DeleteRateDefinition(context.Context, *DeleteRateDefinitionRequest) (*DeleteRateDefinitionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteRateDefinition not implemented")
}
func (UnimplementedBillingServiceServer) GetRateDefinition(context.Context, *GetRateDefinitionRequest) (*GetRateDefinitionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRateDefinition not implemented")
}
func (UnimplementedBillingServiceServer) ListRateDefinitions(context.Context, *ListRateDefinitionsRequest) (*ListRateDefinitionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListRateDefinitions not implemented")
}
func (UnimplementedBillingServiceServer) UpdateRateDefinition(context.Context, *UpdateRateDefinitionRequest) (*UpdateRateDefinitionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRateDefinition not implemented")
}
func (UnimplementedBillingServiceServer) CreateDefaultRateDefinition(context.Context, *CreateDefaultRateDefinitionRequest) (*CreateDefaultRateDefinitionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDefaultRateDefinition not implemented")
}
func (UnimplementedBillingServiceServer) DeleteDefaultRateDefinition(context.Context, *DeleteDefaultRateDefinitionRequest) (*DeleteDefaultRateDefinitionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteDefaultRateDefinition not implemented")
}
func (UnimplementedBillingServiceServer) GetDefaultRateDefinition(context.Context, *GetDefaultRateDefinitionRequest) (*GetDefaultRateDefinitionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDefaultRateDefinition not implemented")
}
func (UnimplementedBillingServiceServer) ListDefaultRateDefinitions(context.Context, *ListDefaultRateDefinitionsRequest) (*ListDefaultRateDefinitionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListDefaultRateDefinitions not implemented")
}
func (UnimplementedBillingServiceServer) UpdateDefaultRateDefinition(context.Context, *UpdateDefaultRateDefinitionRequest) (*UpdateDefaultRateDefinitionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateDefaultRateDefinition not implemented")
}
func (UnimplementedBillingServiceServer) ExportInvoice(context.Context, *ExportInvoiceRequest) (*ExportInvoiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExportInvoice not implemented")
}
func (UnimplementedBillingServiceServer) mustEmbedUnimplementedBillingServiceServer() {}

// UnsafeBillingServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to BillingServiceServer will
// result in compilation errors.
type UnsafeBillingServiceServer interface {
	mustEmbedUnimplementedBillingServiceServer()
}

func RegisterBillingServiceServer(s grpc.ServiceRegistrar, srv BillingServiceServer) {
	s.RegisterService(&BillingService_ServiceDesc, srv)
}

func _BillingService_ListProducts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListProductsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BillingServiceServer).ListProducts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BillingService_ListProducts_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BillingServiceServer).ListProducts(ctx, req.(*ListProductsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BillingService_ApplyBillingPlanDraft_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApplyBillingPlanDraftRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BillingServiceServer).ApplyBillingPlanDraft(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BillingService_ApplyBillingPlanDraft_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BillingServiceServer).ApplyBillingPlanDraft(ctx, req.(*ApplyBillingPlanDraftRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BillingService_CreateBillingPlan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateBillingPlanRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BillingServiceServer).CreateBillingPlan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BillingService_CreateBillingPlan_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BillingServiceServer).CreateBillingPlan(ctx, req.(*CreateBillingPlanRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BillingService_DeleteBillingPlan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteBillingPlanRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BillingServiceServer).DeleteBillingPlan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BillingService_DeleteBillingPlan_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BillingServiceServer).DeleteBillingPlan(ctx, req.(*DeleteBillingPlanRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BillingService_GetBillingPlan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBillingPlanRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BillingServiceServer).GetBillingPlan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BillingService_GetBillingPlan_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BillingServiceServer).GetBillingPlan(ctx, req.(*GetBillingPlanRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BillingService_ListBillingPlans_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListBillingPlansRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BillingServiceServer).ListBillingPlans(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BillingService_ListBillingPlans_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BillingServiceServer).ListBillingPlans(ctx, req.(*ListBillingPlansRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BillingService_UpdateBillingPlan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateBillingPlanRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BillingServiceServer).UpdateBillingPlan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BillingService_UpdateBillingPlan_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BillingServiceServer).UpdateBillingPlan(ctx, req.(*UpdateBillingPlanRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BillingService_ApplyDefaultBillingPlanDraft_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApplyDefaultBillingPlanDraftRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BillingServiceServer).ApplyDefaultBillingPlanDraft(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BillingService_ApplyDefaultBillingPlanDraft_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BillingServiceServer).ApplyDefaultBillingPlanDraft(ctx, req.(*ApplyDefaultBillingPlanDraftRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BillingService_CreateDefaultBillingPlan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDefaultBillingPlanRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BillingServiceServer).CreateDefaultBillingPlan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BillingService_CreateDefaultBillingPlan_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BillingServiceServer).CreateDefaultBillingPlan(ctx, req.(*CreateDefaultBillingPlanRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BillingService_DeleteDefaultBillingPlan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteDefaultBillingPlanRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BillingServiceServer).DeleteDefaultBillingPlan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BillingService_DeleteDefaultBillingPlan_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BillingServiceServer).DeleteDefaultBillingPlan(ctx, req.(*DeleteDefaultBillingPlanRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BillingService_GetDefaultBillingPlan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDefaultBillingPlanRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BillingServiceServer).GetDefaultBillingPlan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BillingService_GetDefaultBillingPlan_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BillingServiceServer).GetDefaultBillingPlan(ctx, req.(*GetDefaultBillingPlanRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BillingService_ListDefaultBillingPlans_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDefaultBillingPlansRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BillingServiceServer).ListDefaultBillingPlans(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BillingService_ListDefaultBillingPlans_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BillingServiceServer).ListDefaultBillingPlans(ctx, req.(*ListDefaultBillingPlansRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BillingService_UpdateDefaultBillingPlan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateDefaultBillingPlanRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BillingServiceServer).UpdateDefaultBillingPlan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BillingService_UpdateDefaultBillingPlan_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BillingServiceServer).UpdateDefaultBillingPlan(ctx, req.(*UpdateDefaultBillingPlanRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BillingService_CreateRateDefinition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRateDefinitionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BillingServiceServer).CreateRateDefinition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BillingService_CreateRateDefinition_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BillingServiceServer).CreateRateDefinition(ctx, req.(*CreateRateDefinitionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BillingService_DeleteRateDefinition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRateDefinitionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BillingServiceServer).DeleteRateDefinition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BillingService_DeleteRateDefinition_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BillingServiceServer).DeleteRateDefinition(ctx, req.(*DeleteRateDefinitionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BillingService_GetRateDefinition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRateDefinitionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BillingServiceServer).GetRateDefinition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BillingService_GetRateDefinition_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BillingServiceServer).GetRateDefinition(ctx, req.(*GetRateDefinitionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BillingService_ListRateDefinitions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRateDefinitionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BillingServiceServer).ListRateDefinitions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BillingService_ListRateDefinitions_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BillingServiceServer).ListRateDefinitions(ctx, req.(*ListRateDefinitionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BillingService_UpdateRateDefinition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRateDefinitionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BillingServiceServer).UpdateRateDefinition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BillingService_UpdateRateDefinition_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BillingServiceServer).UpdateRateDefinition(ctx, req.(*UpdateRateDefinitionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BillingService_CreateDefaultRateDefinition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDefaultRateDefinitionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BillingServiceServer).CreateDefaultRateDefinition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BillingService_CreateDefaultRateDefinition_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BillingServiceServer).CreateDefaultRateDefinition(ctx, req.(*CreateDefaultRateDefinitionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BillingService_DeleteDefaultRateDefinition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteDefaultRateDefinitionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BillingServiceServer).DeleteDefaultRateDefinition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BillingService_DeleteDefaultRateDefinition_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BillingServiceServer).DeleteDefaultRateDefinition(ctx, req.(*DeleteDefaultRateDefinitionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BillingService_GetDefaultRateDefinition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDefaultRateDefinitionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BillingServiceServer).GetDefaultRateDefinition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BillingService_GetDefaultRateDefinition_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BillingServiceServer).GetDefaultRateDefinition(ctx, req.(*GetDefaultRateDefinitionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BillingService_ListDefaultRateDefinitions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDefaultRateDefinitionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BillingServiceServer).ListDefaultRateDefinitions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BillingService_ListDefaultRateDefinitions_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BillingServiceServer).ListDefaultRateDefinitions(ctx, req.(*ListDefaultRateDefinitionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BillingService_UpdateDefaultRateDefinition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateDefaultRateDefinitionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BillingServiceServer).UpdateDefaultRateDefinition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BillingService_UpdateDefaultRateDefinition_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BillingServiceServer).UpdateDefaultRateDefinition(ctx, req.(*UpdateDefaultRateDefinitionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BillingService_ExportInvoice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExportInvoiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BillingServiceServer).ExportInvoice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BillingService_ExportInvoice_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BillingServiceServer).ExportInvoice(ctx, req.(*ExportInvoiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// BillingService_ServiceDesc is the grpc.ServiceDesc for BillingService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var BillingService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "services.billing.v1alpha3.BillingService",
	HandlerType: (*BillingServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListProducts",
			Handler:    _BillingService_ListProducts_Handler,
		},
		{
			MethodName: "ApplyBillingPlanDraft",
			Handler:    _BillingService_ApplyBillingPlanDraft_Handler,
		},
		{
			MethodName: "CreateBillingPlan",
			Handler:    _BillingService_CreateBillingPlan_Handler,
		},
		{
			MethodName: "DeleteBillingPlan",
			Handler:    _BillingService_DeleteBillingPlan_Handler,
		},
		{
			MethodName: "GetBillingPlan",
			Handler:    _BillingService_GetBillingPlan_Handler,
		},
		{
			MethodName: "ListBillingPlans",
			Handler:    _BillingService_ListBillingPlans_Handler,
		},
		{
			MethodName: "UpdateBillingPlan",
			Handler:    _BillingService_UpdateBillingPlan_Handler,
		},
		{
			MethodName: "ApplyDefaultBillingPlanDraft",
			Handler:    _BillingService_ApplyDefaultBillingPlanDraft_Handler,
		},
		{
			MethodName: "CreateDefaultBillingPlan",
			Handler:    _BillingService_CreateDefaultBillingPlan_Handler,
		},
		{
			MethodName: "DeleteDefaultBillingPlan",
			Handler:    _BillingService_DeleteDefaultBillingPlan_Handler,
		},
		{
			MethodName: "GetDefaultBillingPlan",
			Handler:    _BillingService_GetDefaultBillingPlan_Handler,
		},
		{
			MethodName: "ListDefaultBillingPlans",
			Handler:    _BillingService_ListDefaultBillingPlans_Handler,
		},
		{
			MethodName: "UpdateDefaultBillingPlan",
			Handler:    _BillingService_UpdateDefaultBillingPlan_Handler,
		},
		{
			MethodName: "CreateRateDefinition",
			Handler:    _BillingService_CreateRateDefinition_Handler,
		},
		{
			MethodName: "DeleteRateDefinition",
			Handler:    _BillingService_DeleteRateDefinition_Handler,
		},
		{
			MethodName: "GetRateDefinition",
			Handler:    _BillingService_GetRateDefinition_Handler,
		},
		{
			MethodName: "ListRateDefinitions",
			Handler:    _BillingService_ListRateDefinitions_Handler,
		},
		{
			MethodName: "UpdateRateDefinition",
			Handler:    _BillingService_UpdateRateDefinition_Handler,
		},
		{
			MethodName: "CreateDefaultRateDefinition",
			Handler:    _BillingService_CreateDefaultRateDefinition_Handler,
		},
		{
			MethodName: "DeleteDefaultRateDefinition",
			Handler:    _BillingService_DeleteDefaultRateDefinition_Handler,
		},
		{
			MethodName: "GetDefaultRateDefinition",
			Handler:    _BillingService_GetDefaultRateDefinition_Handler,
		},
		{
			MethodName: "ListDefaultRateDefinitions",
			Handler:    _BillingService_ListDefaultRateDefinitions_Handler,
		},
		{
			MethodName: "UpdateDefaultRateDefinition",
			Handler:    _BillingService_UpdateDefaultRateDefinition_Handler,
		},
		{
			MethodName: "ExportInvoice",
			Handler:    _BillingService_ExportInvoice_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "services/billing/v1alpha3/service.proto",
}
