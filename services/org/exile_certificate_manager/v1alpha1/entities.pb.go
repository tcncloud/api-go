// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: services/org/exile_certificate_manager/v1alpha1/entities.proto

package exile_certificate_managerv1alpha1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ExileConfigurationType defines the types of exile configuration
type ExileConfigurationType int32

const (
	// Type Unspecified means the configuration type is not set.
	ExileConfigurationType_EXILE_CONFIGURATION_TYPE_UNSPECIFIED ExileConfigurationType = 0
	// Type None specifies that the configuration will not have any parameters.
	ExileConfigurationType_EXILE_CONFIGURATION_TYPE_NONE ExileConfigurationType = 1
	// Type Artiva HCX specifies the configuration for Artiva HCX (parameters required).
	ExileConfigurationType_EXILE_CONFIGURATION_TYPE_ARTIVA_HCX ExileConfigurationType = 2
	// Type Artiva RM specifies the configuration for Artiva RM (parameters required).
	ExileConfigurationType_EXILE_CONFIGURATION_TYPE_ARTIVA_RM ExileConfigurationType = 3
	// Type FACS specifies the configuration for FACS (parameters required).
	ExileConfigurationType_EXILE_CONFIGURATION_TYPE_FACS ExileConfigurationType = 4
	// Type Velosidy specifies the configuration for Velosidy (parameters required).
	ExileConfigurationType_EXILE_CONFIGURATION_TYPE_VELOSIDY ExileConfigurationType = 5
	// Type Latitude Classic specifies the configuration for Latitude Classic (parameters required).
	ExileConfigurationType_EXILE_CONFIGURATION_TYPE_LATITUDE_CLASSIC ExileConfigurationType = 6
	// Type Latitude NextGen specifies the configuration for Latitude Liquid (parameters required).
	ExileConfigurationType_EXILE_CONFIGURATION_TYPE_LATITUDE_LIQUID ExileConfigurationType = 7
)

// Enum value maps for ExileConfigurationType.
var (
	ExileConfigurationType_name = map[int32]string{
		0: "EXILE_CONFIGURATION_TYPE_UNSPECIFIED",
		1: "EXILE_CONFIGURATION_TYPE_NONE",
		2: "EXILE_CONFIGURATION_TYPE_ARTIVA_HCX",
		3: "EXILE_CONFIGURATION_TYPE_ARTIVA_RM",
		4: "EXILE_CONFIGURATION_TYPE_FACS",
		5: "EXILE_CONFIGURATION_TYPE_VELOSIDY",
		6: "EXILE_CONFIGURATION_TYPE_LATITUDE_CLASSIC",
		7: "EXILE_CONFIGURATION_TYPE_LATITUDE_LIQUID",
	}
	ExileConfigurationType_value = map[string]int32{
		"EXILE_CONFIGURATION_TYPE_UNSPECIFIED":      0,
		"EXILE_CONFIGURATION_TYPE_NONE":             1,
		"EXILE_CONFIGURATION_TYPE_ARTIVA_HCX":       2,
		"EXILE_CONFIGURATION_TYPE_ARTIVA_RM":        3,
		"EXILE_CONFIGURATION_TYPE_FACS":             4,
		"EXILE_CONFIGURATION_TYPE_VELOSIDY":         5,
		"EXILE_CONFIGURATION_TYPE_LATITUDE_CLASSIC": 6,
		"EXILE_CONFIGURATION_TYPE_LATITUDE_LIQUID":  7,
	}
)

func (x ExileConfigurationType) Enum() *ExileConfigurationType {
	p := new(ExileConfigurationType)
	*p = x
	return p
}

func (x ExileConfigurationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExileConfigurationType) Descriptor() protoreflect.EnumDescriptor {
	return file_services_org_exile_certificate_manager_v1alpha1_entities_proto_enumTypes[0].Descriptor()
}

func (ExileConfigurationType) Type() protoreflect.EnumType {
	return &file_services_org_exile_certificate_manager_v1alpha1_entities_proto_enumTypes[0]
}

func (x ExileConfigurationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExileConfigurationType.Descriptor instead.
func (ExileConfigurationType) EnumDescriptor() ([]byte, []int) {
	return file_services_org_exile_certificate_manager_v1alpha1_entities_proto_rawDescGZIP(), []int{0}
}

// ExileCertificate contains the organization's exile certificate.
type ExileCertificate struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The id of the exile certificate.
	ExileCertificateId string `protobuf:"bytes,1,opt,name=exile_certificate_id,json=exileCertificateId,proto3" json:"exile_certificate_id,omitempty"`
	// The id of the organization.
	OrgId string `protobuf:"bytes,2,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	// The certificate name.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// The certificate description.
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// The certificate hash/fingerprint.
	Hash string `protobuf:"bytes,5,opt,name=hash,proto3" json:"hash,omitempty"`
	// The certificate expiration date.
	ExpirationDate *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=expiration_date,json=expirationDate,proto3" json:"expiration_date,omitempty"`
	// The certificate creation date.
	CreationDate *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=creation_date,json=creationDate,proto3" json:"creation_date,omitempty"`
	// The requestor of the certificate (user ID or automated system)
	RequestBy string `protobuf:"bytes,8,opt,name=request_by,json=requestBy,proto3" json:"request_by,omitempty"`
	// Whether or not the certifcate has been revoked
	Revoked bool `protobuf:"varint,9,opt,name=revoked,proto3" json:"revoked,omitempty"`
	// The id of the exile configuration associated with the certificate.
	ExileConfigurationId string `protobuf:"bytes,10,opt,name=exile_configuration_id,json=exileConfigurationId,proto3" json:"exile_configuration_id,omitempty"`
	// The number of times the certificate has been renewed.
	RenewalInstance int64 `protobuf:"varint,11,opt,name=renewal_instance,json=renewalInstance,proto3" json:"renewal_instance,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ExileCertificate) Reset() {
	*x = ExileCertificate{}
	mi := &file_services_org_exile_certificate_manager_v1alpha1_entities_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExileCertificate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExileCertificate) ProtoMessage() {}

func (x *ExileCertificate) ProtoReflect() protoreflect.Message {
	mi := &file_services_org_exile_certificate_manager_v1alpha1_entities_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExileCertificate.ProtoReflect.Descriptor instead.
func (*ExileCertificate) Descriptor() ([]byte, []int) {
	return file_services_org_exile_certificate_manager_v1alpha1_entities_proto_rawDescGZIP(), []int{0}
}

func (x *ExileCertificate) GetExileCertificateId() string {
	if x != nil {
		return x.ExileCertificateId
	}
	return ""
}

func (x *ExileCertificate) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *ExileCertificate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ExileCertificate) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ExileCertificate) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *ExileCertificate) GetExpirationDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpirationDate
	}
	return nil
}

func (x *ExileCertificate) GetCreationDate() *timestamppb.Timestamp {
	if x != nil {
		return x.CreationDate
	}
	return nil
}

func (x *ExileCertificate) GetRequestBy() string {
	if x != nil {
		return x.RequestBy
	}
	return ""
}

func (x *ExileCertificate) GetRevoked() bool {
	if x != nil {
		return x.Revoked
	}
	return false
}

func (x *ExileCertificate) GetExileConfigurationId() string {
	if x != nil {
		return x.ExileConfigurationId
	}
	return ""
}

func (x *ExileCertificate) GetRenewalInstance() int64 {
	if x != nil {
		return x.RenewalInstance
	}
	return 0
}

// ExileConfiguration contains the organization's exile configuration for its certificates.
type ExileConfiguration struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The id of the exile configuration
	ExileConfigurationId string `protobuf:"bytes,1,opt,name=exile_configuration_id,json=exileConfigurationId,proto3" json:"exile_configuration_id,omitempty"`
	// The id of the organization.
	OrgId string `protobuf:"bytes,2,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	// The configuration name.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// The configuration description.
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// The type of exile configuration
	Type ExileConfigurationType `protobuf:"varint,5,opt,name=type,proto3,enum=services.org.exile_certificate_manager.v1alpha1.ExileConfigurationType" json:"type,omitempty"`
	// The parameters of the exile configuration (JSON string)
	Parameters    string `protobuf:"bytes,6,opt,name=parameters,proto3" json:"parameters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExileConfiguration) Reset() {
	*x = ExileConfiguration{}
	mi := &file_services_org_exile_certificate_manager_v1alpha1_entities_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExileConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExileConfiguration) ProtoMessage() {}

func (x *ExileConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_services_org_exile_certificate_manager_v1alpha1_entities_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExileConfiguration.ProtoReflect.Descriptor instead.
func (*ExileConfiguration) Descriptor() ([]byte, []int) {
	return file_services_org_exile_certificate_manager_v1alpha1_entities_proto_rawDescGZIP(), []int{1}
}

func (x *ExileConfiguration) GetExileConfigurationId() string {
	if x != nil {
		return x.ExileConfigurationId
	}
	return ""
}

func (x *ExileConfiguration) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *ExileConfiguration) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ExileConfiguration) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ExileConfiguration) GetType() ExileConfigurationType {
	if x != nil {
		return x.Type
	}
	return ExileConfigurationType_EXILE_CONFIGURATION_TYPE_UNSPECIFIED
}

func (x *ExileConfiguration) GetParameters() string {
	if x != nil {
		return x.Parameters
	}
	return ""
}

var File_services_org_exile_certificate_manager_v1alpha1_entities_proto protoreflect.FileDescriptor

const file_services_org_exile_certificate_manager_v1alpha1_entities_proto_rawDesc = "" +
	"\n" +
	">services/org/exile_certificate_manager/v1alpha1/entities.proto\x12/services.org.exile_certificate_manager.v1alpha1\x1a\x1fgoogle/protobuf/timestamp.proto\"\xc5\x03\n" +
	"\x10ExileCertificate\x120\n" +
	"\x14exile_certificate_id\x18\x01 \x01(\tR\x12exileCertificateId\x12\x15\n" +
	"\x06org_id\x18\x02 \x01(\tR\x05orgId\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x12\n" +
	"\x04hash\x18\x05 \x01(\tR\x04hash\x12C\n" +
	"\x0fexpiration_date\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\x0eexpirationDate\x12?\n" +
	"\rcreation_date\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\fcreationDate\x12\x1d\n" +
	"\n" +
	"request_by\x18\b \x01(\tR\trequestBy\x12\x18\n" +
	"\arevoked\x18\t \x01(\bR\arevoked\x124\n" +
	"\x16exile_configuration_id\x18\n" +
	" \x01(\tR\x14exileConfigurationId\x12)\n" +
	"\x10renewal_instance\x18\v \x01(\x03R\x0frenewalInstance\"\x94\x02\n" +
	"\x12ExileConfiguration\x124\n" +
	"\x16exile_configuration_id\x18\x01 \x01(\tR\x14exileConfigurationId\x12\x15\n" +
	"\x06org_id\x18\x02 \x01(\tR\x05orgId\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12[\n" +
	"\x04type\x18\x05 \x01(\x0e2G.services.org.exile_certificate_manager.v1alpha1.ExileConfigurationTypeR\x04type\x12\x1e\n" +
	"\n" +
	"parameters\x18\x06 \x01(\tR\n" +
	"parameters*\xdd\x02\n" +
	"\x16ExileConfigurationType\x12(\n" +
	"$EXILE_CONFIGURATION_TYPE_UNSPECIFIED\x10\x00\x12!\n" +
	"\x1dEXILE_CONFIGURATION_TYPE_NONE\x10\x01\x12'\n" +
	"#EXILE_CONFIGURATION_TYPE_ARTIVA_HCX\x10\x02\x12&\n" +
	"\"EXILE_CONFIGURATION_TYPE_ARTIVA_RM\x10\x03\x12!\n" +
	"\x1dEXILE_CONFIGURATION_TYPE_FACS\x10\x04\x12%\n" +
	"!EXILE_CONFIGURATION_TYPE_VELOSIDY\x10\x05\x12-\n" +
	")EXILE_CONFIGURATION_TYPE_LATITUDE_CLASSIC\x10\x06\x12,\n" +
	"(EXILE_CONFIGURATION_TYPE_LATITUDE_LIQUID\x10\aB\x89\x03\n" +
	"3com.services.org.exile_certificate_manager.v1alpha1B\rEntitiesProtoP\x01Zlgithub.com/tcncloud/api-go/services/org/exile_certificate_manager/v1alpha1;exile_certificate_managerv1alpha1\xa2\x02\x03SOE\xaa\x02-Services.Org.ExileCertificateManager.V1alpha1\xca\x02-Services\\Org\\ExileCertificateManager\\V1alpha1\xe2\x029Services\\Org\\ExileCertificateManager\\V1alpha1\\GPBMetadata\xea\x020Services::Org::ExileCertificateManager::V1alpha1b\x06proto3"

var (
	file_services_org_exile_certificate_manager_v1alpha1_entities_proto_rawDescOnce sync.Once
	file_services_org_exile_certificate_manager_v1alpha1_entities_proto_rawDescData []byte
)

func file_services_org_exile_certificate_manager_v1alpha1_entities_proto_rawDescGZIP() []byte {
	file_services_org_exile_certificate_manager_v1alpha1_entities_proto_rawDescOnce.Do(func() {
		file_services_org_exile_certificate_manager_v1alpha1_entities_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_services_org_exile_certificate_manager_v1alpha1_entities_proto_rawDesc), len(file_services_org_exile_certificate_manager_v1alpha1_entities_proto_rawDesc)))
	})
	return file_services_org_exile_certificate_manager_v1alpha1_entities_proto_rawDescData
}

var file_services_org_exile_certificate_manager_v1alpha1_entities_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_services_org_exile_certificate_manager_v1alpha1_entities_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_services_org_exile_certificate_manager_v1alpha1_entities_proto_goTypes = []any{
	(ExileConfigurationType)(0),   // 0: services.org.exile_certificate_manager.v1alpha1.ExileConfigurationType
	(*ExileCertificate)(nil),      // 1: services.org.exile_certificate_manager.v1alpha1.ExileCertificate
	(*ExileConfiguration)(nil),    // 2: services.org.exile_certificate_manager.v1alpha1.ExileConfiguration
	(*timestamppb.Timestamp)(nil), // 3: google.protobuf.Timestamp
}
var file_services_org_exile_certificate_manager_v1alpha1_entities_proto_depIdxs = []int32{
	3, // 0: services.org.exile_certificate_manager.v1alpha1.ExileCertificate.expiration_date:type_name -> google.protobuf.Timestamp
	3, // 1: services.org.exile_certificate_manager.v1alpha1.ExileCertificate.creation_date:type_name -> google.protobuf.Timestamp
	0, // 2: services.org.exile_certificate_manager.v1alpha1.ExileConfiguration.type:type_name -> services.org.exile_certificate_manager.v1alpha1.ExileConfigurationType
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_services_org_exile_certificate_manager_v1alpha1_entities_proto_init() }
func file_services_org_exile_certificate_manager_v1alpha1_entities_proto_init() {
	if File_services_org_exile_certificate_manager_v1alpha1_entities_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_services_org_exile_certificate_manager_v1alpha1_entities_proto_rawDesc), len(file_services_org_exile_certificate_manager_v1alpha1_entities_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_services_org_exile_certificate_manager_v1alpha1_entities_proto_goTypes,
		DependencyIndexes: file_services_org_exile_certificate_manager_v1alpha1_entities_proto_depIdxs,
		EnumInfos:         file_services_org_exile_certificate_manager_v1alpha1_entities_proto_enumTypes,
		MessageInfos:      file_services_org_exile_certificate_manager_v1alpha1_entities_proto_msgTypes,
	}.Build()
	File_services_org_exile_certificate_manager_v1alpha1_entities_proto = out.File
	file_services_org_exile_certificate_manager_v1alpha1_entities_proto_goTypes = nil
	file_services_org_exile_certificate_manager_v1alpha1_entities_proto_depIdxs = nil
}
