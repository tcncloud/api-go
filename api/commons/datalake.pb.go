// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: api/commons/datalake.proto

package commons

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// REMOVE IF I FORGET
type DLFSDef struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VfsId         int64                  `protobuf:"varint,1,opt,name=vfs_id,json=vfsId,proto3" json:"vfs_id,omitempty"`
	Incremental   bool                   `protobuf:"varint,10,opt,name=incremental,proto3" json:"incremental,omitempty"` // More to come I'm sure
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DLFSDef) Reset() {
	*x = DLFSDef{}
	mi := &file_api_commons_datalake_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DLFSDef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DLFSDef) ProtoMessage() {}

func (x *DLFSDef) ProtoReflect() protoreflect.Message {
	mi := &file_api_commons_datalake_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DLFSDef.ProtoReflect.Descriptor instead.
func (*DLFSDef) Descriptor() ([]byte, []int) {
	return file_api_commons_datalake_proto_rawDescGZIP(), []int{0}
}

func (x *DLFSDef) GetVfsId() int64 {
	if x != nil {
		return x.VfsId
	}
	return 0
}

func (x *DLFSDef) GetIncremental() bool {
	if x != nil {
		return x.Incremental
	}
	return false
}

type DLFSDefs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Defs          []*DLFSDef             `protobuf:"bytes,1,rep,name=defs,proto3" json:"defs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DLFSDefs) Reset() {
	*x = DLFSDefs{}
	mi := &file_api_commons_datalake_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DLFSDefs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DLFSDefs) ProtoMessage() {}

func (x *DLFSDefs) ProtoReflect() protoreflect.Message {
	mi := &file_api_commons_datalake_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DLFSDefs.ProtoReflect.Descriptor instead.
func (*DLFSDefs) Descriptor() ([]byte, []int) {
	return file_api_commons_datalake_proto_rawDescGZIP(), []int{1}
}

func (x *DLFSDefs) GetDefs() []*DLFSDef {
	if x != nil {
		return x.Defs
	}
	return nil
}

var File_api_commons_datalake_proto protoreflect.FileDescriptor

const file_api_commons_datalake_proto_rawDesc = "" +
	"\n" +
	"\x1aapi/commons/datalake.proto\x12\vapi.commons\"B\n" +
	"\aDLFSDef\x12\x15\n" +
	"\x06vfs_id\x18\x01 \x01(\x03R\x05vfsId\x12 \n" +
	"\vincremental\x18\n" +
	" \x01(\bR\vincremental\"4\n" +
	"\bDLFSDefs\x12(\n" +
	"\x04defs\x18\x01 \x03(\v2\x14.api.commons.DLFSDefR\x04defsB\x95\x01\n" +
	"\x0fcom.api.commonsB\rDatalakeProtoP\x01Z&github.com/tcncloud/api-go/api/commons\xa2\x02\x03ACX\xaa\x02\vApi.Commons\xca\x02\vApi\\Commons\xe2\x02\x17Api\\Commons\\GPBMetadata\xea\x02\fApi::Commonsb\x06proto3"

var (
	file_api_commons_datalake_proto_rawDescOnce sync.Once
	file_api_commons_datalake_proto_rawDescData []byte
)

func file_api_commons_datalake_proto_rawDescGZIP() []byte {
	file_api_commons_datalake_proto_rawDescOnce.Do(func() {
		file_api_commons_datalake_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_commons_datalake_proto_rawDesc), len(file_api_commons_datalake_proto_rawDesc)))
	})
	return file_api_commons_datalake_proto_rawDescData
}

var file_api_commons_datalake_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_api_commons_datalake_proto_goTypes = []any{
	(*DLFSDef)(nil),  // 0: api.commons.DLFSDef
	(*DLFSDefs)(nil), // 1: api.commons.DLFSDefs
}
var file_api_commons_datalake_proto_depIdxs = []int32{
	0, // 0: api.commons.DLFSDefs.defs:type_name -> api.commons.DLFSDef
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_api_commons_datalake_proto_init() }
func file_api_commons_datalake_proto_init() {
	if File_api_commons_datalake_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_commons_datalake_proto_rawDesc), len(file_api_commons_datalake_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_commons_datalake_proto_goTypes,
		DependencyIndexes: file_api_commons_datalake_proto_depIdxs,
		MessageInfos:      file_api_commons_datalake_proto_msgTypes,
	}.Build()
	File_api_commons_datalake_proto = out.File
	file_api_commons_datalake_proto_goTypes = nil
	file_api_commons_datalake_proto_depIdxs = nil
}
