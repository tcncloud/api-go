// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: api/commons/audit/p3_amqp_events.proto

package audit

import (
	commons "github.com/tcncloud/api-go/api/commons"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// P3AMQPCallResultEvent represents a P3 call result event created based on an AMQP message
type P3AMQPCallResultEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The call result.
	Result int64 `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	// The campaign sid.
	CampaignSid int64 `protobuf:"varint,2,opt,name=campaign_sid,json=campaignSid,proto3" json:"campaign_sid,omitempty"`
	// The time of call.
	TimeOfCall *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=time_of_call,json=timeOfCall,proto3" json:"time_of_call,omitempty"`
	// The call type.
	CallType commons.CallType_Enum `protobuf:"varint,4,opt,name=call_type,json=callType,proto3,enum=api.commons.CallType_Enum" json:"call_type,omitempty"`
	// The client sid.
	ClientSid int64 `protobuf:"varint,5,opt,name=client_sid,json=clientSid,proto3" json:"client_sid,omitempty"`
	// The call duration.
	Duration *durationpb.Duration `protobuf:"bytes,6,opt,name=duration,proto3" json:"duration,omitempty"`
	// The group description.
	GroupDescription string `protobuf:"bytes,7,opt,name=group_description,json=groupDescription,proto3" json:"group_description,omitempty"`
	// The end time of of call.
	EndTimeOfCall *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=end_time_of_call,json=endTimeOfCall,proto3" json:"end_time_of_call,omitempty"`
	// The phone number of the caller.
	PhoneNumber string `protobuf:"bytes,9,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	// The task sid.
	TaskSid int64 `protobuf:"varint,10,opt,name=task_sid,json=taskSid,proto3" json:"task_sid,omitempty"`
	// The call sid.
	CallSid int64 `protobuf:"varint,11,opt,name=call_sid,json=callSid,proto3" json:"call_sid,omitempty"`
	// The caller id.
	CallerId string `protobuf:"bytes,12,opt,name=caller_id,json=callerId,proto3" json:"caller_id,omitempty"`
	// The dtmf responses.
	DtmfResponses string `protobuf:"bytes,13,opt,name=dtmf_responses,json=dtmfResponses,proto3" json:"dtmf_responses,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *P3AMQPCallResultEvent) Reset() {
	*x = P3AMQPCallResultEvent{}
	mi := &file_api_commons_audit_p3_amqp_events_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *P3AMQPCallResultEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*P3AMQPCallResultEvent) ProtoMessage() {}

func (x *P3AMQPCallResultEvent) ProtoReflect() protoreflect.Message {
	mi := &file_api_commons_audit_p3_amqp_events_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use P3AMQPCallResultEvent.ProtoReflect.Descriptor instead.
func (*P3AMQPCallResultEvent) Descriptor() ([]byte, []int) {
	return file_api_commons_audit_p3_amqp_events_proto_rawDescGZIP(), []int{0}
}

func (x *P3AMQPCallResultEvent) GetResult() int64 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *P3AMQPCallResultEvent) GetCampaignSid() int64 {
	if x != nil {
		return x.CampaignSid
	}
	return 0
}

func (x *P3AMQPCallResultEvent) GetTimeOfCall() *timestamppb.Timestamp {
	if x != nil {
		return x.TimeOfCall
	}
	return nil
}

func (x *P3AMQPCallResultEvent) GetCallType() commons.CallType_Enum {
	if x != nil {
		return x.CallType
	}
	return commons.CallType_Enum(0)
}

func (x *P3AMQPCallResultEvent) GetClientSid() int64 {
	if x != nil {
		return x.ClientSid
	}
	return 0
}

func (x *P3AMQPCallResultEvent) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

func (x *P3AMQPCallResultEvent) GetGroupDescription() string {
	if x != nil {
		return x.GroupDescription
	}
	return ""
}

func (x *P3AMQPCallResultEvent) GetEndTimeOfCall() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTimeOfCall
	}
	return nil
}

func (x *P3AMQPCallResultEvent) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *P3AMQPCallResultEvent) GetTaskSid() int64 {
	if x != nil {
		return x.TaskSid
	}
	return 0
}

func (x *P3AMQPCallResultEvent) GetCallSid() int64 {
	if x != nil {
		return x.CallSid
	}
	return 0
}

func (x *P3AMQPCallResultEvent) GetCallerId() string {
	if x != nil {
		return x.CallerId
	}
	return ""
}

func (x *P3AMQPCallResultEvent) GetDtmfResponses() string {
	if x != nil {
		return x.DtmfResponses
	}
	return ""
}

// P3AMQPCallResultEvent represents a P3 call result event created based on an AMQP message
type P3AMQPAgentResponseEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The client sid.
	ClientSid int64 `protobuf:"varint,1,opt,name=client_sid,json=clientSid,proto3" json:"client_sid,omitempty"`
	// The agent sid.
	AgentSid int64 `protobuf:"varint,2,opt,name=agent_sid,json=agentSid,proto3" json:"agent_sid,omitempty"`
	// The hunt group sid.
	HuntGroupSid int64 `protobuf:"varint,3,opt,name=hunt_group_sid,json=huntGroupSid,proto3" json:"hunt_group_sid,omitempty"`
	// The call type.
	CallType commons.CallType_Enum `protobuf:"varint,4,opt,name=call_type,json=callType,proto3,enum=api.commons.CallType_Enum" json:"call_type,omitempty"`
	// The campaign sid.
	CampaignSid int64 `protobuf:"varint,5,opt,name=campaign_sid,json=campaignSid,proto3" json:"campaign_sid,omitempty"`
	// The call sid.
	CallSid int64 `protobuf:"varint,6,opt,name=call_sid,json=callSid,proto3" json:"call_sid,omitempty"`
	// The aggregation methods.
	AggregationMethods []string `protobuf:"bytes,7,rep,name=aggregation_methods,json=aggregationMethods,proto3" json:"aggregation_methods,omitempty"`
	// The agent name.
	AgentName string `protobuf:"bytes,8,opt,name=agent_name,json=agentName,proto3" json:"agent_name,omitempty"`
	// The hunt group name.
	HuntGroupName string `protobuf:"bytes,9,opt,name=hunt_group_name,json=huntGroupName,proto3" json:"hunt_group_name,omitempty"`
	// The responses map.
	ResponsesMap  map[string]string `protobuf:"bytes,10,rep,name=responses_map,json=responsesMap,proto3" json:"responses_map,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *P3AMQPAgentResponseEvent) Reset() {
	*x = P3AMQPAgentResponseEvent{}
	mi := &file_api_commons_audit_p3_amqp_events_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *P3AMQPAgentResponseEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*P3AMQPAgentResponseEvent) ProtoMessage() {}

func (x *P3AMQPAgentResponseEvent) ProtoReflect() protoreflect.Message {
	mi := &file_api_commons_audit_p3_amqp_events_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use P3AMQPAgentResponseEvent.ProtoReflect.Descriptor instead.
func (*P3AMQPAgentResponseEvent) Descriptor() ([]byte, []int) {
	return file_api_commons_audit_p3_amqp_events_proto_rawDescGZIP(), []int{1}
}

func (x *P3AMQPAgentResponseEvent) GetClientSid() int64 {
	if x != nil {
		return x.ClientSid
	}
	return 0
}

func (x *P3AMQPAgentResponseEvent) GetAgentSid() int64 {
	if x != nil {
		return x.AgentSid
	}
	return 0
}

func (x *P3AMQPAgentResponseEvent) GetHuntGroupSid() int64 {
	if x != nil {
		return x.HuntGroupSid
	}
	return 0
}

func (x *P3AMQPAgentResponseEvent) GetCallType() commons.CallType_Enum {
	if x != nil {
		return x.CallType
	}
	return commons.CallType_Enum(0)
}

func (x *P3AMQPAgentResponseEvent) GetCampaignSid() int64 {
	if x != nil {
		return x.CampaignSid
	}
	return 0
}

func (x *P3AMQPAgentResponseEvent) GetCallSid() int64 {
	if x != nil {
		return x.CallSid
	}
	return 0
}

func (x *P3AMQPAgentResponseEvent) GetAggregationMethods() []string {
	if x != nil {
		return x.AggregationMethods
	}
	return nil
}

func (x *P3AMQPAgentResponseEvent) GetAgentName() string {
	if x != nil {
		return x.AgentName
	}
	return ""
}

func (x *P3AMQPAgentResponseEvent) GetHuntGroupName() string {
	if x != nil {
		return x.HuntGroupName
	}
	return ""
}

func (x *P3AMQPAgentResponseEvent) GetResponsesMap() map[string]string {
	if x != nil {
		return x.ResponsesMap
	}
	return nil
}

var File_api_commons_audit_p3_amqp_events_proto protoreflect.FileDescriptor

const file_api_commons_audit_p3_amqp_events_proto_rawDesc = "" +
	"\n" +
	"&api/commons/audit/p3_amqp_events.proto\x12\x11api.commons.audit\x1a\x15api/commons/acd.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xc2\x04\n" +
	"\x15P3AMQPCallResultEvent\x12\x1a\n" +
	"\x06result\x18\x01 \x01(\x03B\x020\x01R\x06result\x12%\n" +
	"\fcampaign_sid\x18\x02 \x01(\x03B\x020\x01R\vcampaignSid\x12<\n" +
	"\ftime_of_call\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"timeOfCall\x127\n" +
	"\tcall_type\x18\x04 \x01(\x0e2\x1a.api.commons.CallType.EnumR\bcallType\x12!\n" +
	"\n" +
	"client_sid\x18\x05 \x01(\x03B\x020\x01R\tclientSid\x125\n" +
	"\bduration\x18\x06 \x01(\v2\x19.google.protobuf.DurationR\bduration\x12+\n" +
	"\x11group_description\x18\a \x01(\tR\x10groupDescription\x12C\n" +
	"\x10end_time_of_call\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\rendTimeOfCall\x12!\n" +
	"\fphone_number\x18\t \x01(\tR\vphoneNumber\x12\x1d\n" +
	"\btask_sid\x18\n" +
	" \x01(\x03B\x020\x01R\ataskSid\x12\x1d\n" +
	"\bcall_sid\x18\v \x01(\x03B\x020\x01R\acallSid\x12\x1b\n" +
	"\tcaller_id\x18\f \x01(\tR\bcallerId\x12%\n" +
	"\x0edtmf_responses\x18\r \x01(\tR\rdtmfResponses\"\xa4\x04\n" +
	"\x18P3AMQPAgentResponseEvent\x12!\n" +
	"\n" +
	"client_sid\x18\x01 \x01(\x03B\x020\x01R\tclientSid\x12\x1f\n" +
	"\tagent_sid\x18\x02 \x01(\x03B\x020\x01R\bagentSid\x12(\n" +
	"\x0ehunt_group_sid\x18\x03 \x01(\x03B\x020\x01R\fhuntGroupSid\x127\n" +
	"\tcall_type\x18\x04 \x01(\x0e2\x1a.api.commons.CallType.EnumR\bcallType\x12%\n" +
	"\fcampaign_sid\x18\x05 \x01(\x03B\x020\x01R\vcampaignSid\x12\x1d\n" +
	"\bcall_sid\x18\x06 \x01(\x03B\x020\x01R\acallSid\x12/\n" +
	"\x13aggregation_methods\x18\a \x03(\tR\x12aggregationMethods\x12\x1d\n" +
	"\n" +
	"agent_name\x18\b \x01(\tR\tagentName\x12&\n" +
	"\x0fhunt_group_name\x18\t \x01(\tR\rhuntGroupName\x12b\n" +
	"\rresponses_map\x18\n" +
	" \x03(\v2=.api.commons.audit.P3AMQPAgentResponseEvent.ResponsesMapEntryR\fresponsesMap\x1a?\n" +
	"\x11ResponsesMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\xbe\x01\n" +
	"\x15com.api.commons.auditB\x11P3AmqpEventsProtoP\x01Z,github.com/tcncloud/api-go/api/commons/audit\xa2\x02\x03ACA\xaa\x02\x11Api.Commons.Audit\xca\x02\x11Api\\Commons\\Audit\xe2\x02\x1dApi\\Commons\\Audit\\GPBMetadata\xea\x02\x13Api::Commons::Auditb\x06proto3"

var (
	file_api_commons_audit_p3_amqp_events_proto_rawDescOnce sync.Once
	file_api_commons_audit_p3_amqp_events_proto_rawDescData []byte
)

func file_api_commons_audit_p3_amqp_events_proto_rawDescGZIP() []byte {
	file_api_commons_audit_p3_amqp_events_proto_rawDescOnce.Do(func() {
		file_api_commons_audit_p3_amqp_events_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_commons_audit_p3_amqp_events_proto_rawDesc), len(file_api_commons_audit_p3_amqp_events_proto_rawDesc)))
	})
	return file_api_commons_audit_p3_amqp_events_proto_rawDescData
}

var file_api_commons_audit_p3_amqp_events_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_api_commons_audit_p3_amqp_events_proto_goTypes = []any{
	(*P3AMQPCallResultEvent)(nil),    // 0: api.commons.audit.P3AMQPCallResultEvent
	(*P3AMQPAgentResponseEvent)(nil), // 1: api.commons.audit.P3AMQPAgentResponseEvent
	nil,                              // 2: api.commons.audit.P3AMQPAgentResponseEvent.ResponsesMapEntry
	(*timestamppb.Timestamp)(nil),    // 3: google.protobuf.Timestamp
	(commons.CallType_Enum)(0),       // 4: api.commons.CallType.Enum
	(*durationpb.Duration)(nil),      // 5: google.protobuf.Duration
}
var file_api_commons_audit_p3_amqp_events_proto_depIdxs = []int32{
	3, // 0: api.commons.audit.P3AMQPCallResultEvent.time_of_call:type_name -> google.protobuf.Timestamp
	4, // 1: api.commons.audit.P3AMQPCallResultEvent.call_type:type_name -> api.commons.CallType.Enum
	5, // 2: api.commons.audit.P3AMQPCallResultEvent.duration:type_name -> google.protobuf.Duration
	3, // 3: api.commons.audit.P3AMQPCallResultEvent.end_time_of_call:type_name -> google.protobuf.Timestamp
	4, // 4: api.commons.audit.P3AMQPAgentResponseEvent.call_type:type_name -> api.commons.CallType.Enum
	2, // 5: api.commons.audit.P3AMQPAgentResponseEvent.responses_map:type_name -> api.commons.audit.P3AMQPAgentResponseEvent.ResponsesMapEntry
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_api_commons_audit_p3_amqp_events_proto_init() }
func file_api_commons_audit_p3_amqp_events_proto_init() {
	if File_api_commons_audit_p3_amqp_events_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_commons_audit_p3_amqp_events_proto_rawDesc), len(file_api_commons_audit_p3_amqp_events_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_commons_audit_p3_amqp_events_proto_goTypes,
		DependencyIndexes: file_api_commons_audit_p3_amqp_events_proto_depIdxs,
		MessageInfos:      file_api_commons_audit_p3_amqp_events_proto_msgTypes,
	}.Build()
	File_api_commons_audit_p3_amqp_events_proto = out.File
	file_api_commons_audit_p3_amqp_events_proto_goTypes = nil
	file_api_commons_audit_p3_amqp_events_proto_depIdxs = nil
}
