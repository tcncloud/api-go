// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: api/commons/audit/organization_events.proto

package audit

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// AccessTokensExpiringEvent is the event that is triggered when any users access tokens are expiring.
type AccessTokensExpiringEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The id of the organization.
	OrgId string `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	// The report of all the users access tokens that are expiring.
	Report        string `protobuf:"bytes,2,opt,name=report,proto3" json:"report,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccessTokensExpiringEvent) Reset() {
	*x = AccessTokensExpiringEvent{}
	mi := &file_api_commons_audit_organization_events_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccessTokensExpiringEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessTokensExpiringEvent) ProtoMessage() {}

func (x *AccessTokensExpiringEvent) ProtoReflect() protoreflect.Message {
	mi := &file_api_commons_audit_organization_events_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessTokensExpiringEvent.ProtoReflect.Descriptor instead.
func (*AccessTokensExpiringEvent) Descriptor() ([]byte, []int) {
	return file_api_commons_audit_organization_events_proto_rawDescGZIP(), []int{0}
}

func (x *AccessTokensExpiringEvent) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *AccessTokensExpiringEvent) GetReport() string {
	if x != nil {
		return x.Report
	}
	return ""
}

var File_api_commons_audit_organization_events_proto protoreflect.FileDescriptor

const file_api_commons_audit_organization_events_proto_rawDesc = "" +
	"\n" +
	"+api/commons/audit/organization_events.proto\x12\x11api.commons.audit\"J\n" +
	"\x19AccessTokensExpiringEvent\x12\x15\n" +
	"\x06org_id\x18\x01 \x01(\tR\x05orgId\x12\x16\n" +
	"\x06report\x18\x02 \x01(\tR\x06reportB\xc4\x01\n" +
	"\x15com.api.commons.auditB\x17OrganizationEventsProtoP\x01Z,github.com/tcncloud/api-go/api/commons/audit\xa2\x02\x03ACA\xaa\x02\x11Api.Commons.Audit\xca\x02\x11Api\\Commons\\Audit\xe2\x02\x1dApi\\Commons\\Audit\\GPBMetadata\xea\x02\x13Api::Commons::Auditb\x06proto3"

var (
	file_api_commons_audit_organization_events_proto_rawDescOnce sync.Once
	file_api_commons_audit_organization_events_proto_rawDescData []byte
)

func file_api_commons_audit_organization_events_proto_rawDescGZIP() []byte {
	file_api_commons_audit_organization_events_proto_rawDescOnce.Do(func() {
		file_api_commons_audit_organization_events_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_commons_audit_organization_events_proto_rawDesc), len(file_api_commons_audit_organization_events_proto_rawDesc)))
	})
	return file_api_commons_audit_organization_events_proto_rawDescData
}

var file_api_commons_audit_organization_events_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_api_commons_audit_organization_events_proto_goTypes = []any{
	(*AccessTokensExpiringEvent)(nil), // 0: api.commons.audit.AccessTokensExpiringEvent
}
var file_api_commons_audit_organization_events_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_api_commons_audit_organization_events_proto_init() }
func file_api_commons_audit_organization_events_proto_init() {
	if File_api_commons_audit_organization_events_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_commons_audit_organization_events_proto_rawDesc), len(file_api_commons_audit_organization_events_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_commons_audit_organization_events_proto_goTypes,
		DependencyIndexes: file_api_commons_audit_organization_events_proto_depIdxs,
		MessageInfos:      file_api_commons_audit_organization_events_proto_msgTypes,
	}.Build()
	File_api_commons_audit_organization_events_proto = out.File
	file_api_commons_audit_organization_events_proto_goTypes = nil
	file_api_commons_audit_organization_events_proto_depIdxs = nil
}
