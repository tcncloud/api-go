// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: api/commons/audit/lms_events.proto

package audit

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LMSPipelineFailureEvent struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ElementId      string                 `protobuf:"bytes,1,opt,name=element_id,json=elementId,proto3" json:"element_id,omitempty"`
	ElementName    string                 `protobuf:"bytes,2,opt,name=element_name,json=elementName,proto3" json:"element_name,omitempty"`
	FileName       string                 `protobuf:"bytes,3,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	FailureMessage string                 `protobuf:"bytes,4,opt,name=failure_message,json=failureMessage,proto3" json:"failure_message,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *LMSPipelineFailureEvent) Reset() {
	*x = LMSPipelineFailureEvent{}
	mi := &file_api_commons_audit_lms_events_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LMSPipelineFailureEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LMSPipelineFailureEvent) ProtoMessage() {}

func (x *LMSPipelineFailureEvent) ProtoReflect() protoreflect.Message {
	mi := &file_api_commons_audit_lms_events_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LMSPipelineFailureEvent.ProtoReflect.Descriptor instead.
func (*LMSPipelineFailureEvent) Descriptor() ([]byte, []int) {
	return file_api_commons_audit_lms_events_proto_rawDescGZIP(), []int{0}
}

func (x *LMSPipelineFailureEvent) GetElementId() string {
	if x != nil {
		return x.ElementId
	}
	return ""
}

func (x *LMSPipelineFailureEvent) GetElementName() string {
	if x != nil {
		return x.ElementName
	}
	return ""
}

func (x *LMSPipelineFailureEvent) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *LMSPipelineFailureEvent) GetFailureMessage() string {
	if x != nil {
		return x.FailureMessage
	}
	return ""
}

type LMSPipelineNoOutputEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ElementId     string                 `protobuf:"bytes,1,opt,name=element_id,json=elementId,proto3" json:"element_id,omitempty"`
	ElementName   string                 `protobuf:"bytes,2,opt,name=element_name,json=elementName,proto3" json:"element_name,omitempty"`
	FileName      string                 `protobuf:"bytes,3,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	EventMessage  string                 `protobuf:"bytes,4,opt,name=event_message,json=eventMessage,proto3" json:"event_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LMSPipelineNoOutputEvent) Reset() {
	*x = LMSPipelineNoOutputEvent{}
	mi := &file_api_commons_audit_lms_events_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LMSPipelineNoOutputEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LMSPipelineNoOutputEvent) ProtoMessage() {}

func (x *LMSPipelineNoOutputEvent) ProtoReflect() protoreflect.Message {
	mi := &file_api_commons_audit_lms_events_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LMSPipelineNoOutputEvent.ProtoReflect.Descriptor instead.
func (*LMSPipelineNoOutputEvent) Descriptor() ([]byte, []int) {
	return file_api_commons_audit_lms_events_proto_rawDescGZIP(), []int{1}
}

func (x *LMSPipelineNoOutputEvent) GetElementId() string {
	if x != nil {
		return x.ElementId
	}
	return ""
}

func (x *LMSPipelineNoOutputEvent) GetElementName() string {
	if x != nil {
		return x.ElementName
	}
	return ""
}

func (x *LMSPipelineNoOutputEvent) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *LMSPipelineNoOutputEvent) GetEventMessage() string {
	if x != nil {
		return x.EventMessage
	}
	return ""
}

type LMSPipelineSuccessfulEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ElementId     string                 `protobuf:"bytes,1,opt,name=element_id,json=elementId,proto3" json:"element_id,omitempty"`
	ElementName   string                 `protobuf:"bytes,2,opt,name=element_name,json=elementName,proto3" json:"element_name,omitempty"`
	FileName      string                 `protobuf:"bytes,3,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	EventMessage  string                 `protobuf:"bytes,4,opt,name=event_message,json=eventMessage,proto3" json:"event_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LMSPipelineSuccessfulEvent) Reset() {
	*x = LMSPipelineSuccessfulEvent{}
	mi := &file_api_commons_audit_lms_events_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LMSPipelineSuccessfulEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LMSPipelineSuccessfulEvent) ProtoMessage() {}

func (x *LMSPipelineSuccessfulEvent) ProtoReflect() protoreflect.Message {
	mi := &file_api_commons_audit_lms_events_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LMSPipelineSuccessfulEvent.ProtoReflect.Descriptor instead.
func (*LMSPipelineSuccessfulEvent) Descriptor() ([]byte, []int) {
	return file_api_commons_audit_lms_events_proto_rawDescGZIP(), []int{2}
}

func (x *LMSPipelineSuccessfulEvent) GetElementId() string {
	if x != nil {
		return x.ElementId
	}
	return ""
}

func (x *LMSPipelineSuccessfulEvent) GetElementName() string {
	if x != nil {
		return x.ElementName
	}
	return ""
}

func (x *LMSPipelineSuccessfulEvent) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *LMSPipelineSuccessfulEvent) GetEventMessage() string {
	if x != nil {
		return x.EventMessage
	}
	return ""
}

var File_api_commons_audit_lms_events_proto protoreflect.FileDescriptor

const file_api_commons_audit_lms_events_proto_rawDesc = "" +
	"\n" +
	"\"api/commons/audit/lms_events.proto\x12\x11api.commons.audit\"\xa1\x01\n" +
	"\x17LMSPipelineFailureEvent\x12\x1d\n" +
	"\n" +
	"element_id\x18\x01 \x01(\tR\telementId\x12!\n" +
	"\felement_name\x18\x02 \x01(\tR\velementName\x12\x1b\n" +
	"\tfile_name\x18\x03 \x01(\tR\bfileName\x12'\n" +
	"\x0ffailure_message\x18\x04 \x01(\tR\x0efailureMessage\"\x9e\x01\n" +
	"\x18LMSPipelineNoOutputEvent\x12\x1d\n" +
	"\n" +
	"element_id\x18\x01 \x01(\tR\telementId\x12!\n" +
	"\felement_name\x18\x02 \x01(\tR\velementName\x12\x1b\n" +
	"\tfile_name\x18\x03 \x01(\tR\bfileName\x12#\n" +
	"\revent_message\x18\x04 \x01(\tR\feventMessage\"\xa0\x01\n" +
	"\x1aLMSPipelineSuccessfulEvent\x12\x1d\n" +
	"\n" +
	"element_id\x18\x01 \x01(\tR\telementId\x12!\n" +
	"\felement_name\x18\x02 \x01(\tR\velementName\x12\x1b\n" +
	"\tfile_name\x18\x03 \x01(\tR\bfileName\x12#\n" +
	"\revent_message\x18\x04 \x01(\tR\feventMessageB\xbb\x01\n" +
	"\x15com.api.commons.auditB\x0eLmsEventsProtoP\x01Z,github.com/tcncloud/api-go/api/commons/audit\xa2\x02\x03ACA\xaa\x02\x11Api.Commons.Audit\xca\x02\x11Api\\Commons\\Audit\xe2\x02\x1dApi\\Commons\\Audit\\GPBMetadata\xea\x02\x13Api::Commons::Auditb\x06proto3"

var (
	file_api_commons_audit_lms_events_proto_rawDescOnce sync.Once
	file_api_commons_audit_lms_events_proto_rawDescData []byte
)

func file_api_commons_audit_lms_events_proto_rawDescGZIP() []byte {
	file_api_commons_audit_lms_events_proto_rawDescOnce.Do(func() {
		file_api_commons_audit_lms_events_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_commons_audit_lms_events_proto_rawDesc), len(file_api_commons_audit_lms_events_proto_rawDesc)))
	})
	return file_api_commons_audit_lms_events_proto_rawDescData
}

var file_api_commons_audit_lms_events_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_api_commons_audit_lms_events_proto_goTypes = []any{
	(*LMSPipelineFailureEvent)(nil),    // 0: api.commons.audit.LMSPipelineFailureEvent
	(*LMSPipelineNoOutputEvent)(nil),   // 1: api.commons.audit.LMSPipelineNoOutputEvent
	(*LMSPipelineSuccessfulEvent)(nil), // 2: api.commons.audit.LMSPipelineSuccessfulEvent
}
var file_api_commons_audit_lms_events_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_api_commons_audit_lms_events_proto_init() }
func file_api_commons_audit_lms_events_proto_init() {
	if File_api_commons_audit_lms_events_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_commons_audit_lms_events_proto_rawDesc), len(file_api_commons_audit_lms_events_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_commons_audit_lms_events_proto_goTypes,
		DependencyIndexes: file_api_commons_audit_lms_events_proto_depIdxs,
		MessageInfos:      file_api_commons_audit_lms_events_proto_msgTypes,
	}.Build()
	File_api_commons_audit_lms_events_proto = out.File
	file_api_commons_audit_lms_events_proto_goTypes = nil
	file_api_commons_audit_lms_events_proto_depIdxs = nil
}
