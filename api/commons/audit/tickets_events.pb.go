// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: api/commons/audit/tickets_events.proto

package audit

import (
	commons "github.com/tcncloud/api-go/api/commons"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TicketEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Editticket    *commons.EditTicket    `protobuf:"bytes,1,opt,name=editticket,proto3" json:"editticket,omitempty"`
	CreatedById   string                 `protobuf:"bytes,2,opt,name=created_by_id,json=createdById,proto3" json:"created_by_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TicketEvent) Reset() {
	*x = TicketEvent{}
	mi := &file_api_commons_audit_tickets_events_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TicketEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketEvent) ProtoMessage() {}

func (x *TicketEvent) ProtoReflect() protoreflect.Message {
	mi := &file_api_commons_audit_tickets_events_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketEvent.ProtoReflect.Descriptor instead.
func (*TicketEvent) Descriptor() ([]byte, []int) {
	return file_api_commons_audit_tickets_events_proto_rawDescGZIP(), []int{0}
}

func (x *TicketEvent) GetEditticket() *commons.EditTicket {
	if x != nil {
		return x.Editticket
	}
	return nil
}

func (x *TicketEvent) GetCreatedById() string {
	if x != nil {
		return x.CreatedById
	}
	return ""
}

type TicketCustomFieldCreateEvent struct {
	state                     protoimpl.MessageState             `protogen:"open.v1"`
	TicketCustomFieldAuditLog *commons.TicketCustomFieldAuditLog `protobuf:"bytes,1,opt,name=ticket_custom_field_audit_log,json=ticketCustomFieldAuditLog,proto3" json:"ticket_custom_field_audit_log,omitempty"`
	CreatedById               string                             `protobuf:"bytes,2,opt,name=created_by_id,json=createdById,proto3" json:"created_by_id,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *TicketCustomFieldCreateEvent) Reset() {
	*x = TicketCustomFieldCreateEvent{}
	mi := &file_api_commons_audit_tickets_events_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TicketCustomFieldCreateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketCustomFieldCreateEvent) ProtoMessage() {}

func (x *TicketCustomFieldCreateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_api_commons_audit_tickets_events_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketCustomFieldCreateEvent.ProtoReflect.Descriptor instead.
func (*TicketCustomFieldCreateEvent) Descriptor() ([]byte, []int) {
	return file_api_commons_audit_tickets_events_proto_rawDescGZIP(), []int{1}
}

func (x *TicketCustomFieldCreateEvent) GetTicketCustomFieldAuditLog() *commons.TicketCustomFieldAuditLog {
	if x != nil {
		return x.TicketCustomFieldAuditLog
	}
	return nil
}

func (x *TicketCustomFieldCreateEvent) GetCreatedById() string {
	if x != nil {
		return x.CreatedById
	}
	return ""
}

type TicketCustomFieldEditEvent struct {
	state                     protoimpl.MessageState             `protogen:"open.v1"`
	TicketCustomFieldAuditLog *commons.TicketCustomFieldAuditLog `protobuf:"bytes,1,opt,name=ticket_custom_field_audit_log,json=ticketCustomFieldAuditLog,proto3" json:"ticket_custom_field_audit_log,omitempty"`
	CreatedById               string                             `protobuf:"bytes,2,opt,name=created_by_id,json=createdById,proto3" json:"created_by_id,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *TicketCustomFieldEditEvent) Reset() {
	*x = TicketCustomFieldEditEvent{}
	mi := &file_api_commons_audit_tickets_events_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TicketCustomFieldEditEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketCustomFieldEditEvent) ProtoMessage() {}

func (x *TicketCustomFieldEditEvent) ProtoReflect() protoreflect.Message {
	mi := &file_api_commons_audit_tickets_events_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketCustomFieldEditEvent.ProtoReflect.Descriptor instead.
func (*TicketCustomFieldEditEvent) Descriptor() ([]byte, []int) {
	return file_api_commons_audit_tickets_events_proto_rawDescGZIP(), []int{2}
}

func (x *TicketCustomFieldEditEvent) GetTicketCustomFieldAuditLog() *commons.TicketCustomFieldAuditLog {
	if x != nil {
		return x.TicketCustomFieldAuditLog
	}
	return nil
}

func (x *TicketCustomFieldEditEvent) GetCreatedById() string {
	if x != nil {
		return x.CreatedById
	}
	return ""
}

var File_api_commons_audit_tickets_events_proto protoreflect.FileDescriptor

const file_api_commons_audit_tickets_events_proto_rawDesc = "" +
	"\n" +
	"&api/commons/audit/tickets_events.proto\x12\x11api.commons.audit\x1a\x19api/commons/tickets.proto\"j\n" +
	"\vTicketEvent\x127\n" +
	"\n" +
	"editticket\x18\x01 \x01(\v2\x17.api.commons.EditTicketR\n" +
	"editticket\x12\"\n" +
	"\rcreated_by_id\x18\x02 \x01(\tR\vcreatedById\"\xac\x01\n" +
	"\x1cTicketCustomFieldCreateEvent\x12h\n" +
	"\x1dticket_custom_field_audit_log\x18\x01 \x01(\v2&.api.commons.TicketCustomFieldAuditLogR\x19ticketCustomFieldAuditLog\x12\"\n" +
	"\rcreated_by_id\x18\x02 \x01(\tR\vcreatedById\"\xaa\x01\n" +
	"\x1aTicketCustomFieldEditEvent\x12h\n" +
	"\x1dticket_custom_field_audit_log\x18\x01 \x01(\v2&.api.commons.TicketCustomFieldAuditLogR\x19ticketCustomFieldAuditLog\x12\"\n" +
	"\rcreated_by_id\x18\x02 \x01(\tR\vcreatedByIdB\xbf\x01\n" +
	"\x15com.api.commons.auditB\x12TicketsEventsProtoP\x01Z,github.com/tcncloud/api-go/api/commons/audit\xa2\x02\x03ACA\xaa\x02\x11Api.Commons.Audit\xca\x02\x11Api\\Commons\\Audit\xe2\x02\x1dApi\\Commons\\Audit\\GPBMetadata\xea\x02\x13Api::Commons::Auditb\x06proto3"

var (
	file_api_commons_audit_tickets_events_proto_rawDescOnce sync.Once
	file_api_commons_audit_tickets_events_proto_rawDescData []byte
)

func file_api_commons_audit_tickets_events_proto_rawDescGZIP() []byte {
	file_api_commons_audit_tickets_events_proto_rawDescOnce.Do(func() {
		file_api_commons_audit_tickets_events_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_commons_audit_tickets_events_proto_rawDesc), len(file_api_commons_audit_tickets_events_proto_rawDesc)))
	})
	return file_api_commons_audit_tickets_events_proto_rawDescData
}

var file_api_commons_audit_tickets_events_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_api_commons_audit_tickets_events_proto_goTypes = []any{
	(*TicketEvent)(nil),                       // 0: api.commons.audit.TicketEvent
	(*TicketCustomFieldCreateEvent)(nil),      // 1: api.commons.audit.TicketCustomFieldCreateEvent
	(*TicketCustomFieldEditEvent)(nil),        // 2: api.commons.audit.TicketCustomFieldEditEvent
	(*commons.EditTicket)(nil),                // 3: api.commons.EditTicket
	(*commons.TicketCustomFieldAuditLog)(nil), // 4: api.commons.TicketCustomFieldAuditLog
}
var file_api_commons_audit_tickets_events_proto_depIdxs = []int32{
	3, // 0: api.commons.audit.TicketEvent.editticket:type_name -> api.commons.EditTicket
	4, // 1: api.commons.audit.TicketCustomFieldCreateEvent.ticket_custom_field_audit_log:type_name -> api.commons.TicketCustomFieldAuditLog
	4, // 2: api.commons.audit.TicketCustomFieldEditEvent.ticket_custom_field_audit_log:type_name -> api.commons.TicketCustomFieldAuditLog
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_api_commons_audit_tickets_events_proto_init() }
func file_api_commons_audit_tickets_events_proto_init() {
	if File_api_commons_audit_tickets_events_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_commons_audit_tickets_events_proto_rawDesc), len(file_api_commons_audit_tickets_events_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_commons_audit_tickets_events_proto_goTypes,
		DependencyIndexes: file_api_commons_audit_tickets_events_proto_depIdxs,
		MessageInfos:      file_api_commons_audit_tickets_events_proto_msgTypes,
	}.Build()
	File_api_commons_audit_tickets_events_proto = out.File
	file_api_commons_audit_tickets_events_proto_goTypes = nil
	file_api_commons_audit_tickets_events_proto_depIdxs = nil
}
