// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: api/commons/vanalytics.proto

package commons

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Interval enumerates common dynamic time periods.
type Interval int32

const (
	Interval_TODAY         Interval = 0
	Interval_YESTERDAY     Interval = 1
	Interval_THIS_WEEK     Interval = 2
	Interval_LAST_7_DAYS   Interval = 3
	Interval_LAST_WEEK     Interval = 4
	Interval_LAST_14_DAYS  Interval = 5
	Interval_THIS_MONTH    Interval = 6
	Interval_LAST_30_DAYS  Interval = 7
	Interval_LAST_60_DAYS  Interval = 8
	Interval_LAST_90_DAYS  Interval = 9
	Interval_LAST_180_DAYS Interval = 10
)

// Enum value maps for Interval.
var (
	Interval_name = map[int32]string{
		0:  "TODAY",
		1:  "YESTERDAY",
		2:  "THIS_WEEK",
		3:  "LAST_7_DAYS",
		4:  "LAST_WEEK",
		5:  "LAST_14_DAYS",
		6:  "THIS_MONTH",
		7:  "LAST_30_DAYS",
		8:  "LAST_60_DAYS",
		9:  "LAST_90_DAYS",
		10: "LAST_180_DAYS",
	}
	Interval_value = map[string]int32{
		"TODAY":         0,
		"YESTERDAY":     1,
		"THIS_WEEK":     2,
		"LAST_7_DAYS":   3,
		"LAST_WEEK":     4,
		"LAST_14_DAYS":  5,
		"THIS_MONTH":    6,
		"LAST_30_DAYS":  7,
		"LAST_60_DAYS":  8,
		"LAST_90_DAYS":  9,
		"LAST_180_DAYS": 10,
	}
)

func (x Interval) Enum() *Interval {
	p := new(Interval)
	*p = x
	return p
}

func (x Interval) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Interval) Descriptor() protoreflect.EnumDescriptor {
	return file_api_commons_vanalytics_proto_enumTypes[0].Descriptor()
}

func (Interval) Type() protoreflect.EnumType {
	return &file_api_commons_vanalytics_proto_enumTypes[0]
}

func (x Interval) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Interval.Descriptor instead.
func (Interval) EnumDescriptor() ([]byte, []int) {
	return file_api_commons_vanalytics_proto_rawDescGZIP(), []int{0}
}

// TranscriptSummaryStatus defines a set of possible statuses
// in which transcript summaries may exist.
type TranscriptSummaryStatus int32

const (
	// Initial - Summary is currently
	// queued and awaiting generation.
	TranscriptSummaryStatus_TRANSCRIPT_SUMMARY_STATUS_QUEUED TranscriptSummaryStatus = 0
	// Summary could not be generated.
	TranscriptSummaryStatus_TRANSCRIPT_SUMMARY_STATUS_QUEUED_ERRORED TranscriptSummaryStatus = -1
	// Summary has been generated.
	// Waiting to be added to transcript.
	TranscriptSummaryStatus_TRANSCRIPT_SUMMARY_STATUS_SUMMARIZED TranscriptSummaryStatus = 1
	// Summary could not be added to transcript.
	TranscriptSummaryStatus_TRANSCRIPT_SUMMARY_STATUS_SUMMARIZED_ERRORED TranscriptSummaryStatus = -2
	// Summary is generated and visible.
	TranscriptSummaryStatus_TRANSCRIPT_SUMMARY_STATUS_VISIBLE TranscriptSummaryStatus = 2
)

// Enum value maps for TranscriptSummaryStatus.
var (
	TranscriptSummaryStatus_name = map[int32]string{
		0:  "TRANSCRIPT_SUMMARY_STATUS_QUEUED",
		-1: "TRANSCRIPT_SUMMARY_STATUS_QUEUED_ERRORED",
		1:  "TRANSCRIPT_SUMMARY_STATUS_SUMMARIZED",
		-2: "TRANSCRIPT_SUMMARY_STATUS_SUMMARIZED_ERRORED",
		2:  "TRANSCRIPT_SUMMARY_STATUS_VISIBLE",
	}
	TranscriptSummaryStatus_value = map[string]int32{
		"TRANSCRIPT_SUMMARY_STATUS_QUEUED":             0,
		"TRANSCRIPT_SUMMARY_STATUS_QUEUED_ERRORED":     -1,
		"TRANSCRIPT_SUMMARY_STATUS_SUMMARIZED":         1,
		"TRANSCRIPT_SUMMARY_STATUS_SUMMARIZED_ERRORED": -2,
		"TRANSCRIPT_SUMMARY_STATUS_VISIBLE":            2,
	}
)

func (x TranscriptSummaryStatus) Enum() *TranscriptSummaryStatus {
	p := new(TranscriptSummaryStatus)
	*p = x
	return p
}

func (x TranscriptSummaryStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TranscriptSummaryStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_commons_vanalytics_proto_enumTypes[1].Descriptor()
}

func (TranscriptSummaryStatus) Type() protoreflect.EnumType {
	return &file_api_commons_vanalytics_proto_enumTypes[1]
}

func (x TranscriptSummaryStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TranscriptSummaryStatus.Descriptor instead.
func (TranscriptSummaryStatus) EnumDescriptor() ([]byte, []int) {
	return file_api_commons_vanalytics_proto_rawDescGZIP(), []int{1}
}

// TranscriptSentimentTone enumerates the possible sentiment tones.
type TranscriptSentimentTone int32

const (
	TranscriptSentimentTone_TRANSCRIPT_SENTIMENT_TONE_UNKNOWN  TranscriptSentimentTone = 0
	TranscriptSentimentTone_TRANSCRIPT_SENTIMENT_TONE_NEGATIVE TranscriptSentimentTone = 1
	TranscriptSentimentTone_TRANSCRIPT_SENTIMENT_TONE_NEUTRAL  TranscriptSentimentTone = 2
	TranscriptSentimentTone_TRANSCRIPT_SENTIMENT_TONE_POSITIVE TranscriptSentimentTone = 3
)

// Enum value maps for TranscriptSentimentTone.
var (
	TranscriptSentimentTone_name = map[int32]string{
		0: "TRANSCRIPT_SENTIMENT_TONE_UNKNOWN",
		1: "TRANSCRIPT_SENTIMENT_TONE_NEGATIVE",
		2: "TRANSCRIPT_SENTIMENT_TONE_NEUTRAL",
		3: "TRANSCRIPT_SENTIMENT_TONE_POSITIVE",
	}
	TranscriptSentimentTone_value = map[string]int32{
		"TRANSCRIPT_SENTIMENT_TONE_UNKNOWN":  0,
		"TRANSCRIPT_SENTIMENT_TONE_NEGATIVE": 1,
		"TRANSCRIPT_SENTIMENT_TONE_NEUTRAL":  2,
		"TRANSCRIPT_SENTIMENT_TONE_POSITIVE": 3,
	}
)

func (x TranscriptSentimentTone) Enum() *TranscriptSentimentTone {
	p := new(TranscriptSentimentTone)
	*p = x
	return p
}

func (x TranscriptSentimentTone) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TranscriptSentimentTone) Descriptor() protoreflect.EnumDescriptor {
	return file_api_commons_vanalytics_proto_enumTypes[2].Descriptor()
}

func (TranscriptSentimentTone) Type() protoreflect.EnumType {
	return &file_api_commons_vanalytics_proto_enumTypes[2]
}

func (x TranscriptSentimentTone) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TranscriptSentimentTone.Descriptor instead.
func (TranscriptSentimentTone) EnumDescriptor() ([]byte, []int) {
	return file_api_commons_vanalytics_proto_rawDescGZIP(), []int{2}
}

// RecordingType enum enumerates recording types.
type RecordingType int32

const (
	RecordingType_RECORDING_TYPE_TCN       RecordingType = 0
	RecordingType_RECORDING_TYPE_EXTERNAL  RecordingType = 1
	RecordingType_RECORDING_TYPE_VOICEMAIL RecordingType = 2
)

// Enum value maps for RecordingType.
var (
	RecordingType_name = map[int32]string{
		0: "RECORDING_TYPE_TCN",
		1: "RECORDING_TYPE_EXTERNAL",
		2: "RECORDING_TYPE_VOICEMAIL",
	}
	RecordingType_value = map[string]int32{
		"RECORDING_TYPE_TCN":       0,
		"RECORDING_TYPE_EXTERNAL":  1,
		"RECORDING_TYPE_VOICEMAIL": 2,
	}
)

func (x RecordingType) Enum() *RecordingType {
	p := new(RecordingType)
	*p = x
	return p
}

func (x RecordingType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RecordingType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_commons_vanalytics_proto_enumTypes[3].Descriptor()
}

func (RecordingType) Type() protoreflect.EnumType {
	return &file_api_commons_vanalytics_proto_enumTypes[3]
}

func (x RecordingType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RecordingType.Descriptor instead.
func (RecordingType) EnumDescriptor() ([]byte, []int) {
	return file_api_commons_vanalytics_proto_rawDescGZIP(), []int{3}
}

var File_api_commons_vanalytics_proto protoreflect.FileDescriptor

const file_api_commons_vanalytics_proto_rawDesc = "" +
	"\n" +
	"\x1capi/commons/vanalytics.proto\x12\vapi.commons*\xbe\x01\n" +
	"\bInterval\x12\t\n" +
	"\x05TODAY\x10\x00\x12\r\n" +
	"\tYESTERDAY\x10\x01\x12\r\n" +
	"\tTHIS_WEEK\x10\x02\x12\x0f\n" +
	"\vLAST_7_DAYS\x10\x03\x12\r\n" +
	"\tLAST_WEEK\x10\x04\x12\x10\n" +
	"\fLAST_14_DAYS\x10\x05\x12\x0e\n" +
	"\n" +
	"THIS_MONTH\x10\x06\x12\x10\n" +
	"\fLAST_30_DAYS\x10\a\x12\x10\n" +
	"\fLAST_60_DAYS\x10\b\x12\x10\n" +
	"\fLAST_90_DAYS\x10\t\x12\x11\n" +
	"\rLAST_180_DAYS\x10\n" +
	"*\x82\x02\n" +
	"\x17TranscriptSummaryStatus\x12$\n" +
	" TRANSCRIPT_SUMMARY_STATUS_QUEUED\x10\x00\x125\n" +
	"(TRANSCRIPT_SUMMARY_STATUS_QUEUED_ERRORED\x10\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01\x12(\n" +
	"$TRANSCRIPT_SUMMARY_STATUS_SUMMARIZED\x10\x01\x129\n" +
	",TRANSCRIPT_SUMMARY_STATUS_SUMMARIZED_ERRORED\x10\xfe\xff\xff\xff\xff\xff\xff\xff\xff\x01\x12%\n" +
	"!TRANSCRIPT_SUMMARY_STATUS_VISIBLE\x10\x02*\xb7\x01\n" +
	"\x17TranscriptSentimentTone\x12%\n" +
	"!TRANSCRIPT_SENTIMENT_TONE_UNKNOWN\x10\x00\x12&\n" +
	"\"TRANSCRIPT_SENTIMENT_TONE_NEGATIVE\x10\x01\x12%\n" +
	"!TRANSCRIPT_SENTIMENT_TONE_NEUTRAL\x10\x02\x12&\n" +
	"\"TRANSCRIPT_SENTIMENT_TONE_POSITIVE\x10\x03*b\n" +
	"\rRecordingType\x12\x16\n" +
	"\x12RECORDING_TYPE_TCN\x10\x00\x12\x1b\n" +
	"\x17RECORDING_TYPE_EXTERNAL\x10\x01\x12\x1c\n" +
	"\x18RECORDING_TYPE_VOICEMAIL\x10\x02B\x97\x01\n" +
	"\x0fcom.api.commonsB\x0fVanalyticsProtoP\x01Z&github.com/tcncloud/api-go/api/commons\xa2\x02\x03ACX\xaa\x02\vApi.Commons\xca\x02\vApi\\Commons\xe2\x02\x17Api\\Commons\\GPBMetadata\xea\x02\fApi::Commonsb\x06proto3"

var (
	file_api_commons_vanalytics_proto_rawDescOnce sync.Once
	file_api_commons_vanalytics_proto_rawDescData []byte
)

func file_api_commons_vanalytics_proto_rawDescGZIP() []byte {
	file_api_commons_vanalytics_proto_rawDescOnce.Do(func() {
		file_api_commons_vanalytics_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_commons_vanalytics_proto_rawDesc), len(file_api_commons_vanalytics_proto_rawDesc)))
	})
	return file_api_commons_vanalytics_proto_rawDescData
}

var file_api_commons_vanalytics_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_api_commons_vanalytics_proto_goTypes = []any{
	(Interval)(0),                // 0: api.commons.Interval
	(TranscriptSummaryStatus)(0), // 1: api.commons.TranscriptSummaryStatus
	(TranscriptSentimentTone)(0), // 2: api.commons.TranscriptSentimentTone
	(RecordingType)(0),           // 3: api.commons.RecordingType
}
var file_api_commons_vanalytics_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_api_commons_vanalytics_proto_init() }
func file_api_commons_vanalytics_proto_init() {
	if File_api_commons_vanalytics_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_commons_vanalytics_proto_rawDesc), len(file_api_commons_vanalytics_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_commons_vanalytics_proto_goTypes,
		DependencyIndexes: file_api_commons_vanalytics_proto_depIdxs,
		EnumInfos:         file_api_commons_vanalytics_proto_enumTypes,
	}.Build()
	File_api_commons_vanalytics_proto = out.File
	file_api_commons_vanalytics_proto_goTypes = nil
	file_api_commons_vanalytics_proto_depIdxs = nil
}
