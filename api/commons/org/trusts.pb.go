// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: api/commons/org/trusts.proto

package org

import (
	auth "github.com/tcncloud/api-go/api/commons/auth"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Status represents the states that trusts can be in.
type Status int32

const (
	Status_PENDING  Status = 0
	Status_REJECTED Status = 1
	Status_ACCEPTED Status = 2
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "PENDING",
		1: "REJECTED",
		2: "ACCEPTED",
	}
	Status_value = map[string]int32{
		"PENDING":  0,
		"REJECTED": 1,
		"ACCEPTED": 2,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_api_commons_org_trusts_proto_enumTypes[0].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_api_commons_org_trusts_proto_enumTypes[0]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_api_commons_org_trusts_proto_rawDescGZIP(), []int{0}
}

// Trust is the entity message for trusts.
type Trust struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the trust.
	TrustId string `protobuf:"bytes,1,opt,name=trust_id,json=trustId,proto3" json:"trust_id,omitempty"`
	// Org ID of the org giving out the trust.
	Grantor string `protobuf:"bytes,2,opt,name=grantor,proto3" json:"grantor,omitempty"`
	// Org ID of the org receiving the trust.
	Grantee string `protobuf:"bytes,3,opt,name=grantee,proto3" json:"grantee,omitempty"`
	// Name of the trust.
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// Description of the trust.
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// Permissions the grantor allows users within the
	// grantee org to have when assigned.
	Permissions []auth.Permission `protobuf:"varint,6,rep,packed,name=permissions,proto3,enum=api.commons.auth.Permission" json:"permissions,omitempty"`
	// Labels associated with the trusted permissions.
	Labels []*Label `protobuf:"bytes,7,rep,name=labels,proto3" json:"labels,omitempty"`
	// Status of the Trust.
	Status        Status `protobuf:"varint,8,opt,name=status,proto3,enum=api.commons.org.Status" json:"status,omitempty"`
	Deleted       bool   `protobuf:"varint,9,opt,name=deleted,proto3" json:"deleted,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Trust) Reset() {
	*x = Trust{}
	mi := &file_api_commons_org_trusts_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Trust) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trust) ProtoMessage() {}

func (x *Trust) ProtoReflect() protoreflect.Message {
	mi := &file_api_commons_org_trusts_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trust.ProtoReflect.Descriptor instead.
func (*Trust) Descriptor() ([]byte, []int) {
	return file_api_commons_org_trusts_proto_rawDescGZIP(), []int{0}
}

func (x *Trust) GetTrustId() string {
	if x != nil {
		return x.TrustId
	}
	return ""
}

func (x *Trust) GetGrantor() string {
	if x != nil {
		return x.Grantor
	}
	return ""
}

func (x *Trust) GetGrantee() string {
	if x != nil {
		return x.Grantee
	}
	return ""
}

func (x *Trust) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Trust) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Trust) GetPermissions() []auth.Permission {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *Trust) GetLabels() []*Label {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Trust) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_PENDING
}

func (x *Trust) GetDeleted() bool {
	if x != nil {
		return x.Deleted
	}
	return false
}

// TrustGroup contains ALL trusted permission/label groups
// assigned to a user.
type TrustGroup struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Org ID of the org the trusts are from.
	Grantor string `protobuf:"bytes,1,opt,name=grantor,proto3" json:"grantor,omitempty"`
	// All perm/label groups the user has from the grantor org.
	// The length of the labeled_permissions list is equal
	// to the number of assigned trusts the user has from
	// the grantor org.
	LabeledPermissions []*TrustGroup_LabeledPermissions `protobuf:"bytes,2,rep,name=labeled_permissions,json=labeledPermissions,proto3" json:"labeled_permissions,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *TrustGroup) Reset() {
	*x = TrustGroup{}
	mi := &file_api_commons_org_trusts_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrustGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrustGroup) ProtoMessage() {}

func (x *TrustGroup) ProtoReflect() protoreflect.Message {
	mi := &file_api_commons_org_trusts_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrustGroup.ProtoReflect.Descriptor instead.
func (*TrustGroup) Descriptor() ([]byte, []int) {
	return file_api_commons_org_trusts_proto_rawDescGZIP(), []int{1}
}

func (x *TrustGroup) GetGrantor() string {
	if x != nil {
		return x.Grantor
	}
	return ""
}

func (x *TrustGroup) GetLabeledPermissions() []*TrustGroup_LabeledPermissions {
	if x != nil {
		return x.LabeledPermissions
	}
	return nil
}

// TrustFilter is used to filter trusts during list RPCs.
type TrustFilter struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Only return trusts with grantor org id matching this value.
	// Nil will not filter based on grantor.
	Grantor *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=grantor,proto3" json:"grantor,omitempty"`
	// Only return trusts with grantee org id matching this value.
	// Nil will not filter based on grantee.
	Grantee *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=grantee,proto3" json:"grantee,omitempty"`
	// Only return trusts matching ANY of the given statuses.bool
	// Nil will not filter based on status.
	StatusFilter  *TrustFilter_StatusFilter `protobuf:"bytes,3,opt,name=status_filter,json=statusFilter,proto3" json:"status_filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TrustFilter) Reset() {
	*x = TrustFilter{}
	mi := &file_api_commons_org_trusts_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrustFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrustFilter) ProtoMessage() {}

func (x *TrustFilter) ProtoReflect() protoreflect.Message {
	mi := &file_api_commons_org_trusts_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrustFilter.ProtoReflect.Descriptor instead.
func (*TrustFilter) Descriptor() ([]byte, []int) {
	return file_api_commons_org_trusts_proto_rawDescGZIP(), []int{2}
}

func (x *TrustFilter) GetGrantor() *wrapperspb.StringValue {
	if x != nil {
		return x.Grantor
	}
	return nil
}

func (x *TrustFilter) GetGrantee() *wrapperspb.StringValue {
	if x != nil {
		return x.Grantee
	}
	return nil
}

func (x *TrustFilter) GetStatusFilter() *TrustFilter_StatusFilter {
	if x != nil {
		return x.StatusFilter
	}
	return nil
}

type TrustGroup_LabeledPermissions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Permissions   []auth.Permission      `protobuf:"varint,1,rep,packed,name=permissions,proto3,enum=api.commons.auth.Permission" json:"permissions,omitempty"`
	Labels        []*Label               `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TrustGroup_LabeledPermissions) Reset() {
	*x = TrustGroup_LabeledPermissions{}
	mi := &file_api_commons_org_trusts_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrustGroup_LabeledPermissions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrustGroup_LabeledPermissions) ProtoMessage() {}

func (x *TrustGroup_LabeledPermissions) ProtoReflect() protoreflect.Message {
	mi := &file_api_commons_org_trusts_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrustGroup_LabeledPermissions.ProtoReflect.Descriptor instead.
func (*TrustGroup_LabeledPermissions) Descriptor() ([]byte, []int) {
	return file_api_commons_org_trusts_proto_rawDescGZIP(), []int{1, 0}
}

func (x *TrustGroup_LabeledPermissions) GetPermissions() []auth.Permission {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *TrustGroup_LabeledPermissions) GetLabels() []*Label {
	if x != nil {
		return x.Labels
	}
	return nil
}

type TrustFilter_StatusFilter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Values        []Status               `protobuf:"varint,1,rep,packed,name=values,proto3,enum=api.commons.org.Status" json:"values,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TrustFilter_StatusFilter) Reset() {
	*x = TrustFilter_StatusFilter{}
	mi := &file_api_commons_org_trusts_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrustFilter_StatusFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrustFilter_StatusFilter) ProtoMessage() {}

func (x *TrustFilter_StatusFilter) ProtoReflect() protoreflect.Message {
	mi := &file_api_commons_org_trusts_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrustFilter_StatusFilter.ProtoReflect.Descriptor instead.
func (*TrustFilter_StatusFilter) Descriptor() ([]byte, []int) {
	return file_api_commons_org_trusts_proto_rawDescGZIP(), []int{2, 0}
}

func (x *TrustFilter_StatusFilter) GetValues() []Status {
	if x != nil {
		return x.Values
	}
	return nil
}

var File_api_commons_org_trusts_proto protoreflect.FileDescriptor

const file_api_commons_org_trusts_proto_rawDesc = "" +
	"\n" +
	"\x1capi/commons/org/trusts.proto\x12\x0fapi.commons.org\x1a\x1capi/commons/auth/perms.proto\x1a\x1capi/commons/org/labels.proto\x1a\x1egoogle/protobuf/wrappers.proto\"\xc7\x02\n" +
	"\x05Trust\x12\x19\n" +
	"\btrust_id\x18\x01 \x01(\tR\atrustId\x12\x18\n" +
	"\agrantor\x18\x02 \x01(\tR\agrantor\x12\x18\n" +
	"\agrantee\x18\x03 \x01(\tR\agrantee\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x05 \x01(\tR\vdescription\x12>\n" +
	"\vpermissions\x18\x06 \x03(\x0e2\x1c.api.commons.auth.PermissionR\vpermissions\x12.\n" +
	"\x06labels\x18\a \x03(\v2\x16.api.commons.org.LabelR\x06labels\x12/\n" +
	"\x06status\x18\b \x01(\x0e2\x17.api.commons.org.StatusR\x06status\x12\x18\n" +
	"\adeleted\x18\t \x01(\bR\adeleted\"\x8e\x02\n" +
	"\n" +
	"TrustGroup\x12\x18\n" +
	"\agrantor\x18\x01 \x01(\tR\agrantor\x12_\n" +
	"\x13labeled_permissions\x18\x02 \x03(\v2..api.commons.org.TrustGroup.LabeledPermissionsR\x12labeledPermissions\x1a\x84\x01\n" +
	"\x12LabeledPermissions\x12>\n" +
	"\vpermissions\x18\x01 \x03(\x0e2\x1c.api.commons.auth.PermissionR\vpermissions\x12.\n" +
	"\x06labels\x18\x02 \x03(\v2\x16.api.commons.org.LabelR\x06labels\"\x8e\x02\n" +
	"\vTrustFilter\x126\n" +
	"\agrantor\x18\x01 \x01(\v2\x1c.google.protobuf.StringValueR\agrantor\x126\n" +
	"\agrantee\x18\x02 \x01(\v2\x1c.google.protobuf.StringValueR\agrantee\x12N\n" +
	"\rstatus_filter\x18\x03 \x01(\v2).api.commons.org.TrustFilter.StatusFilterR\fstatusFilter\x1a?\n" +
	"\fStatusFilter\x12/\n" +
	"\x06values\x18\x01 \x03(\x0e2\x17.api.commons.org.StatusR\x06values*1\n" +
	"\x06Status\x12\v\n" +
	"\aPENDING\x10\x00\x12\f\n" +
	"\bREJECTED\x10\x01\x12\f\n" +
	"\bACCEPTED\x10\x02B\xac\x01\n" +
	"\x13com.api.commons.orgB\vTrustsProtoP\x01Z*github.com/tcncloud/api-go/api/commons/org\xa2\x02\x03ACO\xaa\x02\x0fApi.Commons.Org\xca\x02\x0fApi\\Commons\\Org\xe2\x02\x1bApi\\Commons\\Org\\GPBMetadata\xea\x02\x11Api::Commons::Orgb\x06proto3"

var (
	file_api_commons_org_trusts_proto_rawDescOnce sync.Once
	file_api_commons_org_trusts_proto_rawDescData []byte
)

func file_api_commons_org_trusts_proto_rawDescGZIP() []byte {
	file_api_commons_org_trusts_proto_rawDescOnce.Do(func() {
		file_api_commons_org_trusts_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_commons_org_trusts_proto_rawDesc), len(file_api_commons_org_trusts_proto_rawDesc)))
	})
	return file_api_commons_org_trusts_proto_rawDescData
}

var file_api_commons_org_trusts_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_commons_org_trusts_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_api_commons_org_trusts_proto_goTypes = []any{
	(Status)(0),                           // 0: api.commons.org.Status
	(*Trust)(nil),                         // 1: api.commons.org.Trust
	(*TrustGroup)(nil),                    // 2: api.commons.org.TrustGroup
	(*TrustFilter)(nil),                   // 3: api.commons.org.TrustFilter
	(*TrustGroup_LabeledPermissions)(nil), // 4: api.commons.org.TrustGroup.LabeledPermissions
	(*TrustFilter_StatusFilter)(nil),      // 5: api.commons.org.TrustFilter.StatusFilter
	(auth.Permission)(0),                  // 6: api.commons.auth.Permission
	(*Label)(nil),                         // 7: api.commons.org.Label
	(*wrapperspb.StringValue)(nil),        // 8: google.protobuf.StringValue
}
var file_api_commons_org_trusts_proto_depIdxs = []int32{
	6,  // 0: api.commons.org.Trust.permissions:type_name -> api.commons.auth.Permission
	7,  // 1: api.commons.org.Trust.labels:type_name -> api.commons.org.Label
	0,  // 2: api.commons.org.Trust.status:type_name -> api.commons.org.Status
	4,  // 3: api.commons.org.TrustGroup.labeled_permissions:type_name -> api.commons.org.TrustGroup.LabeledPermissions
	8,  // 4: api.commons.org.TrustFilter.grantor:type_name -> google.protobuf.StringValue
	8,  // 5: api.commons.org.TrustFilter.grantee:type_name -> google.protobuf.StringValue
	5,  // 6: api.commons.org.TrustFilter.status_filter:type_name -> api.commons.org.TrustFilter.StatusFilter
	6,  // 7: api.commons.org.TrustGroup.LabeledPermissions.permissions:type_name -> api.commons.auth.Permission
	7,  // 8: api.commons.org.TrustGroup.LabeledPermissions.labels:type_name -> api.commons.org.Label
	0,  // 9: api.commons.org.TrustFilter.StatusFilter.values:type_name -> api.commons.org.Status
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_api_commons_org_trusts_proto_init() }
func file_api_commons_org_trusts_proto_init() {
	if File_api_commons_org_trusts_proto != nil {
		return
	}
	file_api_commons_org_labels_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_commons_org_trusts_proto_rawDesc), len(file_api_commons_org_trusts_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_commons_org_trusts_proto_goTypes,
		DependencyIndexes: file_api_commons_org_trusts_proto_depIdxs,
		EnumInfos:         file_api_commons_org_trusts_proto_enumTypes,
		MessageInfos:      file_api_commons_org_trusts_proto_msgTypes,
	}.Build()
	File_api_commons_org_trusts_proto = out.File
	file_api_commons_org_trusts_proto_goTypes = nil
	file_api_commons_org_trusts_proto_depIdxs = nil
}
