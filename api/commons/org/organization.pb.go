// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: api/commons/org/organization.proto

package org

import (
	commons "github.com/tcncloud/api-go/api/commons"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Organization contains the basic properties for an organization.
type Organization struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// An organization's globally unique identifier.
	OrgId string `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	// Map of regionId to clientSid. Shows an org's enabled regions.
	EnabledRegions map[string]int64 `protobuf:"bytes,2,rep,name=enabled_regions,json=enabledRegions,proto3" json:"enabled_regions,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	// Default region org was first enbabled for.
	RegionId string `protobuf:"bytes,3,opt,name=region_id,json=regionId,proto3" json:"region_id,omitempty"`
	// Billing_prefix + clientSid. Used for integrations and billing.
	BillingId string `protobuf:"bytes,4,opt,name=billing_id,json=billingId,proto3" json:"billing_id,omitempty"`
	// First enabled region's clientSid; will be deprecated for
	// enabled_regions map.
	ClientSid int64 `protobuf:"varint,5,opt,name=client_sid,json=clientSid,proto3" json:"client_sid,omitempty"`
	// The organization name.
	Name string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	// Date of organization creation.
	AddDate *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=add_date,json=addDate,proto3" json:"add_date,omitempty"`
	// Whether account is manual only.
	IsManualOnlyAccount bool `protobuf:"varint,8,opt,name=is_manual_only_account,json=isManualOnlyAccount,proto3" json:"is_manual_only_account,omitempty"`
	// Backoffice UI theme/skin.
	BackofficeTheme commons.ClientSkin `protobuf:"varint,9,opt,name=backoffice_theme,json=backofficeTheme,proto3,enum=api.commons.ClientSkin" json:"backoffice_theme,omitempty"`
	// Archived specifies this organization as no longer active.
	Archived bool `protobuf:"varint,10,opt,name=archived,proto3" json:"archived,omitempty"`
	// Salesforce ID used for integrations.
	CrmId string `protobuf:"bytes,11,opt,name=crm_id,json=crmId,proto3" json:"crm_id,omitempty"`
	// Organization's time zone.
	TimeZone commons.TimeZone `protobuf:"varint,12,opt,name=time_zone,json=timeZone,proto3,enum=api.commons.TimeZone" json:"time_zone,omitempty"`
	// Organization callbacks service ID.
	CallbacksServiceId string `protobuf:"bytes,13,opt,name=callbacks_service_id,json=callbacksServiceId,proto3" json:"callbacks_service_id,omitempty"`
	// Organization that is the parent.
	P3OwnerId     string `protobuf:"bytes,14,opt,name=p3_owner_id,json=p3OwnerId,proto3" json:"p3_owner_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Organization) Reset() {
	*x = Organization{}
	mi := &file_api_commons_org_organization_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Organization) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Organization) ProtoMessage() {}

func (x *Organization) ProtoReflect() protoreflect.Message {
	mi := &file_api_commons_org_organization_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Organization.ProtoReflect.Descriptor instead.
func (*Organization) Descriptor() ([]byte, []int) {
	return file_api_commons_org_organization_proto_rawDescGZIP(), []int{0}
}

func (x *Organization) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *Organization) GetEnabledRegions() map[string]int64 {
	if x != nil {
		return x.EnabledRegions
	}
	return nil
}

func (x *Organization) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

func (x *Organization) GetBillingId() string {
	if x != nil {
		return x.BillingId
	}
	return ""
}

func (x *Organization) GetClientSid() int64 {
	if x != nil {
		return x.ClientSid
	}
	return 0
}

func (x *Organization) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Organization) GetAddDate() *timestamppb.Timestamp {
	if x != nil {
		return x.AddDate
	}
	return nil
}

func (x *Organization) GetIsManualOnlyAccount() bool {
	if x != nil {
		return x.IsManualOnlyAccount
	}
	return false
}

func (x *Organization) GetBackofficeTheme() commons.ClientSkin {
	if x != nil {
		return x.BackofficeTheme
	}
	return commons.ClientSkin(0)
}

func (x *Organization) GetArchived() bool {
	if x != nil {
		return x.Archived
	}
	return false
}

func (x *Organization) GetCrmId() string {
	if x != nil {
		return x.CrmId
	}
	return ""
}

func (x *Organization) GetTimeZone() commons.TimeZone {
	if x != nil {
		return x.TimeZone
	}
	return commons.TimeZone(0)
}

func (x *Organization) GetCallbacksServiceId() string {
	if x != nil {
		return x.CallbacksServiceId
	}
	return ""
}

func (x *Organization) GetP3OwnerId() string {
	if x != nil {
		return x.P3OwnerId
	}
	return ""
}

type OrganizationDetails struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Organization      *Organization          `protobuf:"bytes,1,opt,name=organization,proto3" json:"organization,omitempty"`
	LastScheduledDate *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=last_scheduled_date,json=lastScheduledDate,proto3" json:"last_scheduled_date,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *OrganizationDetails) Reset() {
	*x = OrganizationDetails{}
	mi := &file_api_commons_org_organization_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrganizationDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrganizationDetails) ProtoMessage() {}

func (x *OrganizationDetails) ProtoReflect() protoreflect.Message {
	mi := &file_api_commons_org_organization_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrganizationDetails.ProtoReflect.Descriptor instead.
func (*OrganizationDetails) Descriptor() ([]byte, []int) {
	return file_api_commons_org_organization_proto_rawDescGZIP(), []int{1}
}

func (x *OrganizationDetails) GetOrganization() *Organization {
	if x != nil {
		return x.Organization
	}
	return nil
}

func (x *OrganizationDetails) GetLastScheduledDate() *timestamppb.Timestamp {
	if x != nil {
		return x.LastScheduledDate
	}
	return nil
}

var File_api_commons_org_organization_proto protoreflect.FileDescriptor

const file_api_commons_org_organization_proto_rawDesc = "" +
	"\n" +
	"\"api/commons/org/organization.proto\x12\x0fapi.commons.org\x1a\x15api/commons/org.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\x9c\x05\n" +
	"\fOrganization\x12\x15\n" +
	"\x06org_id\x18\x01 \x01(\tR\x05orgId\x12Z\n" +
	"\x0fenabled_regions\x18\x02 \x03(\v21.api.commons.org.Organization.EnabledRegionsEntryR\x0eenabledRegions\x12\x1b\n" +
	"\tregion_id\x18\x03 \x01(\tR\bregionId\x12\x1d\n" +
	"\n" +
	"billing_id\x18\x04 \x01(\tR\tbillingId\x12\x1d\n" +
	"\n" +
	"client_sid\x18\x05 \x01(\x03R\tclientSid\x12\x12\n" +
	"\x04name\x18\x06 \x01(\tR\x04name\x125\n" +
	"\badd_date\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\aaddDate\x123\n" +
	"\x16is_manual_only_account\x18\b \x01(\bR\x13isManualOnlyAccount\x12B\n" +
	"\x10backoffice_theme\x18\t \x01(\x0e2\x17.api.commons.ClientSkinR\x0fbackofficeTheme\x12\x1a\n" +
	"\barchived\x18\n" +
	" \x01(\bR\barchived\x12\x15\n" +
	"\x06crm_id\x18\v \x01(\tR\x05crmId\x122\n" +
	"\ttime_zone\x18\f \x01(\x0e2\x15.api.commons.TimeZoneR\btimeZone\x120\n" +
	"\x14callbacks_service_id\x18\r \x01(\tR\x12callbacksServiceId\x12\x1e\n" +
	"\vp3_owner_id\x18\x0e \x01(\tR\tp3OwnerId\x1aA\n" +
	"\x13EnabledRegionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01\"\xa4\x01\n" +
	"\x13OrganizationDetails\x12A\n" +
	"\forganization\x18\x01 \x01(\v2\x1d.api.commons.org.OrganizationR\forganization\x12J\n" +
	"\x13last_scheduled_date\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x11lastScheduledDateB\xb2\x01\n" +
	"\x13com.api.commons.orgB\x11OrganizationProtoP\x01Z*github.com/tcncloud/api-go/api/commons/org\xa2\x02\x03ACO\xaa\x02\x0fApi.Commons.Org\xca\x02\x0fApi\\Commons\\Org\xe2\x02\x1bApi\\Commons\\Org\\GPBMetadata\xea\x02\x11Api::Commons::Orgb\x06proto3"

var (
	file_api_commons_org_organization_proto_rawDescOnce sync.Once
	file_api_commons_org_organization_proto_rawDescData []byte
)

func file_api_commons_org_organization_proto_rawDescGZIP() []byte {
	file_api_commons_org_organization_proto_rawDescOnce.Do(func() {
		file_api_commons_org_organization_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_commons_org_organization_proto_rawDesc), len(file_api_commons_org_organization_proto_rawDesc)))
	})
	return file_api_commons_org_organization_proto_rawDescData
}

var file_api_commons_org_organization_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_api_commons_org_organization_proto_goTypes = []any{
	(*Organization)(nil),          // 0: api.commons.org.Organization
	(*OrganizationDetails)(nil),   // 1: api.commons.org.OrganizationDetails
	nil,                           // 2: api.commons.org.Organization.EnabledRegionsEntry
	(*timestamppb.Timestamp)(nil), // 3: google.protobuf.Timestamp
	(commons.ClientSkin)(0),       // 4: api.commons.ClientSkin
	(commons.TimeZone)(0),         // 5: api.commons.TimeZone
}
var file_api_commons_org_organization_proto_depIdxs = []int32{
	2, // 0: api.commons.org.Organization.enabled_regions:type_name -> api.commons.org.Organization.EnabledRegionsEntry
	3, // 1: api.commons.org.Organization.add_date:type_name -> google.protobuf.Timestamp
	4, // 2: api.commons.org.Organization.backoffice_theme:type_name -> api.commons.ClientSkin
	5, // 3: api.commons.org.Organization.time_zone:type_name -> api.commons.TimeZone
	0, // 4: api.commons.org.OrganizationDetails.organization:type_name -> api.commons.org.Organization
	3, // 5: api.commons.org.OrganizationDetails.last_scheduled_date:type_name -> google.protobuf.Timestamp
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_api_commons_org_organization_proto_init() }
func file_api_commons_org_organization_proto_init() {
	if File_api_commons_org_organization_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_commons_org_organization_proto_rawDesc), len(file_api_commons_org_organization_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_commons_org_organization_proto_goTypes,
		DependencyIndexes: file_api_commons_org_organization_proto_depIdxs,
		MessageInfos:      file_api_commons_org_organization_proto_msgTypes,
	}.Build()
	File_api_commons_org_organization_proto = out.File
	file_api_commons_org_organization_proto_goTypes = nil
	file_api_commons_org_organization_proto_depIdxs = nil
}
