// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: api/commons/org.proto

package commons

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TimeZone int32

const (
	TimeZone_TIME_ZONE_AMERICA_PUERTO_RICO      TimeZone = 0  // America/Puerto_Rico
	TimeZone_TIME_ZONE_AMERICA_NEW_YORK         TimeZone = 1  // America/New_York
	TimeZone_TIME_ZONE_AMERICA_INDIANAPOLIS     TimeZone = 2  // America/Indianapolis
	TimeZone_TIME_ZONE_AMERICA_CHICAGO          TimeZone = 3  // America/Chicago
	TimeZone_TIME_ZONE_AMERICA_PHOENIX          TimeZone = 4  // America/Phoenix
	TimeZone_TIME_ZONE_AMERICA_DENVER           TimeZone = 5  // America/Denver
	TimeZone_TIME_ZONE_AMERICA_LOS_ANGELES      TimeZone = 6  // America/Los_Angeles
	TimeZone_TIME_ZONE_AMERICA_ANCHORAGE        TimeZone = 7  // America/Anchorage
	TimeZone_TIME_ZONE_ASIA_MANILA              TimeZone = 8  // Asia/Manila
	TimeZone_TIME_ZONE_ASIA_CALCUTTA            TimeZone = 9  // Asia/Calcutta
	TimeZone_TIME_ZONE_ASIA_COLOMBO             TimeZone = 10 // Asia/Colombo
	TimeZone_TIME_ZONE_PACIFIC_HONOLULU         TimeZone = 11 // Pacific/Honolulu
	TimeZone_TIME_ZONE_CANADA_NEWFOUNDLAND      TimeZone = 12 // Canada/Newfoundland
	TimeZone_TIME_ZONE_CANADA_ATLANTIC          TimeZone = 13 // Canada/Atlantic
	TimeZone_TIME_ZONE_CANADA_CENTRAL           TimeZone = 14 // Canada/Central
	TimeZone_TIME_ZONE_CANADA_EAST_SASKATCHEWAN TimeZone = 15 // Canada/East-Saskatchewan
	TimeZone_TIME_ZONE_CANADA_EASTERN           TimeZone = 16 // Canada/Eastern
	TimeZone_TIME_ZONE_CANADA_MOUNTAIN          TimeZone = 17 // Canada/Mountain
	TimeZone_TIME_ZONE_CANADA_PACIFIC           TimeZone = 18 // Canada/Pacific
	TimeZone_TIME_ZONE_CANADA_SASKATCHEWAN      TimeZone = 19 // Canada/Saskatchewan
	TimeZone_TIME_ZONE_CANADA_YUKON             TimeZone = 20 // Canada/Yukon
	TimeZone_TIME_ZONE_ETC_GREENWICH            TimeZone = 21 // Etc/Greenwich
	TimeZone_TIME_ZONE_ETC_UNIVERSAL            TimeZone = 22 // Etc/Universal
	TimeZone_TIME_ZONE_EUROPE_LONDON            TimeZone = 23 // Europe/London
	TimeZone_TIME_ZONE_EUROPE_MADRID            TimeZone = 24 // Europe/Madrid
	TimeZone_TIME_ZONE_EUROPE_BERLIN            TimeZone = 25 // Europe/Berlin
	TimeZone_TIME_ZONE_EUROPE_BUCHAREST         TimeZone = 26 // Europe/Bucharest
	TimeZone_TIME_ZONE_AMERICA_MEXICO_CITY      TimeZone = 27 // America/Mexico_City
	TimeZone_TIME_ZONE_MEXICO_BAJASUR           TimeZone = 28 // Mexico/BajaSur
	TimeZone_TIME_ZONE_MEXICO_BAJANORTE         TimeZone = 29 // Mexico/BajaNorte
	TimeZone_TIME_ZONE_BRAZIL_ACRE              TimeZone = 30 // Brazil/Acre
	TimeZone_TIME_ZONE_BRAZIL_WEST              TimeZone = 31 // Brazil/West
	TimeZone_TIME_ZONE_BRAZIL_EAST              TimeZone = 32 // Brazil/East
	TimeZone_TIME_ZONE_BRAZIL_DENORONHA         TimeZone = 33 // Brazil/DeNoronha
	TimeZone_TIME_ZONE_AUSTRALIA_DARWIN         TimeZone = 34 // Australia/Darwin
	TimeZone_TIME_ZONE_AUSTRALIA_ADELAIDE       TimeZone = 35 // Australia/Adelaide
	TimeZone_TIME_ZONE_AUSTRALIA_SYDNEY         TimeZone = 36 // Australia/Sydney
	TimeZone_TIME_ZONE_AUSTRALIA_BRISBANE       TimeZone = 37 // Australia/Brisbane
	TimeZone_TIME_ZONE_AUSTRALIA_MELBOURNE      TimeZone = 38 // Australia/Melbourne
	TimeZone_TIME_ZONE_AUSTRALIA_PERTH          TimeZone = 39 // Australia/Perth
	TimeZone_TIME_ZONE_PACIFIC_AUCKLAND         TimeZone = 40 // Pacific/Auckland
	TimeZone_TIME_ZONE_PACIFIC_CHATHAM          TimeZone = 41 // Pacific/Chatham
	TimeZone_TIME_ZONE_ASIA_SINGAPORE           TimeZone = 42 // Singapore
	TimeZone_TIME_ZONE_ASIA_JAPAN               TimeZone = 43 // Japan
	TimeZone_TIME_ZONE_AMERICA_SANTIAGO         TimeZone = 44 // America/Santiago
	TimeZone_TIME_ZONE_AMERICA_BOGOTA           TimeZone = 45 // America/Bogota
	TimeZone_TIME_ZONE_AMERICA_LIMA             TimeZone = 46 // America/Lima
)

// Enum value maps for TimeZone.
var (
	TimeZone_name = map[int32]string{
		0:  "TIME_ZONE_AMERICA_PUERTO_RICO",
		1:  "TIME_ZONE_AMERICA_NEW_YORK",
		2:  "TIME_ZONE_AMERICA_INDIANAPOLIS",
		3:  "TIME_ZONE_AMERICA_CHICAGO",
		4:  "TIME_ZONE_AMERICA_PHOENIX",
		5:  "TIME_ZONE_AMERICA_DENVER",
		6:  "TIME_ZONE_AMERICA_LOS_ANGELES",
		7:  "TIME_ZONE_AMERICA_ANCHORAGE",
		8:  "TIME_ZONE_ASIA_MANILA",
		9:  "TIME_ZONE_ASIA_CALCUTTA",
		10: "TIME_ZONE_ASIA_COLOMBO",
		11: "TIME_ZONE_PACIFIC_HONOLULU",
		12: "TIME_ZONE_CANADA_NEWFOUNDLAND",
		13: "TIME_ZONE_CANADA_ATLANTIC",
		14: "TIME_ZONE_CANADA_CENTRAL",
		15: "TIME_ZONE_CANADA_EAST_SASKATCHEWAN",
		16: "TIME_ZONE_CANADA_EASTERN",
		17: "TIME_ZONE_CANADA_MOUNTAIN",
		18: "TIME_ZONE_CANADA_PACIFIC",
		19: "TIME_ZONE_CANADA_SASKATCHEWAN",
		20: "TIME_ZONE_CANADA_YUKON",
		21: "TIME_ZONE_ETC_GREENWICH",
		22: "TIME_ZONE_ETC_UNIVERSAL",
		23: "TIME_ZONE_EUROPE_LONDON",
		24: "TIME_ZONE_EUROPE_MADRID",
		25: "TIME_ZONE_EUROPE_BERLIN",
		26: "TIME_ZONE_EUROPE_BUCHAREST",
		27: "TIME_ZONE_AMERICA_MEXICO_CITY",
		28: "TIME_ZONE_MEXICO_BAJASUR",
		29: "TIME_ZONE_MEXICO_BAJANORTE",
		30: "TIME_ZONE_BRAZIL_ACRE",
		31: "TIME_ZONE_BRAZIL_WEST",
		32: "TIME_ZONE_BRAZIL_EAST",
		33: "TIME_ZONE_BRAZIL_DENORONHA",
		34: "TIME_ZONE_AUSTRALIA_DARWIN",
		35: "TIME_ZONE_AUSTRALIA_ADELAIDE",
		36: "TIME_ZONE_AUSTRALIA_SYDNEY",
		37: "TIME_ZONE_AUSTRALIA_BRISBANE",
		38: "TIME_ZONE_AUSTRALIA_MELBOURNE",
		39: "TIME_ZONE_AUSTRALIA_PERTH",
		40: "TIME_ZONE_PACIFIC_AUCKLAND",
		41: "TIME_ZONE_PACIFIC_CHATHAM",
		42: "TIME_ZONE_ASIA_SINGAPORE",
		43: "TIME_ZONE_ASIA_JAPAN",
		44: "TIME_ZONE_AMERICA_SANTIAGO",
		45: "TIME_ZONE_AMERICA_BOGOTA",
		46: "TIME_ZONE_AMERICA_LIMA",
	}
	TimeZone_value = map[string]int32{
		"TIME_ZONE_AMERICA_PUERTO_RICO":      0,
		"TIME_ZONE_AMERICA_NEW_YORK":         1,
		"TIME_ZONE_AMERICA_INDIANAPOLIS":     2,
		"TIME_ZONE_AMERICA_CHICAGO":          3,
		"TIME_ZONE_AMERICA_PHOENIX":          4,
		"TIME_ZONE_AMERICA_DENVER":           5,
		"TIME_ZONE_AMERICA_LOS_ANGELES":      6,
		"TIME_ZONE_AMERICA_ANCHORAGE":        7,
		"TIME_ZONE_ASIA_MANILA":              8,
		"TIME_ZONE_ASIA_CALCUTTA":            9,
		"TIME_ZONE_ASIA_COLOMBO":             10,
		"TIME_ZONE_PACIFIC_HONOLULU":         11,
		"TIME_ZONE_CANADA_NEWFOUNDLAND":      12,
		"TIME_ZONE_CANADA_ATLANTIC":          13,
		"TIME_ZONE_CANADA_CENTRAL":           14,
		"TIME_ZONE_CANADA_EAST_SASKATCHEWAN": 15,
		"TIME_ZONE_CANADA_EASTERN":           16,
		"TIME_ZONE_CANADA_MOUNTAIN":          17,
		"TIME_ZONE_CANADA_PACIFIC":           18,
		"TIME_ZONE_CANADA_SASKATCHEWAN":      19,
		"TIME_ZONE_CANADA_YUKON":             20,
		"TIME_ZONE_ETC_GREENWICH":            21,
		"TIME_ZONE_ETC_UNIVERSAL":            22,
		"TIME_ZONE_EUROPE_LONDON":            23,
		"TIME_ZONE_EUROPE_MADRID":            24,
		"TIME_ZONE_EUROPE_BERLIN":            25,
		"TIME_ZONE_EUROPE_BUCHAREST":         26,
		"TIME_ZONE_AMERICA_MEXICO_CITY":      27,
		"TIME_ZONE_MEXICO_BAJASUR":           28,
		"TIME_ZONE_MEXICO_BAJANORTE":         29,
		"TIME_ZONE_BRAZIL_ACRE":              30,
		"TIME_ZONE_BRAZIL_WEST":              31,
		"TIME_ZONE_BRAZIL_EAST":              32,
		"TIME_ZONE_BRAZIL_DENORONHA":         33,
		"TIME_ZONE_AUSTRALIA_DARWIN":         34,
		"TIME_ZONE_AUSTRALIA_ADELAIDE":       35,
		"TIME_ZONE_AUSTRALIA_SYDNEY":         36,
		"TIME_ZONE_AUSTRALIA_BRISBANE":       37,
		"TIME_ZONE_AUSTRALIA_MELBOURNE":      38,
		"TIME_ZONE_AUSTRALIA_PERTH":          39,
		"TIME_ZONE_PACIFIC_AUCKLAND":         40,
		"TIME_ZONE_PACIFIC_CHATHAM":          41,
		"TIME_ZONE_ASIA_SINGAPORE":           42,
		"TIME_ZONE_ASIA_JAPAN":               43,
		"TIME_ZONE_AMERICA_SANTIAGO":         44,
		"TIME_ZONE_AMERICA_BOGOTA":           45,
		"TIME_ZONE_AMERICA_LIMA":             46,
	}
)

func (x TimeZone) Enum() *TimeZone {
	p := new(TimeZone)
	*p = x
	return p
}

func (x TimeZone) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TimeZone) Descriptor() protoreflect.EnumDescriptor {
	return file_api_commons_org_proto_enumTypes[0].Descriptor()
}

func (TimeZone) Type() protoreflect.EnumType {
	return &file_api_commons_org_proto_enumTypes[0]
}

func (x TimeZone) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TimeZone.Descriptor instead.
func (TimeZone) EnumDescriptor() ([]byte, []int) {
	return file_api_commons_org_proto_rawDescGZIP(), []int{0}
}

type DisplayLanguage int32

const (
	DisplayLanguage_DISPLAY_LANGUAGE_SPANISH       DisplayLanguage = 0 // Spanish
	DisplayLanguage_DISPLAY_LANGUAGE_FRENCH_CANADA DisplayLanguage = 1 // French (Canada)
	DisplayLanguage_DISPLAY_LANGUAGE_PORTUGUESE    DisplayLanguage = 2 // Portuguese
	DisplayLanguage_DISPLAY_LANGUAGE_ENGLISH       DisplayLanguage = 3 // English
)

// Enum value maps for DisplayLanguage.
var (
	DisplayLanguage_name = map[int32]string{
		0: "DISPLAY_LANGUAGE_SPANISH",
		1: "DISPLAY_LANGUAGE_FRENCH_CANADA",
		2: "DISPLAY_LANGUAGE_PORTUGUESE",
		3: "DISPLAY_LANGUAGE_ENGLISH",
	}
	DisplayLanguage_value = map[string]int32{
		"DISPLAY_LANGUAGE_SPANISH":       0,
		"DISPLAY_LANGUAGE_FRENCH_CANADA": 1,
		"DISPLAY_LANGUAGE_PORTUGUESE":    2,
		"DISPLAY_LANGUAGE_ENGLISH":       3,
	}
)

func (x DisplayLanguage) Enum() *DisplayLanguage {
	p := new(DisplayLanguage)
	*p = x
	return p
}

func (x DisplayLanguage) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DisplayLanguage) Descriptor() protoreflect.EnumDescriptor {
	return file_api_commons_org_proto_enumTypes[1].Descriptor()
}

func (DisplayLanguage) Type() protoreflect.EnumType {
	return &file_api_commons_org_proto_enumTypes[1]
}

func (x DisplayLanguage) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DisplayLanguage.Descriptor instead.
func (DisplayLanguage) EnumDescriptor() ([]byte, []int) {
	return file_api_commons_org_proto_rawDescGZIP(), []int{1}
}

type DefaultDuplicateHandling int32

const (
	DefaultDuplicateHandling_DEFAULT_DUPLICATE_HANDLING_KEEP_RECORD_AND_DISCARD_NUMBER DefaultDuplicateHandling = 0
	DefaultDuplicateHandling_DEFAULT_DUPLICATE_HANDLING_DISCARD_RECORD                 DefaultDuplicateHandling = 1
	DefaultDuplicateHandling_DEFAULT_DUPLICATE_HANDLING_ALLOW_DUPLICATES               DefaultDuplicateHandling = 2
	DefaultDuplicateHandling_DEFAULT_DUPLICATE_HANDLING_CREATE_DUPLICATES_LIST         DefaultDuplicateHandling = 3
)

// Enum value maps for DefaultDuplicateHandling.
var (
	DefaultDuplicateHandling_name = map[int32]string{
		0: "DEFAULT_DUPLICATE_HANDLING_KEEP_RECORD_AND_DISCARD_NUMBER",
		1: "DEFAULT_DUPLICATE_HANDLING_DISCARD_RECORD",
		2: "DEFAULT_DUPLICATE_HANDLING_ALLOW_DUPLICATES",
		3: "DEFAULT_DUPLICATE_HANDLING_CREATE_DUPLICATES_LIST",
	}
	DefaultDuplicateHandling_value = map[string]int32{
		"DEFAULT_DUPLICATE_HANDLING_KEEP_RECORD_AND_DISCARD_NUMBER": 0,
		"DEFAULT_DUPLICATE_HANDLING_DISCARD_RECORD":                 1,
		"DEFAULT_DUPLICATE_HANDLING_ALLOW_DUPLICATES":               2,
		"DEFAULT_DUPLICATE_HANDLING_CREATE_DUPLICATES_LIST":         3,
	}
)

func (x DefaultDuplicateHandling) Enum() *DefaultDuplicateHandling {
	p := new(DefaultDuplicateHandling)
	*p = x
	return p
}

func (x DefaultDuplicateHandling) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DefaultDuplicateHandling) Descriptor() protoreflect.EnumDescriptor {
	return file_api_commons_org_proto_enumTypes[2].Descriptor()
}

func (DefaultDuplicateHandling) Type() protoreflect.EnumType {
	return &file_api_commons_org_proto_enumTypes[2]
}

func (x DefaultDuplicateHandling) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DefaultDuplicateHandling.Descriptor instead.
func (DefaultDuplicateHandling) EnumDescriptor() ([]byte, []int) {
	return file_api_commons_org_proto_rawDescGZIP(), []int{2}
}

type StandardImportFormat int32

const (
	StandardImportFormat_STANDARD_IMPORT_FORMAT_TAB_DELIMITED         StandardImportFormat = 0
	StandardImportFormat_STANDARD_IMPORT_FORMAT_EXCEL_COMMA_SEPARATED StandardImportFormat = 1
	StandardImportFormat_STANDARD_IMPORT_FORMAT_COMMA_SEPARATED       StandardImportFormat = 2
)

// Enum value maps for StandardImportFormat.
var (
	StandardImportFormat_name = map[int32]string{
		0: "STANDARD_IMPORT_FORMAT_TAB_DELIMITED",
		1: "STANDARD_IMPORT_FORMAT_EXCEL_COMMA_SEPARATED",
		2: "STANDARD_IMPORT_FORMAT_COMMA_SEPARATED",
	}
	StandardImportFormat_value = map[string]int32{
		"STANDARD_IMPORT_FORMAT_TAB_DELIMITED":         0,
		"STANDARD_IMPORT_FORMAT_EXCEL_COMMA_SEPARATED": 1,
		"STANDARD_IMPORT_FORMAT_COMMA_SEPARATED":       2,
	}
)

func (x StandardImportFormat) Enum() *StandardImportFormat {
	p := new(StandardImportFormat)
	*p = x
	return p
}

func (x StandardImportFormat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StandardImportFormat) Descriptor() protoreflect.EnumDescriptor {
	return file_api_commons_org_proto_enumTypes[3].Descriptor()
}

func (StandardImportFormat) Type() protoreflect.EnumType {
	return &file_api_commons_org_proto_enumTypes[3]
}

func (x StandardImportFormat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StandardImportFormat.Descriptor instead.
func (StandardImportFormat) EnumDescriptor() ([]byte, []int) {
	return file_api_commons_org_proto_rawDescGZIP(), []int{3}
}

type AgentInfoSortBy int32

const (
	AgentInfoSortBy_AGENT_INFO_SORT_BY_NONE                        AgentInfoSortBy = 0  // None
	AgentInfoSortBy_AGENT_INFO_SORT_BY_AGENT                       AgentInfoSortBy = 1  // AgentID
	AgentInfoSortBy_AGENT_INFO_SORT_BY_AGENT_LAST_NAME             AgentInfoSortBy = 2  // Agent Last Name
	AgentInfoSortBy_AGENT_INFO_SORT_BY_AGENT_STATUS_SIMPLIFIER     AgentInfoSortBy = 3  // Agent Status
	AgentInfoSortBy_AGENT_INFO_SORT_BY_CALL_COUNT                  AgentInfoSortBy = 4  // Call Count
	AgentInfoSortBy_AGENT_INFO_SORT_BY_SECONDS_SINCE_STATUS_CHANGE AgentInfoSortBy = 5  // Duration in Status
	AgentInfoSortBy_AGENT_INFO_SORT_BY_HUNT_GROUP_NAME             AgentInfoSortBy = 6  // Hunt Group Name
	AgentInfoSortBy_AGENT_INFO_SORT_BY_HUNT_GROUP_SID              AgentInfoSortBy = 7  // Hunt Group ID
	AgentInfoSortBy_AGENT_INFO_SORT_BY_SESSION_LOGIN_TIME          AgentInfoSortBy = 8  // Login Time
	AgentInfoSortBy_AGENT_INFO_SORT_BY_MULTI_HOLD_COUNT            AgentInfoSortBy = 9  // Multi-hold Count
	AgentInfoSortBy_AGENT_INFO_SORT_BY_SIMPLE_HOLD_COUNT           AgentInfoSortBy = 10 // Simple Hold Count
	AgentInfoSortBy_AGENT_INFO_SORT_BY_HOLD_COUNT                  AgentInfoSortBy = 11 // Total Hold Count
)

// Enum value maps for AgentInfoSortBy.
var (
	AgentInfoSortBy_name = map[int32]string{
		0:  "AGENT_INFO_SORT_BY_NONE",
		1:  "AGENT_INFO_SORT_BY_AGENT",
		2:  "AGENT_INFO_SORT_BY_AGENT_LAST_NAME",
		3:  "AGENT_INFO_SORT_BY_AGENT_STATUS_SIMPLIFIER",
		4:  "AGENT_INFO_SORT_BY_CALL_COUNT",
		5:  "AGENT_INFO_SORT_BY_SECONDS_SINCE_STATUS_CHANGE",
		6:  "AGENT_INFO_SORT_BY_HUNT_GROUP_NAME",
		7:  "AGENT_INFO_SORT_BY_HUNT_GROUP_SID",
		8:  "AGENT_INFO_SORT_BY_SESSION_LOGIN_TIME",
		9:  "AGENT_INFO_SORT_BY_MULTI_HOLD_COUNT",
		10: "AGENT_INFO_SORT_BY_SIMPLE_HOLD_COUNT",
		11: "AGENT_INFO_SORT_BY_HOLD_COUNT",
	}
	AgentInfoSortBy_value = map[string]int32{
		"AGENT_INFO_SORT_BY_NONE":                        0,
		"AGENT_INFO_SORT_BY_AGENT":                       1,
		"AGENT_INFO_SORT_BY_AGENT_LAST_NAME":             2,
		"AGENT_INFO_SORT_BY_AGENT_STATUS_SIMPLIFIER":     3,
		"AGENT_INFO_SORT_BY_CALL_COUNT":                  4,
		"AGENT_INFO_SORT_BY_SECONDS_SINCE_STATUS_CHANGE": 5,
		"AGENT_INFO_SORT_BY_HUNT_GROUP_NAME":             6,
		"AGENT_INFO_SORT_BY_HUNT_GROUP_SID":              7,
		"AGENT_INFO_SORT_BY_SESSION_LOGIN_TIME":          8,
		"AGENT_INFO_SORT_BY_MULTI_HOLD_COUNT":            9,
		"AGENT_INFO_SORT_BY_SIMPLE_HOLD_COUNT":           10,
		"AGENT_INFO_SORT_BY_HOLD_COUNT":                  11,
	}
)

func (x AgentInfoSortBy) Enum() *AgentInfoSortBy {
	p := new(AgentInfoSortBy)
	*p = x
	return p
}

func (x AgentInfoSortBy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AgentInfoSortBy) Descriptor() protoreflect.EnumDescriptor {
	return file_api_commons_org_proto_enumTypes[4].Descriptor()
}

func (AgentInfoSortBy) Type() protoreflect.EnumType {
	return &file_api_commons_org_proto_enumTypes[4]
}

func (x AgentInfoSortBy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AgentInfoSortBy.Descriptor instead.
func (AgentInfoSortBy) EnumDescriptor() ([]byte, []int) {
	return file_api_commons_org_proto_rawDescGZIP(), []int{4}
}

type QueueInfoSortBy int32

const (
	QueueInfoSortBy_QUEUE_INFO_SORT_BY_NONE                     QueueInfoSortBy = 0 // None
	QueueInfoSortBy_QUEUE_INFO_SORT_BY_AVERAGE_LENGTH           QueueInfoSortBy = 1 // AVERAGE_LENGTH
	QueueInfoSortBy_QUEUE_INFO_SORT_BY_CALL_COUNT               QueueInfoSortBy = 4 // CALL_COUNT
	QueueInfoSortBy_QUEUE_INFO_SORT_BY_CALL_SKILLS              QueueInfoSortBy = 5 // SKILL_SET
	QueueInfoSortBy_QUEUE_INFO_SORT_BY_CALL_TYPE                QueueInfoSortBy = 6 //CALL_TYPE
	QueueInfoSortBy_QUEUE_INFO_SORT_BY_MAXIMUM_LENGTH           QueueInfoSortBy = 7 // MAXIMUM_LENGTH
	QueueInfoSortBy_QUEUE_INFO_SORT_BY_QUEUED_NOTIFICATION_TYPE QueueInfoSortBy = 8 // QUEUED_NOTIFICATION_TYPE
)

// Enum value maps for QueueInfoSortBy.
var (
	QueueInfoSortBy_name = map[int32]string{
		0: "QUEUE_INFO_SORT_BY_NONE",
		1: "QUEUE_INFO_SORT_BY_AVERAGE_LENGTH",
		4: "QUEUE_INFO_SORT_BY_CALL_COUNT",
		5: "QUEUE_INFO_SORT_BY_CALL_SKILLS",
		6: "QUEUE_INFO_SORT_BY_CALL_TYPE",
		7: "QUEUE_INFO_SORT_BY_MAXIMUM_LENGTH",
		8: "QUEUE_INFO_SORT_BY_QUEUED_NOTIFICATION_TYPE",
	}
	QueueInfoSortBy_value = map[string]int32{
		"QUEUE_INFO_SORT_BY_NONE":                     0,
		"QUEUE_INFO_SORT_BY_AVERAGE_LENGTH":           1,
		"QUEUE_INFO_SORT_BY_CALL_COUNT":               4,
		"QUEUE_INFO_SORT_BY_CALL_SKILLS":              5,
		"QUEUE_INFO_SORT_BY_CALL_TYPE":                6,
		"QUEUE_INFO_SORT_BY_MAXIMUM_LENGTH":           7,
		"QUEUE_INFO_SORT_BY_QUEUED_NOTIFICATION_TYPE": 8,
	}
)

func (x QueueInfoSortBy) Enum() *QueueInfoSortBy {
	p := new(QueueInfoSortBy)
	*p = x
	return p
}

func (x QueueInfoSortBy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QueueInfoSortBy) Descriptor() protoreflect.EnumDescriptor {
	return file_api_commons_org_proto_enumTypes[5].Descriptor()
}

func (QueueInfoSortBy) Type() protoreflect.EnumType {
	return &file_api_commons_org_proto_enumTypes[5]
}

func (x QueueInfoSortBy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QueueInfoSortBy.Descriptor instead.
func (QueueInfoSortBy) EnumDescriptor() ([]byte, []int) {
	return file_api_commons_org_proto_rawDescGZIP(), []int{5}
}

type ClientSkin int32

const (
	ClientSkin_CLIENT_SKIN_DEFAULT                     ClientSkin = 0
	ClientSkin_CLIENT_SKIN_TCN_BLUE                    ClientSkin = 1
	ClientSkin_CLIENT_SKIN_TCN_SEA_GREEN               ClientSkin = 2
	ClientSkin_CLIENT_SKIN_RDS_ADVANTAGE               ClientSkin = 3
	ClientSkin_CLIENT_SKIN_RSI                         ClientSkin = 4
	ClientSkin_CLIENT_SKIN_QUICK_CONNECT_SOLUTIONS     ClientSkin = 5
	ClientSkin_CLIENT_SKIN_BRAND_BUILDER_SOLUTIONS     ClientSkin = 6
	ClientSkin_CLIENT_SKIN_DEALER_SPIKE                ClientSkin = 7
	ClientSkin_CLIENT_SKIN_ONTARIO_SYSTEMS             ClientSkin = 8
	ClientSkin_CLIENT_SKIN_PEARSON                     ClientSkin = 9
	ClientSkin_CLIENT_SKIN_THE_DEBT_CORPORATION        ClientSkin = 10
	ClientSkin_CLIENT_SKIN_TCN_CANADA                  ClientSkin = 11
	ClientSkin_CLIENT_SKIN_QUAD_CORP                   ClientSkin = 12
	ClientSkin_CLIENT_SKIN_BROADBAND_DYNAMICS          ClientSkin = 13
	ClientSkin_CLIENT_SKIN_AKTIV_KAPITAL               ClientSkin = 14
	ClientSkin_CLIENT_SKIN_COMMERCIAL_CREDIT_ADJUSTERS ClientSkin = 15
	ClientSkin_CLIENT_SKIN_NEPTUNE_INNOVATIONS         ClientSkin = 16
	ClientSkin_CLIENT_SKIN_NEPTUNE_BILL_GOSLING        ClientSkin = 17
	ClientSkin_CLIENT_SKIN_SOPRA                       ClientSkin = 18
	ClientSkin_CLIENT_SKIN_TCN_USA                     ClientSkin = 19
	ClientSkin_CLIENT_SKIN_TELSOLUTIONS                ClientSkin = 20
	ClientSkin_CLIENT_SKIN_CREDIT_SOFT                 ClientSkin = 21
	ClientSkin_CLIENT_SKIN_VOICEMED                    ClientSkin = 22
	ClientSkin_CLIENT_SKIN_EXPERIAN                    ClientSkin = 23
)

// Enum value maps for ClientSkin.
var (
	ClientSkin_name = map[int32]string{
		0:  "CLIENT_SKIN_DEFAULT",
		1:  "CLIENT_SKIN_TCN_BLUE",
		2:  "CLIENT_SKIN_TCN_SEA_GREEN",
		3:  "CLIENT_SKIN_RDS_ADVANTAGE",
		4:  "CLIENT_SKIN_RSI",
		5:  "CLIENT_SKIN_QUICK_CONNECT_SOLUTIONS",
		6:  "CLIENT_SKIN_BRAND_BUILDER_SOLUTIONS",
		7:  "CLIENT_SKIN_DEALER_SPIKE",
		8:  "CLIENT_SKIN_ONTARIO_SYSTEMS",
		9:  "CLIENT_SKIN_PEARSON",
		10: "CLIENT_SKIN_THE_DEBT_CORPORATION",
		11: "CLIENT_SKIN_TCN_CANADA",
		12: "CLIENT_SKIN_QUAD_CORP",
		13: "CLIENT_SKIN_BROADBAND_DYNAMICS",
		14: "CLIENT_SKIN_AKTIV_KAPITAL",
		15: "CLIENT_SKIN_COMMERCIAL_CREDIT_ADJUSTERS",
		16: "CLIENT_SKIN_NEPTUNE_INNOVATIONS",
		17: "CLIENT_SKIN_NEPTUNE_BILL_GOSLING",
		18: "CLIENT_SKIN_SOPRA",
		19: "CLIENT_SKIN_TCN_USA",
		20: "CLIENT_SKIN_TELSOLUTIONS",
		21: "CLIENT_SKIN_CREDIT_SOFT",
		22: "CLIENT_SKIN_VOICEMED",
		23: "CLIENT_SKIN_EXPERIAN",
	}
	ClientSkin_value = map[string]int32{
		"CLIENT_SKIN_DEFAULT":                     0,
		"CLIENT_SKIN_TCN_BLUE":                    1,
		"CLIENT_SKIN_TCN_SEA_GREEN":               2,
		"CLIENT_SKIN_RDS_ADVANTAGE":               3,
		"CLIENT_SKIN_RSI":                         4,
		"CLIENT_SKIN_QUICK_CONNECT_SOLUTIONS":     5,
		"CLIENT_SKIN_BRAND_BUILDER_SOLUTIONS":     6,
		"CLIENT_SKIN_DEALER_SPIKE":                7,
		"CLIENT_SKIN_ONTARIO_SYSTEMS":             8,
		"CLIENT_SKIN_PEARSON":                     9,
		"CLIENT_SKIN_THE_DEBT_CORPORATION":        10,
		"CLIENT_SKIN_TCN_CANADA":                  11,
		"CLIENT_SKIN_QUAD_CORP":                   12,
		"CLIENT_SKIN_BROADBAND_DYNAMICS":          13,
		"CLIENT_SKIN_AKTIV_KAPITAL":               14,
		"CLIENT_SKIN_COMMERCIAL_CREDIT_ADJUSTERS": 15,
		"CLIENT_SKIN_NEPTUNE_INNOVATIONS":         16,
		"CLIENT_SKIN_NEPTUNE_BILL_GOSLING":        17,
		"CLIENT_SKIN_SOPRA":                       18,
		"CLIENT_SKIN_TCN_USA":                     19,
		"CLIENT_SKIN_TELSOLUTIONS":                20,
		"CLIENT_SKIN_CREDIT_SOFT":                 21,
		"CLIENT_SKIN_VOICEMED":                    22,
		"CLIENT_SKIN_EXPERIAN":                    23,
	}
)

func (x ClientSkin) Enum() *ClientSkin {
	p := new(ClientSkin)
	*p = x
	return p
}

func (x ClientSkin) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClientSkin) Descriptor() protoreflect.EnumDescriptor {
	return file_api_commons_org_proto_enumTypes[6].Descriptor()
}

func (ClientSkin) Type() protoreflect.EnumType {
	return &file_api_commons_org_proto_enumTypes[6]
}

func (x ClientSkin) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClientSkin.Descriptor instead.
func (ClientSkin) EnumDescriptor() ([]byte, []int) {
	return file_api_commons_org_proto_rawDescGZIP(), []int{6}
}

type AutomaticSystemCode int32

const (
	AutomaticSystemCode_AUTOMATIC_SYSTEM_CODE_ADVANCE_STATUS         AutomaticSystemCode = 0
	AutomaticSystemCode_AUTOMATIC_SYSTEM_CODE_CHANGE_PASSWORD        AutomaticSystemCode = 2
	AutomaticSystemCode_AUTOMATIC_SYSTEM_CODE_CHECK_VOICE_MAIL       AutomaticSystemCode = 3
	AutomaticSystemCode_AUTOMATIC_SYSTEM_CODE_MANUALLY_APPROVE_CALLS AutomaticSystemCode = 4
)

// Enum value maps for AutomaticSystemCode.
var (
	AutomaticSystemCode_name = map[int32]string{
		0: "AUTOMATIC_SYSTEM_CODE_ADVANCE_STATUS",
		2: "AUTOMATIC_SYSTEM_CODE_CHANGE_PASSWORD",
		3: "AUTOMATIC_SYSTEM_CODE_CHECK_VOICE_MAIL",
		4: "AUTOMATIC_SYSTEM_CODE_MANUALLY_APPROVE_CALLS",
	}
	AutomaticSystemCode_value = map[string]int32{
		"AUTOMATIC_SYSTEM_CODE_ADVANCE_STATUS":         0,
		"AUTOMATIC_SYSTEM_CODE_CHANGE_PASSWORD":        2,
		"AUTOMATIC_SYSTEM_CODE_CHECK_VOICE_MAIL":       3,
		"AUTOMATIC_SYSTEM_CODE_MANUALLY_APPROVE_CALLS": 4,
	}
)

func (x AutomaticSystemCode) Enum() *AutomaticSystemCode {
	p := new(AutomaticSystemCode)
	*p = x
	return p
}

func (x AutomaticSystemCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AutomaticSystemCode) Descriptor() protoreflect.EnumDescriptor {
	return file_api_commons_org_proto_enumTypes[7].Descriptor()
}

func (AutomaticSystemCode) Type() protoreflect.EnumType {
	return &file_api_commons_org_proto_enumTypes[7]
}

func (x AutomaticSystemCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AutomaticSystemCode.Descriptor instead.
func (AutomaticSystemCode) EnumDescriptor() ([]byte, []int) {
	return file_api_commons_org_proto_rawDescGZIP(), []int{7}
}

type AdvanceStatusType int32

const (
	AdvanceStatusType_ADVANCE_STATUS_TYPE_PAUSED  AdvanceStatusType = 0
	AdvanceStatusType_ADVANCE_STATUS_TYPE_WAITING AdvanceStatusType = 1
	AdvanceStatusType_ADVANCE_STATUS_TYPE_WRAP_UP AdvanceStatusType = 2
	AdvanceStatusType_ADVANCE_STATUS_TYPE_ON_CALL AdvanceStatusType = 3
)

// Enum value maps for AdvanceStatusType.
var (
	AdvanceStatusType_name = map[int32]string{
		0: "ADVANCE_STATUS_TYPE_PAUSED",
		1: "ADVANCE_STATUS_TYPE_WAITING",
		2: "ADVANCE_STATUS_TYPE_WRAP_UP",
		3: "ADVANCE_STATUS_TYPE_ON_CALL",
	}
	AdvanceStatusType_value = map[string]int32{
		"ADVANCE_STATUS_TYPE_PAUSED":  0,
		"ADVANCE_STATUS_TYPE_WAITING": 1,
		"ADVANCE_STATUS_TYPE_WRAP_UP": 2,
		"ADVANCE_STATUS_TYPE_ON_CALL": 3,
	}
)

func (x AdvanceStatusType) Enum() *AdvanceStatusType {
	p := new(AdvanceStatusType)
	*p = x
	return p
}

func (x AdvanceStatusType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AdvanceStatusType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_commons_org_proto_enumTypes[8].Descriptor()
}

func (AdvanceStatusType) Type() protoreflect.EnumType {
	return &file_api_commons_org_proto_enumTypes[8]
}

func (x AdvanceStatusType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AdvanceStatusType.Descriptor instead.
func (AdvanceStatusType) EnumDescriptor() ([]byte, []int) {
	return file_api_commons_org_proto_rawDescGZIP(), []int{8}
}

type AgentFieldOption int32

const (
	AgentFieldOption_AGENT_FIELD_OPTION_AGENT_FIRST_NAME      AgentFieldOption = 0
	AgentFieldOption_AGENT_FIELD_OPTION_AGENT_ID              AgentFieldOption = 1
	AgentFieldOption_AGENT_FIELD_OPTION_AGENT_LAST_NAME       AgentFieldOption = 2
	AgentFieldOption_AGENT_FIELD_OPTION_AGENT_USERNAME        AgentFieldOption = 3
	AgentFieldOption_AGENT_FIELD_OPTION_CALL_ID               AgentFieldOption = 4
	AgentFieldOption_AGENT_FIELD_OPTION_CALLER_ID             AgentFieldOption = 5
	AgentFieldOption_AGENT_FIELD_OPTION_CONSUMER_PHONE_NUMBER AgentFieldOption = 6
	AgentFieldOption_AGENT_FIELD_OPTION_GROUP_ID              AgentFieldOption = 7
	AgentFieldOption_AGENT_FIELD_OPTION_HUNT_GROUP_ID         AgentFieldOption = 8
	AgentFieldOption_AGENT_FIELD_OPTION_HUNT_GROUP_NAME       AgentFieldOption = 9
	AgentFieldOption_AGENT_FIELD_OPTION_HUNT_GROUP_TYPE       AgentFieldOption = 10
	AgentFieldOption_AGENT_FIELD_OPTION_PARTNER_AGENT_ID      AgentFieldOption = 11
)

// Enum value maps for AgentFieldOption.
var (
	AgentFieldOption_name = map[int32]string{
		0:  "AGENT_FIELD_OPTION_AGENT_FIRST_NAME",
		1:  "AGENT_FIELD_OPTION_AGENT_ID",
		2:  "AGENT_FIELD_OPTION_AGENT_LAST_NAME",
		3:  "AGENT_FIELD_OPTION_AGENT_USERNAME",
		4:  "AGENT_FIELD_OPTION_CALL_ID",
		5:  "AGENT_FIELD_OPTION_CALLER_ID",
		6:  "AGENT_FIELD_OPTION_CONSUMER_PHONE_NUMBER",
		7:  "AGENT_FIELD_OPTION_GROUP_ID",
		8:  "AGENT_FIELD_OPTION_HUNT_GROUP_ID",
		9:  "AGENT_FIELD_OPTION_HUNT_GROUP_NAME",
		10: "AGENT_FIELD_OPTION_HUNT_GROUP_TYPE",
		11: "AGENT_FIELD_OPTION_PARTNER_AGENT_ID",
	}
	AgentFieldOption_value = map[string]int32{
		"AGENT_FIELD_OPTION_AGENT_FIRST_NAME":      0,
		"AGENT_FIELD_OPTION_AGENT_ID":              1,
		"AGENT_FIELD_OPTION_AGENT_LAST_NAME":       2,
		"AGENT_FIELD_OPTION_AGENT_USERNAME":        3,
		"AGENT_FIELD_OPTION_CALL_ID":               4,
		"AGENT_FIELD_OPTION_CALLER_ID":             5,
		"AGENT_FIELD_OPTION_CONSUMER_PHONE_NUMBER": 6,
		"AGENT_FIELD_OPTION_GROUP_ID":              7,
		"AGENT_FIELD_OPTION_HUNT_GROUP_ID":         8,
		"AGENT_FIELD_OPTION_HUNT_GROUP_NAME":       9,
		"AGENT_FIELD_OPTION_HUNT_GROUP_TYPE":       10,
		"AGENT_FIELD_OPTION_PARTNER_AGENT_ID":      11,
	}
)

func (x AgentFieldOption) Enum() *AgentFieldOption {
	p := new(AgentFieldOption)
	*p = x
	return p
}

func (x AgentFieldOption) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AgentFieldOption) Descriptor() protoreflect.EnumDescriptor {
	return file_api_commons_org_proto_enumTypes[9].Descriptor()
}

func (AgentFieldOption) Type() protoreflect.EnumType {
	return &file_api_commons_org_proto_enumTypes[9]
}

func (x AgentFieldOption) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AgentFieldOption.Descriptor instead.
func (AgentFieldOption) EnumDescriptor() ([]byte, []int) {
	return file_api_commons_org_proto_rawDescGZIP(), []int{9}
}

type PostalFieldOption int32

const (
	PostalFieldOption_POSTAL_FIELD_OPTION_ADMIN_CODE_1                  PostalFieldOption = 0
	PostalFieldOption_POSTAL_FIELD_OPTION_ADMIN_CODE_2                  PostalFieldOption = 1
	PostalFieldOption_POSTAL_FIELD_OPTION_ADMIN_CODE_3                  PostalFieldOption = 2
	PostalFieldOption_POSTAL_FIELD_OPTION_ADMIN_NAME_1                  PostalFieldOption = 3
	PostalFieldOption_POSTAL_FIELD_OPTION_ADMIN_NAME_2                  PostalFieldOption = 4
	PostalFieldOption_POSTAL_FIELD_OPTION_ADMIN_NAME_3                  PostalFieldOption = 5
	PostalFieldOption_POSTAL_FIELD_OPTION_AREA_CODE                     PostalFieldOption = 6
	PostalFieldOption_POSTAL_FIELD_OPTION_CITY_NAME                     PostalFieldOption = 7
	PostalFieldOption_POSTAL_FIELD_OPTION_CITY_TYPE                     PostalFieldOption = 8
	PostalFieldOption_POSTAL_FIELD_OPTION_COUNRTY_CODE                  PostalFieldOption = 9
	PostalFieldOption_POSTAL_FIELD_OPTION_COUNTRY_ISO_2_CODE            PostalFieldOption = 10
	PostalFieldOption_POSTAL_FIELD_OPTION_COUNTY_NAME                   PostalFieldOption = 11
	PostalFieldOption_POSTAL_FIELD_OPTION_COUNTY_FIPS_CODE              PostalFieldOption = 12
	PostalFieldOption_POSTAL_FIELD_OPTION_LATITUDE                      PostalFieldOption = 13
	PostalFieldOption_POSTAL_FIELD_OPTION_LATITUDE_LONGITUDE_ACCURACY   PostalFieldOption = 14
	PostalFieldOption_POSTAL_FIELD_OPTION_LONGITUDE                     PostalFieldOption = 15
	PostalFieldOption_POSTAL_FIELD_OPTION_METROPOLITAN_STATISTICAL_AREA PostalFieldOption = 16
	PostalFieldOption_POSTAL_FIELD_OPTION_OBSERVES_DAYLIGHT_SAVINGS     PostalFieldOption = 17
	PostalFieldOption_POSTAL_FIELD_OPTION_PLACE_NAME                    PostalFieldOption = 18
	PostalFieldOption_POSTAL_FIELD_OPTION_POSTAL_CODE                   PostalFieldOption = 19
	PostalFieldOption_POSTAL_FIELD_OPTION_POSTAL_CODE_ALPHANUMERIC      PostalFieldOption = 20
	PostalFieldOption_POSTAL_FIELD_OPTION_POSTAL_TYPE                   PostalFieldOption = 21
	PostalFieldOption_POSTAL_FIELD_OPTION_STATE_PROVINCE_ABBREVIATION   PostalFieldOption = 22
	PostalFieldOption_POSTAL_FIELD_OPTION_STATE_PROVINCE_NAME           PostalFieldOption = 23
	PostalFieldOption_POSTAL_FIELD_OPTION_STATE_FIPS_CODE               PostalFieldOption = 24
	PostalFieldOption_POSTAL_FIELD_OPTION_TIME_ZONE                     PostalFieldOption = 25
	PostalFieldOption_POSTAL_FIELD_OPTION_UTC_OFFSET                    PostalFieldOption = 26
)

// Enum value maps for PostalFieldOption.
var (
	PostalFieldOption_name = map[int32]string{
		0:  "POSTAL_FIELD_OPTION_ADMIN_CODE_1",
		1:  "POSTAL_FIELD_OPTION_ADMIN_CODE_2",
		2:  "POSTAL_FIELD_OPTION_ADMIN_CODE_3",
		3:  "POSTAL_FIELD_OPTION_ADMIN_NAME_1",
		4:  "POSTAL_FIELD_OPTION_ADMIN_NAME_2",
		5:  "POSTAL_FIELD_OPTION_ADMIN_NAME_3",
		6:  "POSTAL_FIELD_OPTION_AREA_CODE",
		7:  "POSTAL_FIELD_OPTION_CITY_NAME",
		8:  "POSTAL_FIELD_OPTION_CITY_TYPE",
		9:  "POSTAL_FIELD_OPTION_COUNRTY_CODE",
		10: "POSTAL_FIELD_OPTION_COUNTRY_ISO_2_CODE",
		11: "POSTAL_FIELD_OPTION_COUNTY_NAME",
		12: "POSTAL_FIELD_OPTION_COUNTY_FIPS_CODE",
		13: "POSTAL_FIELD_OPTION_LATITUDE",
		14: "POSTAL_FIELD_OPTION_LATITUDE_LONGITUDE_ACCURACY",
		15: "POSTAL_FIELD_OPTION_LONGITUDE",
		16: "POSTAL_FIELD_OPTION_METROPOLITAN_STATISTICAL_AREA",
		17: "POSTAL_FIELD_OPTION_OBSERVES_DAYLIGHT_SAVINGS",
		18: "POSTAL_FIELD_OPTION_PLACE_NAME",
		19: "POSTAL_FIELD_OPTION_POSTAL_CODE",
		20: "POSTAL_FIELD_OPTION_POSTAL_CODE_ALPHANUMERIC",
		21: "POSTAL_FIELD_OPTION_POSTAL_TYPE",
		22: "POSTAL_FIELD_OPTION_STATE_PROVINCE_ABBREVIATION",
		23: "POSTAL_FIELD_OPTION_STATE_PROVINCE_NAME",
		24: "POSTAL_FIELD_OPTION_STATE_FIPS_CODE",
		25: "POSTAL_FIELD_OPTION_TIME_ZONE",
		26: "POSTAL_FIELD_OPTION_UTC_OFFSET",
	}
	PostalFieldOption_value = map[string]int32{
		"POSTAL_FIELD_OPTION_ADMIN_CODE_1":                  0,
		"POSTAL_FIELD_OPTION_ADMIN_CODE_2":                  1,
		"POSTAL_FIELD_OPTION_ADMIN_CODE_3":                  2,
		"POSTAL_FIELD_OPTION_ADMIN_NAME_1":                  3,
		"POSTAL_FIELD_OPTION_ADMIN_NAME_2":                  4,
		"POSTAL_FIELD_OPTION_ADMIN_NAME_3":                  5,
		"POSTAL_FIELD_OPTION_AREA_CODE":                     6,
		"POSTAL_FIELD_OPTION_CITY_NAME":                     7,
		"POSTAL_FIELD_OPTION_CITY_TYPE":                     8,
		"POSTAL_FIELD_OPTION_COUNRTY_CODE":                  9,
		"POSTAL_FIELD_OPTION_COUNTRY_ISO_2_CODE":            10,
		"POSTAL_FIELD_OPTION_COUNTY_NAME":                   11,
		"POSTAL_FIELD_OPTION_COUNTY_FIPS_CODE":              12,
		"POSTAL_FIELD_OPTION_LATITUDE":                      13,
		"POSTAL_FIELD_OPTION_LATITUDE_LONGITUDE_ACCURACY":   14,
		"POSTAL_FIELD_OPTION_LONGITUDE":                     15,
		"POSTAL_FIELD_OPTION_METROPOLITAN_STATISTICAL_AREA": 16,
		"POSTAL_FIELD_OPTION_OBSERVES_DAYLIGHT_SAVINGS":     17,
		"POSTAL_FIELD_OPTION_PLACE_NAME":                    18,
		"POSTAL_FIELD_OPTION_POSTAL_CODE":                   19,
		"POSTAL_FIELD_OPTION_POSTAL_CODE_ALPHANUMERIC":      20,
		"POSTAL_FIELD_OPTION_POSTAL_TYPE":                   21,
		"POSTAL_FIELD_OPTION_STATE_PROVINCE_ABBREVIATION":   22,
		"POSTAL_FIELD_OPTION_STATE_PROVINCE_NAME":           23,
		"POSTAL_FIELD_OPTION_STATE_FIPS_CODE":               24,
		"POSTAL_FIELD_OPTION_TIME_ZONE":                     25,
		"POSTAL_FIELD_OPTION_UTC_OFFSET":                    26,
	}
)

func (x PostalFieldOption) Enum() *PostalFieldOption {
	p := new(PostalFieldOption)
	*p = x
	return p
}

func (x PostalFieldOption) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PostalFieldOption) Descriptor() protoreflect.EnumDescriptor {
	return file_api_commons_org_proto_enumTypes[10].Descriptor()
}

func (PostalFieldOption) Type() protoreflect.EnumType {
	return &file_api_commons_org_proto_enumTypes[10]
}

func (x PostalFieldOption) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PostalFieldOption.Descriptor instead.
func (PostalFieldOption) EnumDescriptor() ([]byte, []int) {
	return file_api_commons_org_proto_rawDescGZIP(), []int{10}
}

type PhoneFieldOption int32

const (
	PhoneFieldOption_PHONE_FIELD_OPTION_AREA_CODE                      PhoneFieldOption = 0
	PhoneFieldOption_PHONE_FIELD_OPTION_CARRIER                        PhoneFieldOption = 1
	PhoneFieldOption_PHONE_FIELD_OPTION_CENTRAL_OFFICE_CODE_TYPE       PhoneFieldOption = 2
	PhoneFieldOption_PHONE_FIELD_OPTION_CITY                           PhoneFieldOption = 3
	PhoneFieldOption_PHONE_FIELD_OPTION_COUNTRY_CODE                   PhoneFieldOption = 4
	PhoneFieldOption_PHONE_FIELD_OPTION_COUNRTY_CODE_SUBSCRIBER_NUMBER PhoneFieldOption = 5
	PhoneFieldOption_PHONE_FIELD_OPTION_COUNTRY_ISO_2_CODE             PhoneFieldOption = 6
	PhoneFieldOption_PHONE_FIELD_OPTION_INTERNATIONAL_PREFIX           PhoneFieldOption = 7
	PhoneFieldOption_PHONE_FIELD_OPTION_LANGUAGE                       PhoneFieldOption = 8
	PhoneFieldOption_PHONE_FIELD_OPTION_LATITUDE                       PhoneFieldOption = 9
	PhoneFieldOption_PHONE_FIELD_OPTION_LONGITUDE                      PhoneFieldOption = 10
	PhoneFieldOption_PHONE_FIELD_OPTION_MAXIMUM_BLOCK_NUMBER           PhoneFieldOption = 11
	PhoneFieldOption_PHONE_FIELD_OPTION_MINIMUM_BLOCK_NUMBER           PhoneFieldOption = 12
	PhoneFieldOption_PHONE_FIELD_OPTION_NATIONAL_DESTINATION_CODE      PhoneFieldOption = 13
	PhoneFieldOption_PHONE_FIELD_OPTION_NATIONAL_PREFIX                PhoneFieldOption = 14
	PhoneFieldOption_PHONE_FIELD_OPTION_NUMBER_BLOCK_ID                PhoneFieldOption = 15
	PhoneFieldOption_PHONE_FIELD_OPTION_NUMBER_TYPE                    PhoneFieldOption = 16
	PhoneFieldOption_PHONE_FIELD_OPTION_NUMBER_USES_NDC                PhoneFieldOption = 17
	PhoneFieldOption_PHONE_FIELD_OPTION_OBSERVES_DAYLIGHT_SAVINGS      PhoneFieldOption = 18
	PhoneFieldOption_PHONE_FIELD_OPTION_PREFIX                         PhoneFieldOption = 19
	PhoneFieldOption_PHONE_FIELD_OPTION_REGION_STATE_PROVINCE_CODE     PhoneFieldOption = 20
	PhoneFieldOption_PHONE_FIELD_OPTION_REGION_STATE_PROVINCE_NAME     PhoneFieldOption = 21
	PhoneFieldOption_PHONE_FIELD_OPTION_SPECIAL_SERVICE_CODE_1         PhoneFieldOption = 22
	PhoneFieldOption_PHONE_FIELD_OPTION_SPECIAL_SERVICE_CODE_2         PhoneFieldOption = 23
	PhoneFieldOption_PHONE_FIELD_OPTION_SPECIAL_SERVICE_CODE_3         PhoneFieldOption = 24
	PhoneFieldOption_PHONE_FIELD_OPTION_SPECIAL_SERVICE_CODE_4         PhoneFieldOption = 25
	PhoneFieldOption_PHONE_FIELD_OPTION_TIME_ZONE                      PhoneFieldOption = 26
	PhoneFieldOption_PHONE_FIELD_OPTION_UTC_OFFSET                     PhoneFieldOption = 27
)

// Enum value maps for PhoneFieldOption.
var (
	PhoneFieldOption_name = map[int32]string{
		0:  "PHONE_FIELD_OPTION_AREA_CODE",
		1:  "PHONE_FIELD_OPTION_CARRIER",
		2:  "PHONE_FIELD_OPTION_CENTRAL_OFFICE_CODE_TYPE",
		3:  "PHONE_FIELD_OPTION_CITY",
		4:  "PHONE_FIELD_OPTION_COUNTRY_CODE",
		5:  "PHONE_FIELD_OPTION_COUNRTY_CODE_SUBSCRIBER_NUMBER",
		6:  "PHONE_FIELD_OPTION_COUNTRY_ISO_2_CODE",
		7:  "PHONE_FIELD_OPTION_INTERNATIONAL_PREFIX",
		8:  "PHONE_FIELD_OPTION_LANGUAGE",
		9:  "PHONE_FIELD_OPTION_LATITUDE",
		10: "PHONE_FIELD_OPTION_LONGITUDE",
		11: "PHONE_FIELD_OPTION_MAXIMUM_BLOCK_NUMBER",
		12: "PHONE_FIELD_OPTION_MINIMUM_BLOCK_NUMBER",
		13: "PHONE_FIELD_OPTION_NATIONAL_DESTINATION_CODE",
		14: "PHONE_FIELD_OPTION_NATIONAL_PREFIX",
		15: "PHONE_FIELD_OPTION_NUMBER_BLOCK_ID",
		16: "PHONE_FIELD_OPTION_NUMBER_TYPE",
		17: "PHONE_FIELD_OPTION_NUMBER_USES_NDC",
		18: "PHONE_FIELD_OPTION_OBSERVES_DAYLIGHT_SAVINGS",
		19: "PHONE_FIELD_OPTION_PREFIX",
		20: "PHONE_FIELD_OPTION_REGION_STATE_PROVINCE_CODE",
		21: "PHONE_FIELD_OPTION_REGION_STATE_PROVINCE_NAME",
		22: "PHONE_FIELD_OPTION_SPECIAL_SERVICE_CODE_1",
		23: "PHONE_FIELD_OPTION_SPECIAL_SERVICE_CODE_2",
		24: "PHONE_FIELD_OPTION_SPECIAL_SERVICE_CODE_3",
		25: "PHONE_FIELD_OPTION_SPECIAL_SERVICE_CODE_4",
		26: "PHONE_FIELD_OPTION_TIME_ZONE",
		27: "PHONE_FIELD_OPTION_UTC_OFFSET",
	}
	PhoneFieldOption_value = map[string]int32{
		"PHONE_FIELD_OPTION_AREA_CODE":                      0,
		"PHONE_FIELD_OPTION_CARRIER":                        1,
		"PHONE_FIELD_OPTION_CENTRAL_OFFICE_CODE_TYPE":       2,
		"PHONE_FIELD_OPTION_CITY":                           3,
		"PHONE_FIELD_OPTION_COUNTRY_CODE":                   4,
		"PHONE_FIELD_OPTION_COUNRTY_CODE_SUBSCRIBER_NUMBER": 5,
		"PHONE_FIELD_OPTION_COUNTRY_ISO_2_CODE":             6,
		"PHONE_FIELD_OPTION_INTERNATIONAL_PREFIX":           7,
		"PHONE_FIELD_OPTION_LANGUAGE":                       8,
		"PHONE_FIELD_OPTION_LATITUDE":                       9,
		"PHONE_FIELD_OPTION_LONGITUDE":                      10,
		"PHONE_FIELD_OPTION_MAXIMUM_BLOCK_NUMBER":           11,
		"PHONE_FIELD_OPTION_MINIMUM_BLOCK_NUMBER":           12,
		"PHONE_FIELD_OPTION_NATIONAL_DESTINATION_CODE":      13,
		"PHONE_FIELD_OPTION_NATIONAL_PREFIX":                14,
		"PHONE_FIELD_OPTION_NUMBER_BLOCK_ID":                15,
		"PHONE_FIELD_OPTION_NUMBER_TYPE":                    16,
		"PHONE_FIELD_OPTION_NUMBER_USES_NDC":                17,
		"PHONE_FIELD_OPTION_OBSERVES_DAYLIGHT_SAVINGS":      18,
		"PHONE_FIELD_OPTION_PREFIX":                         19,
		"PHONE_FIELD_OPTION_REGION_STATE_PROVINCE_CODE":     20,
		"PHONE_FIELD_OPTION_REGION_STATE_PROVINCE_NAME":     21,
		"PHONE_FIELD_OPTION_SPECIAL_SERVICE_CODE_1":         22,
		"PHONE_FIELD_OPTION_SPECIAL_SERVICE_CODE_2":         23,
		"PHONE_FIELD_OPTION_SPECIAL_SERVICE_CODE_3":         24,
		"PHONE_FIELD_OPTION_SPECIAL_SERVICE_CODE_4":         25,
		"PHONE_FIELD_OPTION_TIME_ZONE":                      26,
		"PHONE_FIELD_OPTION_UTC_OFFSET":                     27,
	}
)

func (x PhoneFieldOption) Enum() *PhoneFieldOption {
	p := new(PhoneFieldOption)
	*p = x
	return p
}

func (x PhoneFieldOption) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PhoneFieldOption) Descriptor() protoreflect.EnumDescriptor {
	return file_api_commons_org_proto_enumTypes[11].Descriptor()
}

func (PhoneFieldOption) Type() protoreflect.EnumType {
	return &file_api_commons_org_proto_enumTypes[11]
}

func (x PhoneFieldOption) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PhoneFieldOption.Descriptor instead.
func (PhoneFieldOption) EnumDescriptor() ([]byte, []int) {
	return file_api_commons_org_proto_rawDescGZIP(), []int{11}
}

type PhonePostalDisplayOptions int32

const (
	PhonePostalDisplayOptions_DISPLAY_OPTION_ADMIN_CODE_1                   PhonePostalDisplayOptions = 0  // KEY adminCode1
	PhonePostalDisplayOptions_DISPLAY_OPTION_ADMIN_CODE_2                   PhonePostalDisplayOptions = 1  // KEY adminCode2
	PhonePostalDisplayOptions_DISPLAY_OPTION_ADMIN_CODE_3                   PhonePostalDisplayOptions = 2  // KEY adminCode3
	PhonePostalDisplayOptions_DISPLAY_OPTION_ADMIN_NAME_1                   PhonePostalDisplayOptions = 3  // KEY adminName1
	PhonePostalDisplayOptions_DISPLAY_OPTION_ADMIN_NAME_2                   PhonePostalDisplayOptions = 4  // KEY adminName2
	PhonePostalDisplayOptions_DISPLAY_OPTION_ADMIN_NAME_3                   PhonePostalDisplayOptions = 5  // KEY adminName3
	PhonePostalDisplayOptions_DISPLAY_OPTION_AREA_CODE                      PhonePostalDisplayOptions = 6  // KEY areaCode
	PhonePostalDisplayOptions_DISPLAY_OPTION_CARRIER                        PhonePostalDisplayOptions = 7  // KEY carrier
	PhonePostalDisplayOptions_DISPLAY_OPTION_CENTRAL_OFFICE_CODE_TYPE       PhonePostalDisplayOptions = 8  // cocType
	PhonePostalDisplayOptions_DISPLAY_OPTION_CITY                           PhonePostalDisplayOptions = 9  // KEY city
	PhonePostalDisplayOptions_DISPLAY_OPTION_CITY_NAME                      PhonePostalDisplayOptions = 10 // KEY cityName
	PhonePostalDisplayOptions_DISPLAY_OPTION_CITY_TYPE                      PhonePostalDisplayOptions = 11 // KEY cityType
	PhonePostalDisplayOptions_DISPLAY_OPTION_COUNTRY_CODE                   PhonePostalDisplayOptions = 12 // KEY countryCode
	PhonePostalDisplayOptions_DISPLAY_OPTION_COUNTRY_CODE_SUBSCRIBER_NUMBER PhonePostalDisplayOptions = 13 // KEY ccnsn
	PhonePostalDisplayOptions_DISPLAY_OPTION_ISO_2                          PhonePostalDisplayOptions = 14 // KEY iso2
	PhonePostalDisplayOptions_DISPLAY_OPTION_COUNTY_NAME                    PhonePostalDisplayOptions = 15 // KEY countyName
	PhonePostalDisplayOptions_DISPLAY_OPTION_COUNTY_FIPS                    PhonePostalDisplayOptions = 16 // KEY countyFips
	PhonePostalDisplayOptions_DISPLAY_OPTION_INTERNATIONAL_PREFIX           PhonePostalDisplayOptions = 17 // KEY internationalPrefix
	PhonePostalDisplayOptions_DISPLAY_OPTION_LANGUAGE                       PhonePostalDisplayOptions = 18 // KEY language
	PhonePostalDisplayOptions_DISPLAY_OPTION_LATITUDE                       PhonePostalDisplayOptions = 19 // KEY latitude
	PhonePostalDisplayOptions_DISPLAY_OPTION_LONGITUDE_LATITUDE_ACCURACY    PhonePostalDisplayOptions = 20 // KEY accuracy
	PhonePostalDisplayOptions_DISPLAY_OPTION_LONGITUDE                      PhonePostalDisplayOptions = 21 // KEY longitude
	PhonePostalDisplayOptions_DISPLAY_OPTION_MAXIMUM_BLOCK_NUMBER           PhonePostalDisplayOptions = 22 // KEY max
	PhonePostalDisplayOptions_DISPLAY_OPTION_METROPOLITAN_STATISTICAL_AREA  PhonePostalDisplayOptions = 23 // KEY msaCode
	PhonePostalDisplayOptions_DISPLAY_OPTION_MINIMUM_BLOCK_NUMBER           PhonePostalDisplayOptions = 24 // KEY min
	PhonePostalDisplayOptions_DISPLAY_OPTION_NATIONAL_DESTINATION_CODE      PhonePostalDisplayOptions = 25 // KEY ndc
	PhonePostalDisplayOptions_DISPLAY_OPTION_NATIONAL_PREFIX                PhonePostalDisplayOptions = 26 // KEY nationalPrefix
	PhonePostalDisplayOptions_DISPLAY_OPTION_NUMBER_PREFIX                  PhonePostalDisplayOptions = 27 // KEY prefix
	PhonePostalDisplayOptions_DISPLAY_OPTION_NUMBER_TYPE                    PhonePostalDisplayOptions = 28 // KEY type
	PhonePostalDisplayOptions_DISPLAY_OPTION_NUMBER_USES_NDC                PhonePostalDisplayOptions = 29 // KEY usesNdc
	PhonePostalDisplayOptions_DISPLAY_OPTION_OBSERVES_DAYLIGHT_SAVINGS_TIME PhonePostalDisplayOptions = 30 // KEY dst
	PhonePostalDisplayOptions_DISPLAY_OPTION_PLACE_NAME                     PhonePostalDisplayOptions = 31 // KEY placeName
	PhonePostalDisplayOptions_DISPLAY_OPTION_POSTAL_CODE                    PhonePostalDisplayOptions = 32 // KEY postalCode
	PhonePostalDisplayOptions_DISPLAY_OPTION_POSTAL_CODE_ALPHANUMERIC       PhonePostalDisplayOptions = 33 // KEY postalCodeKey
	PhonePostalDisplayOptions_DISPLAY_OPTION_POSTAL_TYPE                    PhonePostalDisplayOptions = 34 // KEY postalType
	PhonePostalDisplayOptions_DISPLAY_OPTION_PROVINCE_ABBREVIATION          PhonePostalDisplayOptions = 35 // KEY regionCode
	PhonePostalDisplayOptions_DISPLAY_OPTION_PROVINCE_NAME                  PhonePostalDisplayOptions = 36 // KEY regionName
	PhonePostalDisplayOptions_DISPLAY_OPTION_SPECIAL_SERVICE_CODE_1         PhonePostalDisplayOptions = 37 // KEY ssc1
	PhonePostalDisplayOptions_DISPLAY_OPTION_SPECIAL_SERVICE_CODE_2         PhonePostalDisplayOptions = 38 // KEY ssc2
	PhonePostalDisplayOptions_DISPLAY_OPTION_SPECIAL_SERVICE_CODE_3         PhonePostalDisplayOptions = 39 // KEY ssc3
	PhonePostalDisplayOptions_DISPLAY_OPTION_SPECIAL_SERVICE_CODE_4         PhonePostalDisplayOptions = 40 // KEY ssc4
	PhonePostalDisplayOptions_DISPLAY_OPTION_PROVINCE_STATE_NAME            PhonePostalDisplayOptions = 41 // KEY provinceName
	PhonePostalDisplayOptions_DISPLAY_OPTION_STATE_FIPS_CODE                PhonePostalDisplayOptions = 42 // KEY stateFips
	PhonePostalDisplayOptions_DISPLAY_OPTION_TIME_ZONE                      PhonePostalDisplayOptions = 43 // KEY timeZone
	PhonePostalDisplayOptions_DISPLAY_OPTION_UTC_OFFSET                     PhonePostalDisplayOptions = 44 // KEY utc
)

// Enum value maps for PhonePostalDisplayOptions.
var (
	PhonePostalDisplayOptions_name = map[int32]string{
		0:  "DISPLAY_OPTION_ADMIN_CODE_1",
		1:  "DISPLAY_OPTION_ADMIN_CODE_2",
		2:  "DISPLAY_OPTION_ADMIN_CODE_3",
		3:  "DISPLAY_OPTION_ADMIN_NAME_1",
		4:  "DISPLAY_OPTION_ADMIN_NAME_2",
		5:  "DISPLAY_OPTION_ADMIN_NAME_3",
		6:  "DISPLAY_OPTION_AREA_CODE",
		7:  "DISPLAY_OPTION_CARRIER",
		8:  "DISPLAY_OPTION_CENTRAL_OFFICE_CODE_TYPE",
		9:  "DISPLAY_OPTION_CITY",
		10: "DISPLAY_OPTION_CITY_NAME",
		11: "DISPLAY_OPTION_CITY_TYPE",
		12: "DISPLAY_OPTION_COUNTRY_CODE",
		13: "DISPLAY_OPTION_COUNTRY_CODE_SUBSCRIBER_NUMBER",
		14: "DISPLAY_OPTION_ISO_2",
		15: "DISPLAY_OPTION_COUNTY_NAME",
		16: "DISPLAY_OPTION_COUNTY_FIPS",
		17: "DISPLAY_OPTION_INTERNATIONAL_PREFIX",
		18: "DISPLAY_OPTION_LANGUAGE",
		19: "DISPLAY_OPTION_LATITUDE",
		20: "DISPLAY_OPTION_LONGITUDE_LATITUDE_ACCURACY",
		21: "DISPLAY_OPTION_LONGITUDE",
		22: "DISPLAY_OPTION_MAXIMUM_BLOCK_NUMBER",
		23: "DISPLAY_OPTION_METROPOLITAN_STATISTICAL_AREA",
		24: "DISPLAY_OPTION_MINIMUM_BLOCK_NUMBER",
		25: "DISPLAY_OPTION_NATIONAL_DESTINATION_CODE",
		26: "DISPLAY_OPTION_NATIONAL_PREFIX",
		27: "DISPLAY_OPTION_NUMBER_PREFIX",
		28: "DISPLAY_OPTION_NUMBER_TYPE",
		29: "DISPLAY_OPTION_NUMBER_USES_NDC",
		30: "DISPLAY_OPTION_OBSERVES_DAYLIGHT_SAVINGS_TIME",
		31: "DISPLAY_OPTION_PLACE_NAME",
		32: "DISPLAY_OPTION_POSTAL_CODE",
		33: "DISPLAY_OPTION_POSTAL_CODE_ALPHANUMERIC",
		34: "DISPLAY_OPTION_POSTAL_TYPE",
		35: "DISPLAY_OPTION_PROVINCE_ABBREVIATION",
		36: "DISPLAY_OPTION_PROVINCE_NAME",
		37: "DISPLAY_OPTION_SPECIAL_SERVICE_CODE_1",
		38: "DISPLAY_OPTION_SPECIAL_SERVICE_CODE_2",
		39: "DISPLAY_OPTION_SPECIAL_SERVICE_CODE_3",
		40: "DISPLAY_OPTION_SPECIAL_SERVICE_CODE_4",
		41: "DISPLAY_OPTION_PROVINCE_STATE_NAME",
		42: "DISPLAY_OPTION_STATE_FIPS_CODE",
		43: "DISPLAY_OPTION_TIME_ZONE",
		44: "DISPLAY_OPTION_UTC_OFFSET",
	}
	PhonePostalDisplayOptions_value = map[string]int32{
		"DISPLAY_OPTION_ADMIN_CODE_1":                   0,
		"DISPLAY_OPTION_ADMIN_CODE_2":                   1,
		"DISPLAY_OPTION_ADMIN_CODE_3":                   2,
		"DISPLAY_OPTION_ADMIN_NAME_1":                   3,
		"DISPLAY_OPTION_ADMIN_NAME_2":                   4,
		"DISPLAY_OPTION_ADMIN_NAME_3":                   5,
		"DISPLAY_OPTION_AREA_CODE":                      6,
		"DISPLAY_OPTION_CARRIER":                        7,
		"DISPLAY_OPTION_CENTRAL_OFFICE_CODE_TYPE":       8,
		"DISPLAY_OPTION_CITY":                           9,
		"DISPLAY_OPTION_CITY_NAME":                      10,
		"DISPLAY_OPTION_CITY_TYPE":                      11,
		"DISPLAY_OPTION_COUNTRY_CODE":                   12,
		"DISPLAY_OPTION_COUNTRY_CODE_SUBSCRIBER_NUMBER": 13,
		"DISPLAY_OPTION_ISO_2":                          14,
		"DISPLAY_OPTION_COUNTY_NAME":                    15,
		"DISPLAY_OPTION_COUNTY_FIPS":                    16,
		"DISPLAY_OPTION_INTERNATIONAL_PREFIX":           17,
		"DISPLAY_OPTION_LANGUAGE":                       18,
		"DISPLAY_OPTION_LATITUDE":                       19,
		"DISPLAY_OPTION_LONGITUDE_LATITUDE_ACCURACY":    20,
		"DISPLAY_OPTION_LONGITUDE":                      21,
		"DISPLAY_OPTION_MAXIMUM_BLOCK_NUMBER":           22,
		"DISPLAY_OPTION_METROPOLITAN_STATISTICAL_AREA":  23,
		"DISPLAY_OPTION_MINIMUM_BLOCK_NUMBER":           24,
		"DISPLAY_OPTION_NATIONAL_DESTINATION_CODE":      25,
		"DISPLAY_OPTION_NATIONAL_PREFIX":                26,
		"DISPLAY_OPTION_NUMBER_PREFIX":                  27,
		"DISPLAY_OPTION_NUMBER_TYPE":                    28,
		"DISPLAY_OPTION_NUMBER_USES_NDC":                29,
		"DISPLAY_OPTION_OBSERVES_DAYLIGHT_SAVINGS_TIME": 30,
		"DISPLAY_OPTION_PLACE_NAME":                     31,
		"DISPLAY_OPTION_POSTAL_CODE":                    32,
		"DISPLAY_OPTION_POSTAL_CODE_ALPHANUMERIC":       33,
		"DISPLAY_OPTION_POSTAL_TYPE":                    34,
		"DISPLAY_OPTION_PROVINCE_ABBREVIATION":          35,
		"DISPLAY_OPTION_PROVINCE_NAME":                  36,
		"DISPLAY_OPTION_SPECIAL_SERVICE_CODE_1":         37,
		"DISPLAY_OPTION_SPECIAL_SERVICE_CODE_2":         38,
		"DISPLAY_OPTION_SPECIAL_SERVICE_CODE_3":         39,
		"DISPLAY_OPTION_SPECIAL_SERVICE_CODE_4":         40,
		"DISPLAY_OPTION_PROVINCE_STATE_NAME":            41,
		"DISPLAY_OPTION_STATE_FIPS_CODE":                42,
		"DISPLAY_OPTION_TIME_ZONE":                      43,
		"DISPLAY_OPTION_UTC_OFFSET":                     44,
	}
)

func (x PhonePostalDisplayOptions) Enum() *PhonePostalDisplayOptions {
	p := new(PhonePostalDisplayOptions)
	*p = x
	return p
}

func (x PhonePostalDisplayOptions) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PhonePostalDisplayOptions) Descriptor() protoreflect.EnumDescriptor {
	return file_api_commons_org_proto_enumTypes[12].Descriptor()
}

func (PhonePostalDisplayOptions) Type() protoreflect.EnumType {
	return &file_api_commons_org_proto_enumTypes[12]
}

func (x PhonePostalDisplayOptions) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PhonePostalDisplayOptions.Descriptor instead.
func (PhonePostalDisplayOptions) EnumDescriptor() ([]byte, []int) {
	return file_api_commons_org_proto_rawDescGZIP(), []int{12}
}

type OperatorApplications int32

const (
	OperatorApplications_AGENT_APP                       OperatorApplications = 0  //Agent
	OperatorApplications_ORGANIZATION_MANAGEMENT_APP     OperatorApplications = 1  //Organization Management
	OperatorApplications_CUSTOMER_JOURNEY_SERVICES_APP   OperatorApplications = 2  //Customer Journey
	OperatorApplications_LIST_MANAGEMENT_SERVICES_APP    OperatorApplications = 3  //List Management Services
	OperatorApplications_AGENT_MANAGER_APP               OperatorApplications = 4  // Agent Manager
	OperatorApplications_NATURAL_LANGUAGE_COMPLIANCE_APP OperatorApplications = 6  //Natural Language Compliance
	OperatorApplications_VOICE_ANALYTICS_APP             OperatorApplications = 8  //Voice Analytics
	OperatorApplications_SCRIPTS_APP                     OperatorApplications = 9  //Scripts
	OperatorApplications_ROOM303_APP                     OperatorApplications = 10 //Room303
	OperatorApplications_OMNI_BOSS_APP                   OperatorApplications = 11 //OmniBoss
	OperatorApplications_WFM_APP                         OperatorApplications = 12 //Workforce Management
	OperatorApplications_PAYMENTS_APP                    OperatorApplications = 13 //Payments
	OperatorApplications_SUPPORT_APP                     OperatorApplications = 15 // Support
	OperatorApplications_BUSINESS_INTELLIGENCE_APP       OperatorApplications = 16 // BI
	OperatorApplications_BACKOFFICE_APP                  OperatorApplications = 17 // Link to old backoffice
	OperatorApplications_SCORECARDS_APP                  OperatorApplications = 19 // Scorecards
	OperatorApplications_DEV_TOOLS_APP                   OperatorApplications = 20 // Dev Tools
	OperatorApplications_LEARNING_CENTER_APP             OperatorApplications = 21 // Learning Center
	OperatorApplications_DELIVERY_SERVICE_APP            OperatorApplications = 22 // Delivery Service
	OperatorApplications_PERFORMANCE_MANAGEMENT_APP      OperatorApplications = 23 // Performance Management
	OperatorApplications_TICKETS_APP                     OperatorApplications = 31 // Ticketing System
	OperatorApplications_AGENT_BETA_APP                  OperatorApplications = 32 // Agent Beta
	OperatorApplications_NEWSROOM_APP                    OperatorApplications = 33 // Newsroom
	OperatorApplications_CONTACTMANAGER_APP              OperatorApplications = 34 //Contact Manager
	OperatorApplications_KNOWLEDGE_BASE_APP              OperatorApplications = 35 // Knowledge Base
)

// Enum value maps for OperatorApplications.
var (
	OperatorApplications_name = map[int32]string{
		0:  "AGENT_APP",
		1:  "ORGANIZATION_MANAGEMENT_APP",
		2:  "CUSTOMER_JOURNEY_SERVICES_APP",
		3:  "LIST_MANAGEMENT_SERVICES_APP",
		4:  "AGENT_MANAGER_APP",
		6:  "NATURAL_LANGUAGE_COMPLIANCE_APP",
		8:  "VOICE_ANALYTICS_APP",
		9:  "SCRIPTS_APP",
		10: "ROOM303_APP",
		11: "OMNI_BOSS_APP",
		12: "WFM_APP",
		13: "PAYMENTS_APP",
		15: "SUPPORT_APP",
		16: "BUSINESS_INTELLIGENCE_APP",
		17: "BACKOFFICE_APP",
		19: "SCORECARDS_APP",
		20: "DEV_TOOLS_APP",
		21: "LEARNING_CENTER_APP",
		22: "DELIVERY_SERVICE_APP",
		23: "PERFORMANCE_MANAGEMENT_APP",
		31: "TICKETS_APP",
		32: "AGENT_BETA_APP",
		33: "NEWSROOM_APP",
		34: "CONTACTMANAGER_APP",
		35: "KNOWLEDGE_BASE_APP",
	}
	OperatorApplications_value = map[string]int32{
		"AGENT_APP":                       0,
		"ORGANIZATION_MANAGEMENT_APP":     1,
		"CUSTOMER_JOURNEY_SERVICES_APP":   2,
		"LIST_MANAGEMENT_SERVICES_APP":    3,
		"AGENT_MANAGER_APP":               4,
		"NATURAL_LANGUAGE_COMPLIANCE_APP": 6,
		"VOICE_ANALYTICS_APP":             8,
		"SCRIPTS_APP":                     9,
		"ROOM303_APP":                     10,
		"OMNI_BOSS_APP":                   11,
		"WFM_APP":                         12,
		"PAYMENTS_APP":                    13,
		"SUPPORT_APP":                     15,
		"BUSINESS_INTELLIGENCE_APP":       16,
		"BACKOFFICE_APP":                  17,
		"SCORECARDS_APP":                  19,
		"DEV_TOOLS_APP":                   20,
		"LEARNING_CENTER_APP":             21,
		"DELIVERY_SERVICE_APP":            22,
		"PERFORMANCE_MANAGEMENT_APP":      23,
		"TICKETS_APP":                     31,
		"AGENT_BETA_APP":                  32,
		"NEWSROOM_APP":                    33,
		"CONTACTMANAGER_APP":              34,
		"KNOWLEDGE_BASE_APP":              35,
	}
)

func (x OperatorApplications) Enum() *OperatorApplications {
	p := new(OperatorApplications)
	*p = x
	return p
}

func (x OperatorApplications) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OperatorApplications) Descriptor() protoreflect.EnumDescriptor {
	return file_api_commons_org_proto_enumTypes[13].Descriptor()
}

func (OperatorApplications) Type() protoreflect.EnumType {
	return &file_api_commons_org_proto_enumTypes[13]
}

func (x OperatorApplications) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OperatorApplications.Descriptor instead.
func (OperatorApplications) EnumDescriptor() ([]byte, []int) {
	return file_api_commons_org_proto_rawDescGZIP(), []int{13}
}

type AnnouncementMixingOption int32

const (
	AnnouncementMixingOption_ANNOUNCEMENT_MIXING_OPTION_MUTE_HOLD_MUSIC      AnnouncementMixingOption = 0
	AnnouncementMixingOption_ANNOUNCEMENT_MIXING_OPTION_PLAY_OVER_HOLD_MUSIC AnnouncementMixingOption = 1
)

// Enum value maps for AnnouncementMixingOption.
var (
	AnnouncementMixingOption_name = map[int32]string{
		0: "ANNOUNCEMENT_MIXING_OPTION_MUTE_HOLD_MUSIC",
		1: "ANNOUNCEMENT_MIXING_OPTION_PLAY_OVER_HOLD_MUSIC",
	}
	AnnouncementMixingOption_value = map[string]int32{
		"ANNOUNCEMENT_MIXING_OPTION_MUTE_HOLD_MUSIC":      0,
		"ANNOUNCEMENT_MIXING_OPTION_PLAY_OVER_HOLD_MUSIC": 1,
	}
)

func (x AnnouncementMixingOption) Enum() *AnnouncementMixingOption {
	p := new(AnnouncementMixingOption)
	*p = x
	return p
}

func (x AnnouncementMixingOption) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AnnouncementMixingOption) Descriptor() protoreflect.EnumDescriptor {
	return file_api_commons_org_proto_enumTypes[14].Descriptor()
}

func (AnnouncementMixingOption) Type() protoreflect.EnumType {
	return &file_api_commons_org_proto_enumTypes[14]
}

func (x AnnouncementMixingOption) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AnnouncementMixingOption.Descriptor instead.
func (AnnouncementMixingOption) EnumDescriptor() ([]byte, []int) {
	return file_api_commons_org_proto_rawDescGZIP(), []int{14}
}

type InboundOverrideOption int32

const (
	InboundOverrideOption_INBOUND_OVERRIDE_OPTION_DO_NOTHING InboundOverrideOption = 0
	InboundOverrideOption_INBOUND_OVERRIDE_OPTION_OVERRIDE   InboundOverrideOption = 1
	InboundOverrideOption_INBOUND_OVERRIDE_OPTION_HANG_UP    InboundOverrideOption = 2
)

// Enum value maps for InboundOverrideOption.
var (
	InboundOverrideOption_name = map[int32]string{
		0: "INBOUND_OVERRIDE_OPTION_DO_NOTHING",
		1: "INBOUND_OVERRIDE_OPTION_OVERRIDE",
		2: "INBOUND_OVERRIDE_OPTION_HANG_UP",
	}
	InboundOverrideOption_value = map[string]int32{
		"INBOUND_OVERRIDE_OPTION_DO_NOTHING": 0,
		"INBOUND_OVERRIDE_OPTION_OVERRIDE":   1,
		"INBOUND_OVERRIDE_OPTION_HANG_UP":    2,
	}
)

func (x InboundOverrideOption) Enum() *InboundOverrideOption {
	p := new(InboundOverrideOption)
	*p = x
	return p
}

func (x InboundOverrideOption) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InboundOverrideOption) Descriptor() protoreflect.EnumDescriptor {
	return file_api_commons_org_proto_enumTypes[15].Descriptor()
}

func (InboundOverrideOption) Type() protoreflect.EnumType {
	return &file_api_commons_org_proto_enumTypes[15]
}

func (x InboundOverrideOption) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InboundOverrideOption.Descriptor instead.
func (InboundOverrideOption) EnumDescriptor() ([]byte, []int) {
	return file_api_commons_org_proto_rawDescGZIP(), []int{15}
}

type Digit int32

const (
	Digit_DIGIT_ZERO  Digit = 0
	Digit_DIGIT_ONE   Digit = 1
	Digit_DIGIT_TWO   Digit = 2
	Digit_DIGIT_THREE Digit = 3
	Digit_DIGIT_FOUR  Digit = 4
	Digit_DIGIT_FIVE  Digit = 5
	Digit_DIGIT_SIX   Digit = 6
	Digit_DIGIT_SEVEN Digit = 7
	Digit_DIGIT_EIGHT Digit = 8
	Digit_DIGIT_NINE  Digit = 9
)

// Enum value maps for Digit.
var (
	Digit_name = map[int32]string{
		0: "DIGIT_ZERO",
		1: "DIGIT_ONE",
		2: "DIGIT_TWO",
		3: "DIGIT_THREE",
		4: "DIGIT_FOUR",
		5: "DIGIT_FIVE",
		6: "DIGIT_SIX",
		7: "DIGIT_SEVEN",
		8: "DIGIT_EIGHT",
		9: "DIGIT_NINE",
	}
	Digit_value = map[string]int32{
		"DIGIT_ZERO":  0,
		"DIGIT_ONE":   1,
		"DIGIT_TWO":   2,
		"DIGIT_THREE": 3,
		"DIGIT_FOUR":  4,
		"DIGIT_FIVE":  5,
		"DIGIT_SIX":   6,
		"DIGIT_SEVEN": 7,
		"DIGIT_EIGHT": 8,
		"DIGIT_NINE":  9,
	}
)

func (x Digit) Enum() *Digit {
	p := new(Digit)
	*p = x
	return p
}

func (x Digit) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Digit) Descriptor() protoreflect.EnumDescriptor {
	return file_api_commons_org_proto_enumTypes[16].Descriptor()
}

func (Digit) Type() protoreflect.EnumType {
	return &file_api_commons_org_proto_enumTypes[16]
}

func (x Digit) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Digit.Descriptor instead.
func (Digit) EnumDescriptor() ([]byte, []int) {
	return file_api_commons_org_proto_rawDescGZIP(), []int{16}
}

type IntercomConnection int32

const (
	IntercomConnection_INTERCOM_CONNECTION_AUTOMATIC          IntercomConnection = 0
	IntercomConnection_INTERCOM_CONNECTION_REQUIRE_ACCEPTANCE IntercomConnection = 1
)

// Enum value maps for IntercomConnection.
var (
	IntercomConnection_name = map[int32]string{
		0: "INTERCOM_CONNECTION_AUTOMATIC",
		1: "INTERCOM_CONNECTION_REQUIRE_ACCEPTANCE",
	}
	IntercomConnection_value = map[string]int32{
		"INTERCOM_CONNECTION_AUTOMATIC":          0,
		"INTERCOM_CONNECTION_REQUIRE_ACCEPTANCE": 1,
	}
)

func (x IntercomConnection) Enum() *IntercomConnection {
	p := new(IntercomConnection)
	*p = x
	return p
}

func (x IntercomConnection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IntercomConnection) Descriptor() protoreflect.EnumDescriptor {
	return file_api_commons_org_proto_enumTypes[17].Descriptor()
}

func (IntercomConnection) Type() protoreflect.EnumType {
	return &file_api_commons_org_proto_enumTypes[17]
}

func (x IntercomConnection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IntercomConnection.Descriptor instead.
func (IntercomConnection) EnumDescriptor() ([]byte, []int) {
	return file_api_commons_org_proto_rawDescGZIP(), []int{17}
}

type ConfigSound int32

const (
	// enum needs to start at 0 so this cannot be removed.
	// this should be treated the same as CONFIG_SOUND_NUMBER_1.
	ConfigSound_CONFIG_SOUND_ONE                       ConfigSound = 0
	ConfigSound_CONFIG_SOUND_NUMBER_1                  ConfigSound = 38
	ConfigSound_CONFIG_SOUND_NUMBER_2                  ConfigSound = 39
	ConfigSound_CONFIG_SOUND_NUMBER_3                  ConfigSound = 40
	ConfigSound_CONFIG_SOUND_NUMBER_4                  ConfigSound = 41
	ConfigSound_CONFIG_SOUND_NUMBER_5                  ConfigSound = 42
	ConfigSound_CONFIG_SOUND_NUMBER_6                  ConfigSound = 43
	ConfigSound_CONFIG_SOUND_NUMBER_7                  ConfigSound = 44
	ConfigSound_CONFIG_SOUND_NUMBER_8                  ConfigSound = 45
	ConfigSound_CONFIG_SOUND_NUMBER_9                  ConfigSound = 46
	ConfigSound_CONFIG_SOUND_NUMBER_10                 ConfigSound = 47
	ConfigSound_CONFIG_SOUND_NUMBER_11                 ConfigSound = 48
	ConfigSound_CONFIG_SOUND_NUMBER_12                 ConfigSound = 49
	ConfigSound_CONFIG_SOUND_NUMBER_13                 ConfigSound = 50
	ConfigSound_CONFIG_SOUND_NUMBER_14                 ConfigSound = 51
	ConfigSound_CONFIG_SOUND_NUMBER_15                 ConfigSound = 52
	ConfigSound_CONFIG_SOUND_NUMBER_16                 ConfigSound = 53
	ConfigSound_CONFIG_SOUND_NUMBER_17                 ConfigSound = 54
	ConfigSound_CONFIG_SOUND_NUMBER_18                 ConfigSound = 55
	ConfigSound_CONFIG_SOUND_NUMBER_19                 ConfigSound = 56
	ConfigSound_CONFIG_SOUND_NUMBER_20                 ConfigSound = 57
	ConfigSound_CONFIG_SOUND_NUMBER_21                 ConfigSound = 58
	ConfigSound_CONFIG_SOUND_NUMBER_22                 ConfigSound = 59
	ConfigSound_CONFIG_SOUND_NUMBER_23                 ConfigSound = 60
	ConfigSound_CONFIG_SOUND_NUMBER_24                 ConfigSound = 61
	ConfigSound_CONFIG_SOUND_NUMBER_25                 ConfigSound = 62
	ConfigSound_CONFIG_SOUND_NUMBER_26                 ConfigSound = 63
	ConfigSound_CONFIG_SOUND_NUMBER_27                 ConfigSound = 64
	ConfigSound_CONFIG_SOUND_NUMBER_28                 ConfigSound = 65
	ConfigSound_CONFIG_SOUND_NUMBER_29                 ConfigSound = 66
	ConfigSound_CONFIG_SOUND_NUMBER_30                 ConfigSound = 67
	ConfigSound_CONFIG_SOUND_NUMBER_31                 ConfigSound = 68
	ConfigSound_CONFIG_SOUND_NUMBER_32                 ConfigSound = 69
	ConfigSound_CONFIG_SOUND_NUMBER_33                 ConfigSound = 70
	ConfigSound_CONFIG_SOUND_NUMBER_34                 ConfigSound = 71
	ConfigSound_CONFIG_SOUND_NUMBER_35                 ConfigSound = 72
	ConfigSound_CONFIG_SOUND_NUMBER_36                 ConfigSound = 73
	ConfigSound_CONFIG_SOUND_NUMBER_37                 ConfigSound = 74
	ConfigSound_CONFIG_SOUND_NUMBER_38                 ConfigSound = 75
	ConfigSound_CONFIG_SOUND_NUMBER_39                 ConfigSound = 76
	ConfigSound_CONFIG_SOUND_NUMBER_40                 ConfigSound = 77
	ConfigSound_CONFIG_SOUND_NUMBER_41                 ConfigSound = 78
	ConfigSound_CONFIG_SOUND_NUMBER_42                 ConfigSound = 79
	ConfigSound_CONFIG_SOUND_NUMBER_43                 ConfigSound = 80
	ConfigSound_CONFIG_SOUND_NUMBER_44                 ConfigSound = 81
	ConfigSound_CONFIG_SOUND_NUMBER_45                 ConfigSound = 82
	ConfigSound_CONFIG_SOUND_NUMBER_46                 ConfigSound = 83
	ConfigSound_CONFIG_SOUND_NUMBER_47                 ConfigSound = 84
	ConfigSound_CONFIG_SOUND_NUMBER_48                 ConfigSound = 85
	ConfigSound_CONFIG_SOUND_NUMBER_49                 ConfigSound = 86
	ConfigSound_CONFIG_SOUND_NUMBER_50                 ConfigSound = 87
	ConfigSound_CONFIG_SOUND_NUMBER_51                 ConfigSound = 88
	ConfigSound_CONFIG_SOUND_NUMBER_52                 ConfigSound = 89
	ConfigSound_CONFIG_SOUND_NUMBER_53                 ConfigSound = 90
	ConfigSound_CONFIG_SOUND_NUMBER_54                 ConfigSound = 91
	ConfigSound_CONFIG_SOUND_NUMBER_55                 ConfigSound = 92
	ConfigSound_CONFIG_SOUND_NUMBER_56                 ConfigSound = 93
	ConfigSound_CONFIG_SOUND_NUMBER_57                 ConfigSound = 94
	ConfigSound_CONFIG_SOUND_NUMBER_58                 ConfigSound = 95
	ConfigSound_CONFIG_SOUND_NUMBER_59                 ConfigSound = 96
	ConfigSound_CONFIG_SOUND_NUMBER_60                 ConfigSound = 97
	ConfigSound_CONFIG_SOUND_NUMBER_61                 ConfigSound = 98
	ConfigSound_CONFIG_SOUND_NUMBER_62                 ConfigSound = 99
	ConfigSound_CONFIG_SOUND_NUMBER_63                 ConfigSound = 100
	ConfigSound_CONFIG_SOUND_NUMBER_64                 ConfigSound = 101
	ConfigSound_CONFIG_SOUND_NUMBER_65                 ConfigSound = 102
	ConfigSound_CONFIG_SOUND_NUMBER_66                 ConfigSound = 103
	ConfigSound_CONFIG_SOUND_NUMBER_67                 ConfigSound = 104
	ConfigSound_CONFIG_SOUND_NUMBER_68                 ConfigSound = 105
	ConfigSound_CONFIG_SOUND_NUMBER_69                 ConfigSound = 106
	ConfigSound_CONFIG_SOUND_NUMBER_70                 ConfigSound = 107
	ConfigSound_CONFIG_SOUND_NUMBER_71                 ConfigSound = 108
	ConfigSound_CONFIG_SOUND_NUMBER_72                 ConfigSound = 109
	ConfigSound_CONFIG_SOUND_NUMBER_73                 ConfigSound = 110
	ConfigSound_CONFIG_SOUND_NUMBER_74                 ConfigSound = 111
	ConfigSound_CONFIG_SOUND_NUMBER_75                 ConfigSound = 112
	ConfigSound_CONFIG_SOUND_NUMBER_76                 ConfigSound = 113
	ConfigSound_CONFIG_SOUND_NUMBER_77                 ConfigSound = 114
	ConfigSound_CONFIG_SOUND_NUMBER_78                 ConfigSound = 115
	ConfigSound_CONFIG_SOUND_NUMBER_79                 ConfigSound = 116
	ConfigSound_CONFIG_SOUND_NUMBER_80                 ConfigSound = 117
	ConfigSound_CONFIG_SOUND_NUMBER_81                 ConfigSound = 118
	ConfigSound_CONFIG_SOUND_NUMBER_82                 ConfigSound = 119
	ConfigSound_CONFIG_SOUND_NUMBER_83                 ConfigSound = 120
	ConfigSound_CONFIG_SOUND_NUMBER_84                 ConfigSound = 121
	ConfigSound_CONFIG_SOUND_NUMBER_85                 ConfigSound = 122
	ConfigSound_CONFIG_SOUND_NUMBER_86                 ConfigSound = 123
	ConfigSound_CONFIG_SOUND_NUMBER_87                 ConfigSound = 124
	ConfigSound_CONFIG_SOUND_NUMBER_88                 ConfigSound = 125
	ConfigSound_CONFIG_SOUND_NUMBER_89                 ConfigSound = 126
	ConfigSound_CONFIG_SOUND_NUMBER_90                 ConfigSound = 127
	ConfigSound_CONFIG_SOUND_NUMBER_91                 ConfigSound = 128
	ConfigSound_CONFIG_SOUND_NUMBER_92                 ConfigSound = 129
	ConfigSound_CONFIG_SOUND_NUMBER_93                 ConfigSound = 130
	ConfigSound_CONFIG_SOUND_NUMBER_94                 ConfigSound = 131
	ConfigSound_CONFIG_SOUND_NUMBER_95                 ConfigSound = 132
	ConfigSound_CONFIG_SOUND_NUMBER_96                 ConfigSound = 133
	ConfigSound_CONFIG_SOUND_NUMBER_97                 ConfigSound = 134
	ConfigSound_CONFIG_SOUND_NUMBER_98                 ConfigSound = 135
	ConfigSound_CONFIG_SOUND_NUMBER_99                 ConfigSound = 136
	ConfigSound_CONFIG_SOUND_NUMBER_100                ConfigSound = 278
	ConfigSound_CONFIG_SOUND_ORDINAL_1                 ConfigSound = 137
	ConfigSound_CONFIG_SOUND_ORDINAL_2                 ConfigSound = 138
	ConfigSound_CONFIG_SOUND_ORDINAL_3                 ConfigSound = 139
	ConfigSound_CONFIG_SOUND_ORDINAL_4                 ConfigSound = 140
	ConfigSound_CONFIG_SOUND_ORDINAL_5                 ConfigSound = 141
	ConfigSound_CONFIG_SOUND_ORDINAL_6                 ConfigSound = 142
	ConfigSound_CONFIG_SOUND_ORDINAL_7                 ConfigSound = 143
	ConfigSound_CONFIG_SOUND_ORDINAL_8                 ConfigSound = 144
	ConfigSound_CONFIG_SOUND_ORDINAL_9                 ConfigSound = 145
	ConfigSound_CONFIG_SOUND_ORDINAL_10                ConfigSound = 146
	ConfigSound_CONFIG_SOUND_ORDINAL_11                ConfigSound = 147
	ConfigSound_CONFIG_SOUND_ORDINAL_12                ConfigSound = 148
	ConfigSound_CONFIG_SOUND_ORDINAL_13                ConfigSound = 149
	ConfigSound_CONFIG_SOUND_ORDINAL_14                ConfigSound = 150
	ConfigSound_CONFIG_SOUND_ORDINAL_15                ConfigSound = 151
	ConfigSound_CONFIG_SOUND_ORDINAL_16                ConfigSound = 152
	ConfigSound_CONFIG_SOUND_ORDINAL_17                ConfigSound = 153
	ConfigSound_CONFIG_SOUND_ORDINAL_18                ConfigSound = 154
	ConfigSound_CONFIG_SOUND_ORDINAL_19                ConfigSound = 155
	ConfigSound_CONFIG_SOUND_ORDINAL_20                ConfigSound = 156
	ConfigSound_CONFIG_SOUND_ORDINAL_21                ConfigSound = 157
	ConfigSound_CONFIG_SOUND_ORDINAL_22                ConfigSound = 158
	ConfigSound_CONFIG_SOUND_ORDINAL_23                ConfigSound = 159
	ConfigSound_CONFIG_SOUND_ORDINAL_24                ConfigSound = 160
	ConfigSound_CONFIG_SOUND_ORDINAL_25                ConfigSound = 161
	ConfigSound_CONFIG_SOUND_ORDINAL_26                ConfigSound = 162
	ConfigSound_CONFIG_SOUND_ORDINAL_27                ConfigSound = 163
	ConfigSound_CONFIG_SOUND_ORDINAL_28                ConfigSound = 164
	ConfigSound_CONFIG_SOUND_ORDINAL_29                ConfigSound = 165
	ConfigSound_CONFIG_SOUND_ORDINAL_30                ConfigSound = 166
	ConfigSound_CONFIG_SOUND_ORDINAL_31                ConfigSound = 167
	ConfigSound_CONFIG_SOUND_ORDINAL_32                ConfigSound = 168
	ConfigSound_CONFIG_SOUND_ORDINAL_33                ConfigSound = 169
	ConfigSound_CONFIG_SOUND_ORDINAL_34                ConfigSound = 170
	ConfigSound_CONFIG_SOUND_ORDINAL_35                ConfigSound = 171
	ConfigSound_CONFIG_SOUND_ORDINAL_36                ConfigSound = 172
	ConfigSound_CONFIG_SOUND_ORDINAL_37                ConfigSound = 173
	ConfigSound_CONFIG_SOUND_ORDINAL_38                ConfigSound = 174
	ConfigSound_CONFIG_SOUND_ORDINAL_39                ConfigSound = 175
	ConfigSound_CONFIG_SOUND_ORDINAL_40                ConfigSound = 176
	ConfigSound_CONFIG_SOUND_ORDINAL_41                ConfigSound = 177
	ConfigSound_CONFIG_SOUND_ORDINAL_42                ConfigSound = 178
	ConfigSound_CONFIG_SOUND_ORDINAL_43                ConfigSound = 179
	ConfigSound_CONFIG_SOUND_ORDINAL_44                ConfigSound = 180
	ConfigSound_CONFIG_SOUND_ORDINAL_45                ConfigSound = 181
	ConfigSound_CONFIG_SOUND_ORDINAL_46                ConfigSound = 182
	ConfigSound_CONFIG_SOUND_ORDINAL_47                ConfigSound = 183
	ConfigSound_CONFIG_SOUND_ORDINAL_48                ConfigSound = 184
	ConfigSound_CONFIG_SOUND_ORDINAL_49                ConfigSound = 185
	ConfigSound_CONFIG_SOUND_ORDINAL_50                ConfigSound = 186
	ConfigSound_CONFIG_SOUND_ORDINAL_51                ConfigSound = 187
	ConfigSound_CONFIG_SOUND_ORDINAL_52                ConfigSound = 188
	ConfigSound_CONFIG_SOUND_ORDINAL_53                ConfigSound = 189
	ConfigSound_CONFIG_SOUND_ORDINAL_54                ConfigSound = 190
	ConfigSound_CONFIG_SOUND_ORDINAL_55                ConfigSound = 191
	ConfigSound_CONFIG_SOUND_ORDINAL_56                ConfigSound = 192
	ConfigSound_CONFIG_SOUND_ORDINAL_57                ConfigSound = 193
	ConfigSound_CONFIG_SOUND_ORDINAL_58                ConfigSound = 194
	ConfigSound_CONFIG_SOUND_ORDINAL_59                ConfigSound = 195
	ConfigSound_CONFIG_SOUND_ORDINAL_60                ConfigSound = 196
	ConfigSound_CONFIG_SOUND_ORDINAL_61                ConfigSound = 197
	ConfigSound_CONFIG_SOUND_ORDINAL_62                ConfigSound = 198
	ConfigSound_CONFIG_SOUND_ORDINAL_63                ConfigSound = 199
	ConfigSound_CONFIG_SOUND_ORDINAL_64                ConfigSound = 200
	ConfigSound_CONFIG_SOUND_ORDINAL_65                ConfigSound = 201
	ConfigSound_CONFIG_SOUND_ORDINAL_66                ConfigSound = 202
	ConfigSound_CONFIG_SOUND_ORDINAL_67                ConfigSound = 203
	ConfigSound_CONFIG_SOUND_ORDINAL_68                ConfigSound = 204
	ConfigSound_CONFIG_SOUND_ORDINAL_69                ConfigSound = 205
	ConfigSound_CONFIG_SOUND_ORDINAL_70                ConfigSound = 206
	ConfigSound_CONFIG_SOUND_ORDINAL_71                ConfigSound = 207
	ConfigSound_CONFIG_SOUND_ORDINAL_72                ConfigSound = 208
	ConfigSound_CONFIG_SOUND_ORDINAL_73                ConfigSound = 209
	ConfigSound_CONFIG_SOUND_ORDINAL_74                ConfigSound = 210
	ConfigSound_CONFIG_SOUND_ORDINAL_75                ConfigSound = 211
	ConfigSound_CONFIG_SOUND_ORDINAL_76                ConfigSound = 212
	ConfigSound_CONFIG_SOUND_ORDINAL_77                ConfigSound = 213
	ConfigSound_CONFIG_SOUND_ORDINAL_78                ConfigSound = 214
	ConfigSound_CONFIG_SOUND_ORDINAL_79                ConfigSound = 215
	ConfigSound_CONFIG_SOUND_ORDINAL_80                ConfigSound = 216
	ConfigSound_CONFIG_SOUND_ORDINAL_81                ConfigSound = 217
	ConfigSound_CONFIG_SOUND_ORDINAL_82                ConfigSound = 218
	ConfigSound_CONFIG_SOUND_ORDINAL_83                ConfigSound = 219
	ConfigSound_CONFIG_SOUND_ORDINAL_84                ConfigSound = 220
	ConfigSound_CONFIG_SOUND_ORDINAL_85                ConfigSound = 221
	ConfigSound_CONFIG_SOUND_ORDINAL_86                ConfigSound = 222
	ConfigSound_CONFIG_SOUND_ORDINAL_87                ConfigSound = 223
	ConfigSound_CONFIG_SOUND_ORDINAL_88                ConfigSound = 224
	ConfigSound_CONFIG_SOUND_ORDINAL_89                ConfigSound = 225
	ConfigSound_CONFIG_SOUND_ORDINAL_90                ConfigSound = 226
	ConfigSound_CONFIG_SOUND_ORDINAL_91                ConfigSound = 227
	ConfigSound_CONFIG_SOUND_ORDINAL_92                ConfigSound = 228
	ConfigSound_CONFIG_SOUND_ORDINAL_93                ConfigSound = 229
	ConfigSound_CONFIG_SOUND_ORDINAL_94                ConfigSound = 230
	ConfigSound_CONFIG_SOUND_ORDINAL_95                ConfigSound = 231
	ConfigSound_CONFIG_SOUND_ORDINAL_96                ConfigSound = 232
	ConfigSound_CONFIG_SOUND_ORDINAL_97                ConfigSound = 233
	ConfigSound_CONFIG_SOUND_ORDINAL_98                ConfigSound = 234
	ConfigSound_CONFIG_SOUND_ORDINAL_99                ConfigSound = 235
	ConfigSound_CONFIG_SOUND_ORDINAL_100               ConfigSound = 279
	ConfigSound_CONFIG_SOUND_AGENTLOGIN_CALL_ENDED     ConfigSound = 236
	ConfigSound_CONFIG_SOUND_AGENTLOGIN_TRUMPET        ConfigSound = 237
	ConfigSound_CONFIG_SOUND_ANNOUNCE_POSITION_END     ConfigSound = 238
	ConfigSound_CONFIG_SOUND_ANNOUNCE_POSITION_SHORTLY ConfigSound = 239
	ConfigSound_CONFIG_SOUND_ANNOUNCE_POSITION_START   ConfigSound = 240
	ConfigSound_CONFIG_SOUND_ANNOUNCE_TIME_END         ConfigSound = 241
	ConfigSound_CONFIG_SOUND_ANNOUNCE_TIME_SHORTLY     ConfigSound = 242
	ConfigSound_CONFIG_SOUND_ANNOUNCE_TIME_START       ConfigSound = 243
	ConfigSound_CONFIG_SOUND_BEEP                      ConfigSound = 244
	ConfigSound_CONFIG_SOUND_FPM_CALM_RIVER            ConfigSound = 245
	ConfigSound_CONFIG_SOUND_NBDY_AVAIL_TO_TAKE_CALL   ConfigSound = 246
	ConfigSound_CONFIG_SOUND_PBX_AGENT_RING            ConfigSound = 247
	ConfigSound_CONFIG_SOUND_INBOUND_AGENT_JOIN        ConfigSound = 248
	ConfigSound_CONFIG_SOUND_INBOUND_AGENT_LEAVE       ConfigSound = 249
	ConfigSound_CONFIG_SOUND_INBOUND_CALLER_JOIN       ConfigSound = 250
	ConfigSound_CONFIG_SOUND_INBOUND_CALLER_LEAVE      ConfigSound = 251
	ConfigSound_CONFIG_SOUND_INBOUND_MOH               ConfigSound = 252
	ConfigSound_CONFIG_SOUND_INBOUND_NOBODY_AVAILABLE  ConfigSound = 253
	ConfigSound_CONFIG_SOUND_INBOUND_QUEUE_CALLBACK    ConfigSound = 254
	ConfigSound_CONFIG_SOUND_OUTBOUND_AGENT_JOIN       ConfigSound = 255
	ConfigSound_CONFIG_SOUND_OUTBOUND_AGENT_LEAVE      ConfigSound = 256
	ConfigSound_CONFIG_SOUND_OUTBOUND_CALLER_JOIN      ConfigSound = 257
	ConfigSound_CONFIG_SOUND_OUTBOUND_CALLER_LEAVE     ConfigSound = 258
	ConfigSound_CONFIG_SOUND_OUTBOUND_MOH              ConfigSound = 259
	ConfigSound_CONFIG_SOUND_OUTBOUND_NOBODY_AVAILABLE ConfigSound = 260
	ConfigSound_CONFIG_SOUND_OUTBOUND_QUEUE_CALLBACK   ConfigSound = 261
	ConfigSound_CONFIG_SOUND_PREVIEW_AGENT_JOIN        ConfigSound = 262
	ConfigSound_CONFIG_SOUND_PREVIEW_AGENT_LEAVE       ConfigSound = 263
	ConfigSound_CONFIG_SOUND_PREVIEW_AGENT_PREPARE     ConfigSound = 264
	ConfigSound_CONFIG_SOUND_PREVIEW_CALLER_JOIN       ConfigSound = 265
	ConfigSound_CONFIG_SOUND_PREVIEW_CALLER_LEAVE      ConfigSound = 266
	ConfigSound_CONFIG_SOUND_PREVIEW_MOH               ConfigSound = 267
	ConfigSound_CONFIG_SOUND_PREVIEW_NOBODY_AVAILABLE  ConfigSound = 268
	ConfigSound_CONFIG_SOUND_PREVIEW_QUEUE_CALLBACK    ConfigSound = 269
	ConfigSound_CONFIG_SOUND_MANUAL_AGENT_JOIN         ConfigSound = 270
	ConfigSound_CONFIG_SOUND_MANUAL_AGENT_LEAVE        ConfigSound = 271
	ConfigSound_CONFIG_SOUND_MANUAL_AGENT_PREPARE      ConfigSound = 272
	ConfigSound_CONFIG_SOUND_MANUAL_CALLER_JOIN        ConfigSound = 273
	ConfigSound_CONFIG_SOUND_MANUAL_CALLER_LEAVE       ConfigSound = 274
	ConfigSound_CONFIG_SOUND_MANUAL_MOH                ConfigSound = 275
	ConfigSound_CONFIG_SOUND_MANUAL_NOBODY_AVAILABLE   ConfigSound = 276
	ConfigSound_CONFIG_SOUND_MANUAL_QUEUE_CALLBACK     ConfigSound = 277
	ConfigSound_CONFIG_SOUND_OUTBOUND_MOH_HOLD         ConfigSound = 280
	ConfigSound_CONFIG_SOUND_OUTBOUND_MOH_MULTIACCEPT  ConfigSound = 281
	ConfigSound_CONFIG_SOUND_OUTBOUND_MOH_TRANSFER     ConfigSound = 282
	ConfigSound_CONFIG_SOUND_INBOUND_MOH_HOLD          ConfigSound = 283
	ConfigSound_CONFIG_SOUND_INBOUND_MOH_MULTIACCEPT   ConfigSound = 284
	ConfigSound_CONFIG_SOUND_INBOUND_MOH_TRANSFER      ConfigSound = 285
	ConfigSound_CONFIG_SOUND_PREVIEW_MOH_HOLD          ConfigSound = 286
	ConfigSound_CONFIG_SOUND_PREVIEW_MOH_MULTIACCEPT   ConfigSound = 287
	ConfigSound_CONFIG_SOUND_PREVIEW_MOH_TRANSFER      ConfigSound = 288
	ConfigSound_CONFIG_SOUND_MANUAL_MOH_HOLD           ConfigSound = 289
	ConfigSound_CONFIG_SOUND_MANUAL_MOH_MULTIACCEPT    ConfigSound = 290
	ConfigSound_CONFIG_SOUND_MANUAL_MOH_TRANSFER       ConfigSound = 291
	ConfigSound_CONFIG_SOUND_CALLBACK_QUEUED_ALREADY   ConfigSound = 292
)

// Enum value maps for ConfigSound.
var (
	ConfigSound_name = map[int32]string{
		0:   "CONFIG_SOUND_ONE",
		38:  "CONFIG_SOUND_NUMBER_1",
		39:  "CONFIG_SOUND_NUMBER_2",
		40:  "CONFIG_SOUND_NUMBER_3",
		41:  "CONFIG_SOUND_NUMBER_4",
		42:  "CONFIG_SOUND_NUMBER_5",
		43:  "CONFIG_SOUND_NUMBER_6",
		44:  "CONFIG_SOUND_NUMBER_7",
		45:  "CONFIG_SOUND_NUMBER_8",
		46:  "CONFIG_SOUND_NUMBER_9",
		47:  "CONFIG_SOUND_NUMBER_10",
		48:  "CONFIG_SOUND_NUMBER_11",
		49:  "CONFIG_SOUND_NUMBER_12",
		50:  "CONFIG_SOUND_NUMBER_13",
		51:  "CONFIG_SOUND_NUMBER_14",
		52:  "CONFIG_SOUND_NUMBER_15",
		53:  "CONFIG_SOUND_NUMBER_16",
		54:  "CONFIG_SOUND_NUMBER_17",
		55:  "CONFIG_SOUND_NUMBER_18",
		56:  "CONFIG_SOUND_NUMBER_19",
		57:  "CONFIG_SOUND_NUMBER_20",
		58:  "CONFIG_SOUND_NUMBER_21",
		59:  "CONFIG_SOUND_NUMBER_22",
		60:  "CONFIG_SOUND_NUMBER_23",
		61:  "CONFIG_SOUND_NUMBER_24",
		62:  "CONFIG_SOUND_NUMBER_25",
		63:  "CONFIG_SOUND_NUMBER_26",
		64:  "CONFIG_SOUND_NUMBER_27",
		65:  "CONFIG_SOUND_NUMBER_28",
		66:  "CONFIG_SOUND_NUMBER_29",
		67:  "CONFIG_SOUND_NUMBER_30",
		68:  "CONFIG_SOUND_NUMBER_31",
		69:  "CONFIG_SOUND_NUMBER_32",
		70:  "CONFIG_SOUND_NUMBER_33",
		71:  "CONFIG_SOUND_NUMBER_34",
		72:  "CONFIG_SOUND_NUMBER_35",
		73:  "CONFIG_SOUND_NUMBER_36",
		74:  "CONFIG_SOUND_NUMBER_37",
		75:  "CONFIG_SOUND_NUMBER_38",
		76:  "CONFIG_SOUND_NUMBER_39",
		77:  "CONFIG_SOUND_NUMBER_40",
		78:  "CONFIG_SOUND_NUMBER_41",
		79:  "CONFIG_SOUND_NUMBER_42",
		80:  "CONFIG_SOUND_NUMBER_43",
		81:  "CONFIG_SOUND_NUMBER_44",
		82:  "CONFIG_SOUND_NUMBER_45",
		83:  "CONFIG_SOUND_NUMBER_46",
		84:  "CONFIG_SOUND_NUMBER_47",
		85:  "CONFIG_SOUND_NUMBER_48",
		86:  "CONFIG_SOUND_NUMBER_49",
		87:  "CONFIG_SOUND_NUMBER_50",
		88:  "CONFIG_SOUND_NUMBER_51",
		89:  "CONFIG_SOUND_NUMBER_52",
		90:  "CONFIG_SOUND_NUMBER_53",
		91:  "CONFIG_SOUND_NUMBER_54",
		92:  "CONFIG_SOUND_NUMBER_55",
		93:  "CONFIG_SOUND_NUMBER_56",
		94:  "CONFIG_SOUND_NUMBER_57",
		95:  "CONFIG_SOUND_NUMBER_58",
		96:  "CONFIG_SOUND_NUMBER_59",
		97:  "CONFIG_SOUND_NUMBER_60",
		98:  "CONFIG_SOUND_NUMBER_61",
		99:  "CONFIG_SOUND_NUMBER_62",
		100: "CONFIG_SOUND_NUMBER_63",
		101: "CONFIG_SOUND_NUMBER_64",
		102: "CONFIG_SOUND_NUMBER_65",
		103: "CONFIG_SOUND_NUMBER_66",
		104: "CONFIG_SOUND_NUMBER_67",
		105: "CONFIG_SOUND_NUMBER_68",
		106: "CONFIG_SOUND_NUMBER_69",
		107: "CONFIG_SOUND_NUMBER_70",
		108: "CONFIG_SOUND_NUMBER_71",
		109: "CONFIG_SOUND_NUMBER_72",
		110: "CONFIG_SOUND_NUMBER_73",
		111: "CONFIG_SOUND_NUMBER_74",
		112: "CONFIG_SOUND_NUMBER_75",
		113: "CONFIG_SOUND_NUMBER_76",
		114: "CONFIG_SOUND_NUMBER_77",
		115: "CONFIG_SOUND_NUMBER_78",
		116: "CONFIG_SOUND_NUMBER_79",
		117: "CONFIG_SOUND_NUMBER_80",
		118: "CONFIG_SOUND_NUMBER_81",
		119: "CONFIG_SOUND_NUMBER_82",
		120: "CONFIG_SOUND_NUMBER_83",
		121: "CONFIG_SOUND_NUMBER_84",
		122: "CONFIG_SOUND_NUMBER_85",
		123: "CONFIG_SOUND_NUMBER_86",
		124: "CONFIG_SOUND_NUMBER_87",
		125: "CONFIG_SOUND_NUMBER_88",
		126: "CONFIG_SOUND_NUMBER_89",
		127: "CONFIG_SOUND_NUMBER_90",
		128: "CONFIG_SOUND_NUMBER_91",
		129: "CONFIG_SOUND_NUMBER_92",
		130: "CONFIG_SOUND_NUMBER_93",
		131: "CONFIG_SOUND_NUMBER_94",
		132: "CONFIG_SOUND_NUMBER_95",
		133: "CONFIG_SOUND_NUMBER_96",
		134: "CONFIG_SOUND_NUMBER_97",
		135: "CONFIG_SOUND_NUMBER_98",
		136: "CONFIG_SOUND_NUMBER_99",
		278: "CONFIG_SOUND_NUMBER_100",
		137: "CONFIG_SOUND_ORDINAL_1",
		138: "CONFIG_SOUND_ORDINAL_2",
		139: "CONFIG_SOUND_ORDINAL_3",
		140: "CONFIG_SOUND_ORDINAL_4",
		141: "CONFIG_SOUND_ORDINAL_5",
		142: "CONFIG_SOUND_ORDINAL_6",
		143: "CONFIG_SOUND_ORDINAL_7",
		144: "CONFIG_SOUND_ORDINAL_8",
		145: "CONFIG_SOUND_ORDINAL_9",
		146: "CONFIG_SOUND_ORDINAL_10",
		147: "CONFIG_SOUND_ORDINAL_11",
		148: "CONFIG_SOUND_ORDINAL_12",
		149: "CONFIG_SOUND_ORDINAL_13",
		150: "CONFIG_SOUND_ORDINAL_14",
		151: "CONFIG_SOUND_ORDINAL_15",
		152: "CONFIG_SOUND_ORDINAL_16",
		153: "CONFIG_SOUND_ORDINAL_17",
		154: "CONFIG_SOUND_ORDINAL_18",
		155: "CONFIG_SOUND_ORDINAL_19",
		156: "CONFIG_SOUND_ORDINAL_20",
		157: "CONFIG_SOUND_ORDINAL_21",
		158: "CONFIG_SOUND_ORDINAL_22",
		159: "CONFIG_SOUND_ORDINAL_23",
		160: "CONFIG_SOUND_ORDINAL_24",
		161: "CONFIG_SOUND_ORDINAL_25",
		162: "CONFIG_SOUND_ORDINAL_26",
		163: "CONFIG_SOUND_ORDINAL_27",
		164: "CONFIG_SOUND_ORDINAL_28",
		165: "CONFIG_SOUND_ORDINAL_29",
		166: "CONFIG_SOUND_ORDINAL_30",
		167: "CONFIG_SOUND_ORDINAL_31",
		168: "CONFIG_SOUND_ORDINAL_32",
		169: "CONFIG_SOUND_ORDINAL_33",
		170: "CONFIG_SOUND_ORDINAL_34",
		171: "CONFIG_SOUND_ORDINAL_35",
		172: "CONFIG_SOUND_ORDINAL_36",
		173: "CONFIG_SOUND_ORDINAL_37",
		174: "CONFIG_SOUND_ORDINAL_38",
		175: "CONFIG_SOUND_ORDINAL_39",
		176: "CONFIG_SOUND_ORDINAL_40",
		177: "CONFIG_SOUND_ORDINAL_41",
		178: "CONFIG_SOUND_ORDINAL_42",
		179: "CONFIG_SOUND_ORDINAL_43",
		180: "CONFIG_SOUND_ORDINAL_44",
		181: "CONFIG_SOUND_ORDINAL_45",
		182: "CONFIG_SOUND_ORDINAL_46",
		183: "CONFIG_SOUND_ORDINAL_47",
		184: "CONFIG_SOUND_ORDINAL_48",
		185: "CONFIG_SOUND_ORDINAL_49",
		186: "CONFIG_SOUND_ORDINAL_50",
		187: "CONFIG_SOUND_ORDINAL_51",
		188: "CONFIG_SOUND_ORDINAL_52",
		189: "CONFIG_SOUND_ORDINAL_53",
		190: "CONFIG_SOUND_ORDINAL_54",
		191: "CONFIG_SOUND_ORDINAL_55",
		192: "CONFIG_SOUND_ORDINAL_56",
		193: "CONFIG_SOUND_ORDINAL_57",
		194: "CONFIG_SOUND_ORDINAL_58",
		195: "CONFIG_SOUND_ORDINAL_59",
		196: "CONFIG_SOUND_ORDINAL_60",
		197: "CONFIG_SOUND_ORDINAL_61",
		198: "CONFIG_SOUND_ORDINAL_62",
		199: "CONFIG_SOUND_ORDINAL_63",
		200: "CONFIG_SOUND_ORDINAL_64",
		201: "CONFIG_SOUND_ORDINAL_65",
		202: "CONFIG_SOUND_ORDINAL_66",
		203: "CONFIG_SOUND_ORDINAL_67",
		204: "CONFIG_SOUND_ORDINAL_68",
		205: "CONFIG_SOUND_ORDINAL_69",
		206: "CONFIG_SOUND_ORDINAL_70",
		207: "CONFIG_SOUND_ORDINAL_71",
		208: "CONFIG_SOUND_ORDINAL_72",
		209: "CONFIG_SOUND_ORDINAL_73",
		210: "CONFIG_SOUND_ORDINAL_74",
		211: "CONFIG_SOUND_ORDINAL_75",
		212: "CONFIG_SOUND_ORDINAL_76",
		213: "CONFIG_SOUND_ORDINAL_77",
		214: "CONFIG_SOUND_ORDINAL_78",
		215: "CONFIG_SOUND_ORDINAL_79",
		216: "CONFIG_SOUND_ORDINAL_80",
		217: "CONFIG_SOUND_ORDINAL_81",
		218: "CONFIG_SOUND_ORDINAL_82",
		219: "CONFIG_SOUND_ORDINAL_83",
		220: "CONFIG_SOUND_ORDINAL_84",
		221: "CONFIG_SOUND_ORDINAL_85",
		222: "CONFIG_SOUND_ORDINAL_86",
		223: "CONFIG_SOUND_ORDINAL_87",
		224: "CONFIG_SOUND_ORDINAL_88",
		225: "CONFIG_SOUND_ORDINAL_89",
		226: "CONFIG_SOUND_ORDINAL_90",
		227: "CONFIG_SOUND_ORDINAL_91",
		228: "CONFIG_SOUND_ORDINAL_92",
		229: "CONFIG_SOUND_ORDINAL_93",
		230: "CONFIG_SOUND_ORDINAL_94",
		231: "CONFIG_SOUND_ORDINAL_95",
		232: "CONFIG_SOUND_ORDINAL_96",
		233: "CONFIG_SOUND_ORDINAL_97",
		234: "CONFIG_SOUND_ORDINAL_98",
		235: "CONFIG_SOUND_ORDINAL_99",
		279: "CONFIG_SOUND_ORDINAL_100",
		236: "CONFIG_SOUND_AGENTLOGIN_CALL_ENDED",
		237: "CONFIG_SOUND_AGENTLOGIN_TRUMPET",
		238: "CONFIG_SOUND_ANNOUNCE_POSITION_END",
		239: "CONFIG_SOUND_ANNOUNCE_POSITION_SHORTLY",
		240: "CONFIG_SOUND_ANNOUNCE_POSITION_START",
		241: "CONFIG_SOUND_ANNOUNCE_TIME_END",
		242: "CONFIG_SOUND_ANNOUNCE_TIME_SHORTLY",
		243: "CONFIG_SOUND_ANNOUNCE_TIME_START",
		244: "CONFIG_SOUND_BEEP",
		245: "CONFIG_SOUND_FPM_CALM_RIVER",
		246: "CONFIG_SOUND_NBDY_AVAIL_TO_TAKE_CALL",
		247: "CONFIG_SOUND_PBX_AGENT_RING",
		248: "CONFIG_SOUND_INBOUND_AGENT_JOIN",
		249: "CONFIG_SOUND_INBOUND_AGENT_LEAVE",
		250: "CONFIG_SOUND_INBOUND_CALLER_JOIN",
		251: "CONFIG_SOUND_INBOUND_CALLER_LEAVE",
		252: "CONFIG_SOUND_INBOUND_MOH",
		253: "CONFIG_SOUND_INBOUND_NOBODY_AVAILABLE",
		254: "CONFIG_SOUND_INBOUND_QUEUE_CALLBACK",
		255: "CONFIG_SOUND_OUTBOUND_AGENT_JOIN",
		256: "CONFIG_SOUND_OUTBOUND_AGENT_LEAVE",
		257: "CONFIG_SOUND_OUTBOUND_CALLER_JOIN",
		258: "CONFIG_SOUND_OUTBOUND_CALLER_LEAVE",
		259: "CONFIG_SOUND_OUTBOUND_MOH",
		260: "CONFIG_SOUND_OUTBOUND_NOBODY_AVAILABLE",
		261: "CONFIG_SOUND_OUTBOUND_QUEUE_CALLBACK",
		262: "CONFIG_SOUND_PREVIEW_AGENT_JOIN",
		263: "CONFIG_SOUND_PREVIEW_AGENT_LEAVE",
		264: "CONFIG_SOUND_PREVIEW_AGENT_PREPARE",
		265: "CONFIG_SOUND_PREVIEW_CALLER_JOIN",
		266: "CONFIG_SOUND_PREVIEW_CALLER_LEAVE",
		267: "CONFIG_SOUND_PREVIEW_MOH",
		268: "CONFIG_SOUND_PREVIEW_NOBODY_AVAILABLE",
		269: "CONFIG_SOUND_PREVIEW_QUEUE_CALLBACK",
		270: "CONFIG_SOUND_MANUAL_AGENT_JOIN",
		271: "CONFIG_SOUND_MANUAL_AGENT_LEAVE",
		272: "CONFIG_SOUND_MANUAL_AGENT_PREPARE",
		273: "CONFIG_SOUND_MANUAL_CALLER_JOIN",
		274: "CONFIG_SOUND_MANUAL_CALLER_LEAVE",
		275: "CONFIG_SOUND_MANUAL_MOH",
		276: "CONFIG_SOUND_MANUAL_NOBODY_AVAILABLE",
		277: "CONFIG_SOUND_MANUAL_QUEUE_CALLBACK",
		280: "CONFIG_SOUND_OUTBOUND_MOH_HOLD",
		281: "CONFIG_SOUND_OUTBOUND_MOH_MULTIACCEPT",
		282: "CONFIG_SOUND_OUTBOUND_MOH_TRANSFER",
		283: "CONFIG_SOUND_INBOUND_MOH_HOLD",
		284: "CONFIG_SOUND_INBOUND_MOH_MULTIACCEPT",
		285: "CONFIG_SOUND_INBOUND_MOH_TRANSFER",
		286: "CONFIG_SOUND_PREVIEW_MOH_HOLD",
		287: "CONFIG_SOUND_PREVIEW_MOH_MULTIACCEPT",
		288: "CONFIG_SOUND_PREVIEW_MOH_TRANSFER",
		289: "CONFIG_SOUND_MANUAL_MOH_HOLD",
		290: "CONFIG_SOUND_MANUAL_MOH_MULTIACCEPT",
		291: "CONFIG_SOUND_MANUAL_MOH_TRANSFER",
		292: "CONFIG_SOUND_CALLBACK_QUEUED_ALREADY",
	}
	ConfigSound_value = map[string]int32{
		"CONFIG_SOUND_ONE":                       0,
		"CONFIG_SOUND_NUMBER_1":                  38,
		"CONFIG_SOUND_NUMBER_2":                  39,
		"CONFIG_SOUND_NUMBER_3":                  40,
		"CONFIG_SOUND_NUMBER_4":                  41,
		"CONFIG_SOUND_NUMBER_5":                  42,
		"CONFIG_SOUND_NUMBER_6":                  43,
		"CONFIG_SOUND_NUMBER_7":                  44,
		"CONFIG_SOUND_NUMBER_8":                  45,
		"CONFIG_SOUND_NUMBER_9":                  46,
		"CONFIG_SOUND_NUMBER_10":                 47,
		"CONFIG_SOUND_NUMBER_11":                 48,
		"CONFIG_SOUND_NUMBER_12":                 49,
		"CONFIG_SOUND_NUMBER_13":                 50,
		"CONFIG_SOUND_NUMBER_14":                 51,
		"CONFIG_SOUND_NUMBER_15":                 52,
		"CONFIG_SOUND_NUMBER_16":                 53,
		"CONFIG_SOUND_NUMBER_17":                 54,
		"CONFIG_SOUND_NUMBER_18":                 55,
		"CONFIG_SOUND_NUMBER_19":                 56,
		"CONFIG_SOUND_NUMBER_20":                 57,
		"CONFIG_SOUND_NUMBER_21":                 58,
		"CONFIG_SOUND_NUMBER_22":                 59,
		"CONFIG_SOUND_NUMBER_23":                 60,
		"CONFIG_SOUND_NUMBER_24":                 61,
		"CONFIG_SOUND_NUMBER_25":                 62,
		"CONFIG_SOUND_NUMBER_26":                 63,
		"CONFIG_SOUND_NUMBER_27":                 64,
		"CONFIG_SOUND_NUMBER_28":                 65,
		"CONFIG_SOUND_NUMBER_29":                 66,
		"CONFIG_SOUND_NUMBER_30":                 67,
		"CONFIG_SOUND_NUMBER_31":                 68,
		"CONFIG_SOUND_NUMBER_32":                 69,
		"CONFIG_SOUND_NUMBER_33":                 70,
		"CONFIG_SOUND_NUMBER_34":                 71,
		"CONFIG_SOUND_NUMBER_35":                 72,
		"CONFIG_SOUND_NUMBER_36":                 73,
		"CONFIG_SOUND_NUMBER_37":                 74,
		"CONFIG_SOUND_NUMBER_38":                 75,
		"CONFIG_SOUND_NUMBER_39":                 76,
		"CONFIG_SOUND_NUMBER_40":                 77,
		"CONFIG_SOUND_NUMBER_41":                 78,
		"CONFIG_SOUND_NUMBER_42":                 79,
		"CONFIG_SOUND_NUMBER_43":                 80,
		"CONFIG_SOUND_NUMBER_44":                 81,
		"CONFIG_SOUND_NUMBER_45":                 82,
		"CONFIG_SOUND_NUMBER_46":                 83,
		"CONFIG_SOUND_NUMBER_47":                 84,
		"CONFIG_SOUND_NUMBER_48":                 85,
		"CONFIG_SOUND_NUMBER_49":                 86,
		"CONFIG_SOUND_NUMBER_50":                 87,
		"CONFIG_SOUND_NUMBER_51":                 88,
		"CONFIG_SOUND_NUMBER_52":                 89,
		"CONFIG_SOUND_NUMBER_53":                 90,
		"CONFIG_SOUND_NUMBER_54":                 91,
		"CONFIG_SOUND_NUMBER_55":                 92,
		"CONFIG_SOUND_NUMBER_56":                 93,
		"CONFIG_SOUND_NUMBER_57":                 94,
		"CONFIG_SOUND_NUMBER_58":                 95,
		"CONFIG_SOUND_NUMBER_59":                 96,
		"CONFIG_SOUND_NUMBER_60":                 97,
		"CONFIG_SOUND_NUMBER_61":                 98,
		"CONFIG_SOUND_NUMBER_62":                 99,
		"CONFIG_SOUND_NUMBER_63":                 100,
		"CONFIG_SOUND_NUMBER_64":                 101,
		"CONFIG_SOUND_NUMBER_65":                 102,
		"CONFIG_SOUND_NUMBER_66":                 103,
		"CONFIG_SOUND_NUMBER_67":                 104,
		"CONFIG_SOUND_NUMBER_68":                 105,
		"CONFIG_SOUND_NUMBER_69":                 106,
		"CONFIG_SOUND_NUMBER_70":                 107,
		"CONFIG_SOUND_NUMBER_71":                 108,
		"CONFIG_SOUND_NUMBER_72":                 109,
		"CONFIG_SOUND_NUMBER_73":                 110,
		"CONFIG_SOUND_NUMBER_74":                 111,
		"CONFIG_SOUND_NUMBER_75":                 112,
		"CONFIG_SOUND_NUMBER_76":                 113,
		"CONFIG_SOUND_NUMBER_77":                 114,
		"CONFIG_SOUND_NUMBER_78":                 115,
		"CONFIG_SOUND_NUMBER_79":                 116,
		"CONFIG_SOUND_NUMBER_80":                 117,
		"CONFIG_SOUND_NUMBER_81":                 118,
		"CONFIG_SOUND_NUMBER_82":                 119,
		"CONFIG_SOUND_NUMBER_83":                 120,
		"CONFIG_SOUND_NUMBER_84":                 121,
		"CONFIG_SOUND_NUMBER_85":                 122,
		"CONFIG_SOUND_NUMBER_86":                 123,
		"CONFIG_SOUND_NUMBER_87":                 124,
		"CONFIG_SOUND_NUMBER_88":                 125,
		"CONFIG_SOUND_NUMBER_89":                 126,
		"CONFIG_SOUND_NUMBER_90":                 127,
		"CONFIG_SOUND_NUMBER_91":                 128,
		"CONFIG_SOUND_NUMBER_92":                 129,
		"CONFIG_SOUND_NUMBER_93":                 130,
		"CONFIG_SOUND_NUMBER_94":                 131,
		"CONFIG_SOUND_NUMBER_95":                 132,
		"CONFIG_SOUND_NUMBER_96":                 133,
		"CONFIG_SOUND_NUMBER_97":                 134,
		"CONFIG_SOUND_NUMBER_98":                 135,
		"CONFIG_SOUND_NUMBER_99":                 136,
		"CONFIG_SOUND_NUMBER_100":                278,
		"CONFIG_SOUND_ORDINAL_1":                 137,
		"CONFIG_SOUND_ORDINAL_2":                 138,
		"CONFIG_SOUND_ORDINAL_3":                 139,
		"CONFIG_SOUND_ORDINAL_4":                 140,
		"CONFIG_SOUND_ORDINAL_5":                 141,
		"CONFIG_SOUND_ORDINAL_6":                 142,
		"CONFIG_SOUND_ORDINAL_7":                 143,
		"CONFIG_SOUND_ORDINAL_8":                 144,
		"CONFIG_SOUND_ORDINAL_9":                 145,
		"CONFIG_SOUND_ORDINAL_10":                146,
		"CONFIG_SOUND_ORDINAL_11":                147,
		"CONFIG_SOUND_ORDINAL_12":                148,
		"CONFIG_SOUND_ORDINAL_13":                149,
		"CONFIG_SOUND_ORDINAL_14":                150,
		"CONFIG_SOUND_ORDINAL_15":                151,
		"CONFIG_SOUND_ORDINAL_16":                152,
		"CONFIG_SOUND_ORDINAL_17":                153,
		"CONFIG_SOUND_ORDINAL_18":                154,
		"CONFIG_SOUND_ORDINAL_19":                155,
		"CONFIG_SOUND_ORDINAL_20":                156,
		"CONFIG_SOUND_ORDINAL_21":                157,
		"CONFIG_SOUND_ORDINAL_22":                158,
		"CONFIG_SOUND_ORDINAL_23":                159,
		"CONFIG_SOUND_ORDINAL_24":                160,
		"CONFIG_SOUND_ORDINAL_25":                161,
		"CONFIG_SOUND_ORDINAL_26":                162,
		"CONFIG_SOUND_ORDINAL_27":                163,
		"CONFIG_SOUND_ORDINAL_28":                164,
		"CONFIG_SOUND_ORDINAL_29":                165,
		"CONFIG_SOUND_ORDINAL_30":                166,
		"CONFIG_SOUND_ORDINAL_31":                167,
		"CONFIG_SOUND_ORDINAL_32":                168,
		"CONFIG_SOUND_ORDINAL_33":                169,
		"CONFIG_SOUND_ORDINAL_34":                170,
		"CONFIG_SOUND_ORDINAL_35":                171,
		"CONFIG_SOUND_ORDINAL_36":                172,
		"CONFIG_SOUND_ORDINAL_37":                173,
		"CONFIG_SOUND_ORDINAL_38":                174,
		"CONFIG_SOUND_ORDINAL_39":                175,
		"CONFIG_SOUND_ORDINAL_40":                176,
		"CONFIG_SOUND_ORDINAL_41":                177,
		"CONFIG_SOUND_ORDINAL_42":                178,
		"CONFIG_SOUND_ORDINAL_43":                179,
		"CONFIG_SOUND_ORDINAL_44":                180,
		"CONFIG_SOUND_ORDINAL_45":                181,
		"CONFIG_SOUND_ORDINAL_46":                182,
		"CONFIG_SOUND_ORDINAL_47":                183,
		"CONFIG_SOUND_ORDINAL_48":                184,
		"CONFIG_SOUND_ORDINAL_49":                185,
		"CONFIG_SOUND_ORDINAL_50":                186,
		"CONFIG_SOUND_ORDINAL_51":                187,
		"CONFIG_SOUND_ORDINAL_52":                188,
		"CONFIG_SOUND_ORDINAL_53":                189,
		"CONFIG_SOUND_ORDINAL_54":                190,
		"CONFIG_SOUND_ORDINAL_55":                191,
		"CONFIG_SOUND_ORDINAL_56":                192,
		"CONFIG_SOUND_ORDINAL_57":                193,
		"CONFIG_SOUND_ORDINAL_58":                194,
		"CONFIG_SOUND_ORDINAL_59":                195,
		"CONFIG_SOUND_ORDINAL_60":                196,
		"CONFIG_SOUND_ORDINAL_61":                197,
		"CONFIG_SOUND_ORDINAL_62":                198,
		"CONFIG_SOUND_ORDINAL_63":                199,
		"CONFIG_SOUND_ORDINAL_64":                200,
		"CONFIG_SOUND_ORDINAL_65":                201,
		"CONFIG_SOUND_ORDINAL_66":                202,
		"CONFIG_SOUND_ORDINAL_67":                203,
		"CONFIG_SOUND_ORDINAL_68":                204,
		"CONFIG_SOUND_ORDINAL_69":                205,
		"CONFIG_SOUND_ORDINAL_70":                206,
		"CONFIG_SOUND_ORDINAL_71":                207,
		"CONFIG_SOUND_ORDINAL_72":                208,
		"CONFIG_SOUND_ORDINAL_73":                209,
		"CONFIG_SOUND_ORDINAL_74":                210,
		"CONFIG_SOUND_ORDINAL_75":                211,
		"CONFIG_SOUND_ORDINAL_76":                212,
		"CONFIG_SOUND_ORDINAL_77":                213,
		"CONFIG_SOUND_ORDINAL_78":                214,
		"CONFIG_SOUND_ORDINAL_79":                215,
		"CONFIG_SOUND_ORDINAL_80":                216,
		"CONFIG_SOUND_ORDINAL_81":                217,
		"CONFIG_SOUND_ORDINAL_82":                218,
		"CONFIG_SOUND_ORDINAL_83":                219,
		"CONFIG_SOUND_ORDINAL_84":                220,
		"CONFIG_SOUND_ORDINAL_85":                221,
		"CONFIG_SOUND_ORDINAL_86":                222,
		"CONFIG_SOUND_ORDINAL_87":                223,
		"CONFIG_SOUND_ORDINAL_88":                224,
		"CONFIG_SOUND_ORDINAL_89":                225,
		"CONFIG_SOUND_ORDINAL_90":                226,
		"CONFIG_SOUND_ORDINAL_91":                227,
		"CONFIG_SOUND_ORDINAL_92":                228,
		"CONFIG_SOUND_ORDINAL_93":                229,
		"CONFIG_SOUND_ORDINAL_94":                230,
		"CONFIG_SOUND_ORDINAL_95":                231,
		"CONFIG_SOUND_ORDINAL_96":                232,
		"CONFIG_SOUND_ORDINAL_97":                233,
		"CONFIG_SOUND_ORDINAL_98":                234,
		"CONFIG_SOUND_ORDINAL_99":                235,
		"CONFIG_SOUND_ORDINAL_100":               279,
		"CONFIG_SOUND_AGENTLOGIN_CALL_ENDED":     236,
		"CONFIG_SOUND_AGENTLOGIN_TRUMPET":        237,
		"CONFIG_SOUND_ANNOUNCE_POSITION_END":     238,
		"CONFIG_SOUND_ANNOUNCE_POSITION_SHORTLY": 239,
		"CONFIG_SOUND_ANNOUNCE_POSITION_START":   240,
		"CONFIG_SOUND_ANNOUNCE_TIME_END":         241,
		"CONFIG_SOUND_ANNOUNCE_TIME_SHORTLY":     242,
		"CONFIG_SOUND_ANNOUNCE_TIME_START":       243,
		"CONFIG_SOUND_BEEP":                      244,
		"CONFIG_SOUND_FPM_CALM_RIVER":            245,
		"CONFIG_SOUND_NBDY_AVAIL_TO_TAKE_CALL":   246,
		"CONFIG_SOUND_PBX_AGENT_RING":            247,
		"CONFIG_SOUND_INBOUND_AGENT_JOIN":        248,
		"CONFIG_SOUND_INBOUND_AGENT_LEAVE":       249,
		"CONFIG_SOUND_INBOUND_CALLER_JOIN":       250,
		"CONFIG_SOUND_INBOUND_CALLER_LEAVE":      251,
		"CONFIG_SOUND_INBOUND_MOH":               252,
		"CONFIG_SOUND_INBOUND_NOBODY_AVAILABLE":  253,
		"CONFIG_SOUND_INBOUND_QUEUE_CALLBACK":    254,
		"CONFIG_SOUND_OUTBOUND_AGENT_JOIN":       255,
		"CONFIG_SOUND_OUTBOUND_AGENT_LEAVE":      256,
		"CONFIG_SOUND_OUTBOUND_CALLER_JOIN":      257,
		"CONFIG_SOUND_OUTBOUND_CALLER_LEAVE":     258,
		"CONFIG_SOUND_OUTBOUND_MOH":              259,
		"CONFIG_SOUND_OUTBOUND_NOBODY_AVAILABLE": 260,
		"CONFIG_SOUND_OUTBOUND_QUEUE_CALLBACK":   261,
		"CONFIG_SOUND_PREVIEW_AGENT_JOIN":        262,
		"CONFIG_SOUND_PREVIEW_AGENT_LEAVE":       263,
		"CONFIG_SOUND_PREVIEW_AGENT_PREPARE":     264,
		"CONFIG_SOUND_PREVIEW_CALLER_JOIN":       265,
		"CONFIG_SOUND_PREVIEW_CALLER_LEAVE":      266,
		"CONFIG_SOUND_PREVIEW_MOH":               267,
		"CONFIG_SOUND_PREVIEW_NOBODY_AVAILABLE":  268,
		"CONFIG_SOUND_PREVIEW_QUEUE_CALLBACK":    269,
		"CONFIG_SOUND_MANUAL_AGENT_JOIN":         270,
		"CONFIG_SOUND_MANUAL_AGENT_LEAVE":        271,
		"CONFIG_SOUND_MANUAL_AGENT_PREPARE":      272,
		"CONFIG_SOUND_MANUAL_CALLER_JOIN":        273,
		"CONFIG_SOUND_MANUAL_CALLER_LEAVE":       274,
		"CONFIG_SOUND_MANUAL_MOH":                275,
		"CONFIG_SOUND_MANUAL_NOBODY_AVAILABLE":   276,
		"CONFIG_SOUND_MANUAL_QUEUE_CALLBACK":     277,
		"CONFIG_SOUND_OUTBOUND_MOH_HOLD":         280,
		"CONFIG_SOUND_OUTBOUND_MOH_MULTIACCEPT":  281,
		"CONFIG_SOUND_OUTBOUND_MOH_TRANSFER":     282,
		"CONFIG_SOUND_INBOUND_MOH_HOLD":          283,
		"CONFIG_SOUND_INBOUND_MOH_MULTIACCEPT":   284,
		"CONFIG_SOUND_INBOUND_MOH_TRANSFER":      285,
		"CONFIG_SOUND_PREVIEW_MOH_HOLD":          286,
		"CONFIG_SOUND_PREVIEW_MOH_MULTIACCEPT":   287,
		"CONFIG_SOUND_PREVIEW_MOH_TRANSFER":      288,
		"CONFIG_SOUND_MANUAL_MOH_HOLD":           289,
		"CONFIG_SOUND_MANUAL_MOH_MULTIACCEPT":    290,
		"CONFIG_SOUND_MANUAL_MOH_TRANSFER":       291,
		"CONFIG_SOUND_CALLBACK_QUEUED_ALREADY":   292,
	}
)

func (x ConfigSound) Enum() *ConfigSound {
	p := new(ConfigSound)
	*p = x
	return p
}

func (x ConfigSound) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConfigSound) Descriptor() protoreflect.EnumDescriptor {
	return file_api_commons_org_proto_enumTypes[18].Descriptor()
}

func (ConfigSound) Type() protoreflect.EnumType {
	return &file_api_commons_org_proto_enumTypes[18]
}

func (x ConfigSound) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConfigSound.Descriptor instead.
func (ConfigSound) EnumDescriptor() ([]byte, []int) {
	return file_api_commons_org_proto_rawDescGZIP(), []int{18}
}

type SoundLanguage int32

const (
	SoundLanguage_SOUND_LANGUAGE_ENGLISH    SoundLanguage = 0
	SoundLanguage_SOUND_LANGUAGE_FRENCH     SoundLanguage = 1
	SoundLanguage_SOUND_LANGUAGE_PORTUGUESE SoundLanguage = 5
	SoundLanguage_SOUND_LANGUAGE_SPANISH    SoundLanguage = 6
	SoundLanguage_SOUND_LANGUAGE_AU_ENGLISH SoundLanguage = 7
)

// Enum value maps for SoundLanguage.
var (
	SoundLanguage_name = map[int32]string{
		0: "SOUND_LANGUAGE_ENGLISH",
		1: "SOUND_LANGUAGE_FRENCH",
		5: "SOUND_LANGUAGE_PORTUGUESE",
		6: "SOUND_LANGUAGE_SPANISH",
		7: "SOUND_LANGUAGE_AU_ENGLISH",
	}
	SoundLanguage_value = map[string]int32{
		"SOUND_LANGUAGE_ENGLISH":    0,
		"SOUND_LANGUAGE_FRENCH":     1,
		"SOUND_LANGUAGE_PORTUGUESE": 5,
		"SOUND_LANGUAGE_SPANISH":    6,
		"SOUND_LANGUAGE_AU_ENGLISH": 7,
	}
)

func (x SoundLanguage) Enum() *SoundLanguage {
	p := new(SoundLanguage)
	*p = x
	return p
}

func (x SoundLanguage) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SoundLanguage) Descriptor() protoreflect.EnumDescriptor {
	return file_api_commons_org_proto_enumTypes[19].Descriptor()
}

func (SoundLanguage) Type() protoreflect.EnumType {
	return &file_api_commons_org_proto_enumTypes[19]
}

func (x SoundLanguage) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SoundLanguage.Descriptor instead.
func (SoundLanguage) EnumDescriptor() ([]byte, []int) {
	return file_api_commons_org_proto_rawDescGZIP(), []int{19}
}

type SoundGender int32

const (
	SoundGender_SOUND_GENDER_MALE   SoundGender = 0
	SoundGender_SOUND_GENDER_FEMALE SoundGender = 1
)

// Enum value maps for SoundGender.
var (
	SoundGender_name = map[int32]string{
		0: "SOUND_GENDER_MALE",
		1: "SOUND_GENDER_FEMALE",
	}
	SoundGender_value = map[string]int32{
		"SOUND_GENDER_MALE":   0,
		"SOUND_GENDER_FEMALE": 1,
	}
)

func (x SoundGender) Enum() *SoundGender {
	p := new(SoundGender)
	*p = x
	return p
}

func (x SoundGender) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SoundGender) Descriptor() protoreflect.EnumDescriptor {
	return file_api_commons_org_proto_enumTypes[20].Descriptor()
}

func (SoundGender) Type() protoreflect.EnumType {
	return &file_api_commons_org_proto_enumTypes[20]
}

func (x SoundGender) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SoundGender.Descriptor instead.
func (SoundGender) EnumDescriptor() ([]byte, []int) {
	return file_api_commons_org_proto_rawDescGZIP(), []int{20}
}

// ConnectionType defines the options for an
// auth0 identity provider.
type IdentityProvider int32

const (
	IdentityProvider_CONNECTION_TYPE_NONE  IdentityProvider = 0
	IdentityProvider_CONNECTION_TYPE_OKTA  IdentityProvider = 1
	IdentityProvider_CONNECTION_TYPE_AZURE IdentityProvider = 2
	IdentityProvider_CONNECTION_TYPE_ADFS  IdentityProvider = 3
	IdentityProvider_CONNECTION_TYPE_OIDC  IdentityProvider = 4
)

// Enum value maps for IdentityProvider.
var (
	IdentityProvider_name = map[int32]string{
		0: "CONNECTION_TYPE_NONE",
		1: "CONNECTION_TYPE_OKTA",
		2: "CONNECTION_TYPE_AZURE",
		3: "CONNECTION_TYPE_ADFS",
		4: "CONNECTION_TYPE_OIDC",
	}
	IdentityProvider_value = map[string]int32{
		"CONNECTION_TYPE_NONE":  0,
		"CONNECTION_TYPE_OKTA":  1,
		"CONNECTION_TYPE_AZURE": 2,
		"CONNECTION_TYPE_ADFS":  3,
		"CONNECTION_TYPE_OIDC":  4,
	}
)

func (x IdentityProvider) Enum() *IdentityProvider {
	p := new(IdentityProvider)
	*p = x
	return p
}

func (x IdentityProvider) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IdentityProvider) Descriptor() protoreflect.EnumDescriptor {
	return file_api_commons_org_proto_enumTypes[21].Descriptor()
}

func (IdentityProvider) Type() protoreflect.EnumType {
	return &file_api_commons_org_proto_enumTypes[21]
}

func (x IdentityProvider) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IdentityProvider.Descriptor instead.
func (IdentityProvider) EnumDescriptor() ([]byte, []int) {
	return file_api_commons_org_proto_rawDescGZIP(), []int{21}
}

// File type to export recording as.
type RecordingFileType int32

const (
	RecordingFileType_RECORDING_FILE_TYPE_WAV RecordingFileType = 0 // Export as .wav
	RecordingFileType_RECORDING_FILE_TYPE_MP3 RecordingFileType = 1 // Export as .mp3
)

// Enum value maps for RecordingFileType.
var (
	RecordingFileType_name = map[int32]string{
		0: "RECORDING_FILE_TYPE_WAV",
		1: "RECORDING_FILE_TYPE_MP3",
	}
	RecordingFileType_value = map[string]int32{
		"RECORDING_FILE_TYPE_WAV": 0,
		"RECORDING_FILE_TYPE_MP3": 1,
	}
)

func (x RecordingFileType) Enum() *RecordingFileType {
	p := new(RecordingFileType)
	*p = x
	return p
}

func (x RecordingFileType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RecordingFileType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_commons_org_proto_enumTypes[22].Descriptor()
}

func (RecordingFileType) Type() protoreflect.EnumType {
	return &file_api_commons_org_proto_enumTypes[22]
}

func (x RecordingFileType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RecordingFileType.Descriptor instead.
func (RecordingFileType) EnumDescriptor() ([]byte, []int) {
	return file_api_commons_org_proto_rawDescGZIP(), []int{22}
}

// Possible initial agent statuses.
type InitialAgentStatus int32

const (
	InitialAgentStatus_INITIAL_AGENT_STATUS_READY  InitialAgentStatus = 0
	InitialAgentStatus_INITIAL_AGENT_STATUS_PAUSED InitialAgentStatus = 1
)

// Enum value maps for InitialAgentStatus.
var (
	InitialAgentStatus_name = map[int32]string{
		0: "INITIAL_AGENT_STATUS_READY",
		1: "INITIAL_AGENT_STATUS_PAUSED",
	}
	InitialAgentStatus_value = map[string]int32{
		"INITIAL_AGENT_STATUS_READY":  0,
		"INITIAL_AGENT_STATUS_PAUSED": 1,
	}
)

func (x InitialAgentStatus) Enum() *InitialAgentStatus {
	p := new(InitialAgentStatus)
	*p = x
	return p
}

func (x InitialAgentStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InitialAgentStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_commons_org_proto_enumTypes[23].Descriptor()
}

func (InitialAgentStatus) Type() protoreflect.EnumType {
	return &file_api_commons_org_proto_enumTypes[23]
}

func (x InitialAgentStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InitialAgentStatus.Descriptor instead.
func (InitialAgentStatus) EnumDescriptor() ([]byte, []int) {
	return file_api_commons_org_proto_rawDescGZIP(), []int{23}
}

// Hold queue monitoring ange routing choices.
type AgentRouting int32

const (
	AgentRouting_AGENT_ROUTING_ANY_AGENT                AgentRouting = 0
	AgentRouting_AGENT_ROUTING_ORIGINAL_AGENT_PREFERRED AgentRouting = 1
	AgentRouting_AGENT_ROUTING_ORIGINAL_AGENT_REQUIRED  AgentRouting = 2
)

// Enum value maps for AgentRouting.
var (
	AgentRouting_name = map[int32]string{
		0: "AGENT_ROUTING_ANY_AGENT",
		1: "AGENT_ROUTING_ORIGINAL_AGENT_PREFERRED",
		2: "AGENT_ROUTING_ORIGINAL_AGENT_REQUIRED",
	}
	AgentRouting_value = map[string]int32{
		"AGENT_ROUTING_ANY_AGENT":                0,
		"AGENT_ROUTING_ORIGINAL_AGENT_PREFERRED": 1,
		"AGENT_ROUTING_ORIGINAL_AGENT_REQUIRED":  2,
	}
)

func (x AgentRouting) Enum() *AgentRouting {
	p := new(AgentRouting)
	*p = x
	return p
}

func (x AgentRouting) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AgentRouting) Descriptor() protoreflect.EnumDescriptor {
	return file_api_commons_org_proto_enumTypes[24].Descriptor()
}

func (AgentRouting) Type() protoreflect.EnumType {
	return &file_api_commons_org_proto_enumTypes[24]
}

func (x AgentRouting) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AgentRouting.Descriptor instead.
func (AgentRouting) EnumDescriptor() ([]byte, []int) {
	return file_api_commons_org_proto_rawDescGZIP(), []int{24}
}

// Delimiter for alphanumeric keypad.
type AlphanumericKeypadDelimiter int32

const (
	AlphanumericKeypadDelimiter_ALPHANUMERIC_KEYPAD_DELIMITER_ASTERISK AlphanumericKeypadDelimiter = 0
	AlphanumericKeypadDelimiter_ALPHANUMERIC_KEYPAD_DELIMITER_POUND    AlphanumericKeypadDelimiter = 1
	AlphanumericKeypadDelimiter_ALPHANUMERIC_KEYPAD_DELIMITER_SPACE    AlphanumericKeypadDelimiter = 2
)

// Enum value maps for AlphanumericKeypadDelimiter.
var (
	AlphanumericKeypadDelimiter_name = map[int32]string{
		0: "ALPHANUMERIC_KEYPAD_DELIMITER_ASTERISK",
		1: "ALPHANUMERIC_KEYPAD_DELIMITER_POUND",
		2: "ALPHANUMERIC_KEYPAD_DELIMITER_SPACE",
	}
	AlphanumericKeypadDelimiter_value = map[string]int32{
		"ALPHANUMERIC_KEYPAD_DELIMITER_ASTERISK": 0,
		"ALPHANUMERIC_KEYPAD_DELIMITER_POUND":    1,
		"ALPHANUMERIC_KEYPAD_DELIMITER_SPACE":    2,
	}
)

func (x AlphanumericKeypadDelimiter) Enum() *AlphanumericKeypadDelimiter {
	p := new(AlphanumericKeypadDelimiter)
	*p = x
	return p
}

func (x AlphanumericKeypadDelimiter) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AlphanumericKeypadDelimiter) Descriptor() protoreflect.EnumDescriptor {
	return file_api_commons_org_proto_enumTypes[25].Descriptor()
}

func (AlphanumericKeypadDelimiter) Type() protoreflect.EnumType {
	return &file_api_commons_org_proto_enumTypes[25]
}

func (x AlphanumericKeypadDelimiter) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AlphanumericKeypadDelimiter.Descriptor instead.
func (AlphanumericKeypadDelimiter) EnumDescriptor() ([]byte, []int) {
	return file_api_commons_org_proto_rawDescGZIP(), []int{25}
}

// The duration (scope) the call history includes.
type AgentCallHistoryScope int32

const (
	AgentCallHistoryScope_AGENT_CALL_HISTORY_SCOPE_NONE                     AgentCallHistoryScope = 0
	AgentCallHistoryScope_AGENT_CALL_HISTORY_SCOPE_AGENT_SESSION_STATISTICS AgentCallHistoryScope = 1
	AgentCallHistoryScope_AGENT_CALL_HISTORY_SCOPE_TODAYS_STATISTICS        AgentCallHistoryScope = 2
)

// Enum value maps for AgentCallHistoryScope.
var (
	AgentCallHistoryScope_name = map[int32]string{
		0: "AGENT_CALL_HISTORY_SCOPE_NONE",
		1: "AGENT_CALL_HISTORY_SCOPE_AGENT_SESSION_STATISTICS",
		2: "AGENT_CALL_HISTORY_SCOPE_TODAYS_STATISTICS",
	}
	AgentCallHistoryScope_value = map[string]int32{
		"AGENT_CALL_HISTORY_SCOPE_NONE":                     0,
		"AGENT_CALL_HISTORY_SCOPE_AGENT_SESSION_STATISTICS": 1,
		"AGENT_CALL_HISTORY_SCOPE_TODAYS_STATISTICS":        2,
	}
)

func (x AgentCallHistoryScope) Enum() *AgentCallHistoryScope {
	p := new(AgentCallHistoryScope)
	*p = x
	return p
}

func (x AgentCallHistoryScope) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AgentCallHistoryScope) Descriptor() protoreflect.EnumDescriptor {
	return file_api_commons_org_proto_enumTypes[26].Descriptor()
}

func (AgentCallHistoryScope) Type() protoreflect.EnumType {
	return &file_api_commons_org_proto_enumTypes[26]
}

func (x AgentCallHistoryScope) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AgentCallHistoryScope.Descriptor instead.
func (AgentCallHistoryScope) EnumDescriptor() ([]byte, []int) {
	return file_api_commons_org_proto_rawDescGZIP(), []int{26}
}

// Communication expiration time.
type CommunicationExpiration int32

const (
	CommunicationExpiration_COMMUNICATION_EXPIRATION_NEVER             CommunicationExpiration = 0
	CommunicationExpiration_COMMUNICATION_EXPIRATION_ONE_HOUR          CommunicationExpiration = 1
	CommunicationExpiration_COMMUNICATION_EXPIRATION_TWO_HOURS         CommunicationExpiration = 2
	CommunicationExpiration_COMMUNICATION_EXPIRATION_THREE_HOURS       CommunicationExpiration = 3
	CommunicationExpiration_COMMUNICATION_EXPIRATION_FOUR_HOURS        CommunicationExpiration = 4
	CommunicationExpiration_COMMUNICATION_EXPIRATION_FIVE_HOURS        CommunicationExpiration = 5
	CommunicationExpiration_COMMUNICATION_EXPIRATION_SIX_HOURS         CommunicationExpiration = 6
	CommunicationExpiration_COMMUNICATION_EXPIRATION_SEVEN_HOURS       CommunicationExpiration = 7
	CommunicationExpiration_COMMUNICATION_EXPIRATION_EIGHT_HOURS       CommunicationExpiration = 8
	CommunicationExpiration_COMMUNICATION_EXPIRATION_NINE_HOURS        CommunicationExpiration = 9
	CommunicationExpiration_COMMUNICATION_EXPIRATION_TEN_HOURS         CommunicationExpiration = 10
	CommunicationExpiration_COMMUNICATION_EXPIRATION_ELEVEN_HOURS      CommunicationExpiration = 11
	CommunicationExpiration_COMMUNICATION_EXPIRATION_TWELVE_HOURS      CommunicationExpiration = 12
	CommunicationExpiration_COMMUNICATION_EXPIRATION_THIRTEEN_HOURS    CommunicationExpiration = 13
	CommunicationExpiration_COMMUNICATION_EXPIRATION_SIXTEEN_HOURS     CommunicationExpiration = 16
	CommunicationExpiration_COMMUNICATION_EXPIRATION_TWENTY_HOURS      CommunicationExpiration = 20
	CommunicationExpiration_COMMUNICATION_EXPIRATION_TWENTY_FOUR_HOURS CommunicationExpiration = 24
	CommunicationExpiration_COMMUNICATION_EXPIRATION_THIRTY_SIX_HOURS  CommunicationExpiration = 36
	CommunicationExpiration_COMMUNICATION_EXPIRATION_TWO_DAYS          CommunicationExpiration = 48
	CommunicationExpiration_COMMUNICATION_EXPIRATION_THREE_DAYS        CommunicationExpiration = 72
	CommunicationExpiration_COMMUNICATION_EXPIRATION_FOUR_DAYS         CommunicationExpiration = 96
	CommunicationExpiration_COMMUNICATION_EXPIRATION_FIVE_DAYS         CommunicationExpiration = 120
	CommunicationExpiration_COMMUNICATION_EXPIRATION_SIX_DAYS          CommunicationExpiration = 144
	CommunicationExpiration_COMMUNICATION_EXPIRATION_ONE_WEEK          CommunicationExpiration = 168
	CommunicationExpiration_COMMUNICATION_EXPIRATION_TWO_WEEKS         CommunicationExpiration = 336
	CommunicationExpiration_COMMUNICATION_EXPIRATION_THREE_WEEKS       CommunicationExpiration = 504
	CommunicationExpiration_COMMUNICATION_EXPIRATION_FOUR_WEEKS        CommunicationExpiration = 672
	CommunicationExpiration_COMMUNICATION_EXPIRATION_ONE_MONTH         CommunicationExpiration = 720
	CommunicationExpiration_COMMUNICATION_EXPIRATION_TWO_MONTHS        CommunicationExpiration = 1440
	CommunicationExpiration_COMMUNICATION_EXPIRATION_THREE_MONTHS      CommunicationExpiration = 2160
	CommunicationExpiration_COMMUNICATION_EXPIRATION_SIX_MONTHS        CommunicationExpiration = 4320
	CommunicationExpiration_COMMUNICATION_EXPIRATION_NINE_MONTHS       CommunicationExpiration = 6480
	CommunicationExpiration_COMMUNICATION_EXPIRATION_ONE_YEAR          CommunicationExpiration = 8760
	CommunicationExpiration_COMMUNICATION_EXPIRATION_THIRTEEN_MONTHS   CommunicationExpiration = 9360
)

// Enum value maps for CommunicationExpiration.
var (
	CommunicationExpiration_name = map[int32]string{
		0:    "COMMUNICATION_EXPIRATION_NEVER",
		1:    "COMMUNICATION_EXPIRATION_ONE_HOUR",
		2:    "COMMUNICATION_EXPIRATION_TWO_HOURS",
		3:    "COMMUNICATION_EXPIRATION_THREE_HOURS",
		4:    "COMMUNICATION_EXPIRATION_FOUR_HOURS",
		5:    "COMMUNICATION_EXPIRATION_FIVE_HOURS",
		6:    "COMMUNICATION_EXPIRATION_SIX_HOURS",
		7:    "COMMUNICATION_EXPIRATION_SEVEN_HOURS",
		8:    "COMMUNICATION_EXPIRATION_EIGHT_HOURS",
		9:    "COMMUNICATION_EXPIRATION_NINE_HOURS",
		10:   "COMMUNICATION_EXPIRATION_TEN_HOURS",
		11:   "COMMUNICATION_EXPIRATION_ELEVEN_HOURS",
		12:   "COMMUNICATION_EXPIRATION_TWELVE_HOURS",
		13:   "COMMUNICATION_EXPIRATION_THIRTEEN_HOURS",
		16:   "COMMUNICATION_EXPIRATION_SIXTEEN_HOURS",
		20:   "COMMUNICATION_EXPIRATION_TWENTY_HOURS",
		24:   "COMMUNICATION_EXPIRATION_TWENTY_FOUR_HOURS",
		36:   "COMMUNICATION_EXPIRATION_THIRTY_SIX_HOURS",
		48:   "COMMUNICATION_EXPIRATION_TWO_DAYS",
		72:   "COMMUNICATION_EXPIRATION_THREE_DAYS",
		96:   "COMMUNICATION_EXPIRATION_FOUR_DAYS",
		120:  "COMMUNICATION_EXPIRATION_FIVE_DAYS",
		144:  "COMMUNICATION_EXPIRATION_SIX_DAYS",
		168:  "COMMUNICATION_EXPIRATION_ONE_WEEK",
		336:  "COMMUNICATION_EXPIRATION_TWO_WEEKS",
		504:  "COMMUNICATION_EXPIRATION_THREE_WEEKS",
		672:  "COMMUNICATION_EXPIRATION_FOUR_WEEKS",
		720:  "COMMUNICATION_EXPIRATION_ONE_MONTH",
		1440: "COMMUNICATION_EXPIRATION_TWO_MONTHS",
		2160: "COMMUNICATION_EXPIRATION_THREE_MONTHS",
		4320: "COMMUNICATION_EXPIRATION_SIX_MONTHS",
		6480: "COMMUNICATION_EXPIRATION_NINE_MONTHS",
		8760: "COMMUNICATION_EXPIRATION_ONE_YEAR",
		9360: "COMMUNICATION_EXPIRATION_THIRTEEN_MONTHS",
	}
	CommunicationExpiration_value = map[string]int32{
		"COMMUNICATION_EXPIRATION_NEVER":             0,
		"COMMUNICATION_EXPIRATION_ONE_HOUR":          1,
		"COMMUNICATION_EXPIRATION_TWO_HOURS":         2,
		"COMMUNICATION_EXPIRATION_THREE_HOURS":       3,
		"COMMUNICATION_EXPIRATION_FOUR_HOURS":        4,
		"COMMUNICATION_EXPIRATION_FIVE_HOURS":        5,
		"COMMUNICATION_EXPIRATION_SIX_HOURS":         6,
		"COMMUNICATION_EXPIRATION_SEVEN_HOURS":       7,
		"COMMUNICATION_EXPIRATION_EIGHT_HOURS":       8,
		"COMMUNICATION_EXPIRATION_NINE_HOURS":        9,
		"COMMUNICATION_EXPIRATION_TEN_HOURS":         10,
		"COMMUNICATION_EXPIRATION_ELEVEN_HOURS":      11,
		"COMMUNICATION_EXPIRATION_TWELVE_HOURS":      12,
		"COMMUNICATION_EXPIRATION_THIRTEEN_HOURS":    13,
		"COMMUNICATION_EXPIRATION_SIXTEEN_HOURS":     16,
		"COMMUNICATION_EXPIRATION_TWENTY_HOURS":      20,
		"COMMUNICATION_EXPIRATION_TWENTY_FOUR_HOURS": 24,
		"COMMUNICATION_EXPIRATION_THIRTY_SIX_HOURS":  36,
		"COMMUNICATION_EXPIRATION_TWO_DAYS":          48,
		"COMMUNICATION_EXPIRATION_THREE_DAYS":        72,
		"COMMUNICATION_EXPIRATION_FOUR_DAYS":         96,
		"COMMUNICATION_EXPIRATION_FIVE_DAYS":         120,
		"COMMUNICATION_EXPIRATION_SIX_DAYS":          144,
		"COMMUNICATION_EXPIRATION_ONE_WEEK":          168,
		"COMMUNICATION_EXPIRATION_TWO_WEEKS":         336,
		"COMMUNICATION_EXPIRATION_THREE_WEEKS":       504,
		"COMMUNICATION_EXPIRATION_FOUR_WEEKS":        672,
		"COMMUNICATION_EXPIRATION_ONE_MONTH":         720,
		"COMMUNICATION_EXPIRATION_TWO_MONTHS":        1440,
		"COMMUNICATION_EXPIRATION_THREE_MONTHS":      2160,
		"COMMUNICATION_EXPIRATION_SIX_MONTHS":        4320,
		"COMMUNICATION_EXPIRATION_NINE_MONTHS":       6480,
		"COMMUNICATION_EXPIRATION_ONE_YEAR":          8760,
		"COMMUNICATION_EXPIRATION_THIRTEEN_MONTHS":   9360,
	}
)

func (x CommunicationExpiration) Enum() *CommunicationExpiration {
	p := new(CommunicationExpiration)
	*p = x
	return p
}

func (x CommunicationExpiration) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommunicationExpiration) Descriptor() protoreflect.EnumDescriptor {
	return file_api_commons_org_proto_enumTypes[27].Descriptor()
}

func (CommunicationExpiration) Type() protoreflect.EnumType {
	return &file_api_commons_org_proto_enumTypes[27]
}

func (x CommunicationExpiration) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommunicationExpiration.Descriptor instead.
func (CommunicationExpiration) EnumDescriptor() ([]byte, []int) {
	return file_api_commons_org_proto_rawDescGZIP(), []int{27}
}

// Default scheduled callback routing.
type DefaultCallbackRouting int32

const (
	DefaultCallbackRouting_DEFAULT_CALLBACK_ROUTING_NONE           DefaultCallbackRouting = 0
	DefaultCallbackRouting_DEFAULT_CALLBACK_ROUTING_TO_AGENT       DefaultCallbackRouting = 1
	DefaultCallbackRouting_DEFAULT_CALLBACK_ROUTING_AGENT_SKILLSET DefaultCallbackRouting = 2
)

// Enum value maps for DefaultCallbackRouting.
var (
	DefaultCallbackRouting_name = map[int32]string{
		0: "DEFAULT_CALLBACK_ROUTING_NONE",
		1: "DEFAULT_CALLBACK_ROUTING_TO_AGENT",
		2: "DEFAULT_CALLBACK_ROUTING_AGENT_SKILLSET",
	}
	DefaultCallbackRouting_value = map[string]int32{
		"DEFAULT_CALLBACK_ROUTING_NONE":           0,
		"DEFAULT_CALLBACK_ROUTING_TO_AGENT":       1,
		"DEFAULT_CALLBACK_ROUTING_AGENT_SKILLSET": 2,
	}
)

func (x DefaultCallbackRouting) Enum() *DefaultCallbackRouting {
	p := new(DefaultCallbackRouting)
	*p = x
	return p
}

func (x DefaultCallbackRouting) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DefaultCallbackRouting) Descriptor() protoreflect.EnumDescriptor {
	return file_api_commons_org_proto_enumTypes[28].Descriptor()
}

func (DefaultCallbackRouting) Type() protoreflect.EnumType {
	return &file_api_commons_org_proto_enumTypes[28]
}

func (x DefaultCallbackRouting) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DefaultCallbackRouting.Descriptor instead.
func (DefaultCallbackRouting) EnumDescriptor() ([]byte, []int) {
	return file_api_commons_org_proto_rawDescGZIP(), []int{28}
}

type XMLPropertyKey int32

const (
	XMLPropertyKey_XML_PROPERTY_KEY_NONE                                         XMLPropertyKey = 0
	XMLPropertyKey_XML_PROPERTY_KEY_AGENT_DISPOSITION_CONDITIONAL_DNCL           XMLPropertyKey = 1  // "AgentDispositionConditionalDncl"
	XMLPropertyKey_XML_PROPERTY_KEY_AGENT_LOGIN_GUI_STATISTICS_TEMPLATE          XMLPropertyKey = 2  // "AgentLoginGuiStatisticsTemplate"
	XMLPropertyKey_XML_PROPERTY_KEY_AGENT_PAUSE_CODES                            XMLPropertyKey = 3  // "Agent Pause Codes"
	XMLPropertyKey_XML_PROPERTY_KEY_AGENT_SKILLS_FILTER                          XMLPropertyKey = 4  // "Agent Skills Filter"
	XMLPropertyKey_XML_PROPERTY_KEY_AGENT_STATUS_DASHBOARD_TEMPLATE              XMLPropertyKey = 5  // "AgentStatusDashboardTemplate"
	XMLPropertyKey_XML_PROPERTY_KEY_AGENT_STATUS_DISPLAY_TEMPLATE                XMLPropertyKey = 6  // "Agent Status Display Template"
	XMLPropertyKey_XML_PROPERTY_KEY_CALLER_ID_BUCKET                             XMLPropertyKey = 7  // "Caller Id Bucket"
	XMLPropertyKey_XML_PROPERTY_KEY_CAMPAIGN_LINK                                XMLPropertyKey = 8  // "Campaign Link"
	XMLPropertyKey_XML_PROPERTY_KEY_CONTACTS_SORTORDER_TEMPLATE                  XMLPropertyKey = 9  // "Contacts SortOrder Template"
	XMLPropertyKey_XML_PROPERTY_KEY_CRITERIA_DATA                                XMLPropertyKey = 10 // "Criteria Data"
	XMLPropertyKey_XML_PROPERTY_KEY_CUSTOMER_CALL_CODES                          XMLPropertyKey = 11 // "Customer Call Codes"
	XMLPropertyKey_XML_PROPERTY_KEY_CUSTOM_REPORT_FILTER                         XMLPropertyKey = 12 // "CustomReportFilter"
	XMLPropertyKey_XML_PROPERTY_KEY_DATA_DIP_CONFIG                              XMLPropertyKey = 13 // "Data Dip Config"
	XMLPropertyKey_XML_PROPERTY_KEY_EXTENDED_CONDITIONAL_DIALING                 XMLPropertyKey = 14 // "ExtendedConditionalDialing"
	XMLPropertyKey_XML_PROPERTY_KEY_GENERIC_STATISTICS_TABLE_FORMATTING_TEMPLATE XMLPropertyKey = 15 // "GenericStatisticsTableFormattingTemplate"
	XMLPropertyKey_XML_PROPERTY_KEY_HG_CLIENT_INFO_DISPLAY_TEMPLATE              XMLPropertyKey = 16 // "HG Client Info Display Template"
	XMLPropertyKey_XML_PROPERTY_KEY_HUNT_GROUP_SCRIPT                            XMLPropertyKey = 17 // "Hunt Group Script"
	XMLPropertyKey_XML_PROPERTY_KEY_OPERATIONAL_RESPONSE_STATS_TEMPLATE          XMLPropertyKey = 18 // "OperationalResponseStatsTemplate"
	XMLPropertyKey_XML_PROPERTY_KEY_QUEUE_HOLD_INFO_DASHBOARD_TEMPLATE           XMLPropertyKey = 19 // "QueueHoldInfoDashboardTemplate"
	XMLPropertyKey_XML_PROPERTY_KEY_REPORT_RESULT_MAPPING                        XMLPropertyKey = 20 // "Report Result Mapping"
	XMLPropertyKey_XML_PROPERTY_KEY_RESPONSE_EVALUATOR                           XMLPropertyKey = 21 // "Response Evaluator"
	XMLPropertyKey_XML_PROPERTY_KEY_STOP_TRIGGER                                 XMLPropertyKey = 22 // "Stop Trigger"
	XMLPropertyKey_XML_PROPERTY_KEY_TASK_GROUP_REPORT_FILTER                     XMLPropertyKey = 23 // "Task Group Report Filter"
)

// Enum value maps for XMLPropertyKey.
var (
	XMLPropertyKey_name = map[int32]string{
		0:  "XML_PROPERTY_KEY_NONE",
		1:  "XML_PROPERTY_KEY_AGENT_DISPOSITION_CONDITIONAL_DNCL",
		2:  "XML_PROPERTY_KEY_AGENT_LOGIN_GUI_STATISTICS_TEMPLATE",
		3:  "XML_PROPERTY_KEY_AGENT_PAUSE_CODES",
		4:  "XML_PROPERTY_KEY_AGENT_SKILLS_FILTER",
		5:  "XML_PROPERTY_KEY_AGENT_STATUS_DASHBOARD_TEMPLATE",
		6:  "XML_PROPERTY_KEY_AGENT_STATUS_DISPLAY_TEMPLATE",
		7:  "XML_PROPERTY_KEY_CALLER_ID_BUCKET",
		8:  "XML_PROPERTY_KEY_CAMPAIGN_LINK",
		9:  "XML_PROPERTY_KEY_CONTACTS_SORTORDER_TEMPLATE",
		10: "XML_PROPERTY_KEY_CRITERIA_DATA",
		11: "XML_PROPERTY_KEY_CUSTOMER_CALL_CODES",
		12: "XML_PROPERTY_KEY_CUSTOM_REPORT_FILTER",
		13: "XML_PROPERTY_KEY_DATA_DIP_CONFIG",
		14: "XML_PROPERTY_KEY_EXTENDED_CONDITIONAL_DIALING",
		15: "XML_PROPERTY_KEY_GENERIC_STATISTICS_TABLE_FORMATTING_TEMPLATE",
		16: "XML_PROPERTY_KEY_HG_CLIENT_INFO_DISPLAY_TEMPLATE",
		17: "XML_PROPERTY_KEY_HUNT_GROUP_SCRIPT",
		18: "XML_PROPERTY_KEY_OPERATIONAL_RESPONSE_STATS_TEMPLATE",
		19: "XML_PROPERTY_KEY_QUEUE_HOLD_INFO_DASHBOARD_TEMPLATE",
		20: "XML_PROPERTY_KEY_REPORT_RESULT_MAPPING",
		21: "XML_PROPERTY_KEY_RESPONSE_EVALUATOR",
		22: "XML_PROPERTY_KEY_STOP_TRIGGER",
		23: "XML_PROPERTY_KEY_TASK_GROUP_REPORT_FILTER",
	}
	XMLPropertyKey_value = map[string]int32{
		"XML_PROPERTY_KEY_NONE":                                         0,
		"XML_PROPERTY_KEY_AGENT_DISPOSITION_CONDITIONAL_DNCL":           1,
		"XML_PROPERTY_KEY_AGENT_LOGIN_GUI_STATISTICS_TEMPLATE":          2,
		"XML_PROPERTY_KEY_AGENT_PAUSE_CODES":                            3,
		"XML_PROPERTY_KEY_AGENT_SKILLS_FILTER":                          4,
		"XML_PROPERTY_KEY_AGENT_STATUS_DASHBOARD_TEMPLATE":              5,
		"XML_PROPERTY_KEY_AGENT_STATUS_DISPLAY_TEMPLATE":                6,
		"XML_PROPERTY_KEY_CALLER_ID_BUCKET":                             7,
		"XML_PROPERTY_KEY_CAMPAIGN_LINK":                                8,
		"XML_PROPERTY_KEY_CONTACTS_SORTORDER_TEMPLATE":                  9,
		"XML_PROPERTY_KEY_CRITERIA_DATA":                                10,
		"XML_PROPERTY_KEY_CUSTOMER_CALL_CODES":                          11,
		"XML_PROPERTY_KEY_CUSTOM_REPORT_FILTER":                         12,
		"XML_PROPERTY_KEY_DATA_DIP_CONFIG":                              13,
		"XML_PROPERTY_KEY_EXTENDED_CONDITIONAL_DIALING":                 14,
		"XML_PROPERTY_KEY_GENERIC_STATISTICS_TABLE_FORMATTING_TEMPLATE": 15,
		"XML_PROPERTY_KEY_HG_CLIENT_INFO_DISPLAY_TEMPLATE":              16,
		"XML_PROPERTY_KEY_HUNT_GROUP_SCRIPT":                            17,
		"XML_PROPERTY_KEY_OPERATIONAL_RESPONSE_STATS_TEMPLATE":          18,
		"XML_PROPERTY_KEY_QUEUE_HOLD_INFO_DASHBOARD_TEMPLATE":           19,
		"XML_PROPERTY_KEY_REPORT_RESULT_MAPPING":                        20,
		"XML_PROPERTY_KEY_RESPONSE_EVALUATOR":                           21,
		"XML_PROPERTY_KEY_STOP_TRIGGER":                                 22,
		"XML_PROPERTY_KEY_TASK_GROUP_REPORT_FILTER":                     23,
	}
)

func (x XMLPropertyKey) Enum() *XMLPropertyKey {
	p := new(XMLPropertyKey)
	*p = x
	return p
}

func (x XMLPropertyKey) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (XMLPropertyKey) Descriptor() protoreflect.EnumDescriptor {
	return file_api_commons_org_proto_enumTypes[29].Descriptor()
}

func (XMLPropertyKey) Type() protoreflect.EnumType {
	return &file_api_commons_org_proto_enumTypes[29]
}

func (x XMLPropertyKey) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use XMLPropertyKey.Descriptor instead.
func (XMLPropertyKey) EnumDescriptor() ([]byte, []int) {
	return file_api_commons_org_proto_rawDescGZIP(), []int{29}
}

// Hunt Group Setting options for default Manual Dial call recording setting.
type DefaultManualCallRecording int32

const (
	DefaultManualCallRecording_DEFAULT_MANUAL_CALL_RECORDING_ORG_DEFAULT DefaultManualCallRecording = 0
	DefaultManualCallRecording_DEFAULT_MANUAL_CALL_RECORDING_ENABLED     DefaultManualCallRecording = 1
	DefaultManualCallRecording_DEFAULT_MANUAL_CALL_RECORDING_DISABLED    DefaultManualCallRecording = 2
)

// Enum value maps for DefaultManualCallRecording.
var (
	DefaultManualCallRecording_name = map[int32]string{
		0: "DEFAULT_MANUAL_CALL_RECORDING_ORG_DEFAULT",
		1: "DEFAULT_MANUAL_CALL_RECORDING_ENABLED",
		2: "DEFAULT_MANUAL_CALL_RECORDING_DISABLED",
	}
	DefaultManualCallRecording_value = map[string]int32{
		"DEFAULT_MANUAL_CALL_RECORDING_ORG_DEFAULT": 0,
		"DEFAULT_MANUAL_CALL_RECORDING_ENABLED":     1,
		"DEFAULT_MANUAL_CALL_RECORDING_DISABLED":    2,
	}
)

func (x DefaultManualCallRecording) Enum() *DefaultManualCallRecording {
	p := new(DefaultManualCallRecording)
	*p = x
	return p
}

func (x DefaultManualCallRecording) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DefaultManualCallRecording) Descriptor() protoreflect.EnumDescriptor {
	return file_api_commons_org_proto_enumTypes[30].Descriptor()
}

func (DefaultManualCallRecording) Type() protoreflect.EnumType {
	return &file_api_commons_org_proto_enumTypes[30]
}

func (x DefaultManualCallRecording) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DefaultManualCallRecording.Descriptor instead.
func (DefaultManualCallRecording) EnumDescriptor() ([]byte, []int) {
	return file_api_commons_org_proto_rawDescGZIP(), []int{30}
}

// For settings with three states; Use Org Default (Client Preference), Enabled for this hunt group or Disabled for this hunt group.
type HuntGroupOrgDefaultCustom int32

const (
	HuntGroupOrgDefaultCustom_HUNT_GROUP_USE_ORG_DEFAULT HuntGroupOrgDefaultCustom = 0
	HuntGroupOrgDefaultCustom_HUNT_GROUP_CUSTOM_ENABLED  HuntGroupOrgDefaultCustom = 1
	HuntGroupOrgDefaultCustom_HUNT_GROUP_CUSTOM_DISABLED HuntGroupOrgDefaultCustom = 2
)

// Enum value maps for HuntGroupOrgDefaultCustom.
var (
	HuntGroupOrgDefaultCustom_name = map[int32]string{
		0: "HUNT_GROUP_USE_ORG_DEFAULT",
		1: "HUNT_GROUP_CUSTOM_ENABLED",
		2: "HUNT_GROUP_CUSTOM_DISABLED",
	}
	HuntGroupOrgDefaultCustom_value = map[string]int32{
		"HUNT_GROUP_USE_ORG_DEFAULT": 0,
		"HUNT_GROUP_CUSTOM_ENABLED":  1,
		"HUNT_GROUP_CUSTOM_DISABLED": 2,
	}
)

func (x HuntGroupOrgDefaultCustom) Enum() *HuntGroupOrgDefaultCustom {
	p := new(HuntGroupOrgDefaultCustom)
	*p = x
	return p
}

func (x HuntGroupOrgDefaultCustom) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HuntGroupOrgDefaultCustom) Descriptor() protoreflect.EnumDescriptor {
	return file_api_commons_org_proto_enumTypes[31].Descriptor()
}

func (HuntGroupOrgDefaultCustom) Type() protoreflect.EnumType {
	return &file_api_commons_org_proto_enumTypes[31]
}

func (x HuntGroupOrgDefaultCustom) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HuntGroupOrgDefaultCustom.Descriptor instead.
func (HuntGroupOrgDefaultCustom) EnumDescriptor() ([]byte, []int) {
	return file_api_commons_org_proto_rawDescGZIP(), []int{31}
}

// Hunt Group Setting options for time zone validation postal code setting.
type ManualDialTimeZoneValidation int32

const (
	ManualDialTimeZoneValidation_MANUAL_DIAL_TIME_ZONE_VALIDATION_DISABLED ManualDialTimeZoneValidation = 0
	ManualDialTimeZoneValidation_MANUAL_DIAL_TIME_ZONE_VALIDATION_OPTIONAL ManualDialTimeZoneValidation = 1
	ManualDialTimeZoneValidation_MANUAL_DIAL_TIME_ZONE_VALIDATION_REQUIRED ManualDialTimeZoneValidation = 2
)

// Enum value maps for ManualDialTimeZoneValidation.
var (
	ManualDialTimeZoneValidation_name = map[int32]string{
		0: "MANUAL_DIAL_TIME_ZONE_VALIDATION_DISABLED",
		1: "MANUAL_DIAL_TIME_ZONE_VALIDATION_OPTIONAL",
		2: "MANUAL_DIAL_TIME_ZONE_VALIDATION_REQUIRED",
	}
	ManualDialTimeZoneValidation_value = map[string]int32{
		"MANUAL_DIAL_TIME_ZONE_VALIDATION_DISABLED": 0,
		"MANUAL_DIAL_TIME_ZONE_VALIDATION_OPTIONAL": 1,
		"MANUAL_DIAL_TIME_ZONE_VALIDATION_REQUIRED": 2,
	}
)

func (x ManualDialTimeZoneValidation) Enum() *ManualDialTimeZoneValidation {
	p := new(ManualDialTimeZoneValidation)
	*p = x
	return p
}

func (x ManualDialTimeZoneValidation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ManualDialTimeZoneValidation) Descriptor() protoreflect.EnumDescriptor {
	return file_api_commons_org_proto_enumTypes[32].Descriptor()
}

func (ManualDialTimeZoneValidation) Type() protoreflect.EnumType {
	return &file_api_commons_org_proto_enumTypes[32]
}

func (x ManualDialTimeZoneValidation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ManualDialTimeZoneValidation.Descriptor instead.
func (ManualDialTimeZoneValidation) EnumDescriptor() ([]byte, []int) {
	return file_api_commons_org_proto_rawDescGZIP(), []int{32}
}

// Hunt Group Settings options for recording status upon transfer.
type TransferRecordingStatus int32

const (
	TransferRecordingStatus_TRANSFER_RECORDING_STATUS_KEEP_STATUS     TransferRecordingStatus = 0
	TransferRecordingStatus_TRANSFER_RECORDING_STATUS_START_RECORDING TransferRecordingStatus = 1
	TransferRecordingStatus_TRANSFER_RECORDING_STATUS_STOP_RECORDING  TransferRecordingStatus = 2
)

// Enum value maps for TransferRecordingStatus.
var (
	TransferRecordingStatus_name = map[int32]string{
		0: "TRANSFER_RECORDING_STATUS_KEEP_STATUS",
		1: "TRANSFER_RECORDING_STATUS_START_RECORDING",
		2: "TRANSFER_RECORDING_STATUS_STOP_RECORDING",
	}
	TransferRecordingStatus_value = map[string]int32{
		"TRANSFER_RECORDING_STATUS_KEEP_STATUS":     0,
		"TRANSFER_RECORDING_STATUS_START_RECORDING": 1,
		"TRANSFER_RECORDING_STATUS_STOP_RECORDING":  2,
	}
)

func (x TransferRecordingStatus) Enum() *TransferRecordingStatus {
	p := new(TransferRecordingStatus)
	*p = x
	return p
}

func (x TransferRecordingStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransferRecordingStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_commons_org_proto_enumTypes[33].Descriptor()
}

func (TransferRecordingStatus) Type() protoreflect.EnumType {
	return &file_api_commons_org_proto_enumTypes[33]
}

func (x TransferRecordingStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransferRecordingStatus.Descriptor instead.
func (TransferRecordingStatus) EnumDescriptor() ([]byte, []int) {
	return file_api_commons_org_proto_rawDescGZIP(), []int{33}
}

// Hunt Group Settings options for Requeue Transfer Queue Config
type RequeueTransferQueueConfig int32

const (
	RequeueTransferQueueConfig_REQUEUE_TRANSFER_QUEUE_CONFIG_CURRENT RequeueTransferQueueConfig = 0
	RequeueTransferQueueConfig_REQUEUE_TRANSFER_QUEUE_CONFIG_DEFAULT RequeueTransferQueueConfig = 1
	RequeueTransferQueueConfig_REQUEUE_TRANSFER_QUEUE_CONFIG_CUSTOM  RequeueTransferQueueConfig = 2
)

// Enum value maps for RequeueTransferQueueConfig.
var (
	RequeueTransferQueueConfig_name = map[int32]string{
		0: "REQUEUE_TRANSFER_QUEUE_CONFIG_CURRENT",
		1: "REQUEUE_TRANSFER_QUEUE_CONFIG_DEFAULT",
		2: "REQUEUE_TRANSFER_QUEUE_CONFIG_CUSTOM",
	}
	RequeueTransferQueueConfig_value = map[string]int32{
		"REQUEUE_TRANSFER_QUEUE_CONFIG_CURRENT": 0,
		"REQUEUE_TRANSFER_QUEUE_CONFIG_DEFAULT": 1,
		"REQUEUE_TRANSFER_QUEUE_CONFIG_CUSTOM":  2,
	}
)

func (x RequeueTransferQueueConfig) Enum() *RequeueTransferQueueConfig {
	p := new(RequeueTransferQueueConfig)
	*p = x
	return p
}

func (x RequeueTransferQueueConfig) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RequeueTransferQueueConfig) Descriptor() protoreflect.EnumDescriptor {
	return file_api_commons_org_proto_enumTypes[34].Descriptor()
}

func (RequeueTransferQueueConfig) Type() protoreflect.EnumType {
	return &file_api_commons_org_proto_enumTypes[34]
}

func (x RequeueTransferQueueConfig) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RequeueTransferQueueConfig.Descriptor instead.
func (RequeueTransferQueueConfig) EnumDescriptor() ([]byte, []int) {
	return file_api_commons_org_proto_rawDescGZIP(), []int{34}
}

// Hunt Group Settings options for Default Transfer Caller ID
type DefaultTransferCallerId int32

const (
	DefaultTransferCallerId_DEFAULT_CALLER_ID_NONE             DefaultTransferCallerId = 0
	DefaultTransferCallerId_DEFAULT_CALLER_ID_CUSTOM           DefaultTransferCallerId = 1
	DefaultTransferCallerId_DEFAULT_CALLER_ID_3RD_PARTY_NUMBER DefaultTransferCallerId = 2
)

// Enum value maps for DefaultTransferCallerId.
var (
	DefaultTransferCallerId_name = map[int32]string{
		0: "DEFAULT_CALLER_ID_NONE",
		1: "DEFAULT_CALLER_ID_CUSTOM",
		2: "DEFAULT_CALLER_ID_3RD_PARTY_NUMBER",
	}
	DefaultTransferCallerId_value = map[string]int32{
		"DEFAULT_CALLER_ID_NONE":             0,
		"DEFAULT_CALLER_ID_CUSTOM":           1,
		"DEFAULT_CALLER_ID_3RD_PARTY_NUMBER": 2,
	}
)

func (x DefaultTransferCallerId) Enum() *DefaultTransferCallerId {
	p := new(DefaultTransferCallerId)
	*p = x
	return p
}

func (x DefaultTransferCallerId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DefaultTransferCallerId) Descriptor() protoreflect.EnumDescriptor {
	return file_api_commons_org_proto_enumTypes[35].Descriptor()
}

func (DefaultTransferCallerId) Type() protoreflect.EnumType {
	return &file_api_commons_org_proto_enumTypes[35]
}

func (x DefaultTransferCallerId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DefaultTransferCallerId.Descriptor instead.
func (DefaultTransferCallerId) EnumDescriptor() ([]byte, []int) {
	return file_api_commons_org_proto_rawDescGZIP(), []int{35}
}

// Hunt Group Settings options for Default Manual Dial Caller ID
type DefaultManualDialCallerId int32

const (
	DefaultManualDialCallerId_DEFAULT_MANUAL_DIAL_CALLER_ID_NONE            DefaultManualDialCallerId = 0
	DefaultManualDialCallerId_DEFAULT_MANUAL_DIAL_CALLER_ID_CUSTOM          DefaultManualDialCallerId = 1
	DefaultManualDialCallerId_DEFAULT_MANUAL_DIAL_CALLER_ID_AGENT_CALLER_ID DefaultManualDialCallerId = 2
)

// Enum value maps for DefaultManualDialCallerId.
var (
	DefaultManualDialCallerId_name = map[int32]string{
		0: "DEFAULT_MANUAL_DIAL_CALLER_ID_NONE",
		1: "DEFAULT_MANUAL_DIAL_CALLER_ID_CUSTOM",
		2: "DEFAULT_MANUAL_DIAL_CALLER_ID_AGENT_CALLER_ID",
	}
	DefaultManualDialCallerId_value = map[string]int32{
		"DEFAULT_MANUAL_DIAL_CALLER_ID_NONE":            0,
		"DEFAULT_MANUAL_DIAL_CALLER_ID_CUSTOM":          1,
		"DEFAULT_MANUAL_DIAL_CALLER_ID_AGENT_CALLER_ID": 2,
	}
)

func (x DefaultManualDialCallerId) Enum() *DefaultManualDialCallerId {
	p := new(DefaultManualDialCallerId)
	*p = x
	return p
}

func (x DefaultManualDialCallerId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DefaultManualDialCallerId) Descriptor() protoreflect.EnumDescriptor {
	return file_api_commons_org_proto_enumTypes[36].Descriptor()
}

func (DefaultManualDialCallerId) Type() protoreflect.EnumType {
	return &file_api_commons_org_proto_enumTypes[36]
}

func (x DefaultManualDialCallerId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DefaultManualDialCallerId.Descriptor instead.
func (DefaultManualDialCallerId) EnumDescriptor() ([]byte, []int) {
	return file_api_commons_org_proto_rawDescGZIP(), []int{36}
}

// Which manual dial calls to apply data dip to.
type ManualDialDataDipScope int32

const (
	ManualDialDataDipScope_MANUAL_DIAL_DATA_DIP_SCOPE_DISABLED            ManualDialDataDipScope = 0
	ManualDialDataDipScope_MANUAL_DIAL_DATA_DIP_SCOPE_STANDARD_CALLS      ManualDialDataDipScope = 1
	ManualDialDataDipScope_MANUAL_DIAL_DATA_DIP_SCOPE_SCHEDULED_CALLBACKS ManualDialDataDipScope = 2
	ManualDialDataDipScope_MANUAL_DIAL_DATA_DIP_SCOPE_ALL                 ManualDialDataDipScope = 3
)

// Enum value maps for ManualDialDataDipScope.
var (
	ManualDialDataDipScope_name = map[int32]string{
		0: "MANUAL_DIAL_DATA_DIP_SCOPE_DISABLED",
		1: "MANUAL_DIAL_DATA_DIP_SCOPE_STANDARD_CALLS",
		2: "MANUAL_DIAL_DATA_DIP_SCOPE_SCHEDULED_CALLBACKS",
		3: "MANUAL_DIAL_DATA_DIP_SCOPE_ALL",
	}
	ManualDialDataDipScope_value = map[string]int32{
		"MANUAL_DIAL_DATA_DIP_SCOPE_DISABLED":            0,
		"MANUAL_DIAL_DATA_DIP_SCOPE_STANDARD_CALLS":      1,
		"MANUAL_DIAL_DATA_DIP_SCOPE_SCHEDULED_CALLBACKS": 2,
		"MANUAL_DIAL_DATA_DIP_SCOPE_ALL":                 3,
	}
)

func (x ManualDialDataDipScope) Enum() *ManualDialDataDipScope {
	p := new(ManualDialDataDipScope)
	*p = x
	return p
}

func (x ManualDialDataDipScope) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ManualDialDataDipScope) Descriptor() protoreflect.EnumDescriptor {
	return file_api_commons_org_proto_enumTypes[37].Descriptor()
}

func (ManualDialDataDipScope) Type() protoreflect.EnumType {
	return &file_api_commons_org_proto_enumTypes[37]
}

func (x ManualDialDataDipScope) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ManualDialDataDipScope.Descriptor instead.
func (ManualDialDataDipScope) EnumDescriptor() ([]byte, []int) {
	return file_api_commons_org_proto_rawDescGZIP(), []int{37}
}

// Action to take if the data dip fails or the integration fails.
type ManualDialDataDipHandling int32

const (
	ManualDialDataDipHandling_MANUAL_DIAL_DATA_DIP_HANDLING_CANCEL                    ManualDialDataDipHandling = 0
	ManualDialDataDipHandling_MANUAL_DIAL_DATA_DIP_HANDLING_NOTIFY_AND_CANCEL         ManualDialDataDipHandling = 1
	ManualDialDataDipHandling_MANUAL_DIAL_DATA_DIP_HANDLING_NOTIFY_AND_CALL           ManualDialDataDipHandling = 2
	ManualDialDataDipHandling_MANUAL_DIAL_DATA_DIP_HANDLING_CALL_WITH_ORIGINAL_VALUES ManualDialDataDipHandling = 3
)

// Enum value maps for ManualDialDataDipHandling.
var (
	ManualDialDataDipHandling_name = map[int32]string{
		0: "MANUAL_DIAL_DATA_DIP_HANDLING_CANCEL",
		1: "MANUAL_DIAL_DATA_DIP_HANDLING_NOTIFY_AND_CANCEL",
		2: "MANUAL_DIAL_DATA_DIP_HANDLING_NOTIFY_AND_CALL",
		3: "MANUAL_DIAL_DATA_DIP_HANDLING_CALL_WITH_ORIGINAL_VALUES",
	}
	ManualDialDataDipHandling_value = map[string]int32{
		"MANUAL_DIAL_DATA_DIP_HANDLING_CANCEL":                    0,
		"MANUAL_DIAL_DATA_DIP_HANDLING_NOTIFY_AND_CANCEL":         1,
		"MANUAL_DIAL_DATA_DIP_HANDLING_NOTIFY_AND_CALL":           2,
		"MANUAL_DIAL_DATA_DIP_HANDLING_CALL_WITH_ORIGINAL_VALUES": 3,
	}
)

func (x ManualDialDataDipHandling) Enum() *ManualDialDataDipHandling {
	p := new(ManualDialDataDipHandling)
	*p = x
	return p
}

func (x ManualDialDataDipHandling) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ManualDialDataDipHandling) Descriptor() protoreflect.EnumDescriptor {
	return file_api_commons_org_proto_enumTypes[38].Descriptor()
}

func (ManualDialDataDipHandling) Type() protoreflect.EnumType {
	return &file_api_commons_org_proto_enumTypes[38]
}

func (x ManualDialDataDipHandling) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ManualDialDataDipHandling.Descriptor instead.
func (ManualDialDataDipHandling) EnumDescriptor() ([]byte, []int) {
	return file_api_commons_org_proto_rawDescGZIP(), []int{38}
}

// Manual Dial Data Dip integration mapping options.
type ManualDialDataDipIntegration int32

const (
	ManualDialDataDipIntegration_MANUAL_DIAL_DATA_DIP_INTEGRATION_UNSPECIFIED               ManualDialDataDipIntegration = 0
	ManualDialDataDipIntegration_MANUAL_DIAL_DATA_DIP_INTEGRATION_NUMBER                    ManualDialDataDipIntegration = 1
	ManualDialDataDipIntegration_MANUAL_DIAL_DATA_DIP_INTEGRATION_CALLER_ID                 ManualDialDataDipIntegration = 2
	ManualDialDataDipIntegration_MANUAL_DIAL_DATA_DIP_INTEGRATION_CONTACT_FIELD_DESCRIPTION ManualDialDataDipIntegration = 3
)

// Enum value maps for ManualDialDataDipIntegration.
var (
	ManualDialDataDipIntegration_name = map[int32]string{
		0: "MANUAL_DIAL_DATA_DIP_INTEGRATION_UNSPECIFIED",
		1: "MANUAL_DIAL_DATA_DIP_INTEGRATION_NUMBER",
		2: "MANUAL_DIAL_DATA_DIP_INTEGRATION_CALLER_ID",
		3: "MANUAL_DIAL_DATA_DIP_INTEGRATION_CONTACT_FIELD_DESCRIPTION",
	}
	ManualDialDataDipIntegration_value = map[string]int32{
		"MANUAL_DIAL_DATA_DIP_INTEGRATION_UNSPECIFIED":               0,
		"MANUAL_DIAL_DATA_DIP_INTEGRATION_NUMBER":                    1,
		"MANUAL_DIAL_DATA_DIP_INTEGRATION_CALLER_ID":                 2,
		"MANUAL_DIAL_DATA_DIP_INTEGRATION_CONTACT_FIELD_DESCRIPTION": 3,
	}
)

func (x ManualDialDataDipIntegration) Enum() *ManualDialDataDipIntegration {
	p := new(ManualDialDataDipIntegration)
	*p = x
	return p
}

func (x ManualDialDataDipIntegration) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ManualDialDataDipIntegration) Descriptor() protoreflect.EnumDescriptor {
	return file_api_commons_org_proto_enumTypes[39].Descriptor()
}

func (ManualDialDataDipIntegration) Type() protoreflect.EnumType {
	return &file_api_commons_org_proto_enumTypes[39]
}

func (x ManualDialDataDipIntegration) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ManualDialDataDipIntegration.Descriptor instead.
func (ManualDialDataDipIntegration) EnumDescriptor() ([]byte, []int) {
	return file_api_commons_org_proto_rawDescGZIP(), []int{39}
}

// Facilitate data dip template filtering on config type.
type DataDipTemplateFilterType int32

const (
	// Do not filter results.
	DataDipTemplateFilterType_DATA_DIP_TEMPLATE_FILTER_TYPE_NONE DataDipTemplateFilterType = 0
	// Do not filter results.
	DataDipTemplateFilterType_DATA_DIP_TEMPLATE_FILTER_TYPE_BROADCAST DataDipTemplateFilterType = 1
	// Include manual dial related data dip templates.
	DataDipTemplateFilterType_DATA_DIP_TEMPLATE_FILTER_TYPE_MANUAL_DIAL DataDipTemplateFilterType = 2
)

// Enum value maps for DataDipTemplateFilterType.
var (
	DataDipTemplateFilterType_name = map[int32]string{
		0: "DATA_DIP_TEMPLATE_FILTER_TYPE_NONE",
		1: "DATA_DIP_TEMPLATE_FILTER_TYPE_BROADCAST",
		2: "DATA_DIP_TEMPLATE_FILTER_TYPE_MANUAL_DIAL",
	}
	DataDipTemplateFilterType_value = map[string]int32{
		"DATA_DIP_TEMPLATE_FILTER_TYPE_NONE":        0,
		"DATA_DIP_TEMPLATE_FILTER_TYPE_BROADCAST":   1,
		"DATA_DIP_TEMPLATE_FILTER_TYPE_MANUAL_DIAL": 2,
	}
)

func (x DataDipTemplateFilterType) Enum() *DataDipTemplateFilterType {
	p := new(DataDipTemplateFilterType)
	*p = x
	return p
}

func (x DataDipTemplateFilterType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataDipTemplateFilterType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_commons_org_proto_enumTypes[40].Descriptor()
}

func (DataDipTemplateFilterType) Type() protoreflect.EnumType {
	return &file_api_commons_org_proto_enumTypes[40]
}

func (x DataDipTemplateFilterType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DataDipTemplateFilterType.Descriptor instead.
func (DataDipTemplateFilterType) EnumDescriptor() ([]byte, []int) {
	return file_api_commons_org_proto_rawDescGZIP(), []int{40}
}

// Facilitate organization filtering on archived state
type OrganizationArchivedStateFilter int32

const (
	// Filter to only unarchived
	OrganizationArchivedStateFilter_ORGANIZATION_ARCHIVED_STATE_FILTER_UNARCHIVED OrganizationArchivedStateFilter = 0
	// Filter to only archived
	OrganizationArchivedStateFilter_ORGANIZATION_ARCHIVED_STATE_FILTER_ARCHIVED OrganizationArchivedStateFilter = 1
	// Do not filter
	OrganizationArchivedStateFilter_ORGANIZATION_ARCHIVED_STATE_FILTER_ALL OrganizationArchivedStateFilter = 2
)

// Enum value maps for OrganizationArchivedStateFilter.
var (
	OrganizationArchivedStateFilter_name = map[int32]string{
		0: "ORGANIZATION_ARCHIVED_STATE_FILTER_UNARCHIVED",
		1: "ORGANIZATION_ARCHIVED_STATE_FILTER_ARCHIVED",
		2: "ORGANIZATION_ARCHIVED_STATE_FILTER_ALL",
	}
	OrganizationArchivedStateFilter_value = map[string]int32{
		"ORGANIZATION_ARCHIVED_STATE_FILTER_UNARCHIVED": 0,
		"ORGANIZATION_ARCHIVED_STATE_FILTER_ARCHIVED":   1,
		"ORGANIZATION_ARCHIVED_STATE_FILTER_ALL":        2,
	}
)

func (x OrganizationArchivedStateFilter) Enum() *OrganizationArchivedStateFilter {
	p := new(OrganizationArchivedStateFilter)
	*p = x
	return p
}

func (x OrganizationArchivedStateFilter) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrganizationArchivedStateFilter) Descriptor() protoreflect.EnumDescriptor {
	return file_api_commons_org_proto_enumTypes[41].Descriptor()
}

func (OrganizationArchivedStateFilter) Type() protoreflect.EnumType {
	return &file_api_commons_org_proto_enumTypes[41]
}

func (x OrganizationArchivedStateFilter) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrganizationArchivedStateFilter.Descriptor instead.
func (OrganizationArchivedStateFilter) EnumDescriptor() ([]byte, []int) {
	return file_api_commons_org_proto_rawDescGZIP(), []int{41}
}

type TimeZoneWrapper struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         TimeZone               `protobuf:"varint,1,opt,name=value,proto3,enum=api.commons.TimeZone" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TimeZoneWrapper) Reset() {
	*x = TimeZoneWrapper{}
	mi := &file_api_commons_org_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimeZoneWrapper) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeZoneWrapper) ProtoMessage() {}

func (x *TimeZoneWrapper) ProtoReflect() protoreflect.Message {
	mi := &file_api_commons_org_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeZoneWrapper.ProtoReflect.Descriptor instead.
func (*TimeZoneWrapper) Descriptor() ([]byte, []int) {
	return file_api_commons_org_proto_rawDescGZIP(), []int{0}
}

func (x *TimeZoneWrapper) GetValue() TimeZone {
	if x != nil {
		return x.Value
	}
	return TimeZone_TIME_ZONE_AMERICA_PUERTO_RICO
}

type DigitWrapper struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         Digit                  `protobuf:"varint,1,opt,name=value,proto3,enum=api.commons.Digit" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DigitWrapper) Reset() {
	*x = DigitWrapper{}
	mi := &file_api_commons_org_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DigitWrapper) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DigitWrapper) ProtoMessage() {}

func (x *DigitWrapper) ProtoReflect() protoreflect.Message {
	mi := &file_api_commons_org_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DigitWrapper.ProtoReflect.Descriptor instead.
func (*DigitWrapper) Descriptor() ([]byte, []int) {
	return file_api_commons_org_proto_rawDescGZIP(), []int{1}
}

func (x *DigitWrapper) GetValue() Digit {
	if x != nil {
		return x.Value
	}
	return Digit_DIGIT_ZERO
}

var File_api_commons_org_proto protoreflect.FileDescriptor

const file_api_commons_org_proto_rawDesc = "" +
	"\n" +
	"\x15api/commons/org.proto\x12\vapi.commons\">\n" +
	"\x0fTimeZoneWrapper\x12+\n" +
	"\x05value\x18\x01 \x01(\x0e2\x15.api.commons.TimeZoneR\x05value\"8\n" +
	"\fDigitWrapper\x12(\n" +
	"\x05value\x18\x01 \x01(\x0e2\x12.api.commons.DigitR\x05value*\xc1\v\n" +
	"\bTimeZone\x12!\n" +
	"\x1dTIME_ZONE_AMERICA_PUERTO_RICO\x10\x00\x12\x1e\n" +
	"\x1aTIME_ZONE_AMERICA_NEW_YORK\x10\x01\x12\"\n" +
	"\x1eTIME_ZONE_AMERICA_INDIANAPOLIS\x10\x02\x12\x1d\n" +
	"\x19TIME_ZONE_AMERICA_CHICAGO\x10\x03\x12\x1d\n" +
	"\x19TIME_ZONE_AMERICA_PHOENIX\x10\x04\x12\x1c\n" +
	"\x18TIME_ZONE_AMERICA_DENVER\x10\x05\x12!\n" +
	"\x1dTIME_ZONE_AMERICA_LOS_ANGELES\x10\x06\x12\x1f\n" +
	"\x1bTIME_ZONE_AMERICA_ANCHORAGE\x10\a\x12\x19\n" +
	"\x15TIME_ZONE_ASIA_MANILA\x10\b\x12\x1b\n" +
	"\x17TIME_ZONE_ASIA_CALCUTTA\x10\t\x12\x1a\n" +
	"\x16TIME_ZONE_ASIA_COLOMBO\x10\n" +
	"\x12\x1e\n" +
	"\x1aTIME_ZONE_PACIFIC_HONOLULU\x10\v\x12!\n" +
	"\x1dTIME_ZONE_CANADA_NEWFOUNDLAND\x10\f\x12\x1d\n" +
	"\x19TIME_ZONE_CANADA_ATLANTIC\x10\r\x12\x1c\n" +
	"\x18TIME_ZONE_CANADA_CENTRAL\x10\x0e\x12&\n" +
	"\"TIME_ZONE_CANADA_EAST_SASKATCHEWAN\x10\x0f\x12\x1c\n" +
	"\x18TIME_ZONE_CANADA_EASTERN\x10\x10\x12\x1d\n" +
	"\x19TIME_ZONE_CANADA_MOUNTAIN\x10\x11\x12\x1c\n" +
	"\x18TIME_ZONE_CANADA_PACIFIC\x10\x12\x12!\n" +
	"\x1dTIME_ZONE_CANADA_SASKATCHEWAN\x10\x13\x12\x1a\n" +
	"\x16TIME_ZONE_CANADA_YUKON\x10\x14\x12\x1b\n" +
	"\x17TIME_ZONE_ETC_GREENWICH\x10\x15\x12\x1b\n" +
	"\x17TIME_ZONE_ETC_UNIVERSAL\x10\x16\x12\x1b\n" +
	"\x17TIME_ZONE_EUROPE_LONDON\x10\x17\x12\x1b\n" +
	"\x17TIME_ZONE_EUROPE_MADRID\x10\x18\x12\x1b\n" +
	"\x17TIME_ZONE_EUROPE_BERLIN\x10\x19\x12\x1e\n" +
	"\x1aTIME_ZONE_EUROPE_BUCHAREST\x10\x1a\x12!\n" +
	"\x1dTIME_ZONE_AMERICA_MEXICO_CITY\x10\x1b\x12\x1c\n" +
	"\x18TIME_ZONE_MEXICO_BAJASUR\x10\x1c\x12\x1e\n" +
	"\x1aTIME_ZONE_MEXICO_BAJANORTE\x10\x1d\x12\x19\n" +
	"\x15TIME_ZONE_BRAZIL_ACRE\x10\x1e\x12\x19\n" +
	"\x15TIME_ZONE_BRAZIL_WEST\x10\x1f\x12\x19\n" +
	"\x15TIME_ZONE_BRAZIL_EAST\x10 \x12\x1e\n" +
	"\x1aTIME_ZONE_BRAZIL_DENORONHA\x10!\x12\x1e\n" +
	"\x1aTIME_ZONE_AUSTRALIA_DARWIN\x10\"\x12 \n" +
	"\x1cTIME_ZONE_AUSTRALIA_ADELAIDE\x10#\x12\x1e\n" +
	"\x1aTIME_ZONE_AUSTRALIA_SYDNEY\x10$\x12 \n" +
	"\x1cTIME_ZONE_AUSTRALIA_BRISBANE\x10%\x12!\n" +
	"\x1dTIME_ZONE_AUSTRALIA_MELBOURNE\x10&\x12\x1d\n" +
	"\x19TIME_ZONE_AUSTRALIA_PERTH\x10'\x12\x1e\n" +
	"\x1aTIME_ZONE_PACIFIC_AUCKLAND\x10(\x12\x1d\n" +
	"\x19TIME_ZONE_PACIFIC_CHATHAM\x10)\x12\x1c\n" +
	"\x18TIME_ZONE_ASIA_SINGAPORE\x10*\x12\x18\n" +
	"\x14TIME_ZONE_ASIA_JAPAN\x10+\x12\x1e\n" +
	"\x1aTIME_ZONE_AMERICA_SANTIAGO\x10,\x12\x1c\n" +
	"\x18TIME_ZONE_AMERICA_BOGOTA\x10-\x12\x1a\n" +
	"\x16TIME_ZONE_AMERICA_LIMA\x10.*\x92\x01\n" +
	"\x0fDisplayLanguage\x12\x1c\n" +
	"\x18DISPLAY_LANGUAGE_SPANISH\x10\x00\x12\"\n" +
	"\x1eDISPLAY_LANGUAGE_FRENCH_CANADA\x10\x01\x12\x1f\n" +
	"\x1bDISPLAY_LANGUAGE_PORTUGUESE\x10\x02\x12\x1c\n" +
	"\x18DISPLAY_LANGUAGE_ENGLISH\x10\x03*\xf0\x01\n" +
	"\x18DefaultDuplicateHandling\x12=\n" +
	"9DEFAULT_DUPLICATE_HANDLING_KEEP_RECORD_AND_DISCARD_NUMBER\x10\x00\x12-\n" +
	")DEFAULT_DUPLICATE_HANDLING_DISCARD_RECORD\x10\x01\x12/\n" +
	"+DEFAULT_DUPLICATE_HANDLING_ALLOW_DUPLICATES\x10\x02\x125\n" +
	"1DEFAULT_DUPLICATE_HANDLING_CREATE_DUPLICATES_LIST\x10\x03*\x9e\x01\n" +
	"\x14StandardImportFormat\x12(\n" +
	"$STANDARD_IMPORT_FORMAT_TAB_DELIMITED\x10\x00\x120\n" +
	",STANDARD_IMPORT_FORMAT_EXCEL_COMMA_SEPARATED\x10\x01\x12*\n" +
	"&STANDARD_IMPORT_FORMAT_COMMA_SEPARATED\x10\x02*\xeb\x03\n" +
	"\x0fAgentInfoSortBy\x12\x1b\n" +
	"\x17AGENT_INFO_SORT_BY_NONE\x10\x00\x12\x1c\n" +
	"\x18AGENT_INFO_SORT_BY_AGENT\x10\x01\x12&\n" +
	"\"AGENT_INFO_SORT_BY_AGENT_LAST_NAME\x10\x02\x12.\n" +
	"*AGENT_INFO_SORT_BY_AGENT_STATUS_SIMPLIFIER\x10\x03\x12!\n" +
	"\x1dAGENT_INFO_SORT_BY_CALL_COUNT\x10\x04\x122\n" +
	".AGENT_INFO_SORT_BY_SECONDS_SINCE_STATUS_CHANGE\x10\x05\x12&\n" +
	"\"AGENT_INFO_SORT_BY_HUNT_GROUP_NAME\x10\x06\x12%\n" +
	"!AGENT_INFO_SORT_BY_HUNT_GROUP_SID\x10\a\x12)\n" +
	"%AGENT_INFO_SORT_BY_SESSION_LOGIN_TIME\x10\b\x12'\n" +
	"#AGENT_INFO_SORT_BY_MULTI_HOLD_COUNT\x10\t\x12(\n" +
	"$AGENT_INFO_SORT_BY_SIMPLE_HOLD_COUNT\x10\n" +
	"\x12!\n" +
	"\x1dAGENT_INFO_SORT_BY_HOLD_COUNT\x10\v*\x96\x02\n" +
	"\x0fQueueInfoSortBy\x12\x1b\n" +
	"\x17QUEUE_INFO_SORT_BY_NONE\x10\x00\x12%\n" +
	"!QUEUE_INFO_SORT_BY_AVERAGE_LENGTH\x10\x01\x12!\n" +
	"\x1dQUEUE_INFO_SORT_BY_CALL_COUNT\x10\x04\x12\"\n" +
	"\x1eQUEUE_INFO_SORT_BY_CALL_SKILLS\x10\x05\x12 \n" +
	"\x1cQUEUE_INFO_SORT_BY_CALL_TYPE\x10\x06\x12%\n" +
	"!QUEUE_INFO_SORT_BY_MAXIMUM_LENGTH\x10\a\x12/\n" +
	"+QUEUE_INFO_SORT_BY_QUEUED_NOTIFICATION_TYPE\x10\b*\xf3\x05\n" +
	"\n" +
	"ClientSkin\x12\x17\n" +
	"\x13CLIENT_SKIN_DEFAULT\x10\x00\x12\x18\n" +
	"\x14CLIENT_SKIN_TCN_BLUE\x10\x01\x12\x1d\n" +
	"\x19CLIENT_SKIN_TCN_SEA_GREEN\x10\x02\x12\x1d\n" +
	"\x19CLIENT_SKIN_RDS_ADVANTAGE\x10\x03\x12\x13\n" +
	"\x0fCLIENT_SKIN_RSI\x10\x04\x12'\n" +
	"#CLIENT_SKIN_QUICK_CONNECT_SOLUTIONS\x10\x05\x12'\n" +
	"#CLIENT_SKIN_BRAND_BUILDER_SOLUTIONS\x10\x06\x12\x1c\n" +
	"\x18CLIENT_SKIN_DEALER_SPIKE\x10\a\x12\x1f\n" +
	"\x1bCLIENT_SKIN_ONTARIO_SYSTEMS\x10\b\x12\x17\n" +
	"\x13CLIENT_SKIN_PEARSON\x10\t\x12$\n" +
	" CLIENT_SKIN_THE_DEBT_CORPORATION\x10\n" +
	"\x12\x1a\n" +
	"\x16CLIENT_SKIN_TCN_CANADA\x10\v\x12\x19\n" +
	"\x15CLIENT_SKIN_QUAD_CORP\x10\f\x12\"\n" +
	"\x1eCLIENT_SKIN_BROADBAND_DYNAMICS\x10\r\x12\x1d\n" +
	"\x19CLIENT_SKIN_AKTIV_KAPITAL\x10\x0e\x12+\n" +
	"'CLIENT_SKIN_COMMERCIAL_CREDIT_ADJUSTERS\x10\x0f\x12#\n" +
	"\x1fCLIENT_SKIN_NEPTUNE_INNOVATIONS\x10\x10\x12$\n" +
	" CLIENT_SKIN_NEPTUNE_BILL_GOSLING\x10\x11\x12\x15\n" +
	"\x11CLIENT_SKIN_SOPRA\x10\x12\x12\x17\n" +
	"\x13CLIENT_SKIN_TCN_USA\x10\x13\x12\x1c\n" +
	"\x18CLIENT_SKIN_TELSOLUTIONS\x10\x14\x12\x1b\n" +
	"\x17CLIENT_SKIN_CREDIT_SOFT\x10\x15\x12\x18\n" +
	"\x14CLIENT_SKIN_VOICEMED\x10\x16\x12\x18\n" +
	"\x14CLIENT_SKIN_EXPERIAN\x10\x17*\xc8\x01\n" +
	"\x13AutomaticSystemCode\x12(\n" +
	"$AUTOMATIC_SYSTEM_CODE_ADVANCE_STATUS\x10\x00\x12)\n" +
	"%AUTOMATIC_SYSTEM_CODE_CHANGE_PASSWORD\x10\x02\x12*\n" +
	"&AUTOMATIC_SYSTEM_CODE_CHECK_VOICE_MAIL\x10\x03\x120\n" +
	",AUTOMATIC_SYSTEM_CODE_MANUALLY_APPROVE_CALLS\x10\x04*\x96\x01\n" +
	"\x11AdvanceStatusType\x12\x1e\n" +
	"\x1aADVANCE_STATUS_TYPE_PAUSED\x10\x00\x12\x1f\n" +
	"\x1bADVANCE_STATUS_TYPE_WAITING\x10\x01\x12\x1f\n" +
	"\x1bADVANCE_STATUS_TYPE_WRAP_UP\x10\x02\x12\x1f\n" +
	"\x1bADVANCE_STATUS_TYPE_ON_CALL\x10\x03*\xdb\x03\n" +
	"\x10AgentFieldOption\x12'\n" +
	"#AGENT_FIELD_OPTION_AGENT_FIRST_NAME\x10\x00\x12\x1f\n" +
	"\x1bAGENT_FIELD_OPTION_AGENT_ID\x10\x01\x12&\n" +
	"\"AGENT_FIELD_OPTION_AGENT_LAST_NAME\x10\x02\x12%\n" +
	"!AGENT_FIELD_OPTION_AGENT_USERNAME\x10\x03\x12\x1e\n" +
	"\x1aAGENT_FIELD_OPTION_CALL_ID\x10\x04\x12 \n" +
	"\x1cAGENT_FIELD_OPTION_CALLER_ID\x10\x05\x12,\n" +
	"(AGENT_FIELD_OPTION_CONSUMER_PHONE_NUMBER\x10\x06\x12\x1f\n" +
	"\x1bAGENT_FIELD_OPTION_GROUP_ID\x10\a\x12$\n" +
	" AGENT_FIELD_OPTION_HUNT_GROUP_ID\x10\b\x12&\n" +
	"\"AGENT_FIELD_OPTION_HUNT_GROUP_NAME\x10\t\x12&\n" +
	"\"AGENT_FIELD_OPTION_HUNT_GROUP_TYPE\x10\n" +
	"\x12'\n" +
	"#AGENT_FIELD_OPTION_PARTNER_AGENT_ID\x10\v*\xd7\b\n" +
	"\x11PostalFieldOption\x12$\n" +
	" POSTAL_FIELD_OPTION_ADMIN_CODE_1\x10\x00\x12$\n" +
	" POSTAL_FIELD_OPTION_ADMIN_CODE_2\x10\x01\x12$\n" +
	" POSTAL_FIELD_OPTION_ADMIN_CODE_3\x10\x02\x12$\n" +
	" POSTAL_FIELD_OPTION_ADMIN_NAME_1\x10\x03\x12$\n" +
	" POSTAL_FIELD_OPTION_ADMIN_NAME_2\x10\x04\x12$\n" +
	" POSTAL_FIELD_OPTION_ADMIN_NAME_3\x10\x05\x12!\n" +
	"\x1dPOSTAL_FIELD_OPTION_AREA_CODE\x10\x06\x12!\n" +
	"\x1dPOSTAL_FIELD_OPTION_CITY_NAME\x10\a\x12!\n" +
	"\x1dPOSTAL_FIELD_OPTION_CITY_TYPE\x10\b\x12$\n" +
	" POSTAL_FIELD_OPTION_COUNRTY_CODE\x10\t\x12*\n" +
	"&POSTAL_FIELD_OPTION_COUNTRY_ISO_2_CODE\x10\n" +
	"\x12#\n" +
	"\x1fPOSTAL_FIELD_OPTION_COUNTY_NAME\x10\v\x12(\n" +
	"$POSTAL_FIELD_OPTION_COUNTY_FIPS_CODE\x10\f\x12 \n" +
	"\x1cPOSTAL_FIELD_OPTION_LATITUDE\x10\r\x123\n" +
	"/POSTAL_FIELD_OPTION_LATITUDE_LONGITUDE_ACCURACY\x10\x0e\x12!\n" +
	"\x1dPOSTAL_FIELD_OPTION_LONGITUDE\x10\x0f\x125\n" +
	"1POSTAL_FIELD_OPTION_METROPOLITAN_STATISTICAL_AREA\x10\x10\x121\n" +
	"-POSTAL_FIELD_OPTION_OBSERVES_DAYLIGHT_SAVINGS\x10\x11\x12\"\n" +
	"\x1ePOSTAL_FIELD_OPTION_PLACE_NAME\x10\x12\x12#\n" +
	"\x1fPOSTAL_FIELD_OPTION_POSTAL_CODE\x10\x13\x120\n" +
	",POSTAL_FIELD_OPTION_POSTAL_CODE_ALPHANUMERIC\x10\x14\x12#\n" +
	"\x1fPOSTAL_FIELD_OPTION_POSTAL_TYPE\x10\x15\x123\n" +
	"/POSTAL_FIELD_OPTION_STATE_PROVINCE_ABBREVIATION\x10\x16\x12+\n" +
	"'POSTAL_FIELD_OPTION_STATE_PROVINCE_NAME\x10\x17\x12'\n" +
	"#POSTAL_FIELD_OPTION_STATE_FIPS_CODE\x10\x18\x12!\n" +
	"\x1dPOSTAL_FIELD_OPTION_TIME_ZONE\x10\x19\x12\"\n" +
	"\x1ePOSTAL_FIELD_OPTION_UTC_OFFSET\x10\x1a*\x9a\t\n" +
	"\x10PhoneFieldOption\x12 \n" +
	"\x1cPHONE_FIELD_OPTION_AREA_CODE\x10\x00\x12\x1e\n" +
	"\x1aPHONE_FIELD_OPTION_CARRIER\x10\x01\x12/\n" +
	"+PHONE_FIELD_OPTION_CENTRAL_OFFICE_CODE_TYPE\x10\x02\x12\x1b\n" +
	"\x17PHONE_FIELD_OPTION_CITY\x10\x03\x12#\n" +
	"\x1fPHONE_FIELD_OPTION_COUNTRY_CODE\x10\x04\x125\n" +
	"1PHONE_FIELD_OPTION_COUNRTY_CODE_SUBSCRIBER_NUMBER\x10\x05\x12)\n" +
	"%PHONE_FIELD_OPTION_COUNTRY_ISO_2_CODE\x10\x06\x12+\n" +
	"'PHONE_FIELD_OPTION_INTERNATIONAL_PREFIX\x10\a\x12\x1f\n" +
	"\x1bPHONE_FIELD_OPTION_LANGUAGE\x10\b\x12\x1f\n" +
	"\x1bPHONE_FIELD_OPTION_LATITUDE\x10\t\x12 \n" +
	"\x1cPHONE_FIELD_OPTION_LONGITUDE\x10\n" +
	"\x12+\n" +
	"'PHONE_FIELD_OPTION_MAXIMUM_BLOCK_NUMBER\x10\v\x12+\n" +
	"'PHONE_FIELD_OPTION_MINIMUM_BLOCK_NUMBER\x10\f\x120\n" +
	",PHONE_FIELD_OPTION_NATIONAL_DESTINATION_CODE\x10\r\x12&\n" +
	"\"PHONE_FIELD_OPTION_NATIONAL_PREFIX\x10\x0e\x12&\n" +
	"\"PHONE_FIELD_OPTION_NUMBER_BLOCK_ID\x10\x0f\x12\"\n" +
	"\x1ePHONE_FIELD_OPTION_NUMBER_TYPE\x10\x10\x12&\n" +
	"\"PHONE_FIELD_OPTION_NUMBER_USES_NDC\x10\x11\x120\n" +
	",PHONE_FIELD_OPTION_OBSERVES_DAYLIGHT_SAVINGS\x10\x12\x12\x1d\n" +
	"\x19PHONE_FIELD_OPTION_PREFIX\x10\x13\x121\n" +
	"-PHONE_FIELD_OPTION_REGION_STATE_PROVINCE_CODE\x10\x14\x121\n" +
	"-PHONE_FIELD_OPTION_REGION_STATE_PROVINCE_NAME\x10\x15\x12-\n" +
	")PHONE_FIELD_OPTION_SPECIAL_SERVICE_CODE_1\x10\x16\x12-\n" +
	")PHONE_FIELD_OPTION_SPECIAL_SERVICE_CODE_2\x10\x17\x12-\n" +
	")PHONE_FIELD_OPTION_SPECIAL_SERVICE_CODE_3\x10\x18\x12-\n" +
	")PHONE_FIELD_OPTION_SPECIAL_SERVICE_CODE_4\x10\x19\x12 \n" +
	"\x1cPHONE_FIELD_OPTION_TIME_ZONE\x10\x1a\x12!\n" +
	"\x1dPHONE_FIELD_OPTION_UTC_OFFSET\x10\x1b*\xf8\f\n" +
	"\x19PhonePostalDisplayOptions\x12\x1f\n" +
	"\x1bDISPLAY_OPTION_ADMIN_CODE_1\x10\x00\x12\x1f\n" +
	"\x1bDISPLAY_OPTION_ADMIN_CODE_2\x10\x01\x12\x1f\n" +
	"\x1bDISPLAY_OPTION_ADMIN_CODE_3\x10\x02\x12\x1f\n" +
	"\x1bDISPLAY_OPTION_ADMIN_NAME_1\x10\x03\x12\x1f\n" +
	"\x1bDISPLAY_OPTION_ADMIN_NAME_2\x10\x04\x12\x1f\n" +
	"\x1bDISPLAY_OPTION_ADMIN_NAME_3\x10\x05\x12\x1c\n" +
	"\x18DISPLAY_OPTION_AREA_CODE\x10\x06\x12\x1a\n" +
	"\x16DISPLAY_OPTION_CARRIER\x10\a\x12+\n" +
	"'DISPLAY_OPTION_CENTRAL_OFFICE_CODE_TYPE\x10\b\x12\x17\n" +
	"\x13DISPLAY_OPTION_CITY\x10\t\x12\x1c\n" +
	"\x18DISPLAY_OPTION_CITY_NAME\x10\n" +
	"\x12\x1c\n" +
	"\x18DISPLAY_OPTION_CITY_TYPE\x10\v\x12\x1f\n" +
	"\x1bDISPLAY_OPTION_COUNTRY_CODE\x10\f\x121\n" +
	"-DISPLAY_OPTION_COUNTRY_CODE_SUBSCRIBER_NUMBER\x10\r\x12\x18\n" +
	"\x14DISPLAY_OPTION_ISO_2\x10\x0e\x12\x1e\n" +
	"\x1aDISPLAY_OPTION_COUNTY_NAME\x10\x0f\x12\x1e\n" +
	"\x1aDISPLAY_OPTION_COUNTY_FIPS\x10\x10\x12'\n" +
	"#DISPLAY_OPTION_INTERNATIONAL_PREFIX\x10\x11\x12\x1b\n" +
	"\x17DISPLAY_OPTION_LANGUAGE\x10\x12\x12\x1b\n" +
	"\x17DISPLAY_OPTION_LATITUDE\x10\x13\x12.\n" +
	"*DISPLAY_OPTION_LONGITUDE_LATITUDE_ACCURACY\x10\x14\x12\x1c\n" +
	"\x18DISPLAY_OPTION_LONGITUDE\x10\x15\x12'\n" +
	"#DISPLAY_OPTION_MAXIMUM_BLOCK_NUMBER\x10\x16\x120\n" +
	",DISPLAY_OPTION_METROPOLITAN_STATISTICAL_AREA\x10\x17\x12'\n" +
	"#DISPLAY_OPTION_MINIMUM_BLOCK_NUMBER\x10\x18\x12,\n" +
	"(DISPLAY_OPTION_NATIONAL_DESTINATION_CODE\x10\x19\x12\"\n" +
	"\x1eDISPLAY_OPTION_NATIONAL_PREFIX\x10\x1a\x12 \n" +
	"\x1cDISPLAY_OPTION_NUMBER_PREFIX\x10\x1b\x12\x1e\n" +
	"\x1aDISPLAY_OPTION_NUMBER_TYPE\x10\x1c\x12\"\n" +
	"\x1eDISPLAY_OPTION_NUMBER_USES_NDC\x10\x1d\x121\n" +
	"-DISPLAY_OPTION_OBSERVES_DAYLIGHT_SAVINGS_TIME\x10\x1e\x12\x1d\n" +
	"\x19DISPLAY_OPTION_PLACE_NAME\x10\x1f\x12\x1e\n" +
	"\x1aDISPLAY_OPTION_POSTAL_CODE\x10 \x12+\n" +
	"'DISPLAY_OPTION_POSTAL_CODE_ALPHANUMERIC\x10!\x12\x1e\n" +
	"\x1aDISPLAY_OPTION_POSTAL_TYPE\x10\"\x12(\n" +
	"$DISPLAY_OPTION_PROVINCE_ABBREVIATION\x10#\x12 \n" +
	"\x1cDISPLAY_OPTION_PROVINCE_NAME\x10$\x12)\n" +
	"%DISPLAY_OPTION_SPECIAL_SERVICE_CODE_1\x10%\x12)\n" +
	"%DISPLAY_OPTION_SPECIAL_SERVICE_CODE_2\x10&\x12)\n" +
	"%DISPLAY_OPTION_SPECIAL_SERVICE_CODE_3\x10'\x12)\n" +
	"%DISPLAY_OPTION_SPECIAL_SERVICE_CODE_4\x10(\x12&\n" +
	"\"DISPLAY_OPTION_PROVINCE_STATE_NAME\x10)\x12\"\n" +
	"\x1eDISPLAY_OPTION_STATE_FIPS_CODE\x10*\x12\x1c\n" +
	"\x18DISPLAY_OPTION_TIME_ZONE\x10+\x12\x1d\n" +
	"\x19DISPLAY_OPTION_UTC_OFFSET\x10,*\x83\x05\n" +
	"\x14OperatorApplications\x12\r\n" +
	"\tAGENT_APP\x10\x00\x12\x1f\n" +
	"\x1bORGANIZATION_MANAGEMENT_APP\x10\x01\x12!\n" +
	"\x1dCUSTOMER_JOURNEY_SERVICES_APP\x10\x02\x12 \n" +
	"\x1cLIST_MANAGEMENT_SERVICES_APP\x10\x03\x12\x15\n" +
	"\x11AGENT_MANAGER_APP\x10\x04\x12#\n" +
	"\x1fNATURAL_LANGUAGE_COMPLIANCE_APP\x10\x06\x12\x17\n" +
	"\x13VOICE_ANALYTICS_APP\x10\b\x12\x0f\n" +
	"\vSCRIPTS_APP\x10\t\x12\x0f\n" +
	"\vROOM303_APP\x10\n" +
	"\x12\x11\n" +
	"\rOMNI_BOSS_APP\x10\v\x12\v\n" +
	"\aWFM_APP\x10\f\x12\x10\n" +
	"\fPAYMENTS_APP\x10\r\x12\x0f\n" +
	"\vSUPPORT_APP\x10\x0f\x12\x1d\n" +
	"\x19BUSINESS_INTELLIGENCE_APP\x10\x10\x12\x12\n" +
	"\x0eBACKOFFICE_APP\x10\x11\x12\x12\n" +
	"\x0eSCORECARDS_APP\x10\x13\x12\x11\n" +
	"\rDEV_TOOLS_APP\x10\x14\x12\x17\n" +
	"\x13LEARNING_CENTER_APP\x10\x15\x12\x18\n" +
	"\x14DELIVERY_SERVICE_APP\x10\x16\x12\x1e\n" +
	"\x1aPERFORMANCE_MANAGEMENT_APP\x10\x17\x12\x0f\n" +
	"\vTICKETS_APP\x10\x1f\x12\x12\n" +
	"\x0eAGENT_BETA_APP\x10 \x12\x10\n" +
	"\fNEWSROOM_APP\x10!\x12\x16\n" +
	"\x12CONTACTMANAGER_APP\x10\"\x12\x16\n" +
	"\x12KNOWLEDGE_BASE_APP\x10#\"\x04\b\x05\x10\x05\"\x04\b\a\x10\a\"\x04\b\x12\x10\x12*\vMANAGER_APP*\tOMNI_LINK*\x7f\n" +
	"\x18AnnouncementMixingOption\x12.\n" +
	"*ANNOUNCEMENT_MIXING_OPTION_MUTE_HOLD_MUSIC\x10\x00\x123\n" +
	"/ANNOUNCEMENT_MIXING_OPTION_PLAY_OVER_HOLD_MUSIC\x10\x01*\x8a\x01\n" +
	"\x15InboundOverrideOption\x12&\n" +
	"\"INBOUND_OVERRIDE_OPTION_DO_NOTHING\x10\x00\x12$\n" +
	" INBOUND_OVERRIDE_OPTION_OVERRIDE\x10\x01\x12#\n" +
	"\x1fINBOUND_OVERRIDE_OPTION_HANG_UP\x10\x02*\xa7\x01\n" +
	"\x05Digit\x12\x0e\n" +
	"\n" +
	"DIGIT_ZERO\x10\x00\x12\r\n" +
	"\tDIGIT_ONE\x10\x01\x12\r\n" +
	"\tDIGIT_TWO\x10\x02\x12\x0f\n" +
	"\vDIGIT_THREE\x10\x03\x12\x0e\n" +
	"\n" +
	"DIGIT_FOUR\x10\x04\x12\x0e\n" +
	"\n" +
	"DIGIT_FIVE\x10\x05\x12\r\n" +
	"\tDIGIT_SIX\x10\x06\x12\x0f\n" +
	"\vDIGIT_SEVEN\x10\a\x12\x0f\n" +
	"\vDIGIT_EIGHT\x10\b\x12\x0e\n" +
	"\n" +
	"DIGIT_NINE\x10\t*c\n" +
	"\x12IntercomConnection\x12!\n" +
	"\x1dINTERCOM_CONNECTION_AUTOMATIC\x10\x00\x12*\n" +
	"&INTERCOM_CONNECTION_REQUIRE_ACCEPTANCE\x10\x01*\xb3>\n" +
	"\vConfigSound\x12\x14\n" +
	"\x10CONFIG_SOUND_ONE\x10\x00\x12\x19\n" +
	"\x15CONFIG_SOUND_NUMBER_1\x10&\x12\x19\n" +
	"\x15CONFIG_SOUND_NUMBER_2\x10'\x12\x19\n" +
	"\x15CONFIG_SOUND_NUMBER_3\x10(\x12\x19\n" +
	"\x15CONFIG_SOUND_NUMBER_4\x10)\x12\x19\n" +
	"\x15CONFIG_SOUND_NUMBER_5\x10*\x12\x19\n" +
	"\x15CONFIG_SOUND_NUMBER_6\x10+\x12\x19\n" +
	"\x15CONFIG_SOUND_NUMBER_7\x10,\x12\x19\n" +
	"\x15CONFIG_SOUND_NUMBER_8\x10-\x12\x19\n" +
	"\x15CONFIG_SOUND_NUMBER_9\x10.\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_10\x10/\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_11\x100\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_12\x101\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_13\x102\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_14\x103\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_15\x104\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_16\x105\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_17\x106\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_18\x107\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_19\x108\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_20\x109\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_21\x10:\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_22\x10;\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_23\x10<\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_24\x10=\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_25\x10>\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_26\x10?\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_27\x10@\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_28\x10A\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_29\x10B\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_30\x10C\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_31\x10D\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_32\x10E\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_33\x10F\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_34\x10G\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_35\x10H\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_36\x10I\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_37\x10J\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_38\x10K\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_39\x10L\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_40\x10M\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_41\x10N\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_42\x10O\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_43\x10P\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_44\x10Q\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_45\x10R\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_46\x10S\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_47\x10T\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_48\x10U\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_49\x10V\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_50\x10W\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_51\x10X\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_52\x10Y\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_53\x10Z\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_54\x10[\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_55\x10\\\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_56\x10]\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_57\x10^\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_58\x10_\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_59\x10`\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_60\x10a\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_61\x10b\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_62\x10c\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_63\x10d\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_64\x10e\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_65\x10f\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_66\x10g\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_67\x10h\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_68\x10i\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_69\x10j\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_70\x10k\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_71\x10l\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_72\x10m\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_73\x10n\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_74\x10o\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_75\x10p\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_76\x10q\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_77\x10r\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_78\x10s\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_79\x10t\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_80\x10u\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_81\x10v\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_82\x10w\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_83\x10x\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_84\x10y\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_85\x10z\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_86\x10{\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_87\x10|\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_88\x10}\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_89\x10~\x12\x1a\n" +
	"\x16CONFIG_SOUND_NUMBER_90\x10\x7f\x12\x1b\n" +
	"\x16CONFIG_SOUND_NUMBER_91\x10\x80\x01\x12\x1b\n" +
	"\x16CONFIG_SOUND_NUMBER_92\x10\x81\x01\x12\x1b\n" +
	"\x16CONFIG_SOUND_NUMBER_93\x10\x82\x01\x12\x1b\n" +
	"\x16CONFIG_SOUND_NUMBER_94\x10\x83\x01\x12\x1b\n" +
	"\x16CONFIG_SOUND_NUMBER_95\x10\x84\x01\x12\x1b\n" +
	"\x16CONFIG_SOUND_NUMBER_96\x10\x85\x01\x12\x1b\n" +
	"\x16CONFIG_SOUND_NUMBER_97\x10\x86\x01\x12\x1b\n" +
	"\x16CONFIG_SOUND_NUMBER_98\x10\x87\x01\x12\x1b\n" +
	"\x16CONFIG_SOUND_NUMBER_99\x10\x88\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_NUMBER_100\x10\x96\x02\x12\x1b\n" +
	"\x16CONFIG_SOUND_ORDINAL_1\x10\x89\x01\x12\x1b\n" +
	"\x16CONFIG_SOUND_ORDINAL_2\x10\x8a\x01\x12\x1b\n" +
	"\x16CONFIG_SOUND_ORDINAL_3\x10\x8b\x01\x12\x1b\n" +
	"\x16CONFIG_SOUND_ORDINAL_4\x10\x8c\x01\x12\x1b\n" +
	"\x16CONFIG_SOUND_ORDINAL_5\x10\x8d\x01\x12\x1b\n" +
	"\x16CONFIG_SOUND_ORDINAL_6\x10\x8e\x01\x12\x1b\n" +
	"\x16CONFIG_SOUND_ORDINAL_7\x10\x8f\x01\x12\x1b\n" +
	"\x16CONFIG_SOUND_ORDINAL_8\x10\x90\x01\x12\x1b\n" +
	"\x16CONFIG_SOUND_ORDINAL_9\x10\x91\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_10\x10\x92\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_11\x10\x93\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_12\x10\x94\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_13\x10\x95\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_14\x10\x96\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_15\x10\x97\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_16\x10\x98\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_17\x10\x99\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_18\x10\x9a\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_19\x10\x9b\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_20\x10\x9c\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_21\x10\x9d\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_22\x10\x9e\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_23\x10\x9f\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_24\x10\xa0\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_25\x10\xa1\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_26\x10\xa2\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_27\x10\xa3\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_28\x10\xa4\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_29\x10\xa5\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_30\x10\xa6\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_31\x10\xa7\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_32\x10\xa8\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_33\x10\xa9\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_34\x10\xaa\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_35\x10\xab\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_36\x10\xac\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_37\x10\xad\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_38\x10\xae\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_39\x10\xaf\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_40\x10\xb0\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_41\x10\xb1\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_42\x10\xb2\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_43\x10\xb3\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_44\x10\xb4\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_45\x10\xb5\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_46\x10\xb6\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_47\x10\xb7\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_48\x10\xb8\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_49\x10\xb9\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_50\x10\xba\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_51\x10\xbb\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_52\x10\xbc\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_53\x10\xbd\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_54\x10\xbe\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_55\x10\xbf\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_56\x10\xc0\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_57\x10\xc1\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_58\x10\xc2\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_59\x10\xc3\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_60\x10\xc4\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_61\x10\xc5\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_62\x10\xc6\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_63\x10\xc7\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_64\x10\xc8\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_65\x10\xc9\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_66\x10\xca\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_67\x10\xcb\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_68\x10\xcc\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_69\x10\xcd\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_70\x10\xce\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_71\x10\xcf\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_72\x10\xd0\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_73\x10\xd1\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_74\x10\xd2\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_75\x10\xd3\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_76\x10\xd4\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_77\x10\xd5\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_78\x10\xd6\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_79\x10\xd7\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_80\x10\xd8\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_81\x10\xd9\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_82\x10\xda\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_83\x10\xdb\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_84\x10\xdc\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_85\x10\xdd\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_86\x10\xde\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_87\x10\xdf\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_88\x10\xe0\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_89\x10\xe1\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_90\x10\xe2\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_91\x10\xe3\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_92\x10\xe4\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_93\x10\xe5\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_94\x10\xe6\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_95\x10\xe7\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_96\x10\xe8\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_97\x10\xe9\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_98\x10\xea\x01\x12\x1c\n" +
	"\x17CONFIG_SOUND_ORDINAL_99\x10\xeb\x01\x12\x1d\n" +
	"\x18CONFIG_SOUND_ORDINAL_100\x10\x97\x02\x12'\n" +
	"\"CONFIG_SOUND_AGENTLOGIN_CALL_ENDED\x10\xec\x01\x12$\n" +
	"\x1fCONFIG_SOUND_AGENTLOGIN_TRUMPET\x10\xed\x01\x12'\n" +
	"\"CONFIG_SOUND_ANNOUNCE_POSITION_END\x10\xee\x01\x12+\n" +
	"&CONFIG_SOUND_ANNOUNCE_POSITION_SHORTLY\x10\xef\x01\x12)\n" +
	"$CONFIG_SOUND_ANNOUNCE_POSITION_START\x10\xf0\x01\x12#\n" +
	"\x1eCONFIG_SOUND_ANNOUNCE_TIME_END\x10\xf1\x01\x12'\n" +
	"\"CONFIG_SOUND_ANNOUNCE_TIME_SHORTLY\x10\xf2\x01\x12%\n" +
	" CONFIG_SOUND_ANNOUNCE_TIME_START\x10\xf3\x01\x12\x16\n" +
	"\x11CONFIG_SOUND_BEEP\x10\xf4\x01\x12 \n" +
	"\x1bCONFIG_SOUND_FPM_CALM_RIVER\x10\xf5\x01\x12)\n" +
	"$CONFIG_SOUND_NBDY_AVAIL_TO_TAKE_CALL\x10\xf6\x01\x12 \n" +
	"\x1bCONFIG_SOUND_PBX_AGENT_RING\x10\xf7\x01\x12$\n" +
	"\x1fCONFIG_SOUND_INBOUND_AGENT_JOIN\x10\xf8\x01\x12%\n" +
	" CONFIG_SOUND_INBOUND_AGENT_LEAVE\x10\xf9\x01\x12%\n" +
	" CONFIG_SOUND_INBOUND_CALLER_JOIN\x10\xfa\x01\x12&\n" +
	"!CONFIG_SOUND_INBOUND_CALLER_LEAVE\x10\xfb\x01\x12\x1d\n" +
	"\x18CONFIG_SOUND_INBOUND_MOH\x10\xfc\x01\x12*\n" +
	"%CONFIG_SOUND_INBOUND_NOBODY_AVAILABLE\x10\xfd\x01\x12(\n" +
	"#CONFIG_SOUND_INBOUND_QUEUE_CALLBACK\x10\xfe\x01\x12%\n" +
	" CONFIG_SOUND_OUTBOUND_AGENT_JOIN\x10\xff\x01\x12&\n" +
	"!CONFIG_SOUND_OUTBOUND_AGENT_LEAVE\x10\x80\x02\x12&\n" +
	"!CONFIG_SOUND_OUTBOUND_CALLER_JOIN\x10\x81\x02\x12'\n" +
	"\"CONFIG_SOUND_OUTBOUND_CALLER_LEAVE\x10\x82\x02\x12\x1e\n" +
	"\x19CONFIG_SOUND_OUTBOUND_MOH\x10\x83\x02\x12+\n" +
	"&CONFIG_SOUND_OUTBOUND_NOBODY_AVAILABLE\x10\x84\x02\x12)\n" +
	"$CONFIG_SOUND_OUTBOUND_QUEUE_CALLBACK\x10\x85\x02\x12$\n" +
	"\x1fCONFIG_SOUND_PREVIEW_AGENT_JOIN\x10\x86\x02\x12%\n" +
	" CONFIG_SOUND_PREVIEW_AGENT_LEAVE\x10\x87\x02\x12'\n" +
	"\"CONFIG_SOUND_PREVIEW_AGENT_PREPARE\x10\x88\x02\x12%\n" +
	" CONFIG_SOUND_PREVIEW_CALLER_JOIN\x10\x89\x02\x12&\n" +
	"!CONFIG_SOUND_PREVIEW_CALLER_LEAVE\x10\x8a\x02\x12\x1d\n" +
	"\x18CONFIG_SOUND_PREVIEW_MOH\x10\x8b\x02\x12*\n" +
	"%CONFIG_SOUND_PREVIEW_NOBODY_AVAILABLE\x10\x8c\x02\x12(\n" +
	"#CONFIG_SOUND_PREVIEW_QUEUE_CALLBACK\x10\x8d\x02\x12#\n" +
	"\x1eCONFIG_SOUND_MANUAL_AGENT_JOIN\x10\x8e\x02\x12$\n" +
	"\x1fCONFIG_SOUND_MANUAL_AGENT_LEAVE\x10\x8f\x02\x12&\n" +
	"!CONFIG_SOUND_MANUAL_AGENT_PREPARE\x10\x90\x02\x12$\n" +
	"\x1fCONFIG_SOUND_MANUAL_CALLER_JOIN\x10\x91\x02\x12%\n" +
	" CONFIG_SOUND_MANUAL_CALLER_LEAVE\x10\x92\x02\x12\x1c\n" +
	"\x17CONFIG_SOUND_MANUAL_MOH\x10\x93\x02\x12)\n" +
	"$CONFIG_SOUND_MANUAL_NOBODY_AVAILABLE\x10\x94\x02\x12'\n" +
	"\"CONFIG_SOUND_MANUAL_QUEUE_CALLBACK\x10\x95\x02\x12#\n" +
	"\x1eCONFIG_SOUND_OUTBOUND_MOH_HOLD\x10\x98\x02\x12*\n" +
	"%CONFIG_SOUND_OUTBOUND_MOH_MULTIACCEPT\x10\x99\x02\x12'\n" +
	"\"CONFIG_SOUND_OUTBOUND_MOH_TRANSFER\x10\x9a\x02\x12\"\n" +
	"\x1dCONFIG_SOUND_INBOUND_MOH_HOLD\x10\x9b\x02\x12)\n" +
	"$CONFIG_SOUND_INBOUND_MOH_MULTIACCEPT\x10\x9c\x02\x12&\n" +
	"!CONFIG_SOUND_INBOUND_MOH_TRANSFER\x10\x9d\x02\x12\"\n" +
	"\x1dCONFIG_SOUND_PREVIEW_MOH_HOLD\x10\x9e\x02\x12)\n" +
	"$CONFIG_SOUND_PREVIEW_MOH_MULTIACCEPT\x10\x9f\x02\x12&\n" +
	"!CONFIG_SOUND_PREVIEW_MOH_TRANSFER\x10\xa0\x02\x12!\n" +
	"\x1cCONFIG_SOUND_MANUAL_MOH_HOLD\x10\xa1\x02\x12(\n" +
	"#CONFIG_SOUND_MANUAL_MOH_MULTIACCEPT\x10\xa2\x02\x12%\n" +
	" CONFIG_SOUND_MANUAL_MOH_TRANSFER\x10\xa3\x02\x12)\n" +
	"$CONFIG_SOUND_CALLBACK_QUEUED_ALREADY\x10\xa4\x02\"\x04\b\x01\x10%*\xa6\x01\n" +
	"\rSoundLanguage\x12\x1a\n" +
	"\x16SOUND_LANGUAGE_ENGLISH\x10\x00\x12\x19\n" +
	"\x15SOUND_LANGUAGE_FRENCH\x10\x01\x12\x1d\n" +
	"\x19SOUND_LANGUAGE_PORTUGUESE\x10\x05\x12\x1a\n" +
	"\x16SOUND_LANGUAGE_SPANISH\x10\x06\x12\x1d\n" +
	"\x19SOUND_LANGUAGE_AU_ENGLISH\x10\a\"\x04\b\x02\x10\x04*=\n" +
	"\vSoundGender\x12\x15\n" +
	"\x11SOUND_GENDER_MALE\x10\x00\x12\x17\n" +
	"\x13SOUND_GENDER_FEMALE\x10\x01*\x95\x01\n" +
	"\x10IdentityProvider\x12\x18\n" +
	"\x14CONNECTION_TYPE_NONE\x10\x00\x12\x18\n" +
	"\x14CONNECTION_TYPE_OKTA\x10\x01\x12\x19\n" +
	"\x15CONNECTION_TYPE_AZURE\x10\x02\x12\x18\n" +
	"\x14CONNECTION_TYPE_ADFS\x10\x03\x12\x18\n" +
	"\x14CONNECTION_TYPE_OIDC\x10\x04*M\n" +
	"\x11RecordingFileType\x12\x1b\n" +
	"\x17RECORDING_FILE_TYPE_WAV\x10\x00\x12\x1b\n" +
	"\x17RECORDING_FILE_TYPE_MP3\x10\x01*U\n" +
	"\x12InitialAgentStatus\x12\x1e\n" +
	"\x1aINITIAL_AGENT_STATUS_READY\x10\x00\x12\x1f\n" +
	"\x1bINITIAL_AGENT_STATUS_PAUSED\x10\x01*\x82\x01\n" +
	"\fAgentRouting\x12\x1b\n" +
	"\x17AGENT_ROUTING_ANY_AGENT\x10\x00\x12*\n" +
	"&AGENT_ROUTING_ORIGINAL_AGENT_PREFERRED\x10\x01\x12)\n" +
	"%AGENT_ROUTING_ORIGINAL_AGENT_REQUIRED\x10\x02*\x9b\x01\n" +
	"\x1bAlphanumericKeypadDelimiter\x12*\n" +
	"&ALPHANUMERIC_KEYPAD_DELIMITER_ASTERISK\x10\x00\x12'\n" +
	"#ALPHANUMERIC_KEYPAD_DELIMITER_POUND\x10\x01\x12'\n" +
	"#ALPHANUMERIC_KEYPAD_DELIMITER_SPACE\x10\x02*\xa1\x01\n" +
	"\x15AgentCallHistoryScope\x12!\n" +
	"\x1dAGENT_CALL_HISTORY_SCOPE_NONE\x10\x00\x125\n" +
	"1AGENT_CALL_HISTORY_SCOPE_AGENT_SESSION_STATISTICS\x10\x01\x12.\n" +
	"*AGENT_CALL_HISTORY_SCOPE_TODAYS_STATISTICS\x10\x02*\xa7\v\n" +
	"\x17CommunicationExpiration\x12\"\n" +
	"\x1eCOMMUNICATION_EXPIRATION_NEVER\x10\x00\x12%\n" +
	"!COMMUNICATION_EXPIRATION_ONE_HOUR\x10\x01\x12&\n" +
	"\"COMMUNICATION_EXPIRATION_TWO_HOURS\x10\x02\x12(\n" +
	"$COMMUNICATION_EXPIRATION_THREE_HOURS\x10\x03\x12'\n" +
	"#COMMUNICATION_EXPIRATION_FOUR_HOURS\x10\x04\x12'\n" +
	"#COMMUNICATION_EXPIRATION_FIVE_HOURS\x10\x05\x12&\n" +
	"\"COMMUNICATION_EXPIRATION_SIX_HOURS\x10\x06\x12(\n" +
	"$COMMUNICATION_EXPIRATION_SEVEN_HOURS\x10\a\x12(\n" +
	"$COMMUNICATION_EXPIRATION_EIGHT_HOURS\x10\b\x12'\n" +
	"#COMMUNICATION_EXPIRATION_NINE_HOURS\x10\t\x12&\n" +
	"\"COMMUNICATION_EXPIRATION_TEN_HOURS\x10\n" +
	"\x12)\n" +
	"%COMMUNICATION_EXPIRATION_ELEVEN_HOURS\x10\v\x12)\n" +
	"%COMMUNICATION_EXPIRATION_TWELVE_HOURS\x10\f\x12+\n" +
	"'COMMUNICATION_EXPIRATION_THIRTEEN_HOURS\x10\r\x12*\n" +
	"&COMMUNICATION_EXPIRATION_SIXTEEN_HOURS\x10\x10\x12)\n" +
	"%COMMUNICATION_EXPIRATION_TWENTY_HOURS\x10\x14\x12.\n" +
	"*COMMUNICATION_EXPIRATION_TWENTY_FOUR_HOURS\x10\x18\x12-\n" +
	")COMMUNICATION_EXPIRATION_THIRTY_SIX_HOURS\x10$\x12%\n" +
	"!COMMUNICATION_EXPIRATION_TWO_DAYS\x100\x12'\n" +
	"#COMMUNICATION_EXPIRATION_THREE_DAYS\x10H\x12&\n" +
	"\"COMMUNICATION_EXPIRATION_FOUR_DAYS\x10`\x12&\n" +
	"\"COMMUNICATION_EXPIRATION_FIVE_DAYS\x10x\x12&\n" +
	"!COMMUNICATION_EXPIRATION_SIX_DAYS\x10\x90\x01\x12&\n" +
	"!COMMUNICATION_EXPIRATION_ONE_WEEK\x10\xa8\x01\x12'\n" +
	"\"COMMUNICATION_EXPIRATION_TWO_WEEKS\x10\xd0\x02\x12)\n" +
	"$COMMUNICATION_EXPIRATION_THREE_WEEKS\x10\xf8\x03\x12(\n" +
	"#COMMUNICATION_EXPIRATION_FOUR_WEEKS\x10\xa0\x05\x12'\n" +
	"\"COMMUNICATION_EXPIRATION_ONE_MONTH\x10\xd0\x05\x12(\n" +
	"#COMMUNICATION_EXPIRATION_TWO_MONTHS\x10\xa0\v\x12*\n" +
	"%COMMUNICATION_EXPIRATION_THREE_MONTHS\x10\xf0\x10\x12(\n" +
	"#COMMUNICATION_EXPIRATION_SIX_MONTHS\x10\xe0!\x12)\n" +
	"$COMMUNICATION_EXPIRATION_NINE_MONTHS\x10\xd02\x12&\n" +
	"!COMMUNICATION_EXPIRATION_ONE_YEAR\x10\xb8D\x12-\n" +
	"(COMMUNICATION_EXPIRATION_THIRTEEN_MONTHS\x10\x90I*\x8f\x01\n" +
	"\x16DefaultCallbackRouting\x12!\n" +
	"\x1dDEFAULT_CALLBACK_ROUTING_NONE\x10\x00\x12%\n" +
	"!DEFAULT_CALLBACK_ROUTING_TO_AGENT\x10\x01\x12+\n" +
	"'DEFAULT_CALLBACK_ROUTING_AGENT_SKILLSET\x10\x02*\xe4\b\n" +
	"\x0eXMLPropertyKey\x12\x19\n" +
	"\x15XML_PROPERTY_KEY_NONE\x10\x00\x127\n" +
	"3XML_PROPERTY_KEY_AGENT_DISPOSITION_CONDITIONAL_DNCL\x10\x01\x128\n" +
	"4XML_PROPERTY_KEY_AGENT_LOGIN_GUI_STATISTICS_TEMPLATE\x10\x02\x12&\n" +
	"\"XML_PROPERTY_KEY_AGENT_PAUSE_CODES\x10\x03\x12(\n" +
	"$XML_PROPERTY_KEY_AGENT_SKILLS_FILTER\x10\x04\x124\n" +
	"0XML_PROPERTY_KEY_AGENT_STATUS_DASHBOARD_TEMPLATE\x10\x05\x122\n" +
	".XML_PROPERTY_KEY_AGENT_STATUS_DISPLAY_TEMPLATE\x10\x06\x12%\n" +
	"!XML_PROPERTY_KEY_CALLER_ID_BUCKET\x10\a\x12\"\n" +
	"\x1eXML_PROPERTY_KEY_CAMPAIGN_LINK\x10\b\x120\n" +
	",XML_PROPERTY_KEY_CONTACTS_SORTORDER_TEMPLATE\x10\t\x12\"\n" +
	"\x1eXML_PROPERTY_KEY_CRITERIA_DATA\x10\n" +
	"\x12(\n" +
	"$XML_PROPERTY_KEY_CUSTOMER_CALL_CODES\x10\v\x12)\n" +
	"%XML_PROPERTY_KEY_CUSTOM_REPORT_FILTER\x10\f\x12$\n" +
	" XML_PROPERTY_KEY_DATA_DIP_CONFIG\x10\r\x121\n" +
	"-XML_PROPERTY_KEY_EXTENDED_CONDITIONAL_DIALING\x10\x0e\x12A\n" +
	"=XML_PROPERTY_KEY_GENERIC_STATISTICS_TABLE_FORMATTING_TEMPLATE\x10\x0f\x124\n" +
	"0XML_PROPERTY_KEY_HG_CLIENT_INFO_DISPLAY_TEMPLATE\x10\x10\x12&\n" +
	"\"XML_PROPERTY_KEY_HUNT_GROUP_SCRIPT\x10\x11\x128\n" +
	"4XML_PROPERTY_KEY_OPERATIONAL_RESPONSE_STATS_TEMPLATE\x10\x12\x127\n" +
	"3XML_PROPERTY_KEY_QUEUE_HOLD_INFO_DASHBOARD_TEMPLATE\x10\x13\x12*\n" +
	"&XML_PROPERTY_KEY_REPORT_RESULT_MAPPING\x10\x14\x12'\n" +
	"#XML_PROPERTY_KEY_RESPONSE_EVALUATOR\x10\x15\x12!\n" +
	"\x1dXML_PROPERTY_KEY_STOP_TRIGGER\x10\x16\x12-\n" +
	")XML_PROPERTY_KEY_TASK_GROUP_REPORT_FILTER\x10\x17*\xa2\x01\n" +
	"\x1aDefaultManualCallRecording\x12-\n" +
	")DEFAULT_MANUAL_CALL_RECORDING_ORG_DEFAULT\x10\x00\x12)\n" +
	"%DEFAULT_MANUAL_CALL_RECORDING_ENABLED\x10\x01\x12*\n" +
	"&DEFAULT_MANUAL_CALL_RECORDING_DISABLED\x10\x02*z\n" +
	"\x19HuntGroupOrgDefaultCustom\x12\x1e\n" +
	"\x1aHUNT_GROUP_USE_ORG_DEFAULT\x10\x00\x12\x1d\n" +
	"\x19HUNT_GROUP_CUSTOM_ENABLED\x10\x01\x12\x1e\n" +
	"\x1aHUNT_GROUP_CUSTOM_DISABLED\x10\x02*\xab\x01\n" +
	"\x1cManualDialTimeZoneValidation\x12-\n" +
	")MANUAL_DIAL_TIME_ZONE_VALIDATION_DISABLED\x10\x00\x12-\n" +
	")MANUAL_DIAL_TIME_ZONE_VALIDATION_OPTIONAL\x10\x01\x12-\n" +
	")MANUAL_DIAL_TIME_ZONE_VALIDATION_REQUIRED\x10\x02*\xa1\x01\n" +
	"\x17TransferRecordingStatus\x12)\n" +
	"%TRANSFER_RECORDING_STATUS_KEEP_STATUS\x10\x00\x12-\n" +
	")TRANSFER_RECORDING_STATUS_START_RECORDING\x10\x01\x12,\n" +
	"(TRANSFER_RECORDING_STATUS_STOP_RECORDING\x10\x02*\x9c\x01\n" +
	"\x1aRequeueTransferQueueConfig\x12)\n" +
	"%REQUEUE_TRANSFER_QUEUE_CONFIG_CURRENT\x10\x00\x12)\n" +
	"%REQUEUE_TRANSFER_QUEUE_CONFIG_DEFAULT\x10\x01\x12(\n" +
	"$REQUEUE_TRANSFER_QUEUE_CONFIG_CUSTOM\x10\x02*{\n" +
	"\x17DefaultTransferCallerId\x12\x1a\n" +
	"\x16DEFAULT_CALLER_ID_NONE\x10\x00\x12\x1c\n" +
	"\x18DEFAULT_CALLER_ID_CUSTOM\x10\x01\x12&\n" +
	"\"DEFAULT_CALLER_ID_3RD_PARTY_NUMBER\x10\x02*\xa0\x01\n" +
	"\x19DefaultManualDialCallerId\x12&\n" +
	"\"DEFAULT_MANUAL_DIAL_CALLER_ID_NONE\x10\x00\x12(\n" +
	"$DEFAULT_MANUAL_DIAL_CALLER_ID_CUSTOM\x10\x01\x121\n" +
	"-DEFAULT_MANUAL_DIAL_CALLER_ID_AGENT_CALLER_ID\x10\x02*\xc8\x01\n" +
	"\x16ManualDialDataDipScope\x12'\n" +
	"#MANUAL_DIAL_DATA_DIP_SCOPE_DISABLED\x10\x00\x12-\n" +
	")MANUAL_DIAL_DATA_DIP_SCOPE_STANDARD_CALLS\x10\x01\x122\n" +
	".MANUAL_DIAL_DATA_DIP_SCOPE_SCHEDULED_CALLBACKS\x10\x02\x12\"\n" +
	"\x1eMANUAL_DIAL_DATA_DIP_SCOPE_ALL\x10\x03*\xea\x01\n" +
	"\x19ManualDialDataDipHandling\x12(\n" +
	"$MANUAL_DIAL_DATA_DIP_HANDLING_CANCEL\x10\x00\x123\n" +
	"/MANUAL_DIAL_DATA_DIP_HANDLING_NOTIFY_AND_CANCEL\x10\x01\x121\n" +
	"-MANUAL_DIAL_DATA_DIP_HANDLING_NOTIFY_AND_CALL\x10\x02\x12;\n" +
	"7MANUAL_DIAL_DATA_DIP_HANDLING_CALL_WITH_ORIGINAL_VALUES\x10\x03*\xed\x01\n" +
	"\x1cManualDialDataDipIntegration\x120\n" +
	",MANUAL_DIAL_DATA_DIP_INTEGRATION_UNSPECIFIED\x10\x00\x12+\n" +
	"'MANUAL_DIAL_DATA_DIP_INTEGRATION_NUMBER\x10\x01\x12.\n" +
	"*MANUAL_DIAL_DATA_DIP_INTEGRATION_CALLER_ID\x10\x02\x12>\n" +
	":MANUAL_DIAL_DATA_DIP_INTEGRATION_CONTACT_FIELD_DESCRIPTION\x10\x03*\x9f\x01\n" +
	"\x19DataDipTemplateFilterType\x12&\n" +
	"\"DATA_DIP_TEMPLATE_FILTER_TYPE_NONE\x10\x00\x12+\n" +
	"'DATA_DIP_TEMPLATE_FILTER_TYPE_BROADCAST\x10\x01\x12-\n" +
	")DATA_DIP_TEMPLATE_FILTER_TYPE_MANUAL_DIAL\x10\x02*\xb1\x01\n" +
	"\x1fOrganizationArchivedStateFilter\x121\n" +
	"-ORGANIZATION_ARCHIVED_STATE_FILTER_UNARCHIVED\x10\x00\x12/\n" +
	"+ORGANIZATION_ARCHIVED_STATE_FILTER_ARCHIVED\x10\x01\x12*\n" +
	"&ORGANIZATION_ARCHIVED_STATE_FILTER_ALL\x10\x02B\x90\x01\n" +
	"\x0fcom.api.commonsB\bOrgProtoP\x01Z&github.com/tcncloud/api-go/api/commons\xa2\x02\x03ACX\xaa\x02\vApi.Commons\xca\x02\vApi\\Commons\xe2\x02\x17Api\\Commons\\GPBMetadata\xea\x02\fApi::Commonsb\x06proto3"

var (
	file_api_commons_org_proto_rawDescOnce sync.Once
	file_api_commons_org_proto_rawDescData []byte
)

func file_api_commons_org_proto_rawDescGZIP() []byte {
	file_api_commons_org_proto_rawDescOnce.Do(func() {
		file_api_commons_org_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_commons_org_proto_rawDesc), len(file_api_commons_org_proto_rawDesc)))
	})
	return file_api_commons_org_proto_rawDescData
}

var file_api_commons_org_proto_enumTypes = make([]protoimpl.EnumInfo, 42)
var file_api_commons_org_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_api_commons_org_proto_goTypes = []any{
	(TimeZone)(0),                        // 0: api.commons.TimeZone
	(DisplayLanguage)(0),                 // 1: api.commons.DisplayLanguage
	(DefaultDuplicateHandling)(0),        // 2: api.commons.DefaultDuplicateHandling
	(StandardImportFormat)(0),            // 3: api.commons.StandardImportFormat
	(AgentInfoSortBy)(0),                 // 4: api.commons.AgentInfoSortBy
	(QueueInfoSortBy)(0),                 // 5: api.commons.QueueInfoSortBy
	(ClientSkin)(0),                      // 6: api.commons.ClientSkin
	(AutomaticSystemCode)(0),             // 7: api.commons.AutomaticSystemCode
	(AdvanceStatusType)(0),               // 8: api.commons.AdvanceStatusType
	(AgentFieldOption)(0),                // 9: api.commons.AgentFieldOption
	(PostalFieldOption)(0),               // 10: api.commons.PostalFieldOption
	(PhoneFieldOption)(0),                // 11: api.commons.PhoneFieldOption
	(PhonePostalDisplayOptions)(0),       // 12: api.commons.PhonePostalDisplayOptions
	(OperatorApplications)(0),            // 13: api.commons.OperatorApplications
	(AnnouncementMixingOption)(0),        // 14: api.commons.AnnouncementMixingOption
	(InboundOverrideOption)(0),           // 15: api.commons.InboundOverrideOption
	(Digit)(0),                           // 16: api.commons.Digit
	(IntercomConnection)(0),              // 17: api.commons.IntercomConnection
	(ConfigSound)(0),                     // 18: api.commons.ConfigSound
	(SoundLanguage)(0),                   // 19: api.commons.SoundLanguage
	(SoundGender)(0),                     // 20: api.commons.SoundGender
	(IdentityProvider)(0),                // 21: api.commons.IdentityProvider
	(RecordingFileType)(0),               // 22: api.commons.RecordingFileType
	(InitialAgentStatus)(0),              // 23: api.commons.InitialAgentStatus
	(AgentRouting)(0),                    // 24: api.commons.AgentRouting
	(AlphanumericKeypadDelimiter)(0),     // 25: api.commons.AlphanumericKeypadDelimiter
	(AgentCallHistoryScope)(0),           // 26: api.commons.AgentCallHistoryScope
	(CommunicationExpiration)(0),         // 27: api.commons.CommunicationExpiration
	(DefaultCallbackRouting)(0),          // 28: api.commons.DefaultCallbackRouting
	(XMLPropertyKey)(0),                  // 29: api.commons.XMLPropertyKey
	(DefaultManualCallRecording)(0),      // 30: api.commons.DefaultManualCallRecording
	(HuntGroupOrgDefaultCustom)(0),       // 31: api.commons.HuntGroupOrgDefaultCustom
	(ManualDialTimeZoneValidation)(0),    // 32: api.commons.ManualDialTimeZoneValidation
	(TransferRecordingStatus)(0),         // 33: api.commons.TransferRecordingStatus
	(RequeueTransferQueueConfig)(0),      // 34: api.commons.RequeueTransferQueueConfig
	(DefaultTransferCallerId)(0),         // 35: api.commons.DefaultTransferCallerId
	(DefaultManualDialCallerId)(0),       // 36: api.commons.DefaultManualDialCallerId
	(ManualDialDataDipScope)(0),          // 37: api.commons.ManualDialDataDipScope
	(ManualDialDataDipHandling)(0),       // 38: api.commons.ManualDialDataDipHandling
	(ManualDialDataDipIntegration)(0),    // 39: api.commons.ManualDialDataDipIntegration
	(DataDipTemplateFilterType)(0),       // 40: api.commons.DataDipTemplateFilterType
	(OrganizationArchivedStateFilter)(0), // 41: api.commons.OrganizationArchivedStateFilter
	(*TimeZoneWrapper)(nil),              // 42: api.commons.TimeZoneWrapper
	(*DigitWrapper)(nil),                 // 43: api.commons.DigitWrapper
}
var file_api_commons_org_proto_depIdxs = []int32{
	0,  // 0: api.commons.TimeZoneWrapper.value:type_name -> api.commons.TimeZone
	16, // 1: api.commons.DigitWrapper.value:type_name -> api.commons.Digit
	2,  // [2:2] is the sub-list for method output_type
	2,  // [2:2] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_api_commons_org_proto_init() }
func file_api_commons_org_proto_init() {
	if File_api_commons_org_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_commons_org_proto_rawDesc), len(file_api_commons_org_proto_rawDesc)),
			NumEnums:      42,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_commons_org_proto_goTypes,
		DependencyIndexes: file_api_commons_org_proto_depIdxs,
		EnumInfos:         file_api_commons_org_proto_enumTypes,
		MessageInfos:      file_api_commons_org_proto_msgTypes,
	}.Build()
	File_api_commons_org_proto = out.File
	file_api_commons_org_proto_goTypes = nil
	file_api_commons_org_proto_depIdxs = nil
}
