// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: api/v0alpha/emailapi.proto

package v0alpha

import (
	commons "github.com/tcncloud/api-go/commons"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CustomUnsubscribeSettingsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CustomUnsubscribeSettingsReq) Reset() {
	*x = CustomUnsubscribeSettingsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomUnsubscribeSettingsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomUnsubscribeSettingsReq) ProtoMessage() {}

func (x *CustomUnsubscribeSettingsReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomUnsubscribeSettingsReq.ProtoReflect.Descriptor instead.
func (*CustomUnsubscribeSettingsReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{0}
}

type CustomUnsubscribeSettingsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailUseCustomUnsubscribeLinks                          bool `protobuf:"varint,1,opt,name=email_use_custom_unsubscribe_links,json=emailUseCustomUnsubscribeLinks,proto3" json:"email_use_custom_unsubscribe_links,omitempty"`
	EmailClientAcknowledgesThatTheyAreResponsibleForOptOuts bool `protobuf:"varint,2,opt,name=email_client_acknowledges_that_they_are_responsible_for_opt_outs,json=emailClientAcknowledgesThatTheyAreResponsibleForOptOuts,proto3" json:"email_client_acknowledges_that_they_are_responsible_for_opt_outs,omitempty"`
	EmailDefaultUnsubscribeLink                             bool `protobuf:"varint,3,opt,name=email_default_unsubscribe_link,json=emailDefaultUnsubscribeLink,proto3" json:"email_default_unsubscribe_link,omitempty"`
}

func (x *CustomUnsubscribeSettingsRes) Reset() {
	*x = CustomUnsubscribeSettingsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomUnsubscribeSettingsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomUnsubscribeSettingsRes) ProtoMessage() {}

func (x *CustomUnsubscribeSettingsRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomUnsubscribeSettingsRes.ProtoReflect.Descriptor instead.
func (*CustomUnsubscribeSettingsRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{1}
}

func (x *CustomUnsubscribeSettingsRes) GetEmailUseCustomUnsubscribeLinks() bool {
	if x != nil {
		return x.EmailUseCustomUnsubscribeLinks
	}
	return false
}

func (x *CustomUnsubscribeSettingsRes) GetEmailClientAcknowledgesThatTheyAreResponsibleForOptOuts() bool {
	if x != nil {
		return x.EmailClientAcknowledgesThatTheyAreResponsibleForOptOuts
	}
	return false
}

func (x *CustomUnsubscribeSettingsRes) GetEmailDefaultUnsubscribeLink() bool {
	if x != nil {
		return x.EmailDefaultUnsubscribeLink
	}
	return false
}

type CreateEmailTemplateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailSubject string `protobuf:"bytes,3,opt,name=email_subject,json=emailSubject,proto3" json:"email_subject,omitempty"`
	EmailBody    string `protobuf:"bytes,4,opt,name=email_body,json=emailBody,proto3" json:"email_body,omitempty"`
}

func (x *CreateEmailTemplateReq) Reset() {
	*x = CreateEmailTemplateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEmailTemplateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEmailTemplateReq) ProtoMessage() {}

func (x *CreateEmailTemplateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEmailTemplateReq.ProtoReflect.Descriptor instead.
func (*CreateEmailTemplateReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{2}
}

func (x *CreateEmailTemplateReq) GetEmailSubject() string {
	if x != nil {
		return x.EmailSubject
	}
	return ""
}

func (x *CreateEmailTemplateReq) GetEmailBody() string {
	if x != nil {
		return x.EmailBody
	}
	return ""
}

type CreateEmailTemplateRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailTemplateSid int64 `protobuf:"varint,1,opt,name=email_template_sid,json=emailTemplateSid,proto3" json:"email_template_sid,omitempty"`
}

func (x *CreateEmailTemplateRes) Reset() {
	*x = CreateEmailTemplateRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEmailTemplateRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEmailTemplateRes) ProtoMessage() {}

func (x *CreateEmailTemplateRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEmailTemplateRes.ProtoReflect.Descriptor instead.
func (*CreateEmailTemplateRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{3}
}

func (x *CreateEmailTemplateRes) GetEmailTemplateSid() int64 {
	if x != nil {
		return x.EmailTemplateSid
	}
	return 0
}

type UpdateEmailTemplateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailTemplateSid int64  `protobuf:"varint,2,opt,name=email_template_sid,json=emailTemplateSid,proto3" json:"email_template_sid,omitempty"`
	EmailSubject     string `protobuf:"bytes,3,opt,name=email_subject,json=emailSubject,proto3" json:"email_subject,omitempty"`
	EmailBody        string `protobuf:"bytes,4,opt,name=email_body,json=emailBody,proto3" json:"email_body,omitempty"`
}

func (x *UpdateEmailTemplateReq) Reset() {
	*x = UpdateEmailTemplateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEmailTemplateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEmailTemplateReq) ProtoMessage() {}

func (x *UpdateEmailTemplateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEmailTemplateReq.ProtoReflect.Descriptor instead.
func (*UpdateEmailTemplateReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateEmailTemplateReq) GetEmailTemplateSid() int64 {
	if x != nil {
		return x.EmailTemplateSid
	}
	return 0
}

func (x *UpdateEmailTemplateReq) GetEmailSubject() string {
	if x != nil {
		return x.EmailSubject
	}
	return ""
}

func (x *UpdateEmailTemplateReq) GetEmailBody() string {
	if x != nil {
		return x.EmailBody
	}
	return ""
}

type UpdateEmailTemplateRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *UpdateEmailTemplateRes) Reset() {
	*x = UpdateEmailTemplateRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEmailTemplateRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEmailTemplateRes) ProtoMessage() {}

func (x *UpdateEmailTemplateRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEmailTemplateRes.ProtoReflect.Descriptor instead.
func (*UpdateEmailTemplateRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateEmailTemplateRes) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type DeleteEmailTemplateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailTemplateSid int64 `protobuf:"varint,2,opt,name=email_template_sid,json=emailTemplateSid,proto3" json:"email_template_sid,omitempty"`
}

func (x *DeleteEmailTemplateReq) Reset() {
	*x = DeleteEmailTemplateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteEmailTemplateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEmailTemplateReq) ProtoMessage() {}

func (x *DeleteEmailTemplateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEmailTemplateReq.ProtoReflect.Descriptor instead.
func (*DeleteEmailTemplateReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteEmailTemplateReq) GetEmailTemplateSid() int64 {
	if x != nil {
		return x.EmailTemplateSid
	}
	return 0
}

type DeleteEmailTemplateRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DeleteEmailTemplateRes) Reset() {
	*x = DeleteEmailTemplateRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteEmailTemplateRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEmailTemplateRes) ProtoMessage() {}

func (x *DeleteEmailTemplateRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEmailTemplateRes.ProtoReflect.Descriptor instead.
func (*DeleteEmailTemplateRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteEmailTemplateRes) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type EmailTemplateDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailTemplateSid int64                  `protobuf:"varint,1,opt,name=email_template_sid,json=emailTemplateSid,proto3" json:"email_template_sid,omitempty"`
	EmailSubject     string                 `protobuf:"bytes,4,opt,name=email_subject,json=emailSubject,proto3" json:"email_subject,omitempty"`
	EmailBody        string                 `protobuf:"bytes,5,opt,name=email_body,json=emailBody,proto3" json:"email_body,omitempty"`
	LastUpdated      *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
}

func (x *EmailTemplateDetails) Reset() {
	*x = EmailTemplateDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailTemplateDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailTemplateDetails) ProtoMessage() {}

func (x *EmailTemplateDetails) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailTemplateDetails.ProtoReflect.Descriptor instead.
func (*EmailTemplateDetails) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{8}
}

func (x *EmailTemplateDetails) GetEmailTemplateSid() int64 {
	if x != nil {
		return x.EmailTemplateSid
	}
	return 0
}

func (x *EmailTemplateDetails) GetEmailSubject() string {
	if x != nil {
		return x.EmailSubject
	}
	return ""
}

func (x *EmailTemplateDetails) GetEmailBody() string {
	if x != nil {
		return x.EmailBody
	}
	return ""
}

func (x *EmailTemplateDetails) GetLastUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdated
	}
	return nil
}

type EmailGroupStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusId      int32    `protobuf:"varint,3,opt,name=status_id,json=statusId,proto3" json:"status_id,omitempty"`
	EmailGroupIds []string `protobuf:"bytes,4,rep,name=email_group_ids,json=emailGroupIds,proto3" json:"email_group_ids,omitempty"`
}

func (x *EmailGroupStatusReq) Reset() {
	*x = EmailGroupStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailGroupStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailGroupStatusReq) ProtoMessage() {}

func (x *EmailGroupStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailGroupStatusReq.ProtoReflect.Descriptor instead.
func (*EmailGroupStatusReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{9}
}

func (x *EmailGroupStatusReq) GetStatusId() int32 {
	if x != nil {
		return x.StatusId
	}
	return 0
}

func (x *EmailGroupStatusReq) GetEmailGroupIds() []string {
	if x != nil {
		return x.EmailGroupIds
	}
	return nil
}

type EmailGroupStatusRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *EmailGroupStatusRes) Reset() {
	*x = EmailGroupStatusRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailGroupStatusRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailGroupStatusRes) ProtoMessage() {}

func (x *EmailGroupStatusRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailGroupStatusRes.ProtoReflect.Descriptor instead.
func (*EmailGroupStatusRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{10}
}

func (x *EmailGroupStatusRes) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type EmailGroupSendsPerMinuteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailGroupSid  int64 `protobuf:"varint,2,opt,name=email_group_sid,json=emailGroupSid,proto3" json:"email_group_sid,omitempty"`
	SendsPerMinute int32 `protobuf:"varint,3,opt,name=sends_per_minute,json=sendsPerMinute,proto3" json:"sends_per_minute,omitempty"`
}

func (x *EmailGroupSendsPerMinuteReq) Reset() {
	*x = EmailGroupSendsPerMinuteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailGroupSendsPerMinuteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailGroupSendsPerMinuteReq) ProtoMessage() {}

func (x *EmailGroupSendsPerMinuteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailGroupSendsPerMinuteReq.ProtoReflect.Descriptor instead.
func (*EmailGroupSendsPerMinuteReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{11}
}

func (x *EmailGroupSendsPerMinuteReq) GetEmailGroupSid() int64 {
	if x != nil {
		return x.EmailGroupSid
	}
	return 0
}

func (x *EmailGroupSendsPerMinuteReq) GetSendsPerMinute() int32 {
	if x != nil {
		return x.SendsPerMinute
	}
	return 0
}

type EmailGroupSendsPerMinuteRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *EmailGroupSendsPerMinuteRes) Reset() {
	*x = EmailGroupSendsPerMinuteRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailGroupSendsPerMinuteRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailGroupSendsPerMinuteRes) ProtoMessage() {}

func (x *EmailGroupSendsPerMinuteRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailGroupSendsPerMinuteRes.ProtoReflect.Descriptor instead.
func (*EmailGroupSendsPerMinuteRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{12}
}

func (x *EmailGroupSendsPerMinuteRes) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type EmailGroupScheduleTimesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailGroupSid int64                  `protobuf:"varint,2,opt,name=email_group_sid,json=emailGroupSid,proto3" json:"email_group_sid,omitempty"`
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	StopTime      *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=stop_time,json=stopTime,proto3" json:"stop_time,omitempty"`
}

func (x *EmailGroupScheduleTimesReq) Reset() {
	*x = EmailGroupScheduleTimesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailGroupScheduleTimesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailGroupScheduleTimesReq) ProtoMessage() {}

func (x *EmailGroupScheduleTimesReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailGroupScheduleTimesReq.ProtoReflect.Descriptor instead.
func (*EmailGroupScheduleTimesReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{13}
}

func (x *EmailGroupScheduleTimesReq) GetEmailGroupSid() int64 {
	if x != nil {
		return x.EmailGroupSid
	}
	return 0
}

func (x *EmailGroupScheduleTimesReq) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *EmailGroupScheduleTimesReq) GetStopTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StopTime
	}
	return nil
}

type EmailGroupScheduleTimesRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *EmailGroupScheduleTimesRes) Reset() {
	*x = EmailGroupScheduleTimesRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailGroupScheduleTimesRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailGroupScheduleTimesRes) ProtoMessage() {}

func (x *EmailGroupScheduleTimesRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailGroupScheduleTimesRes.ProtoReflect.Descriptor instead.
func (*EmailGroupScheduleTimesRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{14}
}

func (x *EmailGroupScheduleTimesRes) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type GetAllCustomUnsubscribeLinksReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAllCustomUnsubscribeLinksReq) Reset() {
	*x = GetAllCustomUnsubscribeLinksReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllCustomUnsubscribeLinksReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllCustomUnsubscribeLinksReq) ProtoMessage() {}

func (x *GetAllCustomUnsubscribeLinksReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllCustomUnsubscribeLinksReq.ProtoReflect.Descriptor instead.
func (*GetAllCustomUnsubscribeLinksReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{15}
}

type EmailCustomUnsubscribeLink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailCustomUnsubscribeLinkSid int64                  `protobuf:"varint,1,opt,name=email_custom_unsubscribe_link_sid,json=emailCustomUnsubscribeLinkSid,proto3" json:"email_custom_unsubscribe_link_sid,omitempty"`
	LinkName                      string                 `protobuf:"bytes,3,opt,name=link_name,json=linkName,proto3" json:"link_name,omitempty"`
	LinkUrl                       string                 `protobuf:"bytes,4,opt,name=link_url,json=linkUrl,proto3" json:"link_url,omitempty"`
	Validated                     bool                   `protobuf:"varint,5,opt,name=validated,proto3" json:"validated,omitempty"`
	DateValidated                 *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=date_validated,json=dateValidated,proto3" json:"date_validated,omitempty"`
	LastUpdated                   *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
}

func (x *EmailCustomUnsubscribeLink) Reset() {
	*x = EmailCustomUnsubscribeLink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailCustomUnsubscribeLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailCustomUnsubscribeLink) ProtoMessage() {}

func (x *EmailCustomUnsubscribeLink) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailCustomUnsubscribeLink.ProtoReflect.Descriptor instead.
func (*EmailCustomUnsubscribeLink) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{16}
}

func (x *EmailCustomUnsubscribeLink) GetEmailCustomUnsubscribeLinkSid() int64 {
	if x != nil {
		return x.EmailCustomUnsubscribeLinkSid
	}
	return 0
}

func (x *EmailCustomUnsubscribeLink) GetLinkName() string {
	if x != nil {
		return x.LinkName
	}
	return ""
}

func (x *EmailCustomUnsubscribeLink) GetLinkUrl() string {
	if x != nil {
		return x.LinkUrl
	}
	return ""
}

func (x *EmailCustomUnsubscribeLink) GetValidated() bool {
	if x != nil {
		return x.Validated
	}
	return false
}

func (x *EmailCustomUnsubscribeLink) GetDateValidated() *timestamppb.Timestamp {
	if x != nil {
		return x.DateValidated
	}
	return nil
}

func (x *EmailCustomUnsubscribeLink) GetLastUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdated
	}
	return nil
}

type GetAllCustomUnsubscribeLinksRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailCustomUnsubscribeLink []*EmailCustomUnsubscribeLink `protobuf:"bytes,1,rep,name=email_custom_unsubscribe_link,json=emailCustomUnsubscribeLink,proto3" json:"email_custom_unsubscribe_link,omitempty"`
}

func (x *GetAllCustomUnsubscribeLinksRes) Reset() {
	*x = GetAllCustomUnsubscribeLinksRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllCustomUnsubscribeLinksRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllCustomUnsubscribeLinksRes) ProtoMessage() {}

func (x *GetAllCustomUnsubscribeLinksRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllCustomUnsubscribeLinksRes.ProtoReflect.Descriptor instead.
func (*GetAllCustomUnsubscribeLinksRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{17}
}

func (x *GetAllCustomUnsubscribeLinksRes) GetEmailCustomUnsubscribeLink() []*EmailCustomUnsubscribeLink {
	if x != nil {
		return x.EmailCustomUnsubscribeLink
	}
	return nil
}

type GetAllEmailTemplatesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAllEmailTemplatesReq) Reset() {
	*x = GetAllEmailTemplatesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllEmailTemplatesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllEmailTemplatesReq) ProtoMessage() {}

func (x *GetAllEmailTemplatesReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllEmailTemplatesReq.ProtoReflect.Descriptor instead.
func (*GetAllEmailTemplatesReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{18}
}

type GetAllEmailTemplatesRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailTemplateWithAttachments []*EmailTemplateWithAttachments `protobuf:"bytes,1,rep,name=email_template_with_attachments,json=emailTemplateWithAttachments,proto3" json:"email_template_with_attachments,omitempty"`
}

func (x *GetAllEmailTemplatesRes) Reset() {
	*x = GetAllEmailTemplatesRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllEmailTemplatesRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllEmailTemplatesRes) ProtoMessage() {}

func (x *GetAllEmailTemplatesRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllEmailTemplatesRes.ProtoReflect.Descriptor instead.
func (*GetAllEmailTemplatesRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{19}
}

func (x *GetAllEmailTemplatesRes) GetEmailTemplateWithAttachments() []*EmailTemplateWithAttachments {
	if x != nil {
		return x.EmailTemplateWithAttachments
	}
	return nil
}

type GetEmailTemplateByTemplateSidReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailTemplateSid int64 `protobuf:"varint,2,opt,name=email_template_sid,json=emailTemplateSid,proto3" json:"email_template_sid,omitempty"`
}

func (x *GetEmailTemplateByTemplateSidReq) Reset() {
	*x = GetEmailTemplateByTemplateSidReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEmailTemplateByTemplateSidReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEmailTemplateByTemplateSidReq) ProtoMessage() {}

func (x *GetEmailTemplateByTemplateSidReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEmailTemplateByTemplateSidReq.ProtoReflect.Descriptor instead.
func (*GetEmailTemplateByTemplateSidReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{20}
}

func (x *GetEmailTemplateByTemplateSidReq) GetEmailTemplateSid() int64 {
	if x != nil {
		return x.EmailTemplateSid
	}
	return 0
}

type EmailTemplateWithAttachments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailTemplateSid               int64                             `protobuf:"varint,1,opt,name=email_template_sid,json=emailTemplateSid,proto3" json:"email_template_sid,omitempty"`
	EmailSubject                   string                            `protobuf:"bytes,4,opt,name=email_subject,json=emailSubject,proto3" json:"email_subject,omitempty"`
	EmailBody                      string                            `protobuf:"bytes,5,opt,name=email_body,json=emailBody,proto3" json:"email_body,omitempty"`
	LastUpdated                    *timestamppb.Timestamp            `protobuf:"bytes,6,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	EmailTemplateAttachmentDetails []*EmailTemplateAttachmentDetails `protobuf:"bytes,7,rep,name=email_template_attachment_details,json=emailTemplateAttachmentDetails,proto3" json:"email_template_attachment_details,omitempty"`
}

func (x *EmailTemplateWithAttachments) Reset() {
	*x = EmailTemplateWithAttachments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailTemplateWithAttachments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailTemplateWithAttachments) ProtoMessage() {}

func (x *EmailTemplateWithAttachments) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailTemplateWithAttachments.ProtoReflect.Descriptor instead.
func (*EmailTemplateWithAttachments) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{21}
}

func (x *EmailTemplateWithAttachments) GetEmailTemplateSid() int64 {
	if x != nil {
		return x.EmailTemplateSid
	}
	return 0
}

func (x *EmailTemplateWithAttachments) GetEmailSubject() string {
	if x != nil {
		return x.EmailSubject
	}
	return ""
}

func (x *EmailTemplateWithAttachments) GetEmailBody() string {
	if x != nil {
		return x.EmailBody
	}
	return ""
}

func (x *EmailTemplateWithAttachments) GetLastUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdated
	}
	return nil
}

func (x *EmailTemplateWithAttachments) GetEmailTemplateAttachmentDetails() []*EmailTemplateAttachmentDetails {
	if x != nil {
		return x.EmailTemplateAttachmentDetails
	}
	return nil
}

type EmailTaskMstrDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailTaskSid          int64                   `protobuf:"varint,1,opt,name=email_task_sid,json=emailTaskSid,proto3" json:"email_task_sid,omitempty"`
	EmailGroupSid         int64                   `protobuf:"varint,2,opt,name=email_group_sid,json=emailGroupSid,proto3" json:"email_group_sid,omitempty"`
	DeliveryStatus        int64                   `protobuf:"varint,3,opt,name=delivery_status,json=deliveryStatus,proto3" json:"delivery_status,omitempty"`
	DeliveryStatusMessage string                  `protobuf:"bytes,4,opt,name=delivery_status_message,json=deliveryStatusMessage,proto3" json:"delivery_status_message,omitempty"`
	Data                  string                  `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	Cost                  float64                 `protobuf:"fixed64,6,opt,name=cost,proto3" json:"cost,omitempty"`
	MessageId             *wrapperspb.StringValue `protobuf:"bytes,7,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	EmailedTime           *timestamppb.Timestamp  `protobuf:"bytes,8,opt,name=emailed_time,json=emailedTime,proto3" json:"emailed_time,omitempty"`
	Status                int64                   `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`
	EmailColName          *wrapperspb.StringValue `protobuf:"bytes,10,opt,name=email_col_name,json=emailColName,proto3" json:"email_col_name,omitempty"`
}

func (x *EmailTaskMstrDetails) Reset() {
	*x = EmailTaskMstrDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailTaskMstrDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailTaskMstrDetails) ProtoMessage() {}

func (x *EmailTaskMstrDetails) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailTaskMstrDetails.ProtoReflect.Descriptor instead.
func (*EmailTaskMstrDetails) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{22}
}

func (x *EmailTaskMstrDetails) GetEmailTaskSid() int64 {
	if x != nil {
		return x.EmailTaskSid
	}
	return 0
}

func (x *EmailTaskMstrDetails) GetEmailGroupSid() int64 {
	if x != nil {
		return x.EmailGroupSid
	}
	return 0
}

func (x *EmailTaskMstrDetails) GetDeliveryStatus() int64 {
	if x != nil {
		return x.DeliveryStatus
	}
	return 0
}

func (x *EmailTaskMstrDetails) GetDeliveryStatusMessage() string {
	if x != nil {
		return x.DeliveryStatusMessage
	}
	return ""
}

func (x *EmailTaskMstrDetails) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *EmailTaskMstrDetails) GetCost() float64 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *EmailTaskMstrDetails) GetMessageId() *wrapperspb.StringValue {
	if x != nil {
		return x.MessageId
	}
	return nil
}

func (x *EmailTaskMstrDetails) GetEmailedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EmailedTime
	}
	return nil
}

func (x *EmailTaskMstrDetails) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *EmailTaskMstrDetails) GetEmailColName() *wrapperspb.StringValue {
	if x != nil {
		return x.EmailColName
	}
	return nil
}

// response for outbound email group search details
type EmailGroupSearchDetailsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// outbound email group id
	EmailGroupSid int64 `protobuf:"varint,1,opt,name=email_group_sid,json=emailGroupSid,proto3" json:"email_group_sid,omitempty"`
	// outbound email message id
	EmailMessageSid int64 `protobuf:"varint,4,opt,name=email_message_sid,json=emailMessageSid,proto3" json:"email_message_sid,omitempty"`
	// outbound email group name
	Name string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	// outbound email group scheduled start time
	StartTime *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// outbound email group scheduled stop time
	StopTime *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=stop_time,json=stopTime,proto3" json:"stop_time,omitempty"`
	// pacing count per miniute
	SendsPerMinute int64 `protobuf:"varint,8,opt,name=sends_per_minute,json=sendsPerMinute,proto3" json:"sends_per_minute,omitempty"`
	// outbound email group status
	Status commons.EmailStatus `protobuf:"varint,9,opt,name=status,proto3,enum=api.commons.EmailStatus" json:"status,omitempty"`
	// total cost for the group
	TotalCost float64 `protobuf:"fixed64,10,opt,name=total_cost,json=totalCost,proto3" json:"total_cost,omitempty"`
	// from email address used for the outgoing email
	FromAddress string `protobuf:"bytes,11,opt,name=from_address,json=fromAddress,proto3" json:"from_address,omitempty"`
	// stored email address column name
	EmailColName *wrapperspb.StringValue `protobuf:"bytes,12,opt,name=email_col_name,json=emailColName,proto3" json:"email_col_name,omitempty"`
	// total number of scheduled emails for the group
	TotalScheduled int64 `protobuf:"varint,13,opt,name=total_scheduled,json=totalScheduled,proto3" json:"total_scheduled,omitempty"`
	// total number of completed emails for the group
	TotalCompleted int64 `protobuf:"varint,14,opt,name=total_completed,json=totalCompleted,proto3" json:"total_completed,omitempty"`
	// contact group sid as a string value
	ContactGroupSidStr *wrapperspb.StringValue `protobuf:"bytes,15,opt,name=contact_group_sid_str,json=contactGroupSidStr,proto3" json:"contact_group_sid_str,omitempty"`
	// contact group sid number
	ContactGroupSid int64 `protobuf:"varint,16,opt,name=contact_group_sid,json=contactGroupSid,proto3" json:"contact_group_sid,omitempty"`
	// client name
	ClientName string `protobuf:"bytes,17,opt,name=client_name,json=clientName,proto3" json:"client_name,omitempty"`
	// creation date
	DateCreated *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=date_created,json=dateCreated,proto3" json:"date_created,omitempty"`
	// generated email group id
	EmailGroupId *wrapperspb.StringValue `protobuf:"bytes,19,opt,name=email_group_id,json=emailGroupId,proto3" json:"email_group_id,omitempty"`
	// description of the email group
	Description string `protobuf:"bytes,21,opt,name=description,proto3" json:"description,omitempty"`
	// sla and timeouts
	SlaTimeouts *commons.SLATimeouts `protobuf:"bytes,22,opt,name=sla_timeouts,json=slaTimeouts,proto3" json:"sla_timeouts,omitempty"`
}

func (x *EmailGroupSearchDetailsRes) Reset() {
	*x = EmailGroupSearchDetailsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailGroupSearchDetailsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailGroupSearchDetailsRes) ProtoMessage() {}

func (x *EmailGroupSearchDetailsRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailGroupSearchDetailsRes.ProtoReflect.Descriptor instead.
func (*EmailGroupSearchDetailsRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{23}
}

func (x *EmailGroupSearchDetailsRes) GetEmailGroupSid() int64 {
	if x != nil {
		return x.EmailGroupSid
	}
	return 0
}

func (x *EmailGroupSearchDetailsRes) GetEmailMessageSid() int64 {
	if x != nil {
		return x.EmailMessageSid
	}
	return 0
}

func (x *EmailGroupSearchDetailsRes) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EmailGroupSearchDetailsRes) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *EmailGroupSearchDetailsRes) GetStopTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StopTime
	}
	return nil
}

func (x *EmailGroupSearchDetailsRes) GetSendsPerMinute() int64 {
	if x != nil {
		return x.SendsPerMinute
	}
	return 0
}

func (x *EmailGroupSearchDetailsRes) GetStatus() commons.EmailStatus {
	if x != nil {
		return x.Status
	}
	return commons.EmailStatus(0)
}

func (x *EmailGroupSearchDetailsRes) GetTotalCost() float64 {
	if x != nil {
		return x.TotalCost
	}
	return 0
}

func (x *EmailGroupSearchDetailsRes) GetFromAddress() string {
	if x != nil {
		return x.FromAddress
	}
	return ""
}

func (x *EmailGroupSearchDetailsRes) GetEmailColName() *wrapperspb.StringValue {
	if x != nil {
		return x.EmailColName
	}
	return nil
}

func (x *EmailGroupSearchDetailsRes) GetTotalScheduled() int64 {
	if x != nil {
		return x.TotalScheduled
	}
	return 0
}

func (x *EmailGroupSearchDetailsRes) GetTotalCompleted() int64 {
	if x != nil {
		return x.TotalCompleted
	}
	return 0
}

func (x *EmailGroupSearchDetailsRes) GetContactGroupSidStr() *wrapperspb.StringValue {
	if x != nil {
		return x.ContactGroupSidStr
	}
	return nil
}

func (x *EmailGroupSearchDetailsRes) GetContactGroupSid() int64 {
	if x != nil {
		return x.ContactGroupSid
	}
	return 0
}

func (x *EmailGroupSearchDetailsRes) GetClientName() string {
	if x != nil {
		return x.ClientName
	}
	return ""
}

func (x *EmailGroupSearchDetailsRes) GetDateCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.DateCreated
	}
	return nil
}

func (x *EmailGroupSearchDetailsRes) GetEmailGroupId() *wrapperspb.StringValue {
	if x != nil {
		return x.EmailGroupId
	}
	return nil
}

func (x *EmailGroupSearchDetailsRes) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *EmailGroupSearchDetailsRes) GetSlaTimeouts() *commons.SLATimeouts {
	if x != nil {
		return x.SlaTimeouts
	}
	return nil
}

type EmailGroupSearchReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SearchFrom *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=search_from,json=searchFrom,proto3" json:"search_from,omitempty"`
	SearchTo   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=search_to,json=searchTo,proto3" json:"search_to,omitempty"`
	StatusStr  string                 `protobuf:"bytes,4,opt,name=status_str,json=statusStr,proto3" json:"status_str,omitempty"`
	Name       string                 `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *EmailGroupSearchReq) Reset() {
	*x = EmailGroupSearchReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailGroupSearchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailGroupSearchReq) ProtoMessage() {}

func (x *EmailGroupSearchReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailGroupSearchReq.ProtoReflect.Descriptor instead.
func (*EmailGroupSearchReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{24}
}

func (x *EmailGroupSearchReq) GetSearchFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.SearchFrom
	}
	return nil
}

func (x *EmailGroupSearchReq) GetSearchTo() *timestamppb.Timestamp {
	if x != nil {
		return x.SearchTo
	}
	return nil
}

func (x *EmailGroupSearchReq) GetStatusStr() string {
	if x != nil {
		return x.StatusStr
	}
	return ""
}

func (x *EmailGroupSearchReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type EmailGroupSearchRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailGroupSearchDetailsRes []*EmailGroupSearchDetailsRes `protobuf:"bytes,1,rep,name=email_group_search_details_res,json=emailGroupSearchDetailsRes,proto3" json:"email_group_search_details_res,omitempty"`
}

func (x *EmailGroupSearchRes) Reset() {
	*x = EmailGroupSearchRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailGroupSearchRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailGroupSearchRes) ProtoMessage() {}

func (x *EmailGroupSearchRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailGroupSearchRes.ProtoReflect.Descriptor instead.
func (*EmailGroupSearchRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{25}
}

func (x *EmailGroupSearchRes) GetEmailGroupSearchDetailsRes() []*EmailGroupSearchDetailsRes {
	if x != nil {
		return x.EmailGroupSearchDetailsRes
	}
	return nil
}

type GetEmailGroupsByGroupSidsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailGroupSidsArr []int64 `protobuf:"varint,2,rep,packed,name=email_group_sids_arr,json=emailGroupSidsArr,proto3" json:"email_group_sids_arr,omitempty"`
}

func (x *GetEmailGroupsByGroupSidsReq) Reset() {
	*x = GetEmailGroupsByGroupSidsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEmailGroupsByGroupSidsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEmailGroupsByGroupSidsReq) ProtoMessage() {}

func (x *GetEmailGroupsByGroupSidsReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEmailGroupsByGroupSidsReq.ProtoReflect.Descriptor instead.
func (*GetEmailGroupsByGroupSidsReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{26}
}

func (x *GetEmailGroupsByGroupSidsReq) GetEmailGroupSidsArr() []int64 {
	if x != nil {
		return x.EmailGroupSidsArr
	}
	return nil
}

type GetEmailGroupsByGroupSidsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailGroupSearchDetailsRes []*EmailGroupSearchDetailsRes `protobuf:"bytes,1,rep,name=email_group_search_details_res,json=emailGroupSearchDetailsRes,proto3" json:"email_group_search_details_res,omitempty"`
}

func (x *GetEmailGroupsByGroupSidsRes) Reset() {
	*x = GetEmailGroupsByGroupSidsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEmailGroupsByGroupSidsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEmailGroupsByGroupSidsRes) ProtoMessage() {}

func (x *GetEmailGroupsByGroupSidsRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEmailGroupsByGroupSidsRes.ProtoReflect.Descriptor instead.
func (*GetEmailGroupsByGroupSidsRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{27}
}

func (x *GetEmailGroupsByGroupSidsRes) GetEmailGroupSearchDetailsRes() []*EmailGroupSearchDetailsRes {
	if x != nil {
		return x.EmailGroupSearchDetailsRes
	}
	return nil
}

type GetEmailGroupByGroupSidReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailGroupSid int64 `protobuf:"varint,2,opt,name=email_group_sid,json=emailGroupSid,proto3" json:"email_group_sid,omitempty"`
}

func (x *GetEmailGroupByGroupSidReq) Reset() {
	*x = GetEmailGroupByGroupSidReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEmailGroupByGroupSidReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEmailGroupByGroupSidReq) ProtoMessage() {}

func (x *GetEmailGroupByGroupSidReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEmailGroupByGroupSidReq.ProtoReflect.Descriptor instead.
func (*GetEmailGroupByGroupSidReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{28}
}

func (x *GetEmailGroupByGroupSidReq) GetEmailGroupSid() int64 {
	if x != nil {
		return x.EmailGroupSid
	}
	return 0
}

type EmailGroupDetailsWithAttachments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// outbound email group id
	EmailGroupSid int64 `protobuf:"varint,1,opt,name=email_group_sid,json=emailGroupSid,proto3" json:"email_group_sid,omitempty"`
	// outbound email message id
	EmailMessageSid int64 `protobuf:"varint,4,opt,name=email_message_sid,json=emailMessageSid,proto3" json:"email_message_sid,omitempty"`
	// outbound email group name
	Name string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	// outbound email group scheduled start time
	StartTime *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// outbound email group scheduled stop time
	StopTime *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=stop_time,json=stopTime,proto3" json:"stop_time,omitempty"`
	// pacing count per miniute
	SendsPerMinute int64 `protobuf:"varint,8,opt,name=sends_per_minute,json=sendsPerMinute,proto3" json:"sends_per_minute,omitempty"`
	// outbound email group status
	Status commons.EmailStatus `protobuf:"varint,9,opt,name=status,proto3,enum=api.commons.EmailStatus" json:"status,omitempty"`
	// total cost for the group
	TotalCost float64 `protobuf:"fixed64,10,opt,name=total_cost,json=totalCost,proto3" json:"total_cost,omitempty"`
	// from email address used for the outgoing email
	FromAddress string `protobuf:"bytes,11,opt,name=from_address,json=fromAddress,proto3" json:"from_address,omitempty"`
	// stored email address column name
	EmailColName *wrapperspb.StringValue `protobuf:"bytes,12,opt,name=email_col_name,json=emailColName,proto3" json:"email_col_name,omitempty"`
	// total number of scheduled emails for the group
	TotalScheduled int64 `protobuf:"varint,13,opt,name=total_scheduled,json=totalScheduled,proto3" json:"total_scheduled,omitempty"`
	// total number of completed emails for the group
	TotalCompleted int64 `protobuf:"varint,14,opt,name=total_completed,json=totalCompleted,proto3" json:"total_completed,omitempty"`
	// contact group sid as a string value
	ContactGroupSidStr *wrapperspb.StringValue `protobuf:"bytes,15,opt,name=contact_group_sid_str,json=contactGroupSidStr,proto3" json:"contact_group_sid_str,omitempty"`
	// contact group sid number
	ContactGroupSid int64 `protobuf:"varint,16,opt,name=contact_group_sid,json=contactGroupSid,proto3" json:"contact_group_sid,omitempty"`
	// client name
	ClientName string `protobuf:"bytes,17,opt,name=client_name,json=clientName,proto3" json:"client_name,omitempty"`
	// creation date
	DateCreated *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=date_created,json=dateCreated,proto3" json:"date_created,omitempty"`
	// generated email group id
	EmailGroupId *wrapperspb.StringValue `protobuf:"bytes,19,opt,name=email_group_id,json=emailGroupId,proto3" json:"email_group_id,omitempty"`
	// description of the email group
	Description string `protobuf:"bytes,21,opt,name=description,proto3" json:"description,omitempty"`
	// email message subject
	EmailSubject string `protobuf:"bytes,22,opt,name=email_subject,json=emailSubject,proto3" json:"email_subject,omitempty"`
	// email message body contents
	EmailBody string `protobuf:"bytes,23,opt,name=email_body,json=emailBody,proto3" json:"email_body,omitempty"`
	// add all the attachments
	EmailMessageAttachments []*EmailMessageAttachment `protobuf:"bytes,24,rep,name=email_message_attachments,json=emailMessageAttachments,proto3" json:"email_message_attachments,omitempty"`
	// sla and timeouts
	SlaTimeouts *commons.SLATimeouts `protobuf:"bytes,25,opt,name=sla_timeouts,json=slaTimeouts,proto3" json:"sla_timeouts,omitempty"`
}

func (x *EmailGroupDetailsWithAttachments) Reset() {
	*x = EmailGroupDetailsWithAttachments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailGroupDetailsWithAttachments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailGroupDetailsWithAttachments) ProtoMessage() {}

func (x *EmailGroupDetailsWithAttachments) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailGroupDetailsWithAttachments.ProtoReflect.Descriptor instead.
func (*EmailGroupDetailsWithAttachments) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{29}
}

func (x *EmailGroupDetailsWithAttachments) GetEmailGroupSid() int64 {
	if x != nil {
		return x.EmailGroupSid
	}
	return 0
}

func (x *EmailGroupDetailsWithAttachments) GetEmailMessageSid() int64 {
	if x != nil {
		return x.EmailMessageSid
	}
	return 0
}

func (x *EmailGroupDetailsWithAttachments) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EmailGroupDetailsWithAttachments) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *EmailGroupDetailsWithAttachments) GetStopTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StopTime
	}
	return nil
}

func (x *EmailGroupDetailsWithAttachments) GetSendsPerMinute() int64 {
	if x != nil {
		return x.SendsPerMinute
	}
	return 0
}

func (x *EmailGroupDetailsWithAttachments) GetStatus() commons.EmailStatus {
	if x != nil {
		return x.Status
	}
	return commons.EmailStatus(0)
}

func (x *EmailGroupDetailsWithAttachments) GetTotalCost() float64 {
	if x != nil {
		return x.TotalCost
	}
	return 0
}

func (x *EmailGroupDetailsWithAttachments) GetFromAddress() string {
	if x != nil {
		return x.FromAddress
	}
	return ""
}

func (x *EmailGroupDetailsWithAttachments) GetEmailColName() *wrapperspb.StringValue {
	if x != nil {
		return x.EmailColName
	}
	return nil
}

func (x *EmailGroupDetailsWithAttachments) GetTotalScheduled() int64 {
	if x != nil {
		return x.TotalScheduled
	}
	return 0
}

func (x *EmailGroupDetailsWithAttachments) GetTotalCompleted() int64 {
	if x != nil {
		return x.TotalCompleted
	}
	return 0
}

func (x *EmailGroupDetailsWithAttachments) GetContactGroupSidStr() *wrapperspb.StringValue {
	if x != nil {
		return x.ContactGroupSidStr
	}
	return nil
}

func (x *EmailGroupDetailsWithAttachments) GetContactGroupSid() int64 {
	if x != nil {
		return x.ContactGroupSid
	}
	return 0
}

func (x *EmailGroupDetailsWithAttachments) GetClientName() string {
	if x != nil {
		return x.ClientName
	}
	return ""
}

func (x *EmailGroupDetailsWithAttachments) GetDateCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.DateCreated
	}
	return nil
}

func (x *EmailGroupDetailsWithAttachments) GetEmailGroupId() *wrapperspb.StringValue {
	if x != nil {
		return x.EmailGroupId
	}
	return nil
}

func (x *EmailGroupDetailsWithAttachments) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *EmailGroupDetailsWithAttachments) GetEmailSubject() string {
	if x != nil {
		return x.EmailSubject
	}
	return ""
}

func (x *EmailGroupDetailsWithAttachments) GetEmailBody() string {
	if x != nil {
		return x.EmailBody
	}
	return ""
}

func (x *EmailGroupDetailsWithAttachments) GetEmailMessageAttachments() []*EmailMessageAttachment {
	if x != nil {
		return x.EmailMessageAttachments
	}
	return nil
}

func (x *EmailGroupDetailsWithAttachments) GetSlaTimeouts() *commons.SLATimeouts {
	if x != nil {
		return x.SlaTimeouts
	}
	return nil
}

type GetEmailGroupByGroupIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailGroupId string `protobuf:"bytes,2,opt,name=email_group_id,json=emailGroupId,proto3" json:"email_group_id,omitempty"`
}

func (x *GetEmailGroupByGroupIdReq) Reset() {
	*x = GetEmailGroupByGroupIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEmailGroupByGroupIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEmailGroupByGroupIdReq) ProtoMessage() {}

func (x *GetEmailGroupByGroupIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEmailGroupByGroupIdReq.ProtoReflect.Descriptor instead.
func (*GetEmailGroupByGroupIdReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{30}
}

func (x *GetEmailGroupByGroupIdReq) GetEmailGroupId() string {
	if x != nil {
		return x.EmailGroupId
	}
	return ""
}

type GetEmailTasksByGroupSidsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailGroupSidsArr []int64 `protobuf:"varint,2,rep,packed,name=email_group_sids_arr,json=emailGroupSidsArr,proto3" json:"email_group_sids_arr,omitempty"`
}

func (x *GetEmailTasksByGroupSidsReq) Reset() {
	*x = GetEmailTasksByGroupSidsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEmailTasksByGroupSidsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEmailTasksByGroupSidsReq) ProtoMessage() {}

func (x *GetEmailTasksByGroupSidsReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEmailTasksByGroupSidsReq.ProtoReflect.Descriptor instead.
func (*GetEmailTasksByGroupSidsReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{31}
}

func (x *GetEmailTasksByGroupSidsReq) GetEmailGroupSidsArr() []int64 {
	if x != nil {
		return x.EmailGroupSidsArr
	}
	return nil
}

type GetEmailTasksByGroupSidsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailTaskMstrDetails []*EmailTaskMstrDetails `protobuf:"bytes,1,rep,name=email_task_mstr_details,json=emailTaskMstrDetails,proto3" json:"email_task_mstr_details,omitempty"`
}

func (x *GetEmailTasksByGroupSidsRes) Reset() {
	*x = GetEmailTasksByGroupSidsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEmailTasksByGroupSidsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEmailTasksByGroupSidsRes) ProtoMessage() {}

func (x *GetEmailTasksByGroupSidsRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEmailTasksByGroupSidsRes.ProtoReflect.Descriptor instead.
func (*GetEmailTasksByGroupSidsRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{32}
}

func (x *GetEmailTasksByGroupSidsRes) GetEmailTaskMstrDetails() []*EmailTaskMstrDetails {
	if x != nil {
		return x.EmailTaskMstrDetails
	}
	return nil
}

type EmailTemplateAttachmentDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailTemplateAttachmentSid int64  `protobuf:"varint,1,opt,name=email_template_attachment_sid,json=emailTemplateAttachmentSid,proto3" json:"email_template_attachment_sid,omitempty"`
	EmailTemplateSid           int64  `protobuf:"varint,2,opt,name=email_template_sid,json=emailTemplateSid,proto3" json:"email_template_sid,omitempty"`
	FileName                   string `protobuf:"bytes,5,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	FileSize                   int64  `protobuf:"varint,6,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`
	ContentType                string `protobuf:"bytes,7,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	Hash                       string `protobuf:"bytes,8,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *EmailTemplateAttachmentDetails) Reset() {
	*x = EmailTemplateAttachmentDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailTemplateAttachmentDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailTemplateAttachmentDetails) ProtoMessage() {}

func (x *EmailTemplateAttachmentDetails) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailTemplateAttachmentDetails.ProtoReflect.Descriptor instead.
func (*EmailTemplateAttachmentDetails) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{33}
}

func (x *EmailTemplateAttachmentDetails) GetEmailTemplateAttachmentSid() int64 {
	if x != nil {
		return x.EmailTemplateAttachmentSid
	}
	return 0
}

func (x *EmailTemplateAttachmentDetails) GetEmailTemplateSid() int64 {
	if x != nil {
		return x.EmailTemplateSid
	}
	return 0
}

func (x *EmailTemplateAttachmentDetails) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *EmailTemplateAttachmentDetails) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *EmailTemplateAttachmentDetails) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *EmailTemplateAttachmentDetails) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type GetAllEmailTemplateAttachmentRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailTemplateAttachmentDetails []*EmailTemplateAttachmentDetails `protobuf:"bytes,1,rep,name=email_template_attachment_details,json=emailTemplateAttachmentDetails,proto3" json:"email_template_attachment_details,omitempty"`
}

func (x *GetAllEmailTemplateAttachmentRes) Reset() {
	*x = GetAllEmailTemplateAttachmentRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllEmailTemplateAttachmentRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllEmailTemplateAttachmentRes) ProtoMessage() {}

func (x *GetAllEmailTemplateAttachmentRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllEmailTemplateAttachmentRes.ProtoReflect.Descriptor instead.
func (*GetAllEmailTemplateAttachmentRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{34}
}

func (x *GetAllEmailTemplateAttachmentRes) GetEmailTemplateAttachmentDetails() []*EmailTemplateAttachmentDetails {
	if x != nil {
		return x.EmailTemplateAttachmentDetails
	}
	return nil
}

type CreateEmailTemplateAttachmentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailTemplateSid int64  `protobuf:"varint,2,opt,name=email_template_sid,json=emailTemplateSid,proto3" json:"email_template_sid,omitempty"`
	FileName         string `protobuf:"bytes,4,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	FileSize         int64  `protobuf:"varint,5,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`
	ContentType      string `protobuf:"bytes,6,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
}

func (x *CreateEmailTemplateAttachmentReq) Reset() {
	*x = CreateEmailTemplateAttachmentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEmailTemplateAttachmentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEmailTemplateAttachmentReq) ProtoMessage() {}

func (x *CreateEmailTemplateAttachmentReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEmailTemplateAttachmentReq.ProtoReflect.Descriptor instead.
func (*CreateEmailTemplateAttachmentReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{35}
}

func (x *CreateEmailTemplateAttachmentReq) GetEmailTemplateSid() int64 {
	if x != nil {
		return x.EmailTemplateSid
	}
	return 0
}

func (x *CreateEmailTemplateAttachmentReq) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *CreateEmailTemplateAttachmentReq) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *CreateEmailTemplateAttachmentReq) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

type CreateEmailTemplateAttachmentRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailTemplateAttachmentSid int64  `protobuf:"varint,1,opt,name=email_template_attachment_sid,json=emailTemplateAttachmentSid,proto3" json:"email_template_attachment_sid,omitempty"`
	UrlPath                    string `protobuf:"bytes,2,opt,name=url_path,json=urlPath,proto3" json:"url_path,omitempty"`
	GsPath                     string `protobuf:"bytes,3,opt,name=gs_path,json=gsPath,proto3" json:"gs_path,omitempty"`
}

func (x *CreateEmailTemplateAttachmentRes) Reset() {
	*x = CreateEmailTemplateAttachmentRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEmailTemplateAttachmentRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEmailTemplateAttachmentRes) ProtoMessage() {}

func (x *CreateEmailTemplateAttachmentRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEmailTemplateAttachmentRes.ProtoReflect.Descriptor instead.
func (*CreateEmailTemplateAttachmentRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{36}
}

func (x *CreateEmailTemplateAttachmentRes) GetEmailTemplateAttachmentSid() int64 {
	if x != nil {
		return x.EmailTemplateAttachmentSid
	}
	return 0
}

func (x *CreateEmailTemplateAttachmentRes) GetUrlPath() string {
	if x != nil {
		return x.UrlPath
	}
	return ""
}

func (x *CreateEmailTemplateAttachmentRes) GetGsPath() string {
	if x != nil {
		return x.GsPath
	}
	return ""
}

type CopyEmailTemplateWithAttachmentsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailTemplateSid int64  `protobuf:"varint,3,opt,name=email_template_sid,json=emailTemplateSid,proto3" json:"email_template_sid,omitempty"`
	EmailBody        string `protobuf:"bytes,4,opt,name=email_body,json=emailBody,proto3" json:"email_body,omitempty"`
}

func (x *CopyEmailTemplateWithAttachmentsReq) Reset() {
	*x = CopyEmailTemplateWithAttachmentsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CopyEmailTemplateWithAttachmentsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopyEmailTemplateWithAttachmentsReq) ProtoMessage() {}

func (x *CopyEmailTemplateWithAttachmentsReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CopyEmailTemplateWithAttachmentsReq.ProtoReflect.Descriptor instead.
func (*CopyEmailTemplateWithAttachmentsReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{37}
}

func (x *CopyEmailTemplateWithAttachmentsReq) GetEmailTemplateSid() int64 {
	if x != nil {
		return x.EmailTemplateSid
	}
	return 0
}

func (x *CopyEmailTemplateWithAttachmentsReq) GetEmailBody() string {
	if x != nil {
		return x.EmailBody
	}
	return ""
}

type CopyEmailTemplateWithAttachmentsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailTemplateSid int64 `protobuf:"varint,1,opt,name=email_template_sid,json=emailTemplateSid,proto3" json:"email_template_sid,omitempty"`
}

func (x *CopyEmailTemplateWithAttachmentsRes) Reset() {
	*x = CopyEmailTemplateWithAttachmentsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CopyEmailTemplateWithAttachmentsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopyEmailTemplateWithAttachmentsRes) ProtoMessage() {}

func (x *CopyEmailTemplateWithAttachmentsRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CopyEmailTemplateWithAttachmentsRes.ProtoReflect.Descriptor instead.
func (*CopyEmailTemplateWithAttachmentsRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{38}
}

func (x *CopyEmailTemplateWithAttachmentsRes) GetEmailTemplateSid() int64 {
	if x != nil {
		return x.EmailTemplateSid
	}
	return 0
}

type GetEmailMessageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailMessageSid int64 `protobuf:"varint,2,opt,name=email_message_sid,json=emailMessageSid,proto3" json:"email_message_sid,omitempty"`
}

func (x *GetEmailMessageReq) Reset() {
	*x = GetEmailMessageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEmailMessageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEmailMessageReq) ProtoMessage() {}

func (x *GetEmailMessageReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEmailMessageReq.ProtoReflect.Descriptor instead.
func (*GetEmailMessageReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{39}
}

func (x *GetEmailMessageReq) GetEmailMessageSid() int64 {
	if x != nil {
		return x.EmailMessageSid
	}
	return 0
}

type GetEmailMessageRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailMessageSid int64  `protobuf:"varint,1,opt,name=email_message_sid,json=emailMessageSid,proto3" json:"email_message_sid,omitempty"`
	EmailSubject    string `protobuf:"bytes,4,opt,name=email_subject,json=emailSubject,proto3" json:"email_subject,omitempty"`
	EmailBody       string `protobuf:"bytes,5,opt,name=email_body,json=emailBody,proto3" json:"email_body,omitempty"`
}

func (x *GetEmailMessageRes) Reset() {
	*x = GetEmailMessageRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEmailMessageRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEmailMessageRes) ProtoMessage() {}

func (x *GetEmailMessageRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEmailMessageRes.ProtoReflect.Descriptor instead.
func (*GetEmailMessageRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{40}
}

func (x *GetEmailMessageRes) GetEmailMessageSid() int64 {
	if x != nil {
		return x.EmailMessageSid
	}
	return 0
}

func (x *GetEmailMessageRes) GetEmailSubject() string {
	if x != nil {
		return x.EmailSubject
	}
	return ""
}

func (x *GetEmailMessageRes) GetEmailBody() string {
	if x != nil {
		return x.EmailBody
	}
	return ""
}

type ScheduleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailTemplateSid int64                   `protobuf:"varint,2,opt,name=email_template_sid,json=emailTemplateSid,proto3" json:"email_template_sid,omitempty"`
	InitialPace      int64                   `protobuf:"varint,3,opt,name=initial_pace,json=initialPace,proto3" json:"initial_pace,omitempty"`
	SelectedEmailCol string                  `protobuf:"bytes,4,opt,name=selected_email_col,json=selectedEmailCol,proto3" json:"selected_email_col,omitempty"`
	FromAddress      string                  `protobuf:"bytes,5,opt,name=from_address,json=fromAddress,proto3" json:"from_address,omitempty"`
	AllowDuplicates  bool                    `protobuf:"varint,6,opt,name=allow_duplicates,json=allowDuplicates,proto3" json:"allow_duplicates,omitempty"`
	GroupName        string                  `protobuf:"bytes,7,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	ContactGroupSid  int64                   `protobuf:"varint,8,opt,name=contact_group_sid,json=contactGroupSid,proto3" json:"contact_group_sid,omitempty"`
	StartTime        *timestamppb.Timestamp  `protobuf:"bytes,9,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	StopTime         *timestamppb.Timestamp  `protobuf:"bytes,10,opt,name=stop_time,json=stopTime,proto3" json:"stop_time,omitempty"`
	ProjectId        *wrapperspb.StringValue `protobuf:"bytes,11,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// description of the email group
	Description string `protobuf:"bytes,13,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *ScheduleReq) Reset() {
	*x = ScheduleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScheduleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleReq) ProtoMessage() {}

func (x *ScheduleReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleReq.ProtoReflect.Descriptor instead.
func (*ScheduleReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{41}
}

func (x *ScheduleReq) GetEmailTemplateSid() int64 {
	if x != nil {
		return x.EmailTemplateSid
	}
	return 0
}

func (x *ScheduleReq) GetInitialPace() int64 {
	if x != nil {
		return x.InitialPace
	}
	return 0
}

func (x *ScheduleReq) GetSelectedEmailCol() string {
	if x != nil {
		return x.SelectedEmailCol
	}
	return ""
}

func (x *ScheduleReq) GetFromAddress() string {
	if x != nil {
		return x.FromAddress
	}
	return ""
}

func (x *ScheduleReq) GetAllowDuplicates() bool {
	if x != nil {
		return x.AllowDuplicates
	}
	return false
}

func (x *ScheduleReq) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *ScheduleReq) GetContactGroupSid() int64 {
	if x != nil {
		return x.ContactGroupSid
	}
	return 0
}

func (x *ScheduleReq) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *ScheduleReq) GetStopTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StopTime
	}
	return nil
}

func (x *ScheduleReq) GetProjectId() *wrapperspb.StringValue {
	if x != nil {
		return x.ProjectId
	}
	return nil
}

func (x *ScheduleReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type ScheduleRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailGroupSid int64  `protobuf:"varint,1,opt,name=email_group_sid,json=emailGroupSid,proto3" json:"email_group_sid,omitempty"`
	EmailGroupId  string `protobuf:"bytes,2,opt,name=email_group_id,json=emailGroupId,proto3" json:"email_group_id,omitempty"`
}

func (x *ScheduleRes) Reset() {
	*x = ScheduleRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScheduleRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleRes) ProtoMessage() {}

func (x *ScheduleRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleRes.ProtoReflect.Descriptor instead.
func (*ScheduleRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{42}
}

func (x *ScheduleRes) GetEmailGroupSid() int64 {
	if x != nil {
		return x.EmailGroupSid
	}
	return 0
}

func (x *ScheduleRes) GetEmailGroupId() string {
	if x != nil {
		return x.EmailGroupId
	}
	return ""
}

// request to schedule outbound email group
type ScheduleOutboundEmailGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// initial pace
	InitialPace int64 `protobuf:"varint,2,opt,name=initial_pace,json=initialPace,proto3" json:"initial_pace,omitempty"`
	// email column
	SelectedEmailCol string `protobuf:"bytes,3,opt,name=selected_email_col,json=selectedEmailCol,proto3" json:"selected_email_col,omitempty"`
	// from email address
	FromAddress string `protobuf:"bytes,4,opt,name=from_address,json=fromAddress,proto3" json:"from_address,omitempty"`
	// flag to allow duplicate emails
	AllowDuplicates bool `protobuf:"varint,5,opt,name=allow_duplicates,json=allowDuplicates,proto3" json:"allow_duplicates,omitempty"`
	// outbound email group name
	GroupName string `protobuf:"bytes,6,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	// contact group sid
	ContactGroupSid int64 `protobuf:"varint,7,opt,name=contact_group_sid,json=contactGroupSid,proto3" json:"contact_group_sid,omitempty"`
	// start time of the campaign
	StartTime *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// stop time of the campaign
	StopTime *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=stop_time,json=stopTime,proto3" json:"stop_time,omitempty"`
	// assigned project id
	ProjectId *wrapperspb.StringValue `protobuf:"bytes,10,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// description of the email group
	Description string `protobuf:"bytes,12,opt,name=description,proto3" json:"description,omitempty"`
	// email subject
	EmailSubject string `protobuf:"bytes,13,opt,name=email_subject,json=emailSubject,proto3" json:"email_subject,omitempty"`
	// email message
	EmailBody string `protobuf:"bytes,14,opt,name=email_body,json=emailBody,proto3" json:"email_body,omitempty"`
	// email attachments
	EmailMessageAttachmentSids []int64 `protobuf:"varint,15,rep,packed,name=email_message_attachment_sids,json=emailMessageAttachmentSids,proto3" json:"email_message_attachment_sids,omitempty"`
	// sla and timeouts
	SlaTimeouts *commons.SLATimeouts `protobuf:"bytes,16,opt,name=sla_timeouts,json=slaTimeouts,proto3" json:"sla_timeouts,omitempty"`
}

func (x *ScheduleOutboundEmailGroupReq) Reset() {
	*x = ScheduleOutboundEmailGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScheduleOutboundEmailGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleOutboundEmailGroupReq) ProtoMessage() {}

func (x *ScheduleOutboundEmailGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleOutboundEmailGroupReq.ProtoReflect.Descriptor instead.
func (*ScheduleOutboundEmailGroupReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{43}
}

func (x *ScheduleOutboundEmailGroupReq) GetInitialPace() int64 {
	if x != nil {
		return x.InitialPace
	}
	return 0
}

func (x *ScheduleOutboundEmailGroupReq) GetSelectedEmailCol() string {
	if x != nil {
		return x.SelectedEmailCol
	}
	return ""
}

func (x *ScheduleOutboundEmailGroupReq) GetFromAddress() string {
	if x != nil {
		return x.FromAddress
	}
	return ""
}

func (x *ScheduleOutboundEmailGroupReq) GetAllowDuplicates() bool {
	if x != nil {
		return x.AllowDuplicates
	}
	return false
}

func (x *ScheduleOutboundEmailGroupReq) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *ScheduleOutboundEmailGroupReq) GetContactGroupSid() int64 {
	if x != nil {
		return x.ContactGroupSid
	}
	return 0
}

func (x *ScheduleOutboundEmailGroupReq) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *ScheduleOutboundEmailGroupReq) GetStopTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StopTime
	}
	return nil
}

func (x *ScheduleOutboundEmailGroupReq) GetProjectId() *wrapperspb.StringValue {
	if x != nil {
		return x.ProjectId
	}
	return nil
}

func (x *ScheduleOutboundEmailGroupReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ScheduleOutboundEmailGroupReq) GetEmailSubject() string {
	if x != nil {
		return x.EmailSubject
	}
	return ""
}

func (x *ScheduleOutboundEmailGroupReq) GetEmailBody() string {
	if x != nil {
		return x.EmailBody
	}
	return ""
}

func (x *ScheduleOutboundEmailGroupReq) GetEmailMessageAttachmentSids() []int64 {
	if x != nil {
		return x.EmailMessageAttachmentSids
	}
	return nil
}

func (x *ScheduleOutboundEmailGroupReq) GetSlaTimeouts() *commons.SLATimeouts {
	if x != nil {
		return x.SlaTimeouts
	}
	return nil
}

// response to schedule outbound email group
type ScheduleOutboundEmailGroupRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// newly created email group sid
	EmailGroupSid int64 `protobuf:"varint,1,opt,name=email_group_sid,json=emailGroupSid,proto3" json:"email_group_sid,omitempty"`
	// newly created email group id
	EmailGroupId string `protobuf:"bytes,2,opt,name=email_group_id,json=emailGroupId,proto3" json:"email_group_id,omitempty"`
}

func (x *ScheduleOutboundEmailGroupRes) Reset() {
	*x = ScheduleOutboundEmailGroupRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScheduleOutboundEmailGroupRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleOutboundEmailGroupRes) ProtoMessage() {}

func (x *ScheduleOutboundEmailGroupRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleOutboundEmailGroupRes.ProtoReflect.Descriptor instead.
func (*ScheduleOutboundEmailGroupRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{44}
}

func (x *ScheduleOutboundEmailGroupRes) GetEmailGroupSid() int64 {
	if x != nil {
		return x.EmailGroupSid
	}
	return 0
}

func (x *ScheduleOutboundEmailGroupRes) GetEmailGroupId() string {
	if x != nil {
		return x.EmailGroupId
	}
	return ""
}

type EmailMessageDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailMessageSid int64  `protobuf:"varint,1,opt,name=email_message_sid,json=emailMessageSid,proto3" json:"email_message_sid,omitempty"`
	EmailSubject    string `protobuf:"bytes,4,opt,name=email_subject,json=emailSubject,proto3" json:"email_subject,omitempty"`
	EmailBody       string `protobuf:"bytes,5,opt,name=email_body,json=emailBody,proto3" json:"email_body,omitempty"`
}

func (x *EmailMessageDetails) Reset() {
	*x = EmailMessageDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailMessageDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailMessageDetails) ProtoMessage() {}

func (x *EmailMessageDetails) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailMessageDetails.ProtoReflect.Descriptor instead.
func (*EmailMessageDetails) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{45}
}

func (x *EmailMessageDetails) GetEmailMessageSid() int64 {
	if x != nil {
		return x.EmailMessageSid
	}
	return 0
}

func (x *EmailMessageDetails) GetEmailSubject() string {
	if x != nil {
		return x.EmailSubject
	}
	return ""
}

func (x *EmailMessageDetails) GetEmailBody() string {
	if x != nil {
		return x.EmailBody
	}
	return ""
}

type ConnectedInbox struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnectedInboxId       *wrapperspb.StringValue                  `protobuf:"bytes,1,opt,name=connected_inbox_id,json=connectedInboxId,proto3" json:"connected_inbox_id,omitempty"`
	EmailAddress           string                                   `protobuf:"bytes,4,opt,name=email_address,json=emailAddress,proto3" json:"email_address,omitempty"`
	Username               string                                   `protobuf:"bytes,5,opt,name=username,proto3" json:"username,omitempty"`
	Password               string                                   `protobuf:"bytes,6,opt,name=password,proto3" json:"password,omitempty"`
	CheckFrequencyMinutes  int64                                    `protobuf:"varint,7,opt,name=check_frequency_minutes,json=checkFrequencyMinutes,proto3" json:"check_frequency_minutes,omitempty"`
	ServerName             string                                   `protobuf:"bytes,8,opt,name=server_name,json=serverName,proto3" json:"server_name,omitempty"`
	ServerPort             int64                                    `protobuf:"varint,9,opt,name=server_port,json=serverPort,proto3" json:"server_port,omitempty"`
	LastScheduledTime      *timestamppb.Timestamp                   `protobuf:"bytes,10,opt,name=last_scheduled_time,json=lastScheduledTime,proto3" json:"last_scheduled_time,omitempty"`
	LastChecked            *timestamppb.Timestamp                   `protobuf:"bytes,11,opt,name=last_checked,json=lastChecked,proto3" json:"last_checked,omitempty"`
	PurgeThreshold         int64                                    `protobuf:"varint,12,opt,name=purge_threshold,json=purgeThreshold,proto3" json:"purge_threshold,omitempty"`
	LastUpdated            *timestamppb.Timestamp                   `protobuf:"bytes,13,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	NumConsecutiveFailures int32                                    `protobuf:"varint,14,opt,name=num_consecutive_failures,json=numConsecutiveFailures,proto3" json:"num_consecutive_failures,omitempty"`
	LastError              *wrapperspb.StringValue                  `protobuf:"bytes,15,opt,name=last_error,json=lastError,proto3" json:"last_error,omitempty"`
	StandbyErrorTime       *timestamppb.Timestamp                   `protobuf:"bytes,16,opt,name=standby_error_time,json=standbyErrorTime,proto3" json:"standby_error_time,omitempty"`
	MaxMessageSize         int32                                    `protobuf:"varint,17,opt,name=max_message_size,json=maxMessageSize,proto3" json:"max_message_size,omitempty"`
	MaxMessages            int32                                    `protobuf:"varint,18,opt,name=max_messages,json=maxMessages,proto3" json:"max_messages,omitempty"`
	MessageCount           int32                                    `protobuf:"varint,19,opt,name=message_count,json=messageCount,proto3" json:"message_count,omitempty"`
	AuthenticationType     commons.ConnectedInboxAuthenticationType `protobuf:"varint,20,opt,name=authentication_type,json=authenticationType,proto3,enum=api.commons.ConnectedInboxAuthenticationType" json:"authentication_type,omitempty"`
}

func (x *ConnectedInbox) Reset() {
	*x = ConnectedInbox{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectedInbox) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectedInbox) ProtoMessage() {}

func (x *ConnectedInbox) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectedInbox.ProtoReflect.Descriptor instead.
func (*ConnectedInbox) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{46}
}

func (x *ConnectedInbox) GetConnectedInboxId() *wrapperspb.StringValue {
	if x != nil {
		return x.ConnectedInboxId
	}
	return nil
}

func (x *ConnectedInbox) GetEmailAddress() string {
	if x != nil {
		return x.EmailAddress
	}
	return ""
}

func (x *ConnectedInbox) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ConnectedInbox) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *ConnectedInbox) GetCheckFrequencyMinutes() int64 {
	if x != nil {
		return x.CheckFrequencyMinutes
	}
	return 0
}

func (x *ConnectedInbox) GetServerName() string {
	if x != nil {
		return x.ServerName
	}
	return ""
}

func (x *ConnectedInbox) GetServerPort() int64 {
	if x != nil {
		return x.ServerPort
	}
	return 0
}

func (x *ConnectedInbox) GetLastScheduledTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastScheduledTime
	}
	return nil
}

func (x *ConnectedInbox) GetLastChecked() *timestamppb.Timestamp {
	if x != nil {
		return x.LastChecked
	}
	return nil
}

func (x *ConnectedInbox) GetPurgeThreshold() int64 {
	if x != nil {
		return x.PurgeThreshold
	}
	return 0
}

func (x *ConnectedInbox) GetLastUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdated
	}
	return nil
}

func (x *ConnectedInbox) GetNumConsecutiveFailures() int32 {
	if x != nil {
		return x.NumConsecutiveFailures
	}
	return 0
}

func (x *ConnectedInbox) GetLastError() *wrapperspb.StringValue {
	if x != nil {
		return x.LastError
	}
	return nil
}

func (x *ConnectedInbox) GetStandbyErrorTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StandbyErrorTime
	}
	return nil
}

func (x *ConnectedInbox) GetMaxMessageSize() int32 {
	if x != nil {
		return x.MaxMessageSize
	}
	return 0
}

func (x *ConnectedInbox) GetMaxMessages() int32 {
	if x != nil {
		return x.MaxMessages
	}
	return 0
}

func (x *ConnectedInbox) GetMessageCount() int32 {
	if x != nil {
		return x.MessageCount
	}
	return 0
}

func (x *ConnectedInbox) GetAuthenticationType() commons.ConnectedInboxAuthenticationType {
	if x != nil {
		return x.AuthenticationType
	}
	return commons.ConnectedInboxAuthenticationType(0)
}

type CreateInboundEmailTemplateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnectedInboxId string                   `protobuf:"bytes,1,opt,name=connected_inbox_id,json=connectedInboxId,proto3" json:"connected_inbox_id,omitempty"`
	Name             string                   `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Skills           *EmailConversationSkills `protobuf:"bytes,6,opt,name=skills,proto3" json:"skills,omitempty"`
}

func (x *CreateInboundEmailTemplateReq) Reset() {
	*x = CreateInboundEmailTemplateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateInboundEmailTemplateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInboundEmailTemplateReq) ProtoMessage() {}

func (x *CreateInboundEmailTemplateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInboundEmailTemplateReq.ProtoReflect.Descriptor instead.
func (*CreateInboundEmailTemplateReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{47}
}

func (x *CreateInboundEmailTemplateReq) GetConnectedInboxId() string {
	if x != nil {
		return x.ConnectedInboxId
	}
	return ""
}

func (x *CreateInboundEmailTemplateReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateInboundEmailTemplateReq) GetSkills() *EmailConversationSkills {
	if x != nil {
		return x.Skills
	}
	return nil
}

type EmailConversationSkills struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Skills map[string]bool `protobuf:"bytes,1,rep,name=skills,proto3" json:"skills,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *EmailConversationSkills) Reset() {
	*x = EmailConversationSkills{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailConversationSkills) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailConversationSkills) ProtoMessage() {}

func (x *EmailConversationSkills) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailConversationSkills.ProtoReflect.Descriptor instead.
func (*EmailConversationSkills) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{48}
}

func (x *EmailConversationSkills) GetSkills() map[string]bool {
	if x != nil {
		return x.Skills
	}
	return nil
}

type CreateInboundEmailTemplateRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InboundEmailTemplateId *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=inbound_email_template_id,json=inboundEmailTemplateId,proto3" json:"inbound_email_template_id,omitempty"`
}

func (x *CreateInboundEmailTemplateRes) Reset() {
	*x = CreateInboundEmailTemplateRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateInboundEmailTemplateRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInboundEmailTemplateRes) ProtoMessage() {}

func (x *CreateInboundEmailTemplateRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInboundEmailTemplateRes.ProtoReflect.Descriptor instead.
func (*CreateInboundEmailTemplateRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{49}
}

func (x *CreateInboundEmailTemplateRes) GetInboundEmailTemplateId() *wrapperspb.StringValue {
	if x != nil {
		return x.InboundEmailTemplateId
	}
	return nil
}

type UpdateInboundEmailTemplateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InboundEmailTemplateId string                   `protobuf:"bytes,1,opt,name=inbound_email_template_id,json=inboundEmailTemplateId,proto3" json:"inbound_email_template_id,omitempty"`
	ConnectedInboxId       string                   `protobuf:"bytes,2,opt,name=connected_inbox_id,json=connectedInboxId,proto3" json:"connected_inbox_id,omitempty"`
	Name                   string                   `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Skills                 *EmailConversationSkills `protobuf:"bytes,7,opt,name=skills,proto3" json:"skills,omitempty"`
}

func (x *UpdateInboundEmailTemplateReq) Reset() {
	*x = UpdateInboundEmailTemplateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateInboundEmailTemplateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInboundEmailTemplateReq) ProtoMessage() {}

func (x *UpdateInboundEmailTemplateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInboundEmailTemplateReq.ProtoReflect.Descriptor instead.
func (*UpdateInboundEmailTemplateReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{50}
}

func (x *UpdateInboundEmailTemplateReq) GetInboundEmailTemplateId() string {
	if x != nil {
		return x.InboundEmailTemplateId
	}
	return ""
}

func (x *UpdateInboundEmailTemplateReq) GetConnectedInboxId() string {
	if x != nil {
		return x.ConnectedInboxId
	}
	return ""
}

func (x *UpdateInboundEmailTemplateReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateInboundEmailTemplateReq) GetSkills() *EmailConversationSkills {
	if x != nil {
		return x.Skills
	}
	return nil
}

type UpdateInboundEmailTemplateRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *UpdateInboundEmailTemplateRes) Reset() {
	*x = UpdateInboundEmailTemplateRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateInboundEmailTemplateRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInboundEmailTemplateRes) ProtoMessage() {}

func (x *UpdateInboundEmailTemplateRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInboundEmailTemplateRes.ProtoReflect.Descriptor instead.
func (*UpdateInboundEmailTemplateRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{51}
}

func (x *UpdateInboundEmailTemplateRes) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type DeleteInboundEmailTemplateByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InboundEmailTemplateId string `protobuf:"bytes,1,opt,name=inbound_email_template_id,json=inboundEmailTemplateId,proto3" json:"inbound_email_template_id,omitempty"`
}

func (x *DeleteInboundEmailTemplateByIdReq) Reset() {
	*x = DeleteInboundEmailTemplateByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteInboundEmailTemplateByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInboundEmailTemplateByIdReq) ProtoMessage() {}

func (x *DeleteInboundEmailTemplateByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInboundEmailTemplateByIdReq.ProtoReflect.Descriptor instead.
func (*DeleteInboundEmailTemplateByIdReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{52}
}

func (x *DeleteInboundEmailTemplateByIdReq) GetInboundEmailTemplateId() string {
	if x != nil {
		return x.InboundEmailTemplateId
	}
	return ""
}

type DeleteInboundEmailTemplateByIdRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *DeleteInboundEmailTemplateByIdRes) Reset() {
	*x = DeleteInboundEmailTemplateByIdRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteInboundEmailTemplateByIdRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInboundEmailTemplateByIdRes) ProtoMessage() {}

func (x *DeleteInboundEmailTemplateByIdRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInboundEmailTemplateByIdRes.ProtoReflect.Descriptor instead.
func (*DeleteInboundEmailTemplateByIdRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{53}
}

func (x *DeleteInboundEmailTemplateByIdRes) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type InboundEmailTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InboundEmailTemplateId *wrapperspb.StringValue  `protobuf:"bytes,1,opt,name=inbound_email_template_id,json=inboundEmailTemplateId,proto3" json:"inbound_email_template_id,omitempty"`
	ConnectedInboxId       *wrapperspb.StringValue  `protobuf:"bytes,2,opt,name=connected_inbox_id,json=connectedInboxId,proto3" json:"connected_inbox_id,omitempty"`
	Name                   string                   `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	LastUpdated            *timestamppb.Timestamp   `protobuf:"bytes,7,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	Skills                 *EmailConversationSkills `protobuf:"bytes,8,opt,name=skills,proto3" json:"skills,omitempty"`
}

func (x *InboundEmailTemplate) Reset() {
	*x = InboundEmailTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InboundEmailTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InboundEmailTemplate) ProtoMessage() {}

func (x *InboundEmailTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InboundEmailTemplate.ProtoReflect.Descriptor instead.
func (*InboundEmailTemplate) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{54}
}

func (x *InboundEmailTemplate) GetInboundEmailTemplateId() *wrapperspb.StringValue {
	if x != nil {
		return x.InboundEmailTemplateId
	}
	return nil
}

func (x *InboundEmailTemplate) GetConnectedInboxId() *wrapperspb.StringValue {
	if x != nil {
		return x.ConnectedInboxId
	}
	return nil
}

func (x *InboundEmailTemplate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InboundEmailTemplate) GetLastUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdated
	}
	return nil
}

func (x *InboundEmailTemplate) GetSkills() *EmailConversationSkills {
	if x != nil {
		return x.Skills
	}
	return nil
}

type ListInboundEmailTemplatesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListInboundEmailTemplatesReq) Reset() {
	*x = ListInboundEmailTemplatesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInboundEmailTemplatesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInboundEmailTemplatesReq) ProtoMessage() {}

func (x *ListInboundEmailTemplatesReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInboundEmailTemplatesReq.ProtoReflect.Descriptor instead.
func (*ListInboundEmailTemplatesReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{55}
}

type ListInboundEmailTemplatesRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InboundEmailTemplate []*InboundEmailTemplate `protobuf:"bytes,1,rep,name=inbound_email_template,json=inboundEmailTemplate,proto3" json:"inbound_email_template,omitempty"`
}

func (x *ListInboundEmailTemplatesRes) Reset() {
	*x = ListInboundEmailTemplatesRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInboundEmailTemplatesRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInboundEmailTemplatesRes) ProtoMessage() {}

func (x *ListInboundEmailTemplatesRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInboundEmailTemplatesRes.ProtoReflect.Descriptor instead.
func (*ListInboundEmailTemplatesRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{56}
}

func (x *ListInboundEmailTemplatesRes) GetInboundEmailTemplate() []*InboundEmailTemplate {
	if x != nil {
		return x.InboundEmailTemplate
	}
	return nil
}

type GetInboundEmailTemplateByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InboundEmailTemplateId string `protobuf:"bytes,3,opt,name=inbound_email_template_id,json=inboundEmailTemplateId,proto3" json:"inbound_email_template_id,omitempty"`
}

func (x *GetInboundEmailTemplateByIdReq) Reset() {
	*x = GetInboundEmailTemplateByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInboundEmailTemplateByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInboundEmailTemplateByIdReq) ProtoMessage() {}

func (x *GetInboundEmailTemplateByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInboundEmailTemplateByIdReq.ProtoReflect.Descriptor instead.
func (*GetInboundEmailTemplateByIdReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{57}
}

func (x *GetInboundEmailTemplateByIdReq) GetInboundEmailTemplateId() string {
	if x != nil {
		return x.InboundEmailTemplateId
	}
	return ""
}

type UpdateInboundEmailGroupStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InboundEmailGroupId string                     `protobuf:"bytes,3,opt,name=inbound_email_group_id,json=inboundEmailGroupId,proto3" json:"inbound_email_group_id,omitempty"`
	Status              commons.EmailIBGroupStatus `protobuf:"varint,4,opt,name=status,proto3,enum=api.commons.EmailIBGroupStatus" json:"status,omitempty"`
}

func (x *UpdateInboundEmailGroupStatusReq) Reset() {
	*x = UpdateInboundEmailGroupStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateInboundEmailGroupStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInboundEmailGroupStatusReq) ProtoMessage() {}

func (x *UpdateInboundEmailGroupStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInboundEmailGroupStatusReq.ProtoReflect.Descriptor instead.
func (*UpdateInboundEmailGroupStatusReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{58}
}

func (x *UpdateInboundEmailGroupStatusReq) GetInboundEmailGroupId() string {
	if x != nil {
		return x.InboundEmailGroupId
	}
	return ""
}

func (x *UpdateInboundEmailGroupStatusReq) GetStatus() commons.EmailIBGroupStatus {
	if x != nil {
		return x.Status
	}
	return commons.EmailIBGroupStatus(0)
}

type UpdateInboundEmailGroupStatusRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *UpdateInboundEmailGroupStatusRes) Reset() {
	*x = UpdateInboundEmailGroupStatusRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateInboundEmailGroupStatusRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInboundEmailGroupStatusRes) ProtoMessage() {}

func (x *UpdateInboundEmailGroupStatusRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInboundEmailGroupStatusRes.ProtoReflect.Descriptor instead.
func (*UpdateInboundEmailGroupStatusRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{59}
}

func (x *UpdateInboundEmailGroupStatusRes) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type StopInboundEmailGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InboundEmailGroupId string `protobuf:"bytes,3,opt,name=inbound_email_group_id,json=inboundEmailGroupId,proto3" json:"inbound_email_group_id,omitempty"`
}

func (x *StopInboundEmailGroupReq) Reset() {
	*x = StopInboundEmailGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopInboundEmailGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopInboundEmailGroupReq) ProtoMessage() {}

func (x *StopInboundEmailGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopInboundEmailGroupReq.ProtoReflect.Descriptor instead.
func (*StopInboundEmailGroupReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{60}
}

func (x *StopInboundEmailGroupReq) GetInboundEmailGroupId() string {
	if x != nil {
		return x.InboundEmailGroupId
	}
	return ""
}

type StopInboundEmailGroupRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *StopInboundEmailGroupRes) Reset() {
	*x = StopInboundEmailGroupRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopInboundEmailGroupRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopInboundEmailGroupRes) ProtoMessage() {}

func (x *StopInboundEmailGroupRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopInboundEmailGroupRes.ProtoReflect.Descriptor instead.
func (*StopInboundEmailGroupRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{61}
}

func (x *StopInboundEmailGroupRes) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type StopAllInboundEmailGroupsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InboundEmailGroupIds []string `protobuf:"bytes,3,rep,name=inbound_email_group_ids,json=inboundEmailGroupIds,proto3" json:"inbound_email_group_ids,omitempty"`
}

func (x *StopAllInboundEmailGroupsReq) Reset() {
	*x = StopAllInboundEmailGroupsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopAllInboundEmailGroupsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopAllInboundEmailGroupsReq) ProtoMessage() {}

func (x *StopAllInboundEmailGroupsReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopAllInboundEmailGroupsReq.ProtoReflect.Descriptor instead.
func (*StopAllInboundEmailGroupsReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{62}
}

func (x *StopAllInboundEmailGroupsReq) GetInboundEmailGroupIds() []string {
	if x != nil {
		return x.InboundEmailGroupIds
	}
	return nil
}

type StopAllOutboundEmailGroupsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OutboundEmailGroupIds []string `protobuf:"bytes,3,rep,name=outbound_email_group_ids,json=outboundEmailGroupIds,proto3" json:"outbound_email_group_ids,omitempty"`
}

func (x *StopAllOutboundEmailGroupsReq) Reset() {
	*x = StopAllOutboundEmailGroupsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopAllOutboundEmailGroupsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopAllOutboundEmailGroupsReq) ProtoMessage() {}

func (x *StopAllOutboundEmailGroupsReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopAllOutboundEmailGroupsReq.ProtoReflect.Descriptor instead.
func (*StopAllOutboundEmailGroupsReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{63}
}

func (x *StopAllOutboundEmailGroupsReq) GetOutboundEmailGroupIds() []string {
	if x != nil {
		return x.OutboundEmailGroupIds
	}
	return nil
}

type StopAllOutboundEmailGroupsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *StopAllOutboundEmailGroupsRes) Reset() {
	*x = StopAllOutboundEmailGroupsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopAllOutboundEmailGroupsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopAllOutboundEmailGroupsRes) ProtoMessage() {}

func (x *StopAllOutboundEmailGroupsRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopAllOutboundEmailGroupsRes.ProtoReflect.Descriptor instead.
func (*StopAllOutboundEmailGroupsRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{64}
}

func (x *StopAllOutboundEmailGroupsRes) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type InboundEmailGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// inbound email group uuid
	InboundEmailGroupId *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=inbound_email_group_id,json=inboundEmailGroupId,proto3" json:"inbound_email_group_id,omitempty"`
	// connected email inbox server details
	ConnectedInboxId *wrapperspb.StringValue `protobuf:"bytes,4,opt,name=connected_inbox_id,json=connectedInboxId,proto3" json:"connected_inbox_id,omitempty"`
	// inbound email group status
	Status commons.EmailIBGroupStatus `protobuf:"varint,5,opt,name=status,proto3,enum=api.commons.EmailIBGroupStatus" json:"status,omitempty"`
	// time when inbound email group needs to be started
	StartTime *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// time when inbound email group needs to be stopped
	StopTime *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=stop_time,json=stopTime,proto3" json:"stop_time,omitempty"`
	// total group cost
	TotalCost float64 `protobuf:"fixed64,8,opt,name=total_cost,json=totalCost,proto3" json:"total_cost,omitempty"`
	// inbound email group name
	Name string `protobuf:"bytes,9,opt,name=name,proto3" json:"name,omitempty"`
	// total email messages count
	MessageCount int32 `protobuf:"varint,10,opt,name=message_count,json=messageCount,proto3" json:"message_count,omitempty"`
	// inbound email template id
	InboundEmailTemplateId *wrapperspb.StringValue `protobuf:"bytes,11,opt,name=inbound_email_template_id,json=inboundEmailTemplateId,proto3" json:"inbound_email_template_id,omitempty"`
	// message count for today
	TodaysMessageCount int32 `protobuf:"varint,12,opt,name=todays_message_count,json=todaysMessageCount,proto3" json:"todays_message_count,omitempty"`
	// agent conversation skills
	Skills *EmailConversationSkills `protobuf:"bytes,15,opt,name=skills,proto3" json:"skills,omitempty"`
	// description of the inbound email group
	Description string `protobuf:"bytes,16,opt,name=description,proto3" json:"description,omitempty"`
	// sla and timeouts
	SlaTimeouts *commons.SLATimeouts `protobuf:"bytes,17,opt,name=sla_timeouts,json=slaTimeouts,proto3" json:"sla_timeouts,omitempty"`
}

func (x *InboundEmailGroup) Reset() {
	*x = InboundEmailGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InboundEmailGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InboundEmailGroup) ProtoMessage() {}

func (x *InboundEmailGroup) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InboundEmailGroup.ProtoReflect.Descriptor instead.
func (*InboundEmailGroup) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{65}
}

func (x *InboundEmailGroup) GetInboundEmailGroupId() *wrapperspb.StringValue {
	if x != nil {
		return x.InboundEmailGroupId
	}
	return nil
}

func (x *InboundEmailGroup) GetConnectedInboxId() *wrapperspb.StringValue {
	if x != nil {
		return x.ConnectedInboxId
	}
	return nil
}

func (x *InboundEmailGroup) GetStatus() commons.EmailIBGroupStatus {
	if x != nil {
		return x.Status
	}
	return commons.EmailIBGroupStatus(0)
}

func (x *InboundEmailGroup) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *InboundEmailGroup) GetStopTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StopTime
	}
	return nil
}

func (x *InboundEmailGroup) GetTotalCost() float64 {
	if x != nil {
		return x.TotalCost
	}
	return 0
}

func (x *InboundEmailGroup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InboundEmailGroup) GetMessageCount() int32 {
	if x != nil {
		return x.MessageCount
	}
	return 0
}

func (x *InboundEmailGroup) GetInboundEmailTemplateId() *wrapperspb.StringValue {
	if x != nil {
		return x.InboundEmailTemplateId
	}
	return nil
}

func (x *InboundEmailGroup) GetTodaysMessageCount() int32 {
	if x != nil {
		return x.TodaysMessageCount
	}
	return 0
}

func (x *InboundEmailGroup) GetSkills() *EmailConversationSkills {
	if x != nil {
		return x.Skills
	}
	return nil
}

func (x *InboundEmailGroup) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *InboundEmailGroup) GetSlaTimeouts() *commons.SLATimeouts {
	if x != nil {
		return x.SlaTimeouts
	}
	return nil
}

// Pure Inbound email group details
type PureInboundEmailGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// inbound email group uuid
	InboundEmailGroupId *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=inbound_email_group_id,json=inboundEmailGroupId,proto3" json:"inbound_email_group_id,omitempty"`
	// connected email inbox server details
	ConnectedInboxId *wrapperspb.StringValue `protobuf:"bytes,4,opt,name=connected_inbox_id,json=connectedInboxId,proto3" json:"connected_inbox_id,omitempty"`
	// inbound email group status
	Status commons.EmailIBGroupStatus `protobuf:"varint,5,opt,name=status,proto3,enum=api.commons.EmailIBGroupStatus" json:"status,omitempty"`
	// time when inbound email group needs to be started
	StartTime *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// time when inbound email group needs to be stopped
	StopTime *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=stop_time,json=stopTime,proto3" json:"stop_time,omitempty"`
	// total group cost
	TotalCost float64 `protobuf:"fixed64,8,opt,name=total_cost,json=totalCost,proto3" json:"total_cost,omitempty"`
	// inbound email group name
	Name string `protobuf:"bytes,9,opt,name=name,proto3" json:"name,omitempty"`
	// total email messages count
	MessageCount int32 `protobuf:"varint,10,opt,name=message_count,json=messageCount,proto3" json:"message_count,omitempty"`
	// inbound email template id
	InboundEmailTemplateId *wrapperspb.StringValue `protobuf:"bytes,11,opt,name=inbound_email_template_id,json=inboundEmailTemplateId,proto3" json:"inbound_email_template_id,omitempty"`
	// message count for today
	TodaysMessageCount int32 `protobuf:"varint,12,opt,name=todays_message_count,json=todaysMessageCount,proto3" json:"todays_message_count,omitempty"`
	// agent conversation skills
	Skills *EmailConversationSkills `protobuf:"bytes,14,opt,name=skills,proto3" json:"skills,omitempty"`
	// description of the inbound email group
	Description string `protobuf:"bytes,15,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *PureInboundEmailGroup) Reset() {
	*x = PureInboundEmailGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PureInboundEmailGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PureInboundEmailGroup) ProtoMessage() {}

func (x *PureInboundEmailGroup) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PureInboundEmailGroup.ProtoReflect.Descriptor instead.
func (*PureInboundEmailGroup) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{66}
}

func (x *PureInboundEmailGroup) GetInboundEmailGroupId() *wrapperspb.StringValue {
	if x != nil {
		return x.InboundEmailGroupId
	}
	return nil
}

func (x *PureInboundEmailGroup) GetConnectedInboxId() *wrapperspb.StringValue {
	if x != nil {
		return x.ConnectedInboxId
	}
	return nil
}

func (x *PureInboundEmailGroup) GetStatus() commons.EmailIBGroupStatus {
	if x != nil {
		return x.Status
	}
	return commons.EmailIBGroupStatus(0)
}

func (x *PureInboundEmailGroup) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *PureInboundEmailGroup) GetStopTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StopTime
	}
	return nil
}

func (x *PureInboundEmailGroup) GetTotalCost() float64 {
	if x != nil {
		return x.TotalCost
	}
	return 0
}

func (x *PureInboundEmailGroup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PureInboundEmailGroup) GetMessageCount() int32 {
	if x != nil {
		return x.MessageCount
	}
	return 0
}

func (x *PureInboundEmailGroup) GetInboundEmailTemplateId() *wrapperspb.StringValue {
	if x != nil {
		return x.InboundEmailTemplateId
	}
	return nil
}

func (x *PureInboundEmailGroup) GetTodaysMessageCount() int32 {
	if x != nil {
		return x.TodaysMessageCount
	}
	return 0
}

func (x *PureInboundEmailGroup) GetSkills() *EmailConversationSkills {
	if x != nil {
		return x.Skills
	}
	return nil
}

func (x *PureInboundEmailGroup) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type PureInboundEmailGroupSearchReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SearchFrom *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=search_from,json=searchFrom,proto3" json:"search_from,omitempty"`
	SearchTo   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=search_to,json=searchTo,proto3" json:"search_to,omitempty"`
	StatusStr  string                 `protobuf:"bytes,5,opt,name=status_str,json=statusStr,proto3" json:"status_str,omitempty"`
	Name       string                 `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *PureInboundEmailGroupSearchReq) Reset() {
	*x = PureInboundEmailGroupSearchReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PureInboundEmailGroupSearchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PureInboundEmailGroupSearchReq) ProtoMessage() {}

func (x *PureInboundEmailGroupSearchReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PureInboundEmailGroupSearchReq.ProtoReflect.Descriptor instead.
func (*PureInboundEmailGroupSearchReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{67}
}

func (x *PureInboundEmailGroupSearchReq) GetSearchFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.SearchFrom
	}
	return nil
}

func (x *PureInboundEmailGroupSearchReq) GetSearchTo() *timestamppb.Timestamp {
	if x != nil {
		return x.SearchTo
	}
	return nil
}

func (x *PureInboundEmailGroupSearchReq) GetStatusStr() string {
	if x != nil {
		return x.StatusStr
	}
	return ""
}

func (x *PureInboundEmailGroupSearchReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type PureInboundEmailGroupSearchRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PureInboundEmailGroup []*PureInboundEmailGroup `protobuf:"bytes,1,rep,name=pure_inbound_email_group,json=pureInboundEmailGroup,proto3" json:"pure_inbound_email_group,omitempty"`
}

func (x *PureInboundEmailGroupSearchRes) Reset() {
	*x = PureInboundEmailGroupSearchRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PureInboundEmailGroupSearchRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PureInboundEmailGroupSearchRes) ProtoMessage() {}

func (x *PureInboundEmailGroupSearchRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PureInboundEmailGroupSearchRes.ProtoReflect.Descriptor instead.
func (*PureInboundEmailGroupSearchRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{68}
}

func (x *PureInboundEmailGroupSearchRes) GetPureInboundEmailGroup() []*PureInboundEmailGroup {
	if x != nil {
		return x.PureInboundEmailGroup
	}
	return nil
}

type InboundEmailGroupSearchReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SearchFrom *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=search_from,json=searchFrom,proto3" json:"search_from,omitempty"`
	SearchTo   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=search_to,json=searchTo,proto3" json:"search_to,omitempty"`
	StatusStr  string                 `protobuf:"bytes,5,opt,name=status_str,json=statusStr,proto3" json:"status_str,omitempty"`
	Name       string                 `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *InboundEmailGroupSearchReq) Reset() {
	*x = InboundEmailGroupSearchReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InboundEmailGroupSearchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InboundEmailGroupSearchReq) ProtoMessage() {}

func (x *InboundEmailGroupSearchReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InboundEmailGroupSearchReq.ProtoReflect.Descriptor instead.
func (*InboundEmailGroupSearchReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{69}
}

func (x *InboundEmailGroupSearchReq) GetSearchFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.SearchFrom
	}
	return nil
}

func (x *InboundEmailGroupSearchReq) GetSearchTo() *timestamppb.Timestamp {
	if x != nil {
		return x.SearchTo
	}
	return nil
}

func (x *InboundEmailGroupSearchReq) GetStatusStr() string {
	if x != nil {
		return x.StatusStr
	}
	return ""
}

func (x *InboundEmailGroupSearchReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type InboundEmailGroupSearchRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InboundEmailGroup []*InboundEmailGroup `protobuf:"bytes,1,rep,name=inbound_email_group,json=inboundEmailGroup,proto3" json:"inbound_email_group,omitempty"`
}

func (x *InboundEmailGroupSearchRes) Reset() {
	*x = InboundEmailGroupSearchRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InboundEmailGroupSearchRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InboundEmailGroupSearchRes) ProtoMessage() {}

func (x *InboundEmailGroupSearchRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InboundEmailGroupSearchRes.ProtoReflect.Descriptor instead.
func (*InboundEmailGroupSearchRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{70}
}

func (x *InboundEmailGroupSearchRes) GetInboundEmailGroup() []*InboundEmailGroup {
	if x != nil {
		return x.InboundEmailGroup
	}
	return nil
}

type ListInboundEmailGroupsByGroupIdsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InboundEmailGroupIdsArr []string `protobuf:"bytes,3,rep,name=inbound_email_group_ids_arr,json=inboundEmailGroupIdsArr,proto3" json:"inbound_email_group_ids_arr,omitempty"`
}

func (x *ListInboundEmailGroupsByGroupIdsReq) Reset() {
	*x = ListInboundEmailGroupsByGroupIdsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInboundEmailGroupsByGroupIdsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInboundEmailGroupsByGroupIdsReq) ProtoMessage() {}

func (x *ListInboundEmailGroupsByGroupIdsReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInboundEmailGroupsByGroupIdsReq.ProtoReflect.Descriptor instead.
func (*ListInboundEmailGroupsByGroupIdsReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{71}
}

func (x *ListInboundEmailGroupsByGroupIdsReq) GetInboundEmailGroupIdsArr() []string {
	if x != nil {
		return x.InboundEmailGroupIdsArr
	}
	return nil
}

type ListInboundEmailGroupsByGroupIdsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InboundEmailGroup []*InboundEmailGroup `protobuf:"bytes,1,rep,name=inbound_email_group,json=inboundEmailGroup,proto3" json:"inbound_email_group,omitempty"`
}

func (x *ListInboundEmailGroupsByGroupIdsRes) Reset() {
	*x = ListInboundEmailGroupsByGroupIdsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInboundEmailGroupsByGroupIdsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInboundEmailGroupsByGroupIdsRes) ProtoMessage() {}

func (x *ListInboundEmailGroupsByGroupIdsRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInboundEmailGroupsByGroupIdsRes.ProtoReflect.Descriptor instead.
func (*ListInboundEmailGroupsByGroupIdsRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{72}
}

func (x *ListInboundEmailGroupsByGroupIdsRes) GetInboundEmailGroup() []*InboundEmailGroup {
	if x != nil {
		return x.InboundEmailGroup
	}
	return nil
}

type InboundEmailTaskDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailMessageReplyId         *wrapperspb.StringValue        `protobuf:"bytes,1,opt,name=email_message_reply_id,json=emailMessageReplyId,proto3" json:"email_message_reply_id,omitempty"`
	FromAddress                 string                         `protobuf:"bytes,2,opt,name=from_address,json=fromAddress,proto3" json:"from_address,omitempty"`
	ToAddress                   string                         `protobuf:"bytes,3,opt,name=to_address,json=toAddress,proto3" json:"to_address,omitempty"`
	Subject                     string                         `protobuf:"bytes,4,opt,name=subject,proto3" json:"subject,omitempty"`
	ReceivedTime                *timestamppb.Timestamp         `protobuf:"bytes,5,opt,name=received_time,json=receivedTime,proto3" json:"received_time,omitempty"`
	Message                     string                         `protobuf:"bytes,6,opt,name=message,proto3" json:"message,omitempty"`
	InboundEmailGroupId         *wrapperspb.StringValue        `protobuf:"bytes,7,opt,name=inbound_email_group_id,json=inboundEmailGroupId,proto3" json:"inbound_email_group_id,omitempty"`
	Cost                        float64                        `protobuf:"fixed64,8,opt,name=cost,proto3" json:"cost,omitempty"`
	Status                      commons.EmailIBReplyStatus     `protobuf:"varint,9,opt,name=status,proto3,enum=api.commons.EmailIBReplyStatus" json:"status,omitempty"`
	MessageId                   *wrapperspb.StringValue        `protobuf:"bytes,11,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	EmailConversationId         *wrapperspb.StringValue        `protobuf:"bytes,13,opt,name=email_conversation_id,json=emailConversationId,proto3" json:"email_conversation_id,omitempty"`
	RawDataLocation             string                         `protobuf:"bytes,14,opt,name=raw_data_location,json=rawDataLocation,proto3" json:"raw_data_location,omitempty"`
	EmailTaskSid                *wrapperspb.Int64Value         `protobuf:"bytes,15,opt,name=email_task_sid,json=emailTaskSid,proto3" json:"email_task_sid,omitempty"`
	ReplyType                   commons.EmailIBReplyType       `protobuf:"varint,16,opt,name=reply_type,json=replyType,proto3,enum=api.commons.EmailIBReplyType" json:"reply_type,omitempty"`
	DeliveryStatus              *wrapperspb.Int64Value         `protobuf:"bytes,17,opt,name=delivery_status,json=deliveryStatus,proto3" json:"delivery_status,omitempty"`
	DeliveryStatusMessage       *wrapperspb.StringValue        `protobuf:"bytes,18,opt,name=delivery_status_message,json=deliveryStatusMessage,proto3" json:"delivery_status_message,omitempty"`
	EmailMessageReplyAttachment []*EmailMessageReplyAttachment `protobuf:"bytes,19,rep,name=email_message_reply_attachment,json=emailMessageReplyAttachment,proto3" json:"email_message_reply_attachment,omitempty"`
	UserId                      *wrapperspb.StringValue        `protobuf:"bytes,20,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *InboundEmailTaskDetails) Reset() {
	*x = InboundEmailTaskDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InboundEmailTaskDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InboundEmailTaskDetails) ProtoMessage() {}

func (x *InboundEmailTaskDetails) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InboundEmailTaskDetails.ProtoReflect.Descriptor instead.
func (*InboundEmailTaskDetails) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{73}
}

func (x *InboundEmailTaskDetails) GetEmailMessageReplyId() *wrapperspb.StringValue {
	if x != nil {
		return x.EmailMessageReplyId
	}
	return nil
}

func (x *InboundEmailTaskDetails) GetFromAddress() string {
	if x != nil {
		return x.FromAddress
	}
	return ""
}

func (x *InboundEmailTaskDetails) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

func (x *InboundEmailTaskDetails) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *InboundEmailTaskDetails) GetReceivedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ReceivedTime
	}
	return nil
}

func (x *InboundEmailTaskDetails) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *InboundEmailTaskDetails) GetInboundEmailGroupId() *wrapperspb.StringValue {
	if x != nil {
		return x.InboundEmailGroupId
	}
	return nil
}

func (x *InboundEmailTaskDetails) GetCost() float64 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *InboundEmailTaskDetails) GetStatus() commons.EmailIBReplyStatus {
	if x != nil {
		return x.Status
	}
	return commons.EmailIBReplyStatus(0)
}

func (x *InboundEmailTaskDetails) GetMessageId() *wrapperspb.StringValue {
	if x != nil {
		return x.MessageId
	}
	return nil
}

func (x *InboundEmailTaskDetails) GetEmailConversationId() *wrapperspb.StringValue {
	if x != nil {
		return x.EmailConversationId
	}
	return nil
}

func (x *InboundEmailTaskDetails) GetRawDataLocation() string {
	if x != nil {
		return x.RawDataLocation
	}
	return ""
}

func (x *InboundEmailTaskDetails) GetEmailTaskSid() *wrapperspb.Int64Value {
	if x != nil {
		return x.EmailTaskSid
	}
	return nil
}

func (x *InboundEmailTaskDetails) GetReplyType() commons.EmailIBReplyType {
	if x != nil {
		return x.ReplyType
	}
	return commons.EmailIBReplyType(0)
}

func (x *InboundEmailTaskDetails) GetDeliveryStatus() *wrapperspb.Int64Value {
	if x != nil {
		return x.DeliveryStatus
	}
	return nil
}

func (x *InboundEmailTaskDetails) GetDeliveryStatusMessage() *wrapperspb.StringValue {
	if x != nil {
		return x.DeliveryStatusMessage
	}
	return nil
}

func (x *InboundEmailTaskDetails) GetEmailMessageReplyAttachment() []*EmailMessageReplyAttachment {
	if x != nil {
		return x.EmailMessageReplyAttachment
	}
	return nil
}

func (x *InboundEmailTaskDetails) GetUserId() *wrapperspb.StringValue {
	if x != nil {
		return x.UserId
	}
	return nil
}

type ListInboundEmailTasksByGroupIdsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InboundEmailGroupIdsArr []string `protobuf:"bytes,3,rep,name=inbound_email_group_ids_arr,json=inboundEmailGroupIdsArr,proto3" json:"inbound_email_group_ids_arr,omitempty"`
}

func (x *ListInboundEmailTasksByGroupIdsReq) Reset() {
	*x = ListInboundEmailTasksByGroupIdsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInboundEmailTasksByGroupIdsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInboundEmailTasksByGroupIdsReq) ProtoMessage() {}

func (x *ListInboundEmailTasksByGroupIdsReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInboundEmailTasksByGroupIdsReq.ProtoReflect.Descriptor instead.
func (*ListInboundEmailTasksByGroupIdsReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{74}
}

func (x *ListInboundEmailTasksByGroupIdsReq) GetInboundEmailGroupIdsArr() []string {
	if x != nil {
		return x.InboundEmailGroupIdsArr
	}
	return nil
}

type ListInboundEmailTasksByGroupIdsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InboundEmailTaskDetails []*InboundEmailTaskDetails `protobuf:"bytes,1,rep,name=inbound_email_task_details,json=inboundEmailTaskDetails,proto3" json:"inbound_email_task_details,omitempty"`
}

func (x *ListInboundEmailTasksByGroupIdsRes) Reset() {
	*x = ListInboundEmailTasksByGroupIdsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInboundEmailTasksByGroupIdsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInboundEmailTasksByGroupIdsRes) ProtoMessage() {}

func (x *ListInboundEmailTasksByGroupIdsRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInboundEmailTasksByGroupIdsRes.ProtoReflect.Descriptor instead.
func (*ListInboundEmailTasksByGroupIdsRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{75}
}

func (x *ListInboundEmailTasksByGroupIdsRes) GetInboundEmailTaskDetails() []*InboundEmailTaskDetails {
	if x != nil {
		return x.InboundEmailTaskDetails
	}
	return nil
}

type InboundEmailGroupByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InboundEmailGroupId string `protobuf:"bytes,3,opt,name=inbound_email_group_id,json=inboundEmailGroupId,proto3" json:"inbound_email_group_id,omitempty"`
}

func (x *InboundEmailGroupByIdReq) Reset() {
	*x = InboundEmailGroupByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InboundEmailGroupByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InboundEmailGroupByIdReq) ProtoMessage() {}

func (x *InboundEmailGroupByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InboundEmailGroupByIdReq.ProtoReflect.Descriptor instead.
func (*InboundEmailGroupByIdReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{76}
}

func (x *InboundEmailGroupByIdReq) GetInboundEmailGroupId() string {
	if x != nil {
		return x.InboundEmailGroupId
	}
	return ""
}

type DownloadInboundEmailAttachmentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailMessageReplyId           string `protobuf:"bytes,3,opt,name=email_message_reply_id,json=emailMessageReplyId,proto3" json:"email_message_reply_id,omitempty"`
	EmailMessageReplyAttachmentId string `protobuf:"bytes,4,opt,name=email_message_reply_attachment_id,json=emailMessageReplyAttachmentId,proto3" json:"email_message_reply_attachment_id,omitempty"`
}

func (x *DownloadInboundEmailAttachmentReq) Reset() {
	*x = DownloadInboundEmailAttachmentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadInboundEmailAttachmentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadInboundEmailAttachmentReq) ProtoMessage() {}

func (x *DownloadInboundEmailAttachmentReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadInboundEmailAttachmentReq.ProtoReflect.Descriptor instead.
func (*DownloadInboundEmailAttachmentReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{77}
}

func (x *DownloadInboundEmailAttachmentReq) GetEmailMessageReplyId() string {
	if x != nil {
		return x.EmailMessageReplyId
	}
	return ""
}

func (x *DownloadInboundEmailAttachmentReq) GetEmailMessageReplyAttachmentId() string {
	if x != nil {
		return x.EmailMessageReplyAttachmentId
	}
	return ""
}

type DownloadInboundEmailAttachmentRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url      string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	FileName string `protobuf:"bytes,2,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
}

func (x *DownloadInboundEmailAttachmentRes) Reset() {
	*x = DownloadInboundEmailAttachmentRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadInboundEmailAttachmentRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadInboundEmailAttachmentRes) ProtoMessage() {}

func (x *DownloadInboundEmailAttachmentRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadInboundEmailAttachmentRes.ProtoReflect.Descriptor instead.
func (*DownloadInboundEmailAttachmentRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{78}
}

func (x *DownloadInboundEmailAttachmentRes) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *DownloadInboundEmailAttachmentRes) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

type DeleteEmailTemplateAttachmentByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailTemplateAttachmentSid int64 `protobuf:"varint,2,opt,name=email_template_attachment_sid,json=emailTemplateAttachmentSid,proto3" json:"email_template_attachment_sid,omitempty"`
}

func (x *DeleteEmailTemplateAttachmentByIdReq) Reset() {
	*x = DeleteEmailTemplateAttachmentByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteEmailTemplateAttachmentByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEmailTemplateAttachmentByIdReq) ProtoMessage() {}

func (x *DeleteEmailTemplateAttachmentByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEmailTemplateAttachmentByIdReq.ProtoReflect.Descriptor instead.
func (*DeleteEmailTemplateAttachmentByIdReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{79}
}

func (x *DeleteEmailTemplateAttachmentByIdReq) GetEmailTemplateAttachmentSid() int64 {
	if x != nil {
		return x.EmailTemplateAttachmentSid
	}
	return 0
}

type DeleteEmailTemplateAttachmentByIdRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *DeleteEmailTemplateAttachmentByIdRes) Reset() {
	*x = DeleteEmailTemplateAttachmentByIdRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteEmailTemplateAttachmentByIdRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEmailTemplateAttachmentByIdRes) ProtoMessage() {}

func (x *DeleteEmailTemplateAttachmentByIdRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEmailTemplateAttachmentByIdRes.ProtoReflect.Descriptor instead.
func (*DeleteEmailTemplateAttachmentByIdRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{80}
}

func (x *DeleteEmailTemplateAttachmentByIdRes) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type UpdateEmailTemplateAttachmentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailTemplateSid           int64  `protobuf:"varint,3,opt,name=email_template_sid,json=emailTemplateSid,proto3" json:"email_template_sid,omitempty"`
	EmailTemplateAttachmentSid int64  `protobuf:"varint,4,opt,name=email_template_attachment_sid,json=emailTemplateAttachmentSid,proto3" json:"email_template_attachment_sid,omitempty"`
	FileName                   string `protobuf:"bytes,6,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	FileSize                   int64  `protobuf:"varint,7,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`
	ContentType                string `protobuf:"bytes,8,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	Hash                       string `protobuf:"bytes,9,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *UpdateEmailTemplateAttachmentReq) Reset() {
	*x = UpdateEmailTemplateAttachmentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEmailTemplateAttachmentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEmailTemplateAttachmentReq) ProtoMessage() {}

func (x *UpdateEmailTemplateAttachmentReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEmailTemplateAttachmentReq.ProtoReflect.Descriptor instead.
func (*UpdateEmailTemplateAttachmentReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{81}
}

func (x *UpdateEmailTemplateAttachmentReq) GetEmailTemplateSid() int64 {
	if x != nil {
		return x.EmailTemplateSid
	}
	return 0
}

func (x *UpdateEmailTemplateAttachmentReq) GetEmailTemplateAttachmentSid() int64 {
	if x != nil {
		return x.EmailTemplateAttachmentSid
	}
	return 0
}

func (x *UpdateEmailTemplateAttachmentReq) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *UpdateEmailTemplateAttachmentReq) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *UpdateEmailTemplateAttachmentReq) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *UpdateEmailTemplateAttachmentReq) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type UpdateEmailTemplateAttachmentRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *UpdateEmailTemplateAttachmentRes) Reset() {
	*x = UpdateEmailTemplateAttachmentRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEmailTemplateAttachmentRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEmailTemplateAttachmentRes) ProtoMessage() {}

func (x *UpdateEmailTemplateAttachmentRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEmailTemplateAttachmentRes.ProtoReflect.Descriptor instead.
func (*UpdateEmailTemplateAttachmentRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{82}
}

func (x *UpdateEmailTemplateAttachmentRes) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type ListActiveInboundEmailGroupsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListActiveInboundEmailGroupsReq) Reset() {
	*x = ListActiveInboundEmailGroupsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListActiveInboundEmailGroupsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListActiveInboundEmailGroupsReq) ProtoMessage() {}

func (x *ListActiveInboundEmailGroupsReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListActiveInboundEmailGroupsReq.ProtoReflect.Descriptor instead.
func (*ListActiveInboundEmailGroupsReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{83}
}

type ListActiveInboundEmailGroupsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InboundEmailGroup []*InboundEmailGroup `protobuf:"bytes,1,rep,name=inbound_email_group,json=inboundEmailGroup,proto3" json:"inbound_email_group,omitempty"`
}

func (x *ListActiveInboundEmailGroupsRes) Reset() {
	*x = ListActiveInboundEmailGroupsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListActiveInboundEmailGroupsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListActiveInboundEmailGroupsRes) ProtoMessage() {}

func (x *ListActiveInboundEmailGroupsRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListActiveInboundEmailGroupsRes.ProtoReflect.Descriptor instead.
func (*ListActiveInboundEmailGroupsRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{84}
}

func (x *ListActiveInboundEmailGroupsRes) GetInboundEmailGroup() []*InboundEmailGroup {
	if x != nil {
		return x.InboundEmailGroup
	}
	return nil
}

type EmailMessageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailMessageReplyId   *wrapperspb.StringValue    `protobuf:"bytes,1,opt,name=email_message_reply_id,json=emailMessageReplyId,proto3" json:"email_message_reply_id,omitempty"`
	FromAddress           string                     `protobuf:"bytes,2,opt,name=from_address,json=fromAddress,proto3" json:"from_address,omitempty"`
	ToAddress             string                     `protobuf:"bytes,3,opt,name=to_address,json=toAddress,proto3" json:"to_address,omitempty"`
	Subject               string                     `protobuf:"bytes,4,opt,name=subject,proto3" json:"subject,omitempty"`
	ReceivedTime          *timestamppb.Timestamp     `protobuf:"bytes,5,opt,name=received_time,json=receivedTime,proto3" json:"received_time,omitempty"`
	Message               string                     `protobuf:"bytes,6,opt,name=message,proto3" json:"message,omitempty"`
	EmailTaskSid          *wrapperspb.Int64Value     `protobuf:"bytes,7,opt,name=email_task_sid,json=emailTaskSid,proto3" json:"email_task_sid,omitempty"`
	InboundEmailGroupId   *wrapperspb.StringValue    `protobuf:"bytes,8,opt,name=inbound_email_group_id,json=inboundEmailGroupId,proto3" json:"inbound_email_group_id,omitempty"`
	Status                commons.EmailIBReplyStatus `protobuf:"varint,9,opt,name=status,proto3,enum=api.commons.EmailIBReplyStatus" json:"status,omitempty"`
	Cost                  float64                    `protobuf:"fixed64,10,opt,name=cost,proto3" json:"cost,omitempty"`
	MessageId             *wrapperspb.StringValue    `protobuf:"bytes,12,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	EmailConversationId   *wrapperspb.StringValue    `protobuf:"bytes,14,opt,name=email_conversation_id,json=emailConversationId,proto3" json:"email_conversation_id,omitempty"`
	RawDataLocation       string                     `protobuf:"bytes,15,opt,name=raw_data_location,json=rawDataLocation,proto3" json:"raw_data_location,omitempty"`
	ReplyType             commons.EmailIBReplyType   `protobuf:"varint,16,opt,name=reply_type,json=replyType,proto3,enum=api.commons.EmailIBReplyType" json:"reply_type,omitempty"`
	DeliveryStatus        *wrapperspb.Int64Value     `protobuf:"bytes,17,opt,name=delivery_status,json=deliveryStatus,proto3" json:"delivery_status,omitempty"`
	DeliveryStatusMessage *wrapperspb.StringValue    `protobuf:"bytes,18,opt,name=delivery_status_message,json=deliveryStatusMessage,proto3" json:"delivery_status_message,omitempty"`
	UserId                *wrapperspb.StringValue    `protobuf:"bytes,19,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Name                  string                     `protobuf:"bytes,20,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *EmailMessageReply) Reset() {
	*x = EmailMessageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailMessageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailMessageReply) ProtoMessage() {}

func (x *EmailMessageReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailMessageReply.ProtoReflect.Descriptor instead.
func (*EmailMessageReply) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{85}
}

func (x *EmailMessageReply) GetEmailMessageReplyId() *wrapperspb.StringValue {
	if x != nil {
		return x.EmailMessageReplyId
	}
	return nil
}

func (x *EmailMessageReply) GetFromAddress() string {
	if x != nil {
		return x.FromAddress
	}
	return ""
}

func (x *EmailMessageReply) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

func (x *EmailMessageReply) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *EmailMessageReply) GetReceivedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ReceivedTime
	}
	return nil
}

func (x *EmailMessageReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *EmailMessageReply) GetEmailTaskSid() *wrapperspb.Int64Value {
	if x != nil {
		return x.EmailTaskSid
	}
	return nil
}

func (x *EmailMessageReply) GetInboundEmailGroupId() *wrapperspb.StringValue {
	if x != nil {
		return x.InboundEmailGroupId
	}
	return nil
}

func (x *EmailMessageReply) GetStatus() commons.EmailIBReplyStatus {
	if x != nil {
		return x.Status
	}
	return commons.EmailIBReplyStatus(0)
}

func (x *EmailMessageReply) GetCost() float64 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *EmailMessageReply) GetMessageId() *wrapperspb.StringValue {
	if x != nil {
		return x.MessageId
	}
	return nil
}

func (x *EmailMessageReply) GetEmailConversationId() *wrapperspb.StringValue {
	if x != nil {
		return x.EmailConversationId
	}
	return nil
}

func (x *EmailMessageReply) GetRawDataLocation() string {
	if x != nil {
		return x.RawDataLocation
	}
	return ""
}

func (x *EmailMessageReply) GetReplyType() commons.EmailIBReplyType {
	if x != nil {
		return x.ReplyType
	}
	return commons.EmailIBReplyType(0)
}

func (x *EmailMessageReply) GetDeliveryStatus() *wrapperspb.Int64Value {
	if x != nil {
		return x.DeliveryStatus
	}
	return nil
}

func (x *EmailMessageReply) GetDeliveryStatusMessage() *wrapperspb.StringValue {
	if x != nil {
		return x.DeliveryStatusMessage
	}
	return nil
}

func (x *EmailMessageReply) GetUserId() *wrapperspb.StringValue {
	if x != nil {
		return x.UserId
	}
	return nil
}

func (x *EmailMessageReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type EmailMessageReplyAttachment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailMessageReplyAttachmentId *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=email_message_reply_attachment_id,json=emailMessageReplyAttachmentId,proto3" json:"email_message_reply_attachment_id,omitempty"`
	EmailMessageReplyId           *wrapperspb.StringValue `protobuf:"bytes,4,opt,name=email_message_reply_id,json=emailMessageReplyId,proto3" json:"email_message_reply_id,omitempty"`
	FileName                      string                  `protobuf:"bytes,5,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	FileSize                      int64                   `protobuf:"varint,6,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`
	ContentType                   string                  `protobuf:"bytes,7,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	Hash                          string                  `protobuf:"bytes,8,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *EmailMessageReplyAttachment) Reset() {
	*x = EmailMessageReplyAttachment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailMessageReplyAttachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailMessageReplyAttachment) ProtoMessage() {}

func (x *EmailMessageReplyAttachment) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailMessageReplyAttachment.ProtoReflect.Descriptor instead.
func (*EmailMessageReplyAttachment) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{86}
}

func (x *EmailMessageReplyAttachment) GetEmailMessageReplyAttachmentId() *wrapperspb.StringValue {
	if x != nil {
		return x.EmailMessageReplyAttachmentId
	}
	return nil
}

func (x *EmailMessageReplyAttachment) GetEmailMessageReplyId() *wrapperspb.StringValue {
	if x != nil {
		return x.EmailMessageReplyId
	}
	return nil
}

func (x *EmailMessageReplyAttachment) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *EmailMessageReplyAttachment) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *EmailMessageReplyAttachment) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *EmailMessageReplyAttachment) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type ListEmailMessageReplyAttachmentsByReplyIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailMessageReplyId string `protobuf:"bytes,1,opt,name=email_message_reply_id,json=emailMessageReplyId,proto3" json:"email_message_reply_id,omitempty"`
}

func (x *ListEmailMessageReplyAttachmentsByReplyIdReq) Reset() {
	*x = ListEmailMessageReplyAttachmentsByReplyIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEmailMessageReplyAttachmentsByReplyIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEmailMessageReplyAttachmentsByReplyIdReq) ProtoMessage() {}

func (x *ListEmailMessageReplyAttachmentsByReplyIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEmailMessageReplyAttachmentsByReplyIdReq.ProtoReflect.Descriptor instead.
func (*ListEmailMessageReplyAttachmentsByReplyIdReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{87}
}

func (x *ListEmailMessageReplyAttachmentsByReplyIdReq) GetEmailMessageReplyId() string {
	if x != nil {
		return x.EmailMessageReplyId
	}
	return ""
}

type ListEmailMessageReplyAttachmentsByReplyIdRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailMessageReplyAttachment []*EmailMessageReplyAttachment `protobuf:"bytes,1,rep,name=email_message_reply_attachment,json=emailMessageReplyAttachment,proto3" json:"email_message_reply_attachment,omitempty"`
}

func (x *ListEmailMessageReplyAttachmentsByReplyIdRes) Reset() {
	*x = ListEmailMessageReplyAttachmentsByReplyIdRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEmailMessageReplyAttachmentsByReplyIdRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEmailMessageReplyAttachmentsByReplyIdRes) ProtoMessage() {}

func (x *ListEmailMessageReplyAttachmentsByReplyIdRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEmailMessageReplyAttachmentsByReplyIdRes.ProtoReflect.Descriptor instead.
func (*ListEmailMessageReplyAttachmentsByReplyIdRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{88}
}

func (x *ListEmailMessageReplyAttachmentsByReplyIdRes) GetEmailMessageReplyAttachment() []*EmailMessageReplyAttachment {
	if x != nil {
		return x.EmailMessageReplyAttachment
	}
	return nil
}

type InboundEmailGroupReplyAttachments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailMessageReply           *EmailMessageReply             `protobuf:"bytes,1,opt,name=email_message_reply,json=emailMessageReply,proto3" json:"email_message_reply,omitempty"`
	EmailMessageReplyAttachment []*EmailMessageReplyAttachment `protobuf:"bytes,2,rep,name=email_message_reply_attachment,json=emailMessageReplyAttachment,proto3" json:"email_message_reply_attachment,omitempty"`
}

func (x *InboundEmailGroupReplyAttachments) Reset() {
	*x = InboundEmailGroupReplyAttachments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InboundEmailGroupReplyAttachments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InboundEmailGroupReplyAttachments) ProtoMessage() {}

func (x *InboundEmailGroupReplyAttachments) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InboundEmailGroupReplyAttachments.ProtoReflect.Descriptor instead.
func (*InboundEmailGroupReplyAttachments) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{89}
}

func (x *InboundEmailGroupReplyAttachments) GetEmailMessageReply() *EmailMessageReply {
	if x != nil {
		return x.EmailMessageReply
	}
	return nil
}

func (x *InboundEmailGroupReplyAttachments) GetEmailMessageReplyAttachment() []*EmailMessageReplyAttachment {
	if x != nil {
		return x.EmailMessageReplyAttachment
	}
	return nil
}

type ListInboundEmailGroupReplyAttachmentsByIdRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InboundEmailGroup                 *InboundEmailGroup                   `protobuf:"bytes,1,opt,name=inbound_email_group,json=inboundEmailGroup,proto3" json:"inbound_email_group,omitempty"`
	InboundEmailGroupReplyAttachments []*InboundEmailGroupReplyAttachments `protobuf:"bytes,2,rep,name=inbound_email_group_reply_attachments,json=inboundEmailGroupReplyAttachments,proto3" json:"inbound_email_group_reply_attachments,omitempty"`
}

func (x *ListInboundEmailGroupReplyAttachmentsByIdRes) Reset() {
	*x = ListInboundEmailGroupReplyAttachmentsByIdRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInboundEmailGroupReplyAttachmentsByIdRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInboundEmailGroupReplyAttachmentsByIdRes) ProtoMessage() {}

func (x *ListInboundEmailGroupReplyAttachmentsByIdRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInboundEmailGroupReplyAttachmentsByIdRes.ProtoReflect.Descriptor instead.
func (*ListInboundEmailGroupReplyAttachmentsByIdRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{90}
}

func (x *ListInboundEmailGroupReplyAttachmentsByIdRes) GetInboundEmailGroup() *InboundEmailGroup {
	if x != nil {
		return x.InboundEmailGroup
	}
	return nil
}

func (x *ListInboundEmailGroupReplyAttachmentsByIdRes) GetInboundEmailGroupReplyAttachments() []*InboundEmailGroupReplyAttachments {
	if x != nil {
		return x.InboundEmailGroupReplyAttachments
	}
	return nil
}

type SchedulePureInboundEmailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InboundEmailTemplateId string                 `protobuf:"bytes,3,opt,name=inbound_email_template_id,json=inboundEmailTemplateId,proto3" json:"inbound_email_template_id,omitempty"`
	StartTime              *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	StopTime               *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=stop_time,json=stopTime,proto3" json:"stop_time,omitempty"`
	GroupName              string                 `protobuf:"bytes,6,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	// description of the inbound email group
	Description string `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *SchedulePureInboundEmailReq) Reset() {
	*x = SchedulePureInboundEmailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchedulePureInboundEmailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchedulePureInboundEmailReq) ProtoMessage() {}

func (x *SchedulePureInboundEmailReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchedulePureInboundEmailReq.ProtoReflect.Descriptor instead.
func (*SchedulePureInboundEmailReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{91}
}

func (x *SchedulePureInboundEmailReq) GetInboundEmailTemplateId() string {
	if x != nil {
		return x.InboundEmailTemplateId
	}
	return ""
}

func (x *SchedulePureInboundEmailReq) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *SchedulePureInboundEmailReq) GetStopTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StopTime
	}
	return nil
}

func (x *SchedulePureInboundEmailReq) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *SchedulePureInboundEmailReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type SchedulePureInboundEmailRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InboundEmailGroupId string `protobuf:"bytes,1,opt,name=inbound_email_group_id,json=inboundEmailGroupId,proto3" json:"inbound_email_group_id,omitempty"`
}

func (x *SchedulePureInboundEmailRes) Reset() {
	*x = SchedulePureInboundEmailRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchedulePureInboundEmailRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchedulePureInboundEmailRes) ProtoMessage() {}

func (x *SchedulePureInboundEmailRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchedulePureInboundEmailRes.ProtoReflect.Descriptor instead.
func (*SchedulePureInboundEmailRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{92}
}

func (x *SchedulePureInboundEmailRes) GetInboundEmailGroupId() string {
	if x != nil {
		return x.InboundEmailGroupId
	}
	return ""
}

type CreateEmailMessageAgentReplyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ToAddress           string   `protobuf:"bytes,4,opt,name=to_address,json=toAddress,proto3" json:"to_address,omitempty"`
	Subject             string   `protobuf:"bytes,5,opt,name=subject,proto3" json:"subject,omitempty"`
	Content             string   `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`
	InboundEmailGroupId string   `protobuf:"bytes,7,opt,name=inbound_email_group_id,json=inboundEmailGroupId,proto3" json:"inbound_email_group_id,omitempty"`
	EmailConversationId string   `protobuf:"bytes,8,opt,name=email_conversation_id,json=emailConversationId,proto3" json:"email_conversation_id,omitempty"`
	AttachmentIds       []string `protobuf:"bytes,10,rep,name=attachment_ids,json=attachmentIds,proto3" json:"attachment_ids,omitempty"`
}

func (x *CreateEmailMessageAgentReplyReq) Reset() {
	*x = CreateEmailMessageAgentReplyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEmailMessageAgentReplyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEmailMessageAgentReplyReq) ProtoMessage() {}

func (x *CreateEmailMessageAgentReplyReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEmailMessageAgentReplyReq.ProtoReflect.Descriptor instead.
func (*CreateEmailMessageAgentReplyReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{93}
}

func (x *CreateEmailMessageAgentReplyReq) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

func (x *CreateEmailMessageAgentReplyReq) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *CreateEmailMessageAgentReplyReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreateEmailMessageAgentReplyReq) GetInboundEmailGroupId() string {
	if x != nil {
		return x.InboundEmailGroupId
	}
	return ""
}

func (x *CreateEmailMessageAgentReplyReq) GetEmailConversationId() string {
	if x != nil {
		return x.EmailConversationId
	}
	return ""
}

func (x *CreateEmailMessageAgentReplyReq) GetAttachmentIds() []string {
	if x != nil {
		return x.AttachmentIds
	}
	return nil
}

type CreateEmailMessageAgentReplyAttachmentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileName string `protobuf:"bytes,4,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	FileSize int64  `protobuf:"varint,5,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`
	FileType string `protobuf:"bytes,6,opt,name=file_type,json=fileType,proto3" json:"file_type,omitempty"`
}

func (x *CreateEmailMessageAgentReplyAttachmentReq) Reset() {
	*x = CreateEmailMessageAgentReplyAttachmentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEmailMessageAgentReplyAttachmentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEmailMessageAgentReplyAttachmentReq) ProtoMessage() {}

func (x *CreateEmailMessageAgentReplyAttachmentReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEmailMessageAgentReplyAttachmentReq.ProtoReflect.Descriptor instead.
func (*CreateEmailMessageAgentReplyAttachmentReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{94}
}

func (x *CreateEmailMessageAgentReplyAttachmentReq) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *CreateEmailMessageAgentReplyAttachmentReq) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *CreateEmailMessageAgentReplyAttachmentReq) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

type CreateEmailMessageAgentReplyAttachmentRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailMessageReplyAttachmentId string `protobuf:"bytes,1,opt,name=email_message_reply_attachment_id,json=emailMessageReplyAttachmentId,proto3" json:"email_message_reply_attachment_id,omitempty"`
	UrlPath                       string `protobuf:"bytes,2,opt,name=url_path,json=urlPath,proto3" json:"url_path,omitempty"`
	GsPath                        string `protobuf:"bytes,3,opt,name=gs_path,json=gsPath,proto3" json:"gs_path,omitempty"`
}

func (x *CreateEmailMessageAgentReplyAttachmentRes) Reset() {
	*x = CreateEmailMessageAgentReplyAttachmentRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEmailMessageAgentReplyAttachmentRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEmailMessageAgentReplyAttachmentRes) ProtoMessage() {}

func (x *CreateEmailMessageAgentReplyAttachmentRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEmailMessageAgentReplyAttachmentRes.ProtoReflect.Descriptor instead.
func (*CreateEmailMessageAgentReplyAttachmentRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{95}
}

func (x *CreateEmailMessageAgentReplyAttachmentRes) GetEmailMessageReplyAttachmentId() string {
	if x != nil {
		return x.EmailMessageReplyAttachmentId
	}
	return ""
}

func (x *CreateEmailMessageAgentReplyAttachmentRes) GetUrlPath() string {
	if x != nil {
		return x.UrlPath
	}
	return ""
}

func (x *CreateEmailMessageAgentReplyAttachmentRes) GetGsPath() string {
	if x != nil {
		return x.GsPath
	}
	return ""
}

type SendReplyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailMessageReplyId string `protobuf:"bytes,1,opt,name=email_message_reply_id,json=emailMessageReplyId,proto3" json:"email_message_reply_id,omitempty"`
	InReplyTo           string `protobuf:"bytes,2,opt,name=in_reply_to,json=inReplyTo,proto3" json:"in_reply_to,omitempty"`
}

func (x *SendReplyReq) Reset() {
	*x = SendReplyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendReplyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendReplyReq) ProtoMessage() {}

func (x *SendReplyReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendReplyReq.ProtoReflect.Descriptor instead.
func (*SendReplyReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{96}
}

func (x *SendReplyReq) GetEmailMessageReplyId() string {
	if x != nil {
		return x.EmailMessageReplyId
	}
	return ""
}

func (x *SendReplyReq) GetInReplyTo() string {
	if x != nil {
		return x.InReplyTo
	}
	return ""
}

type ListNewEmailMessageRepliesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// user_id is overriden unless the call comes from ManagerListNewEmailMessageReplies
	UserId              string                 `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	EmailConversationId string                 `protobuf:"bytes,4,opt,name=email_conversation_id,json=emailConversationId,proto3" json:"email_conversation_id,omitempty"`
	LastTimestamp       *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=last_timestamp,json=lastTimestamp,proto3" json:"last_timestamp,omitempty"`
}

func (x *ListNewEmailMessageRepliesReq) Reset() {
	*x = ListNewEmailMessageRepliesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNewEmailMessageRepliesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNewEmailMessageRepliesReq) ProtoMessage() {}

func (x *ListNewEmailMessageRepliesReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNewEmailMessageRepliesReq.ProtoReflect.Descriptor instead.
func (*ListNewEmailMessageRepliesReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{97}
}

func (x *ListNewEmailMessageRepliesReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ListNewEmailMessageRepliesReq) GetEmailConversationId() string {
	if x != nil {
		return x.EmailConversationId
	}
	return ""
}

func (x *ListNewEmailMessageRepliesReq) GetLastTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.LastTimestamp
	}
	return nil
}

type ListNewEmailMessageRepliesRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailMessageRepliesWithAttachments []*EmailMessageReplyWithAttachments `protobuf:"bytes,1,rep,name=email_message_replies_with_attachments,json=emailMessageRepliesWithAttachments,proto3" json:"email_message_replies_with_attachments,omitempty"`
}

func (x *ListNewEmailMessageRepliesRes) Reset() {
	*x = ListNewEmailMessageRepliesRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNewEmailMessageRepliesRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNewEmailMessageRepliesRes) ProtoMessage() {}

func (x *ListNewEmailMessageRepliesRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNewEmailMessageRepliesRes.ProtoReflect.Descriptor instead.
func (*ListNewEmailMessageRepliesRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{98}
}

func (x *ListNewEmailMessageRepliesRes) GetEmailMessageRepliesWithAttachments() []*EmailMessageReplyWithAttachments {
	if x != nil {
		return x.EmailMessageRepliesWithAttachments
	}
	return nil
}

type EmailMessageReplyWithAttachments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailMessageReply *EmailMessageReply             `protobuf:"bytes,1,opt,name=email_message_reply,json=emailMessageReply,proto3" json:"email_message_reply,omitempty"`
	Attachments       []*EmailMessageReplyAttachment `protobuf:"bytes,2,rep,name=attachments,proto3" json:"attachments,omitempty"`
}

func (x *EmailMessageReplyWithAttachments) Reset() {
	*x = EmailMessageReplyWithAttachments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailMessageReplyWithAttachments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailMessageReplyWithAttachments) ProtoMessage() {}

func (x *EmailMessageReplyWithAttachments) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailMessageReplyWithAttachments.ProtoReflect.Descriptor instead.
func (*EmailMessageReplyWithAttachments) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{99}
}

func (x *EmailMessageReplyWithAttachments) GetEmailMessageReply() *EmailMessageReply {
	if x != nil {
		return x.EmailMessageReply
	}
	return nil
}

func (x *EmailMessageReplyWithAttachments) GetAttachments() []*EmailMessageReplyAttachment {
	if x != nil {
		return x.Attachments
	}
	return nil
}

// request to schedule pure inbound email group for omnilink
type SchedulePureOmniLinkInboundEmailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name of the inbound email group
	GroupName string `protobuf:"bytes,2,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	// time when inbound email group needs to be started
	StartTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// time when inbound email group needs to be stopped
	StopTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=stop_time,json=stopTime,proto3" json:"stop_time,omitempty"`
	// connected email inbox server details
	ConnectedInboxId string `protobuf:"bytes,5,opt,name=connected_inbox_id,json=connectedInboxId,proto3" json:"connected_inbox_id,omitempty"`
	// agent conversation skills
	Skills *EmailConversationSkills `protobuf:"bytes,6,opt,name=skills,proto3" json:"skills,omitempty"`
	// project id
	ProjectId *wrapperspb.StringValue `protobuf:"bytes,7,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// description of the inbound email group
	Description string `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
	// sla and timeouts
	SlaTimeouts *commons.SLATimeouts `protobuf:"bytes,9,opt,name=sla_timeouts,json=slaTimeouts,proto3" json:"sla_timeouts,omitempty"`
}

func (x *SchedulePureOmniLinkInboundEmailReq) Reset() {
	*x = SchedulePureOmniLinkInboundEmailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchedulePureOmniLinkInboundEmailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchedulePureOmniLinkInboundEmailReq) ProtoMessage() {}

func (x *SchedulePureOmniLinkInboundEmailReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchedulePureOmniLinkInboundEmailReq.ProtoReflect.Descriptor instead.
func (*SchedulePureOmniLinkInboundEmailReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{100}
}

func (x *SchedulePureOmniLinkInboundEmailReq) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *SchedulePureOmniLinkInboundEmailReq) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *SchedulePureOmniLinkInboundEmailReq) GetStopTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StopTime
	}
	return nil
}

func (x *SchedulePureOmniLinkInboundEmailReq) GetConnectedInboxId() string {
	if x != nil {
		return x.ConnectedInboxId
	}
	return ""
}

func (x *SchedulePureOmniLinkInboundEmailReq) GetSkills() *EmailConversationSkills {
	if x != nil {
		return x.Skills
	}
	return nil
}

func (x *SchedulePureOmniLinkInboundEmailReq) GetProjectId() *wrapperspb.StringValue {
	if x != nil {
		return x.ProjectId
	}
	return nil
}

func (x *SchedulePureOmniLinkInboundEmailReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SchedulePureOmniLinkInboundEmailReq) GetSlaTimeouts() *commons.SLATimeouts {
	if x != nil {
		return x.SlaTimeouts
	}
	return nil
}

// response to schedule pure inbound email group for omnilink
type SchedulePureOmniLinkInboundEmailRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// result of generated inbound email group id
	InboundEmailGroupId string `protobuf:"bytes,1,opt,name=inbound_email_group_id,json=inboundEmailGroupId,proto3" json:"inbound_email_group_id,omitempty"`
}

func (x *SchedulePureOmniLinkInboundEmailRes) Reset() {
	*x = SchedulePureOmniLinkInboundEmailRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchedulePureOmniLinkInboundEmailRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchedulePureOmniLinkInboundEmailRes) ProtoMessage() {}

func (x *SchedulePureOmniLinkInboundEmailRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchedulePureOmniLinkInboundEmailRes.ProtoReflect.Descriptor instead.
func (*SchedulePureOmniLinkInboundEmailRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{101}
}

func (x *SchedulePureOmniLinkInboundEmailRes) GetInboundEmailGroupId() string {
	if x != nil {
		return x.InboundEmailGroupId
	}
	return ""
}

// request to update inbound email group
type UpdateInboundEmailGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// inbound email group id
	InboundEmailGroupId string `protobuf:"bytes,1,opt,name=inbound_email_group_id,json=inboundEmailGroupId,proto3" json:"inbound_email_group_id,omitempty"`
	// name of the inbound email group
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// time when inbound email group needs to be stopped
	StopTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=stop_time,json=stopTime,proto3" json:"stop_time,omitempty"`
	// agent conversation skills
	Skills *EmailConversationSkills `protobuf:"bytes,4,opt,name=skills,proto3" json:"skills,omitempty"`
	// description of the inbound email group
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// time when inbound email group needs to be started
	StartTime *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// sla and timeouts
	SlaTimeouts *commons.SLATimeouts `protobuf:"bytes,7,opt,name=sla_timeouts,json=slaTimeouts,proto3" json:"sla_timeouts,omitempty"`
}

func (x *UpdateInboundEmailGroupReq) Reset() {
	*x = UpdateInboundEmailGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateInboundEmailGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInboundEmailGroupReq) ProtoMessage() {}

func (x *UpdateInboundEmailGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInboundEmailGroupReq.ProtoReflect.Descriptor instead.
func (*UpdateInboundEmailGroupReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{102}
}

func (x *UpdateInboundEmailGroupReq) GetInboundEmailGroupId() string {
	if x != nil {
		return x.InboundEmailGroupId
	}
	return ""
}

func (x *UpdateInboundEmailGroupReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateInboundEmailGroupReq) GetStopTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StopTime
	}
	return nil
}

func (x *UpdateInboundEmailGroupReq) GetSkills() *EmailConversationSkills {
	if x != nil {
		return x.Skills
	}
	return nil
}

func (x *UpdateInboundEmailGroupReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateInboundEmailGroupReq) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *UpdateInboundEmailGroupReq) GetSlaTimeouts() *commons.SLATimeouts {
	if x != nil {
		return x.SlaTimeouts
	}
	return nil
}

// response to update inbound email group
type UpdateInboundEmailGroupRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateInboundEmailGroupRes) Reset() {
	*x = UpdateInboundEmailGroupRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateInboundEmailGroupRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInboundEmailGroupRes) ProtoMessage() {}

func (x *UpdateInboundEmailGroupRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInboundEmailGroupRes.ProtoReflect.Descriptor instead.
func (*UpdateInboundEmailGroupRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{103}
}

// request to update outbound email group
type UpdateOutboundEmailGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// outbound email group sid
	EmailGroupSid int64 `protobuf:"varint,1,opt,name=email_group_sid,json=emailGroupSid,proto3" json:"email_group_sid,omitempty"`
	// name of the email group
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// time when outbound email group needs to be started
	StartTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// time when outbound email group needs to be stopped
	StopTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=stop_time,json=stopTime,proto3" json:"stop_time,omitempty"`
	// description of the email group
	Description string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	// sla and timeouts
	SlaTimeouts *commons.SLATimeouts `protobuf:"bytes,7,opt,name=sla_timeouts,json=slaTimeouts,proto3" json:"sla_timeouts,omitempty"`
}

func (x *UpdateOutboundEmailGroupReq) Reset() {
	*x = UpdateOutboundEmailGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOutboundEmailGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOutboundEmailGroupReq) ProtoMessage() {}

func (x *UpdateOutboundEmailGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOutboundEmailGroupReq.ProtoReflect.Descriptor instead.
func (*UpdateOutboundEmailGroupReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{104}
}

func (x *UpdateOutboundEmailGroupReq) GetEmailGroupSid() int64 {
	if x != nil {
		return x.EmailGroupSid
	}
	return 0
}

func (x *UpdateOutboundEmailGroupReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateOutboundEmailGroupReq) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *UpdateOutboundEmailGroupReq) GetStopTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StopTime
	}
	return nil
}

func (x *UpdateOutboundEmailGroupReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateOutboundEmailGroupReq) GetSlaTimeouts() *commons.SLATimeouts {
	if x != nil {
		return x.SlaTimeouts
	}
	return nil
}

// response to update outbound email group
type UpdateOutboundEmailGroupRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateOutboundEmailGroupRes) Reset() {
	*x = UpdateOutboundEmailGroupRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOutboundEmailGroupRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOutboundEmailGroupRes) ProtoMessage() {}

func (x *UpdateOutboundEmailGroupRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOutboundEmailGroupRes.ProtoReflect.Descriptor instead.
func (*UpdateOutboundEmailGroupRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{105}
}

// request for outbound email message attachment
type CreateEmailMessageAttachmentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// attachment file name
	FileName string `protobuf:"bytes,1,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	// attachment file size
	FileSize int64 `protobuf:"varint,2,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`
	// file content type
	ContentType string `protobuf:"bytes,3,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
}

func (x *CreateEmailMessageAttachmentReq) Reset() {
	*x = CreateEmailMessageAttachmentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEmailMessageAttachmentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEmailMessageAttachmentReq) ProtoMessage() {}

func (x *CreateEmailMessageAttachmentReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEmailMessageAttachmentReq.ProtoReflect.Descriptor instead.
func (*CreateEmailMessageAttachmentReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{106}
}

func (x *CreateEmailMessageAttachmentReq) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *CreateEmailMessageAttachmentReq) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *CreateEmailMessageAttachmentReq) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

// response for outbound email message attachment
type CreateEmailMessageAttachmentRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// newly generated attachment sid
	EmailMessageAttachmentSid int64 `protobuf:"varint,1,opt,name=email_message_attachment_sid,json=emailMessageAttachmentSid,proto3" json:"email_message_attachment_sid,omitempty"`
	// url path
	UrlPath string `protobuf:"bytes,2,opt,name=url_path,json=urlPath,proto3" json:"url_path,omitempty"`
	// google storage path
	GsPath string `protobuf:"bytes,3,opt,name=gs_path,json=gsPath,proto3" json:"gs_path,omitempty"`
}

func (x *CreateEmailMessageAttachmentRes) Reset() {
	*x = CreateEmailMessageAttachmentRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEmailMessageAttachmentRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEmailMessageAttachmentRes) ProtoMessage() {}

func (x *CreateEmailMessageAttachmentRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEmailMessageAttachmentRes.ProtoReflect.Descriptor instead.
func (*CreateEmailMessageAttachmentRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{107}
}

func (x *CreateEmailMessageAttachmentRes) GetEmailMessageAttachmentSid() int64 {
	if x != nil {
		return x.EmailMessageAttachmentSid
	}
	return 0
}

func (x *CreateEmailMessageAttachmentRes) GetUrlPath() string {
	if x != nil {
		return x.UrlPath
	}
	return ""
}

func (x *CreateEmailMessageAttachmentRes) GetGsPath() string {
	if x != nil {
		return x.GsPath
	}
	return ""
}

// request to get list of email message attachments
type ListEmailMessageAttachmentsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailMessageSid int64 `protobuf:"varint,1,opt,name=email_message_sid,json=emailMessageSid,proto3" json:"email_message_sid,omitempty"`
}

func (x *ListEmailMessageAttachmentsReq) Reset() {
	*x = ListEmailMessageAttachmentsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEmailMessageAttachmentsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEmailMessageAttachmentsReq) ProtoMessage() {}

func (x *ListEmailMessageAttachmentsReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEmailMessageAttachmentsReq.ProtoReflect.Descriptor instead.
func (*ListEmailMessageAttachmentsReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{108}
}

func (x *ListEmailMessageAttachmentsReq) GetEmailMessageSid() int64 {
	if x != nil {
		return x.EmailMessageSid
	}
	return 0
}

// response to get list of email message attachments
type ListEmailMessageAttachmentsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailMessageAttachments []*EmailMessageAttachment `protobuf:"bytes,1,rep,name=email_message_attachments,json=emailMessageAttachments,proto3" json:"email_message_attachments,omitempty"`
}

func (x *ListEmailMessageAttachmentsRes) Reset() {
	*x = ListEmailMessageAttachmentsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEmailMessageAttachmentsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEmailMessageAttachmentsRes) ProtoMessage() {}

func (x *ListEmailMessageAttachmentsRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEmailMessageAttachmentsRes.ProtoReflect.Descriptor instead.
func (*ListEmailMessageAttachmentsRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{109}
}

func (x *ListEmailMessageAttachmentsRes) GetEmailMessageAttachments() []*EmailMessageAttachment {
	if x != nil {
		return x.EmailMessageAttachments
	}
	return nil
}

type EmailMessageAttachment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailMessageAttachmentSid int64  `protobuf:"varint,1,opt,name=email_message_attachment_sid,json=emailMessageAttachmentSid,proto3" json:"email_message_attachment_sid,omitempty"`
	EmailMessageSid           int64  `protobuf:"varint,2,opt,name=email_message_sid,json=emailMessageSid,proto3" json:"email_message_sid,omitempty"`
	FileName                  string `protobuf:"bytes,3,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	FileSize                  int64  `protobuf:"varint,4,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`
	ContentType               string `protobuf:"bytes,5,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	Hash                      string `protobuf:"bytes,6,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *EmailMessageAttachment) Reset() {
	*x = EmailMessageAttachment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailMessageAttachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailMessageAttachment) ProtoMessage() {}

func (x *EmailMessageAttachment) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailMessageAttachment.ProtoReflect.Descriptor instead.
func (*EmailMessageAttachment) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{110}
}

func (x *EmailMessageAttachment) GetEmailMessageAttachmentSid() int64 {
	if x != nil {
		return x.EmailMessageAttachmentSid
	}
	return 0
}

func (x *EmailMessageAttachment) GetEmailMessageSid() int64 {
	if x != nil {
		return x.EmailMessageSid
	}
	return 0
}

func (x *EmailMessageAttachment) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *EmailMessageAttachment) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *EmailMessageAttachment) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *EmailMessageAttachment) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

// request to unassign email conversation
type UnassignCurrentUserFromEmailConversationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// email conversation id
	EmailConversationId string `protobuf:"bytes,1,opt,name=email_conversation_id,json=emailConversationId,proto3" json:"email_conversation_id,omitempty"`
}

func (x *UnassignCurrentUserFromEmailConversationReq) Reset() {
	*x = UnassignCurrentUserFromEmailConversationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnassignCurrentUserFromEmailConversationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnassignCurrentUserFromEmailConversationReq) ProtoMessage() {}

func (x *UnassignCurrentUserFromEmailConversationReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnassignCurrentUserFromEmailConversationReq.ProtoReflect.Descriptor instead.
func (*UnassignCurrentUserFromEmailConversationReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{111}
}

func (x *UnassignCurrentUserFromEmailConversationReq) GetEmailConversationId() string {
	if x != nil {
		return x.EmailConversationId
	}
	return ""
}

// response to unassign email conversation
type UnassignUserFromEmailConversationRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnassignUserFromEmailConversationRes) Reset() {
	*x = UnassignUserFromEmailConversationRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnassignUserFromEmailConversationRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnassignUserFromEmailConversationRes) ProtoMessage() {}

func (x *UnassignUserFromEmailConversationRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnassignUserFromEmailConversationRes.ProtoReflect.Descriptor instead.
func (*UnassignUserFromEmailConversationRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{112}
}

// get the email conversations for omni dashboard
type DashboardEmailConversationSearchReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// start date of the search
	SearchFrom *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=search_from,json=searchFrom,proto3" json:"search_from,omitempty"`
	// end date for the search
	SearchTo *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=search_to,json=searchTo,proto3" json:"search_to,omitempty"`
}

func (x *DashboardEmailConversationSearchReq) Reset() {
	*x = DashboardEmailConversationSearchReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DashboardEmailConversationSearchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DashboardEmailConversationSearchReq) ProtoMessage() {}

func (x *DashboardEmailConversationSearchReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DashboardEmailConversationSearchReq.ProtoReflect.Descriptor instead.
func (*DashboardEmailConversationSearchReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{113}
}

func (x *DashboardEmailConversationSearchReq) GetSearchFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.SearchFrom
	}
	return nil
}

func (x *DashboardEmailConversationSearchReq) GetSearchTo() *timestamppb.Timestamp {
	if x != nil {
		return x.SearchTo
	}
	return nil
}

// DashboardEmailConversationSearchRes
type DashboardEmailConversationSearchRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// list of email conversations for the dashboard
	DashboardEmailConversationResEntrys []*DashboardEmailConversationResEntry `protobuf:"bytes,1,rep,name=dashboard_email_conversation_res_entrys,json=dashboardEmailConversationResEntrys,proto3" json:"dashboard_email_conversation_res_entrys,omitempty"`
}

func (x *DashboardEmailConversationSearchRes) Reset() {
	*x = DashboardEmailConversationSearchRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DashboardEmailConversationSearchRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DashboardEmailConversationSearchRes) ProtoMessage() {}

func (x *DashboardEmailConversationSearchRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DashboardEmailConversationSearchRes.ProtoReflect.Descriptor instead.
func (*DashboardEmailConversationSearchRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{114}
}

func (x *DashboardEmailConversationSearchRes) GetDashboardEmailConversationResEntrys() []*DashboardEmailConversationResEntry {
	if x != nil {
		return x.DashboardEmailConversationResEntrys
	}
	return nil
}

// DashboardEmailConversationResEntry -
type DashboardEmailConversationResEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// EmailConversation
	EmailConversation *EmailConversation `protobuf:"bytes,1,opt,name=email_conversation,json=emailConversation,proto3" json:"email_conversation,omitempty"`
	// list of agents assigned to conversation
	EmailConversationAssignedUsers []*EmailConversationAssignedUser `protobuf:"bytes,2,rep,name=email_conversation_assigned_users,json=emailConversationAssignedUsers,proto3" json:"email_conversation_assigned_users,omitempty"`
	// associated campaign name
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DashboardEmailConversationResEntry) Reset() {
	*x = DashboardEmailConversationResEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DashboardEmailConversationResEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DashboardEmailConversationResEntry) ProtoMessage() {}

func (x *DashboardEmailConversationResEntry) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DashboardEmailConversationResEntry.ProtoReflect.Descriptor instead.
func (*DashboardEmailConversationResEntry) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{115}
}

func (x *DashboardEmailConversationResEntry) GetEmailConversation() *EmailConversation {
	if x != nil {
		return x.EmailConversation
	}
	return nil
}

func (x *DashboardEmailConversationResEntry) GetEmailConversationAssignedUsers() []*EmailConversationAssignedUser {
	if x != nil {
		return x.EmailConversationAssignedUsers
	}
	return nil
}

func (x *DashboardEmailConversationResEntry) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type EmailConversationAssignedUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// assignment Type
	AssignmentType commons.AgentConversationAssignmentType `protobuf:"varint,2,opt,name=assignment_type,json=assignmentType,proto3,enum=api.commons.AgentConversationAssignmentType" json:"assignment_type,omitempty"`
	// Notify
	Notify bool `protobuf:"varint,3,opt,name=notify,proto3" json:"notify,omitempty"`
	// conversation id
	ConversationId string `protobuf:"bytes,4,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	// last updated time
	AssignedLastUpdatedTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=assigned_last_updated_time,json=assignedLastUpdatedTime,proto3" json:"assigned_last_updated_time,omitempty"`
	// assignemnt status
	AssignmentStatus commons.AgentConversationAssignmentStatus `protobuf:"varint,6,opt,name=assignment_status,json=assignmentStatus,proto3,enum=api.commons.AgentConversationAssignmentStatus" json:"assignment_status,omitempty"`
	// name of the agent
	UserName *wrapperspb.StringValue `protobuf:"bytes,7,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	// id of the agent
	UserId string `protobuf:"bytes,8,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *EmailConversationAssignedUser) Reset() {
	*x = EmailConversationAssignedUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailConversationAssignedUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailConversationAssignedUser) ProtoMessage() {}

func (x *EmailConversationAssignedUser) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailConversationAssignedUser.ProtoReflect.Descriptor instead.
func (*EmailConversationAssignedUser) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{116}
}

func (x *EmailConversationAssignedUser) GetAssignmentType() commons.AgentConversationAssignmentType {
	if x != nil {
		return x.AssignmentType
	}
	return commons.AgentConversationAssignmentType(0)
}

func (x *EmailConversationAssignedUser) GetNotify() bool {
	if x != nil {
		return x.Notify
	}
	return false
}

func (x *EmailConversationAssignedUser) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *EmailConversationAssignedUser) GetAssignedLastUpdatedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.AssignedLastUpdatedTime
	}
	return nil
}

func (x *EmailConversationAssignedUser) GetAssignmentStatus() commons.AgentConversationAssignmentStatus {
	if x != nil {
		return x.AssignmentStatus
	}
	return commons.AgentConversationAssignmentStatus(0)
}

func (x *EmailConversationAssignedUser) GetUserName() *wrapperspb.StringValue {
	if x != nil {
		return x.UserName
	}
	return nil
}

func (x *EmailConversationAssignedUser) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type EmailConversation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// conversation id
	ConversationId *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	// org_id
	OrgId string `protobuf:"bytes,2,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	// region_id
	RegionId string `protobuf:"bytes,3,opt,name=region_id,json=regionId,proto3" json:"region_id,omitempty"`
	// Email group id for inbound comapigns
	EmailInboundGroupId *wrapperspb.StringValue `protobuf:"bytes,4,opt,name=email_inbound_group_id,json=emailInboundGroupId,proto3" json:"email_inbound_group_id,omitempty"`
	// Time of birth
	ConversationCreatedTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=conversation_created_time,json=conversationCreatedTime,proto3" json:"conversation_created_time,omitempty"`
	// Needed skills
	Skills *EmailConversationSkills `protobuf:"bytes,6,opt,name=skills,proto3" json:"skills,omitempty"`
	// Status of the conversaton
	ConversationStatus commons.ConversationStatus `protobuf:"varint,7,opt,name=conversation_status,json=conversationStatus,proto3,enum=api.commons.ConversationStatus" json:"conversation_status,omitempty"`
	// last message time stamp
	LastMessageTime *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=last_message_time,json=lastMessageTime,proto3" json:"last_message_time,omitempty"`
	// customer's email
	CustomerEmail string `protobuf:"bytes,9,opt,name=customer_email,json=customerEmail,proto3" json:"customer_email,omitempty"`
	// customer's name
	CustomerName string `protobuf:"bytes,10,opt,name=customer_name,json=customerName,proto3" json:"customer_name,omitempty"`
	// Email group id for outbound campaigns
	EmailGroupId *wrapperspb.StringValue `protobuf:"bytes,11,opt,name=email_group_id,json=emailGroupId,proto3" json:"email_group_id,omitempty"`
	// sla and timeouts
	SlaTimeouts *commons.SLATimeouts `protobuf:"bytes,12,opt,name=sla_timeouts,json=slaTimeouts,proto3" json:"sla_timeouts,omitempty"`
}

func (x *EmailConversation) Reset() {
	*x = EmailConversation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailConversation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailConversation) ProtoMessage() {}

func (x *EmailConversation) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailConversation.ProtoReflect.Descriptor instead.
func (*EmailConversation) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{117}
}

func (x *EmailConversation) GetConversationId() *wrapperspb.StringValue {
	if x != nil {
		return x.ConversationId
	}
	return nil
}

func (x *EmailConversation) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *EmailConversation) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

func (x *EmailConversation) GetEmailInboundGroupId() *wrapperspb.StringValue {
	if x != nil {
		return x.EmailInboundGroupId
	}
	return nil
}

func (x *EmailConversation) GetConversationCreatedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ConversationCreatedTime
	}
	return nil
}

func (x *EmailConversation) GetSkills() *EmailConversationSkills {
	if x != nil {
		return x.Skills
	}
	return nil
}

func (x *EmailConversation) GetConversationStatus() commons.ConversationStatus {
	if x != nil {
		return x.ConversationStatus
	}
	return commons.ConversationStatus(0)
}

func (x *EmailConversation) GetLastMessageTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastMessageTime
	}
	return nil
}

func (x *EmailConversation) GetCustomerEmail() string {
	if x != nil {
		return x.CustomerEmail
	}
	return ""
}

func (x *EmailConversation) GetCustomerName() string {
	if x != nil {
		return x.CustomerName
	}
	return ""
}

func (x *EmailConversation) GetEmailGroupId() *wrapperspb.StringValue {
	if x != nil {
		return x.EmailGroupId
	}
	return nil
}

func (x *EmailConversation) GetSlaTimeouts() *commons.SLATimeouts {
	if x != nil {
		return x.SlaTimeouts
	}
	return nil
}

// ReassignEmailConversationReq - For OMNIBOSS dashbard.
type ReassignEmailConversationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// chat_conversation_id
	EmailConversationId string `protobuf:"bytes,2,opt,name=email_conversation_id,json=emailConversationId,proto3" json:"email_conversation_id,omitempty"`
	// current user
	CurrentAssignedUser string `protobuf:"bytes,3,opt,name=current_assigned_user,json=currentAssignedUser,proto3" json:"current_assigned_user,omitempty"`
	// new_user
	NewAssignedUser string `protobuf:"bytes,4,opt,name=new_assigned_user,json=newAssignedUser,proto3" json:"new_assigned_user,omitempty"`
}

func (x *ReassignEmailConversationReq) Reset() {
	*x = ReassignEmailConversationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReassignEmailConversationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReassignEmailConversationReq) ProtoMessage() {}

func (x *ReassignEmailConversationReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReassignEmailConversationReq.ProtoReflect.Descriptor instead.
func (*ReassignEmailConversationReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{118}
}

func (x *ReassignEmailConversationReq) GetEmailConversationId() string {
	if x != nil {
		return x.EmailConversationId
	}
	return ""
}

func (x *ReassignEmailConversationReq) GetCurrentAssignedUser() string {
	if x != nil {
		return x.CurrentAssignedUser
	}
	return ""
}

func (x *ReassignEmailConversationReq) GetNewAssignedUser() string {
	if x != nil {
		return x.NewAssignedUser
	}
	return ""
}

// ReassignEmailConversationRes - For OMNIBOSS dashbard.
type ReassignEmailConversationRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReassignEmailConversationRes) Reset() {
	*x = ReassignEmailConversationRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReassignEmailConversationRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReassignEmailConversationRes) ProtoMessage() {}

func (x *ReassignEmailConversationRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReassignEmailConversationRes.ProtoReflect.Descriptor instead.
func (*ReassignEmailConversationRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{119}
}

// AssignEmailConversationReq
type AssignEmailConversationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// EmailConversationId
	EmailConversationId string `protobuf:"bytes,2,opt,name=email_conversation_id,json=emailConversationId,proto3" json:"email_conversation_id,omitempty"`
	// UserId
	UserId string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// AssignmentType
	AssignmentType commons.AgentConversationAssignmentType `protobuf:"varint,4,opt,name=assignment_type,json=assignmentType,proto3,enum=api.commons.AgentConversationAssignmentType" json:"assignment_type,omitempty"`
}

func (x *AssignEmailConversationReq) Reset() {
	*x = AssignEmailConversationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignEmailConversationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignEmailConversationReq) ProtoMessage() {}

func (x *AssignEmailConversationReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignEmailConversationReq.ProtoReflect.Descriptor instead.
func (*AssignEmailConversationReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{120}
}

func (x *AssignEmailConversationReq) GetEmailConversationId() string {
	if x != nil {
		return x.EmailConversationId
	}
	return ""
}

func (x *AssignEmailConversationReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AssignEmailConversationReq) GetAssignmentType() commons.AgentConversationAssignmentType {
	if x != nil {
		return x.AssignmentType
	}
	return commons.AgentConversationAssignmentType(0)
}

// AssignEmailConversationRes -
type AssignEmailConversationRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// send back ghost notifier referenceID
	ReferenceId string `protobuf:"bytes,1,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"`
}

func (x *AssignEmailConversationRes) Reset() {
	*x = AssignEmailConversationRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignEmailConversationRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignEmailConversationRes) ProtoMessage() {}

func (x *AssignEmailConversationRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignEmailConversationRes.ProtoReflect.Descriptor instead.
func (*AssignEmailConversationRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{121}
}

func (x *AssignEmailConversationRes) GetReferenceId() string {
	if x != nil {
		return x.ReferenceId
	}
	return ""
}

// request used to suspend an email conversation
type SuspendEmailConversationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the id of the conversation to be suspended
	EmailConversationId string `protobuf:"bytes,1,opt,name=email_conversation_id,json=emailConversationId,proto3" json:"email_conversation_id,omitempty"`
}

func (x *SuspendEmailConversationReq) Reset() {
	*x = SuspendEmailConversationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuspendEmailConversationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuspendEmailConversationReq) ProtoMessage() {}

func (x *SuspendEmailConversationReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuspendEmailConversationReq.ProtoReflect.Descriptor instead.
func (*SuspendEmailConversationReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{122}
}

func (x *SuspendEmailConversationReq) GetEmailConversationId() string {
	if x != nil {
		return x.EmailConversationId
	}
	return ""
}

// response used after suspending an email conversation
type SuspendEmailConversationRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SuspendEmailConversationRes) Reset() {
	*x = SuspendEmailConversationRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuspendEmailConversationRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuspendEmailConversationRes) ProtoMessage() {}

func (x *SuspendEmailConversationRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuspendEmailConversationRes.ProtoReflect.Descriptor instead.
func (*SuspendEmailConversationRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{123}
}

// request for listing campaigns based on connectedInboxId
type ListCampaignsByConnectedInboxIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// connected_inbox_id
	ConnectedInboxId string `protobuf:"bytes,1,opt,name=connected_inbox_id,json=connectedInboxId,proto3" json:"connected_inbox_id,omitempty"`
}

func (x *ListCampaignsByConnectedInboxIdReq) Reset() {
	*x = ListCampaignsByConnectedInboxIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCampaignsByConnectedInboxIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCampaignsByConnectedInboxIdReq) ProtoMessage() {}

func (x *ListCampaignsByConnectedInboxIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCampaignsByConnectedInboxIdReq.ProtoReflect.Descriptor instead.
func (*ListCampaignsByConnectedInboxIdReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{124}
}

func (x *ListCampaignsByConnectedInboxIdReq) GetConnectedInboxId() string {
	if x != nil {
		return x.ConnectedInboxId
	}
	return ""
}

// response for listing campaigns based on connectedInboxId
type ListCampaignsByConnectedInboxIdRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// connected inbox details
	ConnectedInbox *ConnectedInbox `protobuf:"bytes,1,opt,name=connected_inbox,json=connectedInbox,proto3" json:"connected_inbox,omitempty"`
	// list of inbound_email_campaigns with project details
	InboundEmailCampaigns []*InboundEmailCampaignWithProjectDetails `protobuf:"bytes,2,rep,name=inbound_email_campaigns,json=inboundEmailCampaigns,proto3" json:"inbound_email_campaigns,omitempty"`
	// list of outbound_email_campaigns with project details
	OutboundEmailCampaigns []*OutboundEmailCampaignWithProjectDetails `protobuf:"bytes,3,rep,name=outbound_email_campaigns,json=outboundEmailCampaigns,proto3" json:"outbound_email_campaigns,omitempty"`
}

func (x *ListCampaignsByConnectedInboxIdRes) Reset() {
	*x = ListCampaignsByConnectedInboxIdRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCampaignsByConnectedInboxIdRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCampaignsByConnectedInboxIdRes) ProtoMessage() {}

func (x *ListCampaignsByConnectedInboxIdRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCampaignsByConnectedInboxIdRes.ProtoReflect.Descriptor instead.
func (*ListCampaignsByConnectedInboxIdRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{125}
}

func (x *ListCampaignsByConnectedInboxIdRes) GetConnectedInbox() *ConnectedInbox {
	if x != nil {
		return x.ConnectedInbox
	}
	return nil
}

func (x *ListCampaignsByConnectedInboxIdRes) GetInboundEmailCampaigns() []*InboundEmailCampaignWithProjectDetails {
	if x != nil {
		return x.InboundEmailCampaigns
	}
	return nil
}

func (x *ListCampaignsByConnectedInboxIdRes) GetOutboundEmailCampaigns() []*OutboundEmailCampaignWithProjectDetails {
	if x != nil {
		return x.OutboundEmailCampaigns
	}
	return nil
}

// inbound email campaign and project details
type InboundEmailCampaignWithProjectDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// campaign id
	CampaignId string `protobuf:"bytes,1,opt,name=campaign_id,json=campaignId,proto3" json:"campaign_id,omitempty"`
	// campaign name
	CampaignName string `protobuf:"bytes,2,opt,name=campaign_name,json=campaignName,proto3" json:"campaign_name,omitempty"`
	// campaign status
	Status commons.EmailIBGroupStatus `protobuf:"varint,3,opt,name=status,proto3,enum=api.commons.EmailIBGroupStatus" json:"status,omitempty"`
	// project id
	ProjectId string `protobuf:"bytes,4,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// project name
	ProjectName string `protobuf:"bytes,5,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
}

func (x *InboundEmailCampaignWithProjectDetails) Reset() {
	*x = InboundEmailCampaignWithProjectDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InboundEmailCampaignWithProjectDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InboundEmailCampaignWithProjectDetails) ProtoMessage() {}

func (x *InboundEmailCampaignWithProjectDetails) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InboundEmailCampaignWithProjectDetails.ProtoReflect.Descriptor instead.
func (*InboundEmailCampaignWithProjectDetails) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{126}
}

func (x *InboundEmailCampaignWithProjectDetails) GetCampaignId() string {
	if x != nil {
		return x.CampaignId
	}
	return ""
}

func (x *InboundEmailCampaignWithProjectDetails) GetCampaignName() string {
	if x != nil {
		return x.CampaignName
	}
	return ""
}

func (x *InboundEmailCampaignWithProjectDetails) GetStatus() commons.EmailIBGroupStatus {
	if x != nil {
		return x.Status
	}
	return commons.EmailIBGroupStatus(0)
}

func (x *InboundEmailCampaignWithProjectDetails) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *InboundEmailCampaignWithProjectDetails) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

// outbound email campaign and project details
type OutboundEmailCampaignWithProjectDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// campaign id
	CampaignId string `protobuf:"bytes,1,opt,name=campaign_id,json=campaignId,proto3" json:"campaign_id,omitempty"`
	// campaign sid
	CampaignSid int64 `protobuf:"varint,2,opt,name=campaign_sid,json=campaignSid,proto3" json:"campaign_sid,omitempty"`
	// campaign name
	CampaignName string `protobuf:"bytes,3,opt,name=campaign_name,json=campaignName,proto3" json:"campaign_name,omitempty"`
	// campaign status
	Status commons.EmailStatus `protobuf:"varint,4,opt,name=status,proto3,enum=api.commons.EmailStatus" json:"status,omitempty"`
	// project id
	ProjectId string `protobuf:"bytes,5,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// project name
	ProjectName string `protobuf:"bytes,6,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
}

func (x *OutboundEmailCampaignWithProjectDetails) Reset() {
	*x = OutboundEmailCampaignWithProjectDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OutboundEmailCampaignWithProjectDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutboundEmailCampaignWithProjectDetails) ProtoMessage() {}

func (x *OutboundEmailCampaignWithProjectDetails) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OutboundEmailCampaignWithProjectDetails.ProtoReflect.Descriptor instead.
func (*OutboundEmailCampaignWithProjectDetails) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{127}
}

func (x *OutboundEmailCampaignWithProjectDetails) GetCampaignId() string {
	if x != nil {
		return x.CampaignId
	}
	return ""
}

func (x *OutboundEmailCampaignWithProjectDetails) GetCampaignSid() int64 {
	if x != nil {
		return x.CampaignSid
	}
	return 0
}

func (x *OutboundEmailCampaignWithProjectDetails) GetCampaignName() string {
	if x != nil {
		return x.CampaignName
	}
	return ""
}

func (x *OutboundEmailCampaignWithProjectDetails) GetStatus() commons.EmailStatus {
	if x != nil {
		return x.Status
	}
	return commons.EmailStatus(0)
}

func (x *OutboundEmailCampaignWithProjectDetails) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *OutboundEmailCampaignWithProjectDetails) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

// req for closing email conversation
type CloseEmailConversationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// email conversation id
	EmailConversationId string `protobuf:"bytes,1,opt,name=email_conversation_id,json=emailConversationId,proto3" json:"email_conversation_id,omitempty"`
	// email conversation status
	Status commons.ConversationStatus `protobuf:"varint,2,opt,name=status,proto3,enum=api.commons.ConversationStatus" json:"status,omitempty"`
}

func (x *CloseEmailConversationReq) Reset() {
	*x = CloseEmailConversationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseEmailConversationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseEmailConversationReq) ProtoMessage() {}

func (x *CloseEmailConversationReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseEmailConversationReq.ProtoReflect.Descriptor instead.
func (*CloseEmailConversationReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{128}
}

func (x *CloseEmailConversationReq) GetEmailConversationId() string {
	if x != nil {
		return x.EmailConversationId
	}
	return ""
}

func (x *CloseEmailConversationReq) GetStatus() commons.ConversationStatus {
	if x != nil {
		return x.Status
	}
	return commons.ConversationStatus(0)
}

// res for closing email conversation
type CloseEmailConversationRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CloseEmailConversationRes) Reset() {
	*x = CloseEmailConversationRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_emailapi_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseEmailConversationRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseEmailConversationRes) ProtoMessage() {}

func (x *CloseEmailConversationRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_emailapi_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseEmailConversationRes.ProtoReflect.Descriptor instead.
func (*CloseEmailConversationRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_emailapi_proto_rawDescGZIP(), []int{129}
}

var File_api_v0alpha_emailapi_proto protoreflect.FileDescriptor

var file_api_v0alpha_emailapi_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x1a, 0x17, 0x61, 0x70, 0x69, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1d, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2f,
	0x6f, 0x6d, 0x6e, 0x69, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x1e, 0x0a, 0x1c, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71,
	0x22, 0xb3, 0x02, 0x0a, 0x1c, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x55, 0x6e, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65,
	0x73, 0x12, 0x4a, 0x0a, 0x22, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x5f, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x75, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1e, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x55, 0x73, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x55, 0x6e, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x81, 0x01,
	0x0a, 0x40, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x61,
	0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x73, 0x5f, 0x74, 0x68, 0x61, 0x74,
	0x5f, 0x74, 0x68, 0x65, 0x79, 0x5f, 0x61, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6f, 0x70, 0x74, 0x5f, 0x6f, 0x75,
	0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x37, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x73, 0x54, 0x68, 0x61, 0x74, 0x54, 0x68, 0x65, 0x79, 0x41, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x4f, 0x70, 0x74, 0x4f, 0x75, 0x74,
	0x73, 0x12, 0x43, 0x0a, 0x1e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x5f, 0x75, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x5f, 0x6c,
	0x69, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1b, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x22, 0x5c, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x62,
	0x6f, 0x64, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x42, 0x6f, 0x64, 0x79, 0x22, 0x46, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x12, 0x2c,
	0x0a, 0x12, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x5f, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x69, 0x64, 0x22, 0x8a, 0x01, 0x0a,
	0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x2c, 0x0a, 0x12, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x10, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x53, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x42, 0x6f, 0x64, 0x79, 0x22, 0x30, 0x0a, 0x16, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x46, 0x0a, 0x16, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x2c, 0x0a, 0x12, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x10, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x53, 0x69, 0x64, 0x22, 0x30, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xc7, 0x01, 0x0a, 0x14, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x2c,
	0x0a, 0x12, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x5f, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x42, 0x6f, 0x64, 0x79,
	0x12, 0x3d, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22,
	0x5a, 0x0a, 0x13, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x73, 0x22, 0x2d, 0x0a, 0x13, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x6f, 0x0a, 0x1b, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x6e, 0x64, 0x73, 0x50, 0x65, 0x72,
	0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x0f, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x69,
	0x64, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x65, 0x6e, 0x64, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x6d,
	0x69, 0x6e, 0x75, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x73, 0x65, 0x6e,
	0x64, 0x73, 0x50, 0x65, 0x72, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x22, 0x35, 0x0a, 0x1b, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x6e, 0x64, 0x73, 0x50, 0x65,
	0x72, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0xb8, 0x01, 0x0a, 0x1a, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x26, 0x0a, 0x0f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x73, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x08, 0x73, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x34, 0x0a,
	0x1a, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x21, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4c, 0x69,
	0x6e, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x22, 0xbe, 0x02, 0x0a, 0x1a, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x48, 0x0a, 0x21, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x75, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x1d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x55, 0x6e, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x69, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x69, 0x6e, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6c, 0x69, 0x6e, 0x6b, 0x55, 0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x41, 0x0a, 0x0e, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x64, 0x61, 0x74, 0x65, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x3d, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0x8d, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x12, 0x6a, 0x0a, 0x1d, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x75, 0x6e, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x55, 0x6e, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x1a, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x22, 0x19, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x22, 0x8b, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x12, 0x70,
	0x0a, 0x1f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x57, 0x69, 0x74, 0x68, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x1c, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x57, 0x69, 0x74, 0x68, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x22, 0x50, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x42, 0x79, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x69,
	0x64, 0x52, 0x65, 0x71, 0x12, 0x2c, 0x0a, 0x12, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x10, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53,
	0x69, 0x64, 0x22, 0xc7, 0x02, 0x0a, 0x1c, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x57, 0x69, 0x74, 0x68, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x10, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x69,
	0x64, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x53,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f,
	0x62, 0x6f, 0x64, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x3d, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x76, 0x0a, 0x21, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x1e, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0xc5, 0x03, 0x0a,
	0x14, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x73, 0x74, 0x72, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x74,
	0x61, 0x73, 0x6b, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x53, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x36, 0x0a, 0x17,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x73, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x0a,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x0c, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x42, 0x0a, 0x0e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6c,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0xac, 0x07, 0x0a, 0x1a, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x52, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x53, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x73, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x28, 0x0a, 0x10, 0x73, 0x65, 0x6e, 0x64, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x6d, 0x69, 0x6e,
	0x75, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x73, 0x65, 0x6e, 0x64, 0x73,
	0x50, 0x65, 0x72, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x72,
	0x6f, 0x6d, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x42, 0x0a,
	0x0e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x0c, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x12, 0x4f, 0x0a, 0x15, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x73, 0x69, 0x64, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x69,
	0x64, 0x53, 0x74, 0x72, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x69, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x12, 0x42, 0x0a, 0x0e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x0c, 0x73, 0x6c, 0x61, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x53, 0x4c, 0x41, 0x54, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x73, 0x52, 0x0b, 0x73, 0x6c, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x73, 0x22, 0xbe, 0x01, 0x0a, 0x13, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x12, 0x3b, 0x0a, 0x0b, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x37, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x5f, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54,
	0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x73, 0x74, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x74, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x82, 0x01, 0x0a, 0x13, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x12, 0x6b, 0x0a, 0x1e,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x52, 0x1a, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x22, 0x4f, 0x0a, 0x1c, 0x47, 0x65, 0x74,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x42, 0x79, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x53, 0x69, 0x64, 0x73, 0x52, 0x65, 0x71, 0x12, 0x2f, 0x0a, 0x14, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x73, 0x69, 0x64, 0x73, 0x5f, 0x61, 0x72,
	0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x11, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x53, 0x69, 0x64, 0x73, 0x41, 0x72, 0x72, 0x22, 0x8b, 0x01, 0x0a, 0x1c, 0x47,
	0x65, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x42, 0x79, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x53, 0x69, 0x64, 0x73, 0x52, 0x65, 0x73, 0x12, 0x6b, 0x0a, 0x1e, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x52, 0x1a, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x22, 0x44, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x53, 0x69, 0x64, 0x52, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x0f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x69, 0x64, 0x22, 0xd7,
	0x08, 0x0a, 0x20, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x57, 0x69, 0x74, 0x68, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x53, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x73, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x28, 0x0a, 0x10, 0x73, 0x65, 0x6e, 0x64, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x6d, 0x69, 0x6e,
	0x75, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x73, 0x65, 0x6e, 0x64, 0x73,
	0x50, 0x65, 0x72, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x72,
	0x6f, 0x6d, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x42, 0x0a,
	0x0e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x0c, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x12, 0x4f, 0x0a, 0x15, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x73, 0x69, 0x64, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x69,
	0x64, 0x53, 0x74, 0x72, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x69, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x12, 0x42, 0x0a, 0x0e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x5f, 0x0a, 0x19, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x18, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x17, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x3b, 0x0a, 0x0c, 0x73,
	0x6c, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x73, 0x18, 0x19, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e,
	0x53, 0x4c, 0x41, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x73, 0x52, 0x0b, 0x73, 0x6c, 0x61,
	0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x73, 0x22, 0x41, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x24, 0x0a, 0x0e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x4e, 0x0a, 0x1b, 0x47,
	0x65, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x42, 0x79, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x53, 0x69, 0x64, 0x73, 0x52, 0x65, 0x71, 0x12, 0x2f, 0x0a, 0x14, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x73, 0x69, 0x64, 0x73, 0x5f, 0x61,
	0x72, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x11, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x53, 0x69, 0x64, 0x73, 0x41, 0x72, 0x72, 0x22, 0x77, 0x0a, 0x1b, 0x47,
	0x65, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x42, 0x79, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x53, 0x69, 0x64, 0x73, 0x52, 0x65, 0x73, 0x12, 0x58, 0x0a, 0x17, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6d, 0x73, 0x74, 0x72, 0x5f, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54,
	0x61, 0x73, 0x6b, 0x4d, 0x73, 0x74, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x14,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x73, 0x74, 0x72, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x22, 0x82, 0x02, 0x0a, 0x1e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x41, 0x0a, 0x1d, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1a,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0x9a, 0x01, 0x0a, 0x20, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x12, 0x76,
	0x0a, 0x21, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x1e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0xad, 0x01, 0x0a, 0x20, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x2c, 0x0a, 0x12, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x99, 0x01, 0x0a, 0x20, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x12, 0x41, 0x0a, 0x1d, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x1a, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x75, 0x72, 0x6c, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x75, 0x72, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x73, 0x5f,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x73, 0x50, 0x61,
	0x74, 0x68, 0x22, 0x72, 0x0a, 0x23, 0x43, 0x6f, 0x70, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x57, 0x69, 0x74, 0x68, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x2c, 0x0a, 0x12, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x53, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x5f, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x42, 0x6f, 0x64, 0x79, 0x22, 0x53, 0x0a, 0x23, 0x43, 0x6f, 0x70, 0x79, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x57, 0x69, 0x74, 0x68, 0x41,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x12, 0x2c, 0x0a,
	0x12, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f,
	0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x69, 0x64, 0x22, 0x40, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x2a, 0x0a, 0x11, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x69, 0x64, 0x22, 0x84, 0x01,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x69, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x62,
	0x6f, 0x64, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x42, 0x6f, 0x64, 0x79, 0x22, 0xf8, 0x03, 0x0a, 0x0b, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x2c, 0x0a, 0x12, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x10, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53,
	0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x70, 0x61,
	0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x6c, 0x50, 0x61, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x43, 0x6f, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f,
	0x64, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x44, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x2a, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x73, 0x74, 0x6f, 0x70, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x73, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x3b, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x5b, 0x0a, 0x0b, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x12, 0x26,
	0x0a, 0x0f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x73, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x53, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0xa0, 0x05, 0x0a,
	0x1d, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e,
	0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x12, 0x21,
	0x0a, 0x0c, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x50, 0x61, 0x63,
	0x65, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6c, 0x12,
	0x21, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x64, 0x75, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x61, 0x6c,
	0x6c, 0x6f, 0x77, 0x44, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x73, 0x69,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x08, 0x73, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x42, 0x6f, 0x64, 0x79, 0x12,
	0x41, 0x0a, 0x1d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x69, 0x64, 0x73,
	0x18, 0x0f, 0x20, 0x03, 0x28, 0x03, 0x52, 0x1a, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x69,
	0x64, 0x73, 0x12, 0x3b, 0x0a, 0x0c, 0x73, 0x6c, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x53, 0x4c, 0x41, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x73, 0x52, 0x0b, 0x73, 0x6c, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x73, 0x22,
	0x6d, 0x0a, 0x1d, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73,
	0x12, 0x26, 0x0a, 0x0f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x85,
	0x01, 0x0a, 0x13, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x5f, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x42, 0x6f, 0x64, 0x79, 0x22, 0xb9, 0x07, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x62, 0x6f, 0x78, 0x12, 0x4a, 0x0a, 0x12, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x62, 0x6f, 0x78, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49, 0x6e,
	0x62, 0x6f, 0x78, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x36, 0x0a, 0x17, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x66, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x15, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x79, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x4a, 0x0a, 0x13,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x75, 0x72, 0x67, 0x65,
	0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x70, 0x75, 0x72, 0x67, 0x65, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64,
	0x12, 0x3d, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x38, 0x0a, 0x18, 0x6e, 0x75, 0x6d, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x76, 0x65, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x16, 0x6e, 0x75, 0x6d, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x63, 0x75, 0x74, 0x69, 0x76,
	0x65, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x73, 0x12, 0x3b, 0x0a, 0x0a, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x6c, 0x61, 0x73,
	0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x48, 0x0a, 0x12, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x62,
	0x79, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x10,
	0x73, 0x74, 0x61, 0x6e, 0x64, 0x62, 0x79, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x28, 0x0a, 0x10, 0x6d, 0x61, 0x78, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6d, 0x61, 0x78, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61,
	0x78, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x6d, 0x61, 0x78, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x23, 0x0a,
	0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x5e, 0x0a, 0x13, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x62, 0x6f, 0x78, 0x41, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x12,
	0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x9f, 0x01, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x5f, 0x69, 0x6e, 0x62, 0x6f, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x62, 0x6f, 0x78,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x52, 0x06, 0x73, 0x6b,
	0x69, 0x6c, 0x6c, 0x73, 0x22, 0x9e, 0x01, 0x0a, 0x17, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x73,
	0x12, 0x48, 0x0a, 0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x30, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x2e, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x53, 0x6b,
	0x69, 0x6c, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x78, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49,
	0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x12, 0x57, 0x0a, 0x19, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e,
	0x64, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x16, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x22,
	0xda, 0x01, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e,
	0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x39, 0x0a, 0x19, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x62, 0x6f, 0x78, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x49, 0x6e, 0x62, 0x6f, 0x78, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3c,
	0x0a, 0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6b,
	0x69, 0x6c, 0x6c, 0x73, 0x52, 0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x22, 0x37, 0x0a, 0x1d,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x5e, 0x0a, 0x21, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49,
	0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x39, 0x0a, 0x19, 0x69, 0x6e,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x69,
	0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x49, 0x64, 0x22, 0x3b, 0x0a, 0x21, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49,
	0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0xcc, 0x02, 0x0a, 0x14, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x57, 0x0a, 0x19, 0x69,
	0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x16, 0x69, 0x6e,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x49, 0x64, 0x12, 0x4a, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x5f, 0x69, 0x6e, 0x62, 0x6f, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x10,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x62, 0x6f, 0x78, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x3c, 0x0a, 0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x52, 0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c,
	0x73, 0x22, 0x1e, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x22, 0x77, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x12, 0x57, 0x0a, 0x16, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x52, 0x14, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x22, 0x5b, 0x0a, 0x1e, 0x47, 0x65,
	0x74, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x39, 0x0a, 0x19,
	0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x16, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x22, 0x90, 0x01, 0x0a, 0x20, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x33, 0x0a, 0x16,
	0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x69, 0x6e,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x12, 0x37, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x49, 0x42, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x3a, 0x0a, 0x20, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x4f, 0x0a, 0x18, 0x53, 0x74, 0x6f, 0x70, 0x49, 0x6e,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x71, 0x12, 0x33, 0x0a, 0x16, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x13, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x32, 0x0a, 0x18, 0x53, 0x74, 0x6f, 0x70, 0x49,
	0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x55, 0x0a, 0x1c, 0x53,
	0x74, 0x6f, 0x70, 0x41, 0x6c, 0x6c, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x12, 0x35, 0x0a, 0x17, 0x69,
	0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x14, 0x69, 0x6e,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x73, 0x22, 0x58, 0x0a, 0x1d, 0x53, 0x74, 0x6f, 0x70, 0x41, 0x6c, 0x6c, 0x4f, 0x75, 0x74,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x37, 0x0a, 0x18, 0x6f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x15, 0x6f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x73, 0x22, 0x37, 0x0a, 0x1d,
	0x53, 0x74, 0x6f, 0x70, 0x41, 0x6c, 0x6c, 0x4f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xdf, 0x05, 0x0a, 0x11, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e,
	0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x51, 0x0a, 0x16, 0x69,
	0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x13, 0x69, 0x6e, 0x62, 0x6f, 0x75,
	0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x4a,
	0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x62, 0x6f,
	0x78, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x49, 0x6e, 0x62, 0x6f, 0x78, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x49, 0x42,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x37,
	0x0a, 0x09, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x73,
	0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x57, 0x0a, 0x19, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x16, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x74, 0x6f, 0x64, 0x61,
	0x79, 0x73, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x73, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3c, 0x0a, 0x06, 0x73, 0x6b,
	0x69, 0x6c, 0x6c, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x73,
	0x52, 0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x0c, 0x73, 0x6c,
	0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x53,
	0x4c, 0x41, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x73, 0x52, 0x0b, 0x73, 0x6c, 0x61, 0x54,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x73, 0x22, 0xa6, 0x05, 0x0a, 0x15, 0x50, 0x75, 0x72, 0x65,
	0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x12, 0x51, 0x0a, 0x16, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x13, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x12, 0x4a, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x5f, 0x69, 0x6e, 0x62, 0x6f, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x10,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x62, 0x6f, 0x78, 0x49, 0x64,
	0x12, 0x37, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x49, 0x42, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x08, 0x73, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x57, 0x0a, 0x19, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x16, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x30,
	0x0a, 0x14, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x73, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x74, 0x6f,
	0x64, 0x61, 0x79, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x3c, 0x0a, 0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x52, 0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0xc9, 0x01, 0x0a, 0x1e, 0x50, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x52, 0x65, 0x71, 0x12, 0x3b, 0x0a, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x66, 0x72,
	0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x72, 0x6f, 0x6d,
	0x12, 0x37, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x74, 0x6f, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x08, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x74, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x7d, 0x0a, 0x1e,
	0x50, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x12, 0x5b,
	0x0a, 0x18, 0x70, 0x75, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x50,
	0x75, 0x72, 0x65, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x15, 0x70, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e,
	0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x22, 0xc5, 0x01, 0x0a, 0x1a,
	0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x12, 0x3b, 0x0a, 0x0b, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x37, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x5f, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x6f,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x74, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x6c, 0x0a, 0x1a, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65,
	0x73, 0x12, 0x4e, 0x0a, 0x13, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x49, 0x6e, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x11,
	0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x22, 0x63, 0x0a, 0x23, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x42, 0x79, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x12, 0x3c, 0x0a, 0x1b, 0x69, 0x6e, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x69, 0x64, 0x73, 0x5f, 0x61, 0x72, 0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x17, 0x69,
	0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x73, 0x41, 0x72, 0x72, 0x22, 0x75, 0x0a, 0x23, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x42, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x73, 0x52, 0x65, 0x73, 0x12, 0x4e, 0x0a,
	0x13, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x11, 0x69, 0x6e, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x22, 0xc7, 0x08,
	0x0a, 0x17, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x61,
	0x73, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x51, 0x0a, 0x16, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x13, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x3f, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x51, 0x0a, 0x16, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x13, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x49, 0x42,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x3b, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64,
	0x12, 0x50, 0x0a, 0x15, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x13, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x72, 0x61, 0x77, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72,
	0x61, 0x77, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x41,
	0x0a, 0x0e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x69, 0x64,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x0c, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x69,
	0x64, 0x12, 0x3c, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x73, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x49, 0x42, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x44, 0x0a, 0x0f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x54, 0x0a, 0x17, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x15, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x6d, 0x0a, 0x1e, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x70,
	0x6c, 0x79, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x13, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x1b, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x35, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x4a, 0x04, 0x08, 0x0c, 0x10, 0x0d, 0x22, 0x62, 0x0a, 0x22, 0x4c, 0x69, 0x73, 0x74, 0x49,
	0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x73,
	0x42, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x12, 0x3c, 0x0a,
	0x1b, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x73, 0x5f, 0x61, 0x72, 0x72, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x17, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x73, 0x41, 0x72, 0x72, 0x22, 0x87, 0x01, 0x0a, 0x22,
	0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x54, 0x61, 0x73, 0x6b, 0x73, 0x42, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x73, 0x52,
	0x65, 0x73, 0x12, 0x61, 0x0a, 0x1a, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x17, 0x69, 0x6e,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x4f, 0x0a, 0x18, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x12, 0x33, 0x0a, 0x16, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0xa2, 0x01, 0x0a, 0x21, 0x44, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x33, 0x0a, 0x16,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65,
	0x70, 0x6c, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49,
	0x64, 0x12, 0x48, 0x0a, 0x21, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1d, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x41,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x52, 0x0a, 0x21, 0x44,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x69, 0x0a, 0x24, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x41, 0x0a, 0x1d, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1a,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x64, 0x22, 0x3e, 0x0a, 0x24, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52,
	0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x84, 0x02, 0x0a, 0x20, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x2c, 0x0a, 0x12, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x69, 0x64, 0x12, 0x41, 0x0a,
	0x1d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f,
	0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x1a, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73,
	0x68, 0x22, 0x3a, 0x0a, 0x20, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x21, 0x0a,
	0x1f, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x62, 0x6f, 0x75,
	0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71,
	0x22, 0x71, 0x0a, 0x1f, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x49, 0x6e,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x52, 0x65, 0x73, 0x12, 0x4e, 0x0a, 0x13, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x49,
	0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x11, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x22, 0xe6, 0x07, 0x0a, 0x11, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x51, 0x0a, 0x16, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x13, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x3f, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x41, 0x0a, 0x0e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x74, 0x61, 0x73,
	0x6b, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e,
	0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x54,
	0x61, 0x73, 0x6b, 0x53, 0x69, 0x64, 0x12, 0x51, 0x0a, 0x16, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e,
	0x64, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x13, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x49, 0x42, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x49, 0x64, 0x12, 0x50, 0x0a, 0x15, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x63, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x13, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x72, 0x61, 0x77, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x72, 0x61, 0x77, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x3c, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x73, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x49, 0x42, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x44, 0x0a, 0x0f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x54, 0x0a, 0x17, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x15, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x35, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x4a, 0x04, 0x08, 0x0d, 0x10, 0x0e, 0x22, 0xc9, 0x02, 0x0a,
	0x1b, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x66, 0x0a, 0x21,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65,
	0x70, 0x6c, 0x79, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x1d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x51, 0x0a, 0x16, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x13, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0x63, 0x0a, 0x2c, 0x4c, 0x69, 0x73, 0x74,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x33, 0x0a, 0x16, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x64, 0x22, 0x9d, 0x01,
	0x0a, 0x2c, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x42, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x12, 0x6d,
	0x0a, 0x1e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x1b, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xe2, 0x01,
	0x0a, 0x21, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x4e, 0x0a, 0x13, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x52, 0x11, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x6d, 0x0a, 0x1e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x1b, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x22, 0x81, 0x02, 0x0a, 0x2c, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x62, 0x6f, 0x75,
	0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x73, 0x12, 0x4e, 0x0a, 0x13, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x49,
	0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x11, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x80, 0x01, 0x0a, 0x25, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x21, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x8d, 0x02, 0x0a, 0x1b, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x50, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x39, 0x0a, 0x19, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e,
	0x64, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x69, 0x6e, 0x62, 0x6f, 0x75,
	0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49,
	0x64, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x09,
	0x73, 0x74, 0x6f, 0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x73, 0x74, 0x6f,
	0x70, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x52, 0x0a, 0x1b, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x50, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x16, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x84, 0x02, 0x0a, 0x1f, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x12, 0x1d,
	0x0a, 0x0a, 0x74, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x33, 0x0a, 0x16, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f,
	0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0d, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x73, 0x22, 0x82, 0x01, 0x0a, 0x29, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0xa9, 0x01, 0x0a, 0x29, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x12, 0x48, 0x0a, 0x21, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x61, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x1d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x75, 0x72, 0x6c, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x75, 0x72, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x73, 0x5f,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x73, 0x50, 0x61,
	0x74, 0x68, 0x22, 0x63, 0x0a, 0x0c, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52,
	0x65, 0x71, 0x12, 0x33, 0x0a, 0x16, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x13, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0b, 0x69, 0x6e, 0x5f, 0x72, 0x65,
	0x70, 0x6c, 0x79, 0x5f, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x22, 0xaf, 0x01, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74,
	0x4e, 0x65, 0x77, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0xa3, 0x01, 0x0a, 0x1d, 0x4c, 0x69,
	0x73, 0x74, 0x4e, 0x65, 0x77, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x12, 0x81, 0x01, 0x0a, 0x26,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65,
	0x70, 0x6c, 0x69, 0x65, 0x73, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x57, 0x69, 0x74, 0x68,
	0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x22, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73,
	0x57, 0x69, 0x74, 0x68, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22,
	0xbe, 0x01, 0x0a, 0x20, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x57, 0x69, 0x74, 0x68, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x4e, 0x0a, 0x13, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x52, 0x11, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x4a, 0x0a, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x22, 0xc0, 0x03, 0x0a, 0x23, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x50, 0x75, 0x72,
	0x65, 0x4f, 0x6d, 0x6e, 0x69, 0x4c, 0x69, 0x6e, 0x6b, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x08, 0x73, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x62, 0x6f, 0x78, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x49, 0x6e, 0x62, 0x6f, 0x78, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x06, 0x73, 0x6b, 0x69,
	0x6c, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x52,
	0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x12, 0x3b, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x0c, 0x73, 0x6c, 0x61, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x53, 0x4c, 0x41, 0x54, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x73, 0x52, 0x0b, 0x73, 0x6c, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x73, 0x22, 0x5a, 0x0a, 0x23, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x50,
	0x75, 0x72, 0x65, 0x4f, 0x6d, 0x6e, 0x69, 0x4c, 0x69, 0x6e, 0x6b, 0x49, 0x6e, 0x62, 0x6f, 0x75,
	0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x16, 0x69, 0x6e,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x69, 0x6e, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22,
	0xf6, 0x02, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e,
	0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x12, 0x33,
	0x0a, 0x16, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13,
	0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x73, 0x74, 0x6f, 0x70, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x73, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x3c, 0x0a, 0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x52, 0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0c, 0x73,
	0x6c, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e,
	0x53, 0x4c, 0x41, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x73, 0x52, 0x0b, 0x73, 0x6c, 0x61,
	0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x73, 0x22, 0x1c, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x22, 0xac, 0x02, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x0f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x37, 0x0a,
	0x09, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x73, 0x74,
	0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x0c, 0x73, 0x6c, 0x61, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x53, 0x4c, 0x41,
	0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x73, 0x52, 0x0b, 0x73, 0x6c, 0x61, 0x54, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x73, 0x22, 0x1d, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f,
	0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x73, 0x22, 0x7e, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x22, 0x96, 0x01, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x12, 0x3f, 0x0a, 0x1c, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x19,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x72, 0x6c,
	0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x72, 0x6c,
	0x50, 0x61, 0x74, 0x68, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x73, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x73, 0x50, 0x61, 0x74, 0x68, 0x22, 0x4c, 0x0a,
	0x1e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12,
	0x2a, 0x0a, 0x11, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x69, 0x64, 0x22, 0x81, 0x01, 0x0a, 0x1e,
	0x4c, 0x69, 0x73, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x12, 0x5f,
	0x0a, 0x19, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x17, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22,
	0xf6, 0x01, 0x0a, 0x16, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x3f, 0x0a, 0x1c, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x19, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x53, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0x61, 0x0a, 0x2b, 0x55, 0x6e, 0x61, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x46,
	0x72, 0x6f, 0x6d, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x32, 0x0a, 0x15, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x5f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x26, 0x0a, 0x24, 0x55,
	0x6e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x22, 0x9b, 0x01, 0x0a, 0x23, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x12, 0x3b, 0x0a, 0x0b, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x37, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x5f, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54,
	0x6f, 0x22, 0xad, 0x01, 0x0a, 0x23, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x12, 0x85, 0x01, 0x0a, 0x27, 0x64, 0x61,
	0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x63, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x5f, 0x65,
	0x6e, 0x74, 0x72, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x23, 0x64, 0x61,
	0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x73, 0x22, 0xfe, 0x01, 0x0a, 0x22, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x4d, 0x0a, 0x12, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x75, 0x0a, 0x21, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x5f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x1e,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0xc1, 0x03, 0x0a, 0x1d, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x55, 0x0a, 0x0f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x61, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x57, 0x0a, 0x1a,
	0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x17, 0x61, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x4c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x5b, 0x0a, 0x11, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x2e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x10, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x39, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xde, 0x05, 0x0a, 0x11, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x45, 0x0a, 0x0f,
	0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x51, 0x0a, 0x16, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x5f, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x13, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x56, 0x0a, 0x19, 0x63, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x17, 0x63, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x52, 0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73,
	0x12, 0x50, 0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x12,
	0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x46, 0x0a, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x42, 0x0a, 0x0e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x0c, 0x73, 0x6c,
	0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x53,
	0x4c, 0x41, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x73, 0x52, 0x0b, 0x73, 0x6c, 0x61, 0x54,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x73, 0x22, 0xb2, 0x01, 0x0a, 0x1c, 0x52, 0x65, 0x61, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x32, 0x0a, 0x15, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x15,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x2a, 0x0a, 0x11, 0x6e, 0x65, 0x77, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6e, 0x65, 0x77,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x22, 0x1e, 0x0a, 0x1c,
	0x52, 0x65, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x22, 0xc0, 0x01, 0x0a,
	0x1a, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x32, 0x0a, 0x15, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x55, 0x0a, 0x0f, 0x61, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x2c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x3f, 0x0a, 0x1a, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x21, 0x0a,
	0x0c, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64,
	0x22, 0x51, 0x0a, 0x1b, 0x53, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12,
	0x32, 0x0a, 0x15, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x22, 0x1d, 0x0a, 0x1b, 0x53, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x22, 0x52, 0x0a, 0x22, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69,
	0x67, 0x6e, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49, 0x6e,
	0x62, 0x6f, 0x78, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x62, 0x6f, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49,
	0x6e, 0x62, 0x6f, 0x78, 0x49, 0x64, 0x22, 0xc7, 0x02, 0x0a, 0x22, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x49, 0x6e, 0x62, 0x6f, 0x78, 0x49, 0x64, 0x52, 0x65, 0x73, 0x12, 0x44, 0x0a,
	0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x62, 0x6f, 0x78,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49, 0x6e,
	0x62, 0x6f, 0x78, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49, 0x6e,
	0x62, 0x6f, 0x78, 0x12, 0x6b, 0x0a, 0x17, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43,
	0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x15, 0x69, 0x6e, 0x62, 0x6f, 0x75,
	0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73,
	0x12, 0x6e, 0x0a, 0x18, 0x6f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x5f, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x34, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x4f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x61,
	0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x16, 0x6f, 0x75, 0x74, 0x62, 0x6f, 0x75,
	0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73,
	0x22, 0xe9, 0x01, 0x0a, 0x26, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d,
	0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x37, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x49, 0x42, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x86, 0x02, 0x0a,
	0x27, 0x4f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x61,
	0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x6d, 0x70,
	0x61, 0x69, 0x67, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x6d,
	0x70, 0x61, 0x69, 0x67, 0x6e, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x53, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d,
	0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x88, 0x01, 0x0a, 0x19, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x12, 0x32, 0x0a, 0x15, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x63, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x13, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x1b, 0x0a, 0x19, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x32, 0xc0, 0x48,
	0x0a, 0x08, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x70, 0x69, 0x12, 0x95, 0x01, 0x0a, 0x13, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x12, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x22, 0x34, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x2e, 0x3a, 0x01, 0x2a, 0x22, 0x29, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x61, 0x70, 0x69, 0x2f, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x12, 0x95, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x23, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x22, 0x34, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2e, 0x3a, 0x01, 0x2a, 0x22,
	0x29, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x61, 0x70, 0x69, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0xbd, 0x01, 0x0a, 0x1d, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2d, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x2d, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x22, 0x3e, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x38, 0x3a, 0x01, 0x2a, 0x22, 0x33, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0xc9, 0x01, 0x0a, 0x20, 0x43,
	0x6f, 0x70, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x57, 0x69, 0x74, 0x68, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x30, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f,
	0x70, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x57,
	0x69, 0x74, 0x68, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x1a, 0x30, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x43, 0x6f, 0x70, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x57, 0x69, 0x74, 0x68, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x22, 0x41, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3b, 0x3a, 0x01, 0x2a, 0x22, 0x36,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x70, 0x79, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x77, 0x69, 0x74, 0x68, 0x61, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0xbd, 0x01, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x22, 0x3e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x38, 0x3a, 0x01,
	0x2a, 0x22, 0x33, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x61, 0x70, 0x69, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x61, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0xb9, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x42, 0x79, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x69, 0x64, 0x12, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x42, 0x79, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x53, 0x69, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x57, 0x69, 0x74, 0x68, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x22, 0x3e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x38, 0x3a, 0x01, 0x2a, 0x22, 0x33, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x65, 0x74, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x62, 0x79, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73,
	0x69, 0x64, 0x12, 0x99, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x12, 0x24, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x1a, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x22, 0x35, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2f, 0x3a,
	0x01, 0x2a, 0x22, 0x2a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x65, 0x74, 0x61, 0x6c, 0x6c,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x12, 0x94,
	0x01, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x22, 0x33, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x3a, 0x01, 0x2a, 0x22, 0x28, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x61,
	0x70, 0x69, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0xcd, 0x01, 0x0a, 0x21, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x64, 0x12, 0x31, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x31,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x73, 0x22, 0x42, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3c, 0x3a, 0x01, 0x2a, 0x22, 0x37, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x61, 0x70, 0x69, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x62, 0x79, 0x69, 0x64, 0x12, 0xc1, 0x01, 0x0a, 0x1e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x49,
	0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x2e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x49,
	0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x22, 0x3f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x39,
	0x3a, 0x01, 0x2a, 0x22, 0x34, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x61,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x91, 0x01, 0x0a, 0x14, 0x50, 0x75,
	0x72, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x12, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x22, 0x35, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2f, 0x3a, 0x01,
	0x2a, 0x22, 0x2a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x75, 0x72, 0x65, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0xbf, 0x01,
	0x0a, 0x21, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x65, 0x77,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x69, 0x65, 0x73, 0x12, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x65, 0x77, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a,
	0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x4e, 0x65, 0x77, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x22, 0x42, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x3c, 0x3a, 0x01, 0x2a, 0x22, 0x37, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x6c, 0x69, 0x73, 0x74, 0x6e, 0x65, 0x77, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x12,
	0xb1, 0x01, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x65, 0x77, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x12, 0x2a,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x4e, 0x65, 0x77, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x65, 0x77,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x22, 0x3b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x35, 0x3a, 0x01,
	0x2a, 0x22, 0x30, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x61, 0x70, 0x69, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x6e, 0x65, 0x77,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x72, 0x65, 0x70, 0x6c,
	0x69, 0x65, 0x73, 0x12, 0xa9, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x54, 0x61, 0x73, 0x6b, 0x73, 0x42, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x69, 0x64, 0x73,
	0x12, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47,
	0x65, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x42, 0x79, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x53, 0x69, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x42, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x69, 0x64,
	0x73, 0x52, 0x65, 0x73, 0x22, 0x39, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x33, 0x3a, 0x01, 0x2a, 0x22,
	0x2e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x65, 0x74, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x74,
	0x61, 0x73, 0x6b, 0x73, 0x62, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x69, 0x64, 0x73, 0x12,
	0x95, 0x01, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x22, 0x37,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x31, 0x3a, 0x01, 0x2a, 0x22, 0x2c, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x61, 0x70, 0x69,
	0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x93, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x22, 0x37, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x31, 0x3a, 0x01, 0x2a, 0x22,
	0x2c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x65, 0x74, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0xb1, 0x01,
	0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x22, 0x3b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x35, 0x3a, 0x01, 0x2a, 0x22,
	0x30, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x69, 0x6e, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x12, 0xb1, 0x01, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x12, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x22, 0x3b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x35,
	0x3a, 0x01, 0x2a, 0x22, 0x30, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x61, 0x70, 0x69, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0xc1, 0x01, 0x0a, 0x1e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x42, 0x79, 0x49, 0x64, 0x12, 0x2e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x2e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x22, 0x3f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x39,
	0x3a, 0x01, 0x2a, 0x22, 0x34, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x62, 0x79, 0x69, 0x64, 0x12, 0xad, 0x01, 0x0a, 0x19, 0x4c, 0x69,
	0x73, 0x74, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x12, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e,
	0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x22, 0x3a, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x34, 0x3a, 0x01, 0x2a, 0x22, 0x2f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x61, 0x70, 0x69, 0x2f,
	0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x12, 0xab, 0x01, 0x0a, 0x1b, 0x47, 0x65,
	0x74, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x42, 0x79, 0x49, 0x64, 0x12, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x62, 0x6f, 0x75,
	0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x22, 0x3c, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x36, 0x3a, 0x01, 0x2a, 0x22, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x65, 0x74, 0x69,
	0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x62, 0x79, 0x69, 0x64, 0x12, 0xbd, 0x01, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x22, 0x3e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x38, 0x3a,
	0x01, 0x2a, 0x22, 0x33, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x61, 0x70, 0x69, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x9d, 0x01, 0x0a, 0x15, 0x53, 0x74, 0x6f, 0x70,
	0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x12, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x53, 0x74, 0x6f, 0x70, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x49, 0x6e, 0x62, 0x6f, 0x75,
	0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x22,
	0x36, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x30, 0x3a, 0x01, 0x2a, 0x22, 0x2b, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x61, 0x70,
	0x69, 0x2f, 0x73, 0x74, 0x6f, 0x70, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0xa9, 0x01, 0x0a, 0x19, 0x53, 0x74, 0x6f, 0x70,
	0x41, 0x6c, 0x6c, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x41, 0x6c, 0x6c, 0x49, 0x6e, 0x62, 0x6f, 0x75,
	0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71,
	0x1a, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53,
	0x74, 0x6f, 0x70, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x22, 0x3a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x34, 0x3a,
	0x01, 0x2a, 0x22, 0x2f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x6f, 0x70, 0x61, 0x6c,
	0x6c, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x12, 0xb5, 0x01, 0x0a, 0x1b, 0x50, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x12, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x50, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71,
	0x1a, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x50,
	0x75, 0x72, 0x65, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x22, 0x3c, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x36, 0x3a, 0x01, 0x2a, 0x22, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x61, 0x70, 0x69, 0x2f,
	0x70, 0x75, 0x72, 0x65, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0xa5, 0x01, 0x0a, 0x17,
	0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71,
	0x1a, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x49,
	0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x22, 0x38, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x32, 0x3a, 0x01, 0x2a, 0x22, 0x2d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x61, 0x70, 0x69, 0x2f, 0x69, 0x6e, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x12, 0xc9, 0x01, 0x0a, 0x20, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x42, 0x79,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x73, 0x12, 0x30, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x62, 0x6f, 0x75,
	0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x42, 0x79, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x30, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x42,
	0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x73, 0x52, 0x65, 0x73, 0x22, 0x41, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x3b, 0x3a, 0x01, 0x2a, 0x22, 0x36, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x61, 0x70, 0x69, 0x2f, 0x6c,
	0x69, 0x73, 0x74, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x62, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x69, 0x64, 0x73, 0x12,
	0xc5, 0x01, 0x0a, 0x1f, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x42, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x73, 0x12, 0x2f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x42, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x2f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x42, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x73, 0x52, 0x65, 0x73, 0x22, 0x40, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3a, 0x3a, 0x01, 0x2a,
	0x22, 0x35, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x61, 0x70, 0x69, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x62, 0x79, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x69, 0x64, 0x73, 0x12, 0xb9, 0x01, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x2c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x2c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x49,
	0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x52, 0x65, 0x73, 0x22, 0x3d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x37, 0x3a, 0x01, 0x2a, 0x22,
	0x32, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x61, 0x70, 0x69, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x12, 0x69, 0x0a, 0x08, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12,
	0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x3a, 0x01, 0x2a, 0x22, 0x1e,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0xb1,
	0x01, 0x0a, 0x1a, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x2a, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x4f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x73, 0x22, 0x3b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x35, 0x3a, 0x01, 0x2a,
	0x22, 0x30, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x6f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x12, 0xa9, 0x01, 0x0a, 0x18, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x50,
	0x75, 0x72, 0x65, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x50, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e,
	0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x50, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x73, 0x22, 0x39, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x33, 0x3a, 0x01, 0x2a, 0x22, 0x2e,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x70, 0x75,
	0x72, 0x65, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0xba,
	0x01, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x2c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x2d, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x57, 0x69, 0x74,
	0x68, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x3d, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x37, 0x3a, 0x01, 0x2a, 0x22, 0x32, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x61, 0x70, 0x69, 0x2f, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x12, 0xe1, 0x01, 0x0a, 0x26,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x36, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x36,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x22, 0x47, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x41, 0x3a, 0x01,
	0x2a, 0x22, 0x3c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x72, 0x65, 0x70, 0x6c, 0x79, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x81, 0x01, 0x0a, 0x09, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x19, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x57, 0x69, 0x74, 0x68, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x3a,
	0x01, 0x2a, 0x22, 0x1f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x65, 0x6e, 0x64, 0x72, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0xad, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x42, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x69, 0x64,
	0x73, 0x12, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x47, 0x65, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x42, 0x79,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x69, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x42, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x53, 0x69, 0x64, 0x73, 0x52, 0x65, 0x73, 0x22, 0x3a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x34, 0x3a,
	0x01, 0x2a, 0x22, 0x2f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x65, 0x74, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x62, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x69, 0x64, 0x73, 0x12, 0xab, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x69, 0x64, 0x12,
	0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65,
	0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x53, 0x69, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x57, 0x69, 0x74, 0x68, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x38, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x32, 0x3a,
	0x01, 0x2a, 0x22, 0x2d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x65, 0x74, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x62, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x69,
	0x64, 0x12, 0xa8, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x42, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x26, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x1a, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x57, 0x69, 0x74, 0x68, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x22, 0x37, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x31, 0x3a, 0x01, 0x2a, 0x22, 0x2c,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x65, 0x74, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x62, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x69, 0x64, 0x12, 0xc9, 0x01, 0x0a,
	0x20, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x50, 0x75, 0x72, 0x65, 0x4f, 0x6d, 0x6e,
	0x69, 0x4c, 0x69, 0x6e, 0x6b, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x30, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x50, 0x75, 0x72, 0x65, 0x4f, 0x6d, 0x6e, 0x69,
	0x4c, 0x69, 0x6e, 0x6b, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x71, 0x1a, 0x30, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x50, 0x75, 0x72, 0x65, 0x4f, 0x6d,
	0x6e, 0x69, 0x4c, 0x69, 0x6e, 0x6b, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x73, 0x22, 0x41, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3b, 0x3a, 0x01, 0x2a,
	0x22, 0x36, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x70, 0x75, 0x72, 0x65, 0x6f, 0x6d, 0x6e, 0x69, 0x6c, 0x69, 0x6e, 0x6b, 0x69, 0x6e, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0xa5, 0x01, 0x0a, 0x17, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x22, 0x38, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x32, 0x3a, 0x01,
	0x2a, 0x22, 0x2d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x61, 0x70, 0x69, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x69,
	0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0xbd, 0x01, 0x0a, 0x22, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x73, 0x74, 0x72, 0x53, 0x65, 0x6e, 0x64, 0x73, 0x50, 0x65,
	0x72, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x12, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x53, 0x65, 0x6e, 0x64, 0x73, 0x50, 0x65, 0x72, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x6e, 0x64, 0x73, 0x50,
	0x65, 0x72, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x22, 0x43, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x3d, 0x3a, 0x01, 0x2a, 0x22, 0x38, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x61, 0x70, 0x69, 0x2f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x6d, 0x73,
	0x74, 0x72, 0x73, 0x65, 0x6e, 0x64, 0x73, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65,
	0x12, 0xa9, 0x01, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x28, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x73, 0x22, 0x39, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x33, 0x3a, 0x01, 0x2a, 0x22, 0x2e, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x61, 0x70, 0x69, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x6f, 0x75, 0x74, 0x62, 0x6f, 0x75,
	0x6e, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x9c, 0x01, 0x0a,
	0x18, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x49, 0x64, 0x12, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x1a, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x49,
	0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x22, 0x39, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x33, 0x3a, 0x01, 0x2a, 0x22, 0x2e, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x61,
	0x70, 0x69, 0x2f, 0x67, 0x65, 0x74, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x62, 0x79, 0x69, 0x64, 0x12, 0xb9, 0x01, 0x0a, 0x1c,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2c, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x2c, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x22, 0x3d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x37,
	0x3a, 0x01, 0x2a, 0x22, 0x32, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x61, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0xb5, 0x01, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x22, 0x3c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x36, 0x3a, 0x01, 0x2a, 0x22, 0x31, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x61, 0x70, 0x69, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0xe2, 0x01, 0x0a, 0x28, 0x55, 0x6e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x55, 0x6e, 0x61, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72,
	0x6f, 0x6d, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x31, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x55, 0x6e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x55, 0x73, 0x65,
	0x72, 0x46, 0x72, 0x6f, 0x6d, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x22, 0x49, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x43, 0x3a, 0x01, 0x2a, 0x22, 0x3e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x61, 0x70, 0x69, 0x2f, 0x75, 0x6e, 0x61, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x75, 0x73, 0x65, 0x72, 0x66,
	0x72, 0x6f, 0x6d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0xc9, 0x01, 0x0a, 0x20, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x30, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x30, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x22, 0x41, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x3b, 0x3a, 0x01, 0x2a, 0x22, 0x36, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x61, 0x70, 0x69, 0x2f,
	0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x63, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x12, 0xad, 0x01, 0x0a, 0x19, 0x52, 0x65, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x52, 0x65, 0x61,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x52, 0x65, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x22, 0x3a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x34, 0x3a, 0x01, 0x2a, 0x22,
	0x2f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0xa5, 0x01, 0x0a, 0x17, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x22, 0x38,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x32, 0x3a, 0x01, 0x2a, 0x22, 0x2d, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x63, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0xa9, 0x01, 0x0a, 0x18, 0x53, 0x75, 0x73,
	0x70, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x53, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a,
	0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x75,
	0x73, 0x70, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x22, 0x39, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x33, 0x3a, 0x01, 0x2a, 0x22, 0x2e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x75, 0x73, 0x70,
	0x65, 0x6e, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0xc5, 0x01, 0x0a, 0x1f, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x6d,
	0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x49, 0x6e, 0x62, 0x6f, 0x78, 0x49, 0x64, 0x12, 0x2f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61,
	0x69, 0x67, 0x6e, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49,
	0x6e, 0x62, 0x6f, 0x78, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x2f, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x6d, 0x70,
	0x61, 0x69, 0x67, 0x6e, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x49, 0x6e, 0x62, 0x6f, 0x78, 0x49, 0x64, 0x52, 0x65, 0x73, 0x22, 0x40, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x3a, 0x3a, 0x01, 0x2a, 0x22, 0x35, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x61, 0x70, 0x69, 0x2f, 0x6c, 0x69, 0x73,
	0x74, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x62, 0x79, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x69, 0x6e, 0x62, 0x6f, 0x78, 0x69, 0x64, 0x12, 0xa1, 0x01, 0x0a,
	0x16, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a,
	0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6c,
	0x6f, 0x73, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x22, 0x37, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x31, 0x3a,
	0x01, 0x2a, 0x22, 0x2c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x48, 0x0a, 0x1a, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x63, 0x6e, 0x2e, 0x6d, 0x61, 0x74, 0x72,
	0x69, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x5a, 0x2a,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x63, 0x6e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2f, 0x61, 0x70, 0x69, 0x2d, 0x67, 0x6f, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x3b, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_api_v0alpha_emailapi_proto_rawDescOnce sync.Once
	file_api_v0alpha_emailapi_proto_rawDescData = file_api_v0alpha_emailapi_proto_rawDesc
)

func file_api_v0alpha_emailapi_proto_rawDescGZIP() []byte {
	file_api_v0alpha_emailapi_proto_rawDescOnce.Do(func() {
		file_api_v0alpha_emailapi_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v0alpha_emailapi_proto_rawDescData)
	})
	return file_api_v0alpha_emailapi_proto_rawDescData
}

var file_api_v0alpha_emailapi_proto_msgTypes = make([]protoimpl.MessageInfo, 131)
var file_api_v0alpha_emailapi_proto_goTypes = []interface{}{
	(*CustomUnsubscribeSettingsReq)(nil),                 // 0: api.v0alpha.CustomUnsubscribeSettingsReq
	(*CustomUnsubscribeSettingsRes)(nil),                 // 1: api.v0alpha.CustomUnsubscribeSettingsRes
	(*CreateEmailTemplateReq)(nil),                       // 2: api.v0alpha.CreateEmailTemplateReq
	(*CreateEmailTemplateRes)(nil),                       // 3: api.v0alpha.CreateEmailTemplateRes
	(*UpdateEmailTemplateReq)(nil),                       // 4: api.v0alpha.UpdateEmailTemplateReq
	(*UpdateEmailTemplateRes)(nil),                       // 5: api.v0alpha.UpdateEmailTemplateRes
	(*DeleteEmailTemplateReq)(nil),                       // 6: api.v0alpha.DeleteEmailTemplateReq
	(*DeleteEmailTemplateRes)(nil),                       // 7: api.v0alpha.DeleteEmailTemplateRes
	(*EmailTemplateDetails)(nil),                         // 8: api.v0alpha.EmailTemplateDetails
	(*EmailGroupStatusReq)(nil),                          // 9: api.v0alpha.EmailGroupStatusReq
	(*EmailGroupStatusRes)(nil),                          // 10: api.v0alpha.EmailGroupStatusRes
	(*EmailGroupSendsPerMinuteReq)(nil),                  // 11: api.v0alpha.EmailGroupSendsPerMinuteReq
	(*EmailGroupSendsPerMinuteRes)(nil),                  // 12: api.v0alpha.EmailGroupSendsPerMinuteRes
	(*EmailGroupScheduleTimesReq)(nil),                   // 13: api.v0alpha.EmailGroupScheduleTimesReq
	(*EmailGroupScheduleTimesRes)(nil),                   // 14: api.v0alpha.EmailGroupScheduleTimesRes
	(*GetAllCustomUnsubscribeLinksReq)(nil),              // 15: api.v0alpha.GetAllCustomUnsubscribeLinksReq
	(*EmailCustomUnsubscribeLink)(nil),                   // 16: api.v0alpha.EmailCustomUnsubscribeLink
	(*GetAllCustomUnsubscribeLinksRes)(nil),              // 17: api.v0alpha.GetAllCustomUnsubscribeLinksRes
	(*GetAllEmailTemplatesReq)(nil),                      // 18: api.v0alpha.GetAllEmailTemplatesReq
	(*GetAllEmailTemplatesRes)(nil),                      // 19: api.v0alpha.GetAllEmailTemplatesRes
	(*GetEmailTemplateByTemplateSidReq)(nil),             // 20: api.v0alpha.GetEmailTemplateByTemplateSidReq
	(*EmailTemplateWithAttachments)(nil),                 // 21: api.v0alpha.EmailTemplateWithAttachments
	(*EmailTaskMstrDetails)(nil),                         // 22: api.v0alpha.EmailTaskMstrDetails
	(*EmailGroupSearchDetailsRes)(nil),                   // 23: api.v0alpha.EmailGroupSearchDetailsRes
	(*EmailGroupSearchReq)(nil),                          // 24: api.v0alpha.EmailGroupSearchReq
	(*EmailGroupSearchRes)(nil),                          // 25: api.v0alpha.EmailGroupSearchRes
	(*GetEmailGroupsByGroupSidsReq)(nil),                 // 26: api.v0alpha.GetEmailGroupsByGroupSidsReq
	(*GetEmailGroupsByGroupSidsRes)(nil),                 // 27: api.v0alpha.GetEmailGroupsByGroupSidsRes
	(*GetEmailGroupByGroupSidReq)(nil),                   // 28: api.v0alpha.GetEmailGroupByGroupSidReq
	(*EmailGroupDetailsWithAttachments)(nil),             // 29: api.v0alpha.EmailGroupDetailsWithAttachments
	(*GetEmailGroupByGroupIdReq)(nil),                    // 30: api.v0alpha.GetEmailGroupByGroupIdReq
	(*GetEmailTasksByGroupSidsReq)(nil),                  // 31: api.v0alpha.GetEmailTasksByGroupSidsReq
	(*GetEmailTasksByGroupSidsRes)(nil),                  // 32: api.v0alpha.GetEmailTasksByGroupSidsRes
	(*EmailTemplateAttachmentDetails)(nil),               // 33: api.v0alpha.EmailTemplateAttachmentDetails
	(*GetAllEmailTemplateAttachmentRes)(nil),             // 34: api.v0alpha.GetAllEmailTemplateAttachmentRes
	(*CreateEmailTemplateAttachmentReq)(nil),             // 35: api.v0alpha.CreateEmailTemplateAttachmentReq
	(*CreateEmailTemplateAttachmentRes)(nil),             // 36: api.v0alpha.CreateEmailTemplateAttachmentRes
	(*CopyEmailTemplateWithAttachmentsReq)(nil),          // 37: api.v0alpha.CopyEmailTemplateWithAttachmentsReq
	(*CopyEmailTemplateWithAttachmentsRes)(nil),          // 38: api.v0alpha.CopyEmailTemplateWithAttachmentsRes
	(*GetEmailMessageReq)(nil),                           // 39: api.v0alpha.GetEmailMessageReq
	(*GetEmailMessageRes)(nil),                           // 40: api.v0alpha.GetEmailMessageRes
	(*ScheduleReq)(nil),                                  // 41: api.v0alpha.ScheduleReq
	(*ScheduleRes)(nil),                                  // 42: api.v0alpha.ScheduleRes
	(*ScheduleOutboundEmailGroupReq)(nil),                // 43: api.v0alpha.ScheduleOutboundEmailGroupReq
	(*ScheduleOutboundEmailGroupRes)(nil),                // 44: api.v0alpha.ScheduleOutboundEmailGroupRes
	(*EmailMessageDetails)(nil),                          // 45: api.v0alpha.EmailMessageDetails
	(*ConnectedInbox)(nil),                               // 46: api.v0alpha.ConnectedInbox
	(*CreateInboundEmailTemplateReq)(nil),                // 47: api.v0alpha.CreateInboundEmailTemplateReq
	(*EmailConversationSkills)(nil),                      // 48: api.v0alpha.EmailConversationSkills
	(*CreateInboundEmailTemplateRes)(nil),                // 49: api.v0alpha.CreateInboundEmailTemplateRes
	(*UpdateInboundEmailTemplateReq)(nil),                // 50: api.v0alpha.UpdateInboundEmailTemplateReq
	(*UpdateInboundEmailTemplateRes)(nil),                // 51: api.v0alpha.UpdateInboundEmailTemplateRes
	(*DeleteInboundEmailTemplateByIdReq)(nil),            // 52: api.v0alpha.DeleteInboundEmailTemplateByIdReq
	(*DeleteInboundEmailTemplateByIdRes)(nil),            // 53: api.v0alpha.DeleteInboundEmailTemplateByIdRes
	(*InboundEmailTemplate)(nil),                         // 54: api.v0alpha.InboundEmailTemplate
	(*ListInboundEmailTemplatesReq)(nil),                 // 55: api.v0alpha.ListInboundEmailTemplatesReq
	(*ListInboundEmailTemplatesRes)(nil),                 // 56: api.v0alpha.ListInboundEmailTemplatesRes
	(*GetInboundEmailTemplateByIdReq)(nil),               // 57: api.v0alpha.GetInboundEmailTemplateByIdReq
	(*UpdateInboundEmailGroupStatusReq)(nil),             // 58: api.v0alpha.UpdateInboundEmailGroupStatusReq
	(*UpdateInboundEmailGroupStatusRes)(nil),             // 59: api.v0alpha.UpdateInboundEmailGroupStatusRes
	(*StopInboundEmailGroupReq)(nil),                     // 60: api.v0alpha.StopInboundEmailGroupReq
	(*StopInboundEmailGroupRes)(nil),                     // 61: api.v0alpha.StopInboundEmailGroupRes
	(*StopAllInboundEmailGroupsReq)(nil),                 // 62: api.v0alpha.StopAllInboundEmailGroupsReq
	(*StopAllOutboundEmailGroupsReq)(nil),                // 63: api.v0alpha.StopAllOutboundEmailGroupsReq
	(*StopAllOutboundEmailGroupsRes)(nil),                // 64: api.v0alpha.StopAllOutboundEmailGroupsRes
	(*InboundEmailGroup)(nil),                            // 65: api.v0alpha.InboundEmailGroup
	(*PureInboundEmailGroup)(nil),                        // 66: api.v0alpha.PureInboundEmailGroup
	(*PureInboundEmailGroupSearchReq)(nil),               // 67: api.v0alpha.PureInboundEmailGroupSearchReq
	(*PureInboundEmailGroupSearchRes)(nil),               // 68: api.v0alpha.PureInboundEmailGroupSearchRes
	(*InboundEmailGroupSearchReq)(nil),                   // 69: api.v0alpha.InboundEmailGroupSearchReq
	(*InboundEmailGroupSearchRes)(nil),                   // 70: api.v0alpha.InboundEmailGroupSearchRes
	(*ListInboundEmailGroupsByGroupIdsReq)(nil),          // 71: api.v0alpha.ListInboundEmailGroupsByGroupIdsReq
	(*ListInboundEmailGroupsByGroupIdsRes)(nil),          // 72: api.v0alpha.ListInboundEmailGroupsByGroupIdsRes
	(*InboundEmailTaskDetails)(nil),                      // 73: api.v0alpha.InboundEmailTaskDetails
	(*ListInboundEmailTasksByGroupIdsReq)(nil),           // 74: api.v0alpha.ListInboundEmailTasksByGroupIdsReq
	(*ListInboundEmailTasksByGroupIdsRes)(nil),           // 75: api.v0alpha.ListInboundEmailTasksByGroupIdsRes
	(*InboundEmailGroupByIdReq)(nil),                     // 76: api.v0alpha.InboundEmailGroupByIdReq
	(*DownloadInboundEmailAttachmentReq)(nil),            // 77: api.v0alpha.DownloadInboundEmailAttachmentReq
	(*DownloadInboundEmailAttachmentRes)(nil),            // 78: api.v0alpha.DownloadInboundEmailAttachmentRes
	(*DeleteEmailTemplateAttachmentByIdReq)(nil),         // 79: api.v0alpha.DeleteEmailTemplateAttachmentByIdReq
	(*DeleteEmailTemplateAttachmentByIdRes)(nil),         // 80: api.v0alpha.DeleteEmailTemplateAttachmentByIdRes
	(*UpdateEmailTemplateAttachmentReq)(nil),             // 81: api.v0alpha.UpdateEmailTemplateAttachmentReq
	(*UpdateEmailTemplateAttachmentRes)(nil),             // 82: api.v0alpha.UpdateEmailTemplateAttachmentRes
	(*ListActiveInboundEmailGroupsReq)(nil),              // 83: api.v0alpha.ListActiveInboundEmailGroupsReq
	(*ListActiveInboundEmailGroupsRes)(nil),              // 84: api.v0alpha.ListActiveInboundEmailGroupsRes
	(*EmailMessageReply)(nil),                            // 85: api.v0alpha.EmailMessageReply
	(*EmailMessageReplyAttachment)(nil),                  // 86: api.v0alpha.EmailMessageReplyAttachment
	(*ListEmailMessageReplyAttachmentsByReplyIdReq)(nil), // 87: api.v0alpha.ListEmailMessageReplyAttachmentsByReplyIdReq
	(*ListEmailMessageReplyAttachmentsByReplyIdRes)(nil), // 88: api.v0alpha.ListEmailMessageReplyAttachmentsByReplyIdRes
	(*InboundEmailGroupReplyAttachments)(nil),            // 89: api.v0alpha.InboundEmailGroupReplyAttachments
	(*ListInboundEmailGroupReplyAttachmentsByIdRes)(nil), // 90: api.v0alpha.ListInboundEmailGroupReplyAttachmentsByIdRes
	(*SchedulePureInboundEmailReq)(nil),                  // 91: api.v0alpha.SchedulePureInboundEmailReq
	(*SchedulePureInboundEmailRes)(nil),                  // 92: api.v0alpha.SchedulePureInboundEmailRes
	(*CreateEmailMessageAgentReplyReq)(nil),              // 93: api.v0alpha.CreateEmailMessageAgentReplyReq
	(*CreateEmailMessageAgentReplyAttachmentReq)(nil),    // 94: api.v0alpha.CreateEmailMessageAgentReplyAttachmentReq
	(*CreateEmailMessageAgentReplyAttachmentRes)(nil),    // 95: api.v0alpha.CreateEmailMessageAgentReplyAttachmentRes
	(*SendReplyReq)(nil),                                 // 96: api.v0alpha.SendReplyReq
	(*ListNewEmailMessageRepliesReq)(nil),                // 97: api.v0alpha.ListNewEmailMessageRepliesReq
	(*ListNewEmailMessageRepliesRes)(nil),                // 98: api.v0alpha.ListNewEmailMessageRepliesRes
	(*EmailMessageReplyWithAttachments)(nil),             // 99: api.v0alpha.EmailMessageReplyWithAttachments
	(*SchedulePureOmniLinkInboundEmailReq)(nil),          // 100: api.v0alpha.SchedulePureOmniLinkInboundEmailReq
	(*SchedulePureOmniLinkInboundEmailRes)(nil),          // 101: api.v0alpha.SchedulePureOmniLinkInboundEmailRes
	(*UpdateInboundEmailGroupReq)(nil),                   // 102: api.v0alpha.UpdateInboundEmailGroupReq
	(*UpdateInboundEmailGroupRes)(nil),                   // 103: api.v0alpha.UpdateInboundEmailGroupRes
	(*UpdateOutboundEmailGroupReq)(nil),                  // 104: api.v0alpha.UpdateOutboundEmailGroupReq
	(*UpdateOutboundEmailGroupRes)(nil),                  // 105: api.v0alpha.UpdateOutboundEmailGroupRes
	(*CreateEmailMessageAttachmentReq)(nil),              // 106: api.v0alpha.CreateEmailMessageAttachmentReq
	(*CreateEmailMessageAttachmentRes)(nil),              // 107: api.v0alpha.CreateEmailMessageAttachmentRes
	(*ListEmailMessageAttachmentsReq)(nil),               // 108: api.v0alpha.ListEmailMessageAttachmentsReq
	(*ListEmailMessageAttachmentsRes)(nil),               // 109: api.v0alpha.ListEmailMessageAttachmentsRes
	(*EmailMessageAttachment)(nil),                       // 110: api.v0alpha.EmailMessageAttachment
	(*UnassignCurrentUserFromEmailConversationReq)(nil),  // 111: api.v0alpha.UnassignCurrentUserFromEmailConversationReq
	(*UnassignUserFromEmailConversationRes)(nil),         // 112: api.v0alpha.UnassignUserFromEmailConversationRes
	(*DashboardEmailConversationSearchReq)(nil),          // 113: api.v0alpha.DashboardEmailConversationSearchReq
	(*DashboardEmailConversationSearchRes)(nil),          // 114: api.v0alpha.DashboardEmailConversationSearchRes
	(*DashboardEmailConversationResEntry)(nil),           // 115: api.v0alpha.DashboardEmailConversationResEntry
	(*EmailConversationAssignedUser)(nil),                // 116: api.v0alpha.EmailConversationAssignedUser
	(*EmailConversation)(nil),                            // 117: api.v0alpha.EmailConversation
	(*ReassignEmailConversationReq)(nil),                 // 118: api.v0alpha.ReassignEmailConversationReq
	(*ReassignEmailConversationRes)(nil),                 // 119: api.v0alpha.ReassignEmailConversationRes
	(*AssignEmailConversationReq)(nil),                   // 120: api.v0alpha.AssignEmailConversationReq
	(*AssignEmailConversationRes)(nil),                   // 121: api.v0alpha.AssignEmailConversationRes
	(*SuspendEmailConversationReq)(nil),                  // 122: api.v0alpha.SuspendEmailConversationReq
	(*SuspendEmailConversationRes)(nil),                  // 123: api.v0alpha.SuspendEmailConversationRes
	(*ListCampaignsByConnectedInboxIdReq)(nil),           // 124: api.v0alpha.ListCampaignsByConnectedInboxIdReq
	(*ListCampaignsByConnectedInboxIdRes)(nil),           // 125: api.v0alpha.ListCampaignsByConnectedInboxIdRes
	(*InboundEmailCampaignWithProjectDetails)(nil),       // 126: api.v0alpha.InboundEmailCampaignWithProjectDetails
	(*OutboundEmailCampaignWithProjectDetails)(nil),      // 127: api.v0alpha.OutboundEmailCampaignWithProjectDetails
	(*CloseEmailConversationReq)(nil),                    // 128: api.v0alpha.CloseEmailConversationReq
	(*CloseEmailConversationRes)(nil),                    // 129: api.v0alpha.CloseEmailConversationRes
	nil,                                                  // 130: api.v0alpha.EmailConversationSkills.SkillsEntry
	(*timestamppb.Timestamp)(nil),                        // 131: google.protobuf.Timestamp
	(*wrapperspb.StringValue)(nil),                       // 132: google.protobuf.StringValue
	(commons.EmailStatus)(0),                             // 133: api.commons.EmailStatus
	(*commons.SLATimeouts)(nil),                          // 134: api.commons.SLATimeouts
	(commons.ConnectedInboxAuthenticationType)(0),        // 135: api.commons.ConnectedInboxAuthenticationType
	(commons.EmailIBGroupStatus)(0),                      // 136: api.commons.EmailIBGroupStatus
	(commons.EmailIBReplyStatus)(0),                      // 137: api.commons.EmailIBReplyStatus
	(*wrapperspb.Int64Value)(nil),                        // 138: google.protobuf.Int64Value
	(commons.EmailIBReplyType)(0),                        // 139: api.commons.EmailIBReplyType
	(commons.AgentConversationAssignmentType)(0),         // 140: api.commons.AgentConversationAssignmentType
	(commons.AgentConversationAssignmentStatus)(0),       // 141: api.commons.AgentConversationAssignmentStatus
	(commons.ConversationStatus)(0),                      // 142: api.commons.ConversationStatus
}
var file_api_v0alpha_emailapi_proto_depIdxs = []int32{
	131, // 0: api.v0alpha.EmailTemplateDetails.last_updated:type_name -> google.protobuf.Timestamp
	131, // 1: api.v0alpha.EmailGroupScheduleTimesReq.start_time:type_name -> google.protobuf.Timestamp
	131, // 2: api.v0alpha.EmailGroupScheduleTimesReq.stop_time:type_name -> google.protobuf.Timestamp
	131, // 3: api.v0alpha.EmailCustomUnsubscribeLink.date_validated:type_name -> google.protobuf.Timestamp
	131, // 4: api.v0alpha.EmailCustomUnsubscribeLink.last_updated:type_name -> google.protobuf.Timestamp
	16,  // 5: api.v0alpha.GetAllCustomUnsubscribeLinksRes.email_custom_unsubscribe_link:type_name -> api.v0alpha.EmailCustomUnsubscribeLink
	21,  // 6: api.v0alpha.GetAllEmailTemplatesRes.email_template_with_attachments:type_name -> api.v0alpha.EmailTemplateWithAttachments
	131, // 7: api.v0alpha.EmailTemplateWithAttachments.last_updated:type_name -> google.protobuf.Timestamp
	33,  // 8: api.v0alpha.EmailTemplateWithAttachments.email_template_attachment_details:type_name -> api.v0alpha.EmailTemplateAttachmentDetails
	132, // 9: api.v0alpha.EmailTaskMstrDetails.message_id:type_name -> google.protobuf.StringValue
	131, // 10: api.v0alpha.EmailTaskMstrDetails.emailed_time:type_name -> google.protobuf.Timestamp
	132, // 11: api.v0alpha.EmailTaskMstrDetails.email_col_name:type_name -> google.protobuf.StringValue
	131, // 12: api.v0alpha.EmailGroupSearchDetailsRes.start_time:type_name -> google.protobuf.Timestamp
	131, // 13: api.v0alpha.EmailGroupSearchDetailsRes.stop_time:type_name -> google.protobuf.Timestamp
	133, // 14: api.v0alpha.EmailGroupSearchDetailsRes.status:type_name -> api.commons.EmailStatus
	132, // 15: api.v0alpha.EmailGroupSearchDetailsRes.email_col_name:type_name -> google.protobuf.StringValue
	132, // 16: api.v0alpha.EmailGroupSearchDetailsRes.contact_group_sid_str:type_name -> google.protobuf.StringValue
	131, // 17: api.v0alpha.EmailGroupSearchDetailsRes.date_created:type_name -> google.protobuf.Timestamp
	132, // 18: api.v0alpha.EmailGroupSearchDetailsRes.email_group_id:type_name -> google.protobuf.StringValue
	134, // 19: api.v0alpha.EmailGroupSearchDetailsRes.sla_timeouts:type_name -> api.commons.SLATimeouts
	131, // 20: api.v0alpha.EmailGroupSearchReq.search_from:type_name -> google.protobuf.Timestamp
	131, // 21: api.v0alpha.EmailGroupSearchReq.search_to:type_name -> google.protobuf.Timestamp
	23,  // 22: api.v0alpha.EmailGroupSearchRes.email_group_search_details_res:type_name -> api.v0alpha.EmailGroupSearchDetailsRes
	23,  // 23: api.v0alpha.GetEmailGroupsByGroupSidsRes.email_group_search_details_res:type_name -> api.v0alpha.EmailGroupSearchDetailsRes
	131, // 24: api.v0alpha.EmailGroupDetailsWithAttachments.start_time:type_name -> google.protobuf.Timestamp
	131, // 25: api.v0alpha.EmailGroupDetailsWithAttachments.stop_time:type_name -> google.protobuf.Timestamp
	133, // 26: api.v0alpha.EmailGroupDetailsWithAttachments.status:type_name -> api.commons.EmailStatus
	132, // 27: api.v0alpha.EmailGroupDetailsWithAttachments.email_col_name:type_name -> google.protobuf.StringValue
	132, // 28: api.v0alpha.EmailGroupDetailsWithAttachments.contact_group_sid_str:type_name -> google.protobuf.StringValue
	131, // 29: api.v0alpha.EmailGroupDetailsWithAttachments.date_created:type_name -> google.protobuf.Timestamp
	132, // 30: api.v0alpha.EmailGroupDetailsWithAttachments.email_group_id:type_name -> google.protobuf.StringValue
	110, // 31: api.v0alpha.EmailGroupDetailsWithAttachments.email_message_attachments:type_name -> api.v0alpha.EmailMessageAttachment
	134, // 32: api.v0alpha.EmailGroupDetailsWithAttachments.sla_timeouts:type_name -> api.commons.SLATimeouts
	22,  // 33: api.v0alpha.GetEmailTasksByGroupSidsRes.email_task_mstr_details:type_name -> api.v0alpha.EmailTaskMstrDetails
	33,  // 34: api.v0alpha.GetAllEmailTemplateAttachmentRes.email_template_attachment_details:type_name -> api.v0alpha.EmailTemplateAttachmentDetails
	131, // 35: api.v0alpha.ScheduleReq.start_time:type_name -> google.protobuf.Timestamp
	131, // 36: api.v0alpha.ScheduleReq.stop_time:type_name -> google.protobuf.Timestamp
	132, // 37: api.v0alpha.ScheduleReq.project_id:type_name -> google.protobuf.StringValue
	131, // 38: api.v0alpha.ScheduleOutboundEmailGroupReq.start_time:type_name -> google.protobuf.Timestamp
	131, // 39: api.v0alpha.ScheduleOutboundEmailGroupReq.stop_time:type_name -> google.protobuf.Timestamp
	132, // 40: api.v0alpha.ScheduleOutboundEmailGroupReq.project_id:type_name -> google.protobuf.StringValue
	134, // 41: api.v0alpha.ScheduleOutboundEmailGroupReq.sla_timeouts:type_name -> api.commons.SLATimeouts
	132, // 42: api.v0alpha.ConnectedInbox.connected_inbox_id:type_name -> google.protobuf.StringValue
	131, // 43: api.v0alpha.ConnectedInbox.last_scheduled_time:type_name -> google.protobuf.Timestamp
	131, // 44: api.v0alpha.ConnectedInbox.last_checked:type_name -> google.protobuf.Timestamp
	131, // 45: api.v0alpha.ConnectedInbox.last_updated:type_name -> google.protobuf.Timestamp
	132, // 46: api.v0alpha.ConnectedInbox.last_error:type_name -> google.protobuf.StringValue
	131, // 47: api.v0alpha.ConnectedInbox.standby_error_time:type_name -> google.protobuf.Timestamp
	135, // 48: api.v0alpha.ConnectedInbox.authentication_type:type_name -> api.commons.ConnectedInboxAuthenticationType
	48,  // 49: api.v0alpha.CreateInboundEmailTemplateReq.skills:type_name -> api.v0alpha.EmailConversationSkills
	130, // 50: api.v0alpha.EmailConversationSkills.skills:type_name -> api.v0alpha.EmailConversationSkills.SkillsEntry
	132, // 51: api.v0alpha.CreateInboundEmailTemplateRes.inbound_email_template_id:type_name -> google.protobuf.StringValue
	48,  // 52: api.v0alpha.UpdateInboundEmailTemplateReq.skills:type_name -> api.v0alpha.EmailConversationSkills
	132, // 53: api.v0alpha.InboundEmailTemplate.inbound_email_template_id:type_name -> google.protobuf.StringValue
	132, // 54: api.v0alpha.InboundEmailTemplate.connected_inbox_id:type_name -> google.protobuf.StringValue
	131, // 55: api.v0alpha.InboundEmailTemplate.last_updated:type_name -> google.protobuf.Timestamp
	48,  // 56: api.v0alpha.InboundEmailTemplate.skills:type_name -> api.v0alpha.EmailConversationSkills
	54,  // 57: api.v0alpha.ListInboundEmailTemplatesRes.inbound_email_template:type_name -> api.v0alpha.InboundEmailTemplate
	136, // 58: api.v0alpha.UpdateInboundEmailGroupStatusReq.status:type_name -> api.commons.EmailIBGroupStatus
	132, // 59: api.v0alpha.InboundEmailGroup.inbound_email_group_id:type_name -> google.protobuf.StringValue
	132, // 60: api.v0alpha.InboundEmailGroup.connected_inbox_id:type_name -> google.protobuf.StringValue
	136, // 61: api.v0alpha.InboundEmailGroup.status:type_name -> api.commons.EmailIBGroupStatus
	131, // 62: api.v0alpha.InboundEmailGroup.start_time:type_name -> google.protobuf.Timestamp
	131, // 63: api.v0alpha.InboundEmailGroup.stop_time:type_name -> google.protobuf.Timestamp
	132, // 64: api.v0alpha.InboundEmailGroup.inbound_email_template_id:type_name -> google.protobuf.StringValue
	48,  // 65: api.v0alpha.InboundEmailGroup.skills:type_name -> api.v0alpha.EmailConversationSkills
	134, // 66: api.v0alpha.InboundEmailGroup.sla_timeouts:type_name -> api.commons.SLATimeouts
	132, // 67: api.v0alpha.PureInboundEmailGroup.inbound_email_group_id:type_name -> google.protobuf.StringValue
	132, // 68: api.v0alpha.PureInboundEmailGroup.connected_inbox_id:type_name -> google.protobuf.StringValue
	136, // 69: api.v0alpha.PureInboundEmailGroup.status:type_name -> api.commons.EmailIBGroupStatus
	131, // 70: api.v0alpha.PureInboundEmailGroup.start_time:type_name -> google.protobuf.Timestamp
	131, // 71: api.v0alpha.PureInboundEmailGroup.stop_time:type_name -> google.protobuf.Timestamp
	132, // 72: api.v0alpha.PureInboundEmailGroup.inbound_email_template_id:type_name -> google.protobuf.StringValue
	48,  // 73: api.v0alpha.PureInboundEmailGroup.skills:type_name -> api.v0alpha.EmailConversationSkills
	131, // 74: api.v0alpha.PureInboundEmailGroupSearchReq.search_from:type_name -> google.protobuf.Timestamp
	131, // 75: api.v0alpha.PureInboundEmailGroupSearchReq.search_to:type_name -> google.protobuf.Timestamp
	66,  // 76: api.v0alpha.PureInboundEmailGroupSearchRes.pure_inbound_email_group:type_name -> api.v0alpha.PureInboundEmailGroup
	131, // 77: api.v0alpha.InboundEmailGroupSearchReq.search_from:type_name -> google.protobuf.Timestamp
	131, // 78: api.v0alpha.InboundEmailGroupSearchReq.search_to:type_name -> google.protobuf.Timestamp
	65,  // 79: api.v0alpha.InboundEmailGroupSearchRes.inbound_email_group:type_name -> api.v0alpha.InboundEmailGroup
	65,  // 80: api.v0alpha.ListInboundEmailGroupsByGroupIdsRes.inbound_email_group:type_name -> api.v0alpha.InboundEmailGroup
	132, // 81: api.v0alpha.InboundEmailTaskDetails.email_message_reply_id:type_name -> google.protobuf.StringValue
	131, // 82: api.v0alpha.InboundEmailTaskDetails.received_time:type_name -> google.protobuf.Timestamp
	132, // 83: api.v0alpha.InboundEmailTaskDetails.inbound_email_group_id:type_name -> google.protobuf.StringValue
	137, // 84: api.v0alpha.InboundEmailTaskDetails.status:type_name -> api.commons.EmailIBReplyStatus
	132, // 85: api.v0alpha.InboundEmailTaskDetails.message_id:type_name -> google.protobuf.StringValue
	132, // 86: api.v0alpha.InboundEmailTaskDetails.email_conversation_id:type_name -> google.protobuf.StringValue
	138, // 87: api.v0alpha.InboundEmailTaskDetails.email_task_sid:type_name -> google.protobuf.Int64Value
	139, // 88: api.v0alpha.InboundEmailTaskDetails.reply_type:type_name -> api.commons.EmailIBReplyType
	138, // 89: api.v0alpha.InboundEmailTaskDetails.delivery_status:type_name -> google.protobuf.Int64Value
	132, // 90: api.v0alpha.InboundEmailTaskDetails.delivery_status_message:type_name -> google.protobuf.StringValue
	86,  // 91: api.v0alpha.InboundEmailTaskDetails.email_message_reply_attachment:type_name -> api.v0alpha.EmailMessageReplyAttachment
	132, // 92: api.v0alpha.InboundEmailTaskDetails.user_id:type_name -> google.protobuf.StringValue
	73,  // 93: api.v0alpha.ListInboundEmailTasksByGroupIdsRes.inbound_email_task_details:type_name -> api.v0alpha.InboundEmailTaskDetails
	65,  // 94: api.v0alpha.ListActiveInboundEmailGroupsRes.inbound_email_group:type_name -> api.v0alpha.InboundEmailGroup
	132, // 95: api.v0alpha.EmailMessageReply.email_message_reply_id:type_name -> google.protobuf.StringValue
	131, // 96: api.v0alpha.EmailMessageReply.received_time:type_name -> google.protobuf.Timestamp
	138, // 97: api.v0alpha.EmailMessageReply.email_task_sid:type_name -> google.protobuf.Int64Value
	132, // 98: api.v0alpha.EmailMessageReply.inbound_email_group_id:type_name -> google.protobuf.StringValue
	137, // 99: api.v0alpha.EmailMessageReply.status:type_name -> api.commons.EmailIBReplyStatus
	132, // 100: api.v0alpha.EmailMessageReply.message_id:type_name -> google.protobuf.StringValue
	132, // 101: api.v0alpha.EmailMessageReply.email_conversation_id:type_name -> google.protobuf.StringValue
	139, // 102: api.v0alpha.EmailMessageReply.reply_type:type_name -> api.commons.EmailIBReplyType
	138, // 103: api.v0alpha.EmailMessageReply.delivery_status:type_name -> google.protobuf.Int64Value
	132, // 104: api.v0alpha.EmailMessageReply.delivery_status_message:type_name -> google.protobuf.StringValue
	132, // 105: api.v0alpha.EmailMessageReply.user_id:type_name -> google.protobuf.StringValue
	132, // 106: api.v0alpha.EmailMessageReplyAttachment.email_message_reply_attachment_id:type_name -> google.protobuf.StringValue
	132, // 107: api.v0alpha.EmailMessageReplyAttachment.email_message_reply_id:type_name -> google.protobuf.StringValue
	86,  // 108: api.v0alpha.ListEmailMessageReplyAttachmentsByReplyIdRes.email_message_reply_attachment:type_name -> api.v0alpha.EmailMessageReplyAttachment
	85,  // 109: api.v0alpha.InboundEmailGroupReplyAttachments.email_message_reply:type_name -> api.v0alpha.EmailMessageReply
	86,  // 110: api.v0alpha.InboundEmailGroupReplyAttachments.email_message_reply_attachment:type_name -> api.v0alpha.EmailMessageReplyAttachment
	65,  // 111: api.v0alpha.ListInboundEmailGroupReplyAttachmentsByIdRes.inbound_email_group:type_name -> api.v0alpha.InboundEmailGroup
	89,  // 112: api.v0alpha.ListInboundEmailGroupReplyAttachmentsByIdRes.inbound_email_group_reply_attachments:type_name -> api.v0alpha.InboundEmailGroupReplyAttachments
	131, // 113: api.v0alpha.SchedulePureInboundEmailReq.start_time:type_name -> google.protobuf.Timestamp
	131, // 114: api.v0alpha.SchedulePureInboundEmailReq.stop_time:type_name -> google.protobuf.Timestamp
	131, // 115: api.v0alpha.ListNewEmailMessageRepliesReq.last_timestamp:type_name -> google.protobuf.Timestamp
	99,  // 116: api.v0alpha.ListNewEmailMessageRepliesRes.email_message_replies_with_attachments:type_name -> api.v0alpha.EmailMessageReplyWithAttachments
	85,  // 117: api.v0alpha.EmailMessageReplyWithAttachments.email_message_reply:type_name -> api.v0alpha.EmailMessageReply
	86,  // 118: api.v0alpha.EmailMessageReplyWithAttachments.attachments:type_name -> api.v0alpha.EmailMessageReplyAttachment
	131, // 119: api.v0alpha.SchedulePureOmniLinkInboundEmailReq.start_time:type_name -> google.protobuf.Timestamp
	131, // 120: api.v0alpha.SchedulePureOmniLinkInboundEmailReq.stop_time:type_name -> google.protobuf.Timestamp
	48,  // 121: api.v0alpha.SchedulePureOmniLinkInboundEmailReq.skills:type_name -> api.v0alpha.EmailConversationSkills
	132, // 122: api.v0alpha.SchedulePureOmniLinkInboundEmailReq.project_id:type_name -> google.protobuf.StringValue
	134, // 123: api.v0alpha.SchedulePureOmniLinkInboundEmailReq.sla_timeouts:type_name -> api.commons.SLATimeouts
	131, // 124: api.v0alpha.UpdateInboundEmailGroupReq.stop_time:type_name -> google.protobuf.Timestamp
	48,  // 125: api.v0alpha.UpdateInboundEmailGroupReq.skills:type_name -> api.v0alpha.EmailConversationSkills
	131, // 126: api.v0alpha.UpdateInboundEmailGroupReq.start_time:type_name -> google.protobuf.Timestamp
	134, // 127: api.v0alpha.UpdateInboundEmailGroupReq.sla_timeouts:type_name -> api.commons.SLATimeouts
	131, // 128: api.v0alpha.UpdateOutboundEmailGroupReq.start_time:type_name -> google.protobuf.Timestamp
	131, // 129: api.v0alpha.UpdateOutboundEmailGroupReq.stop_time:type_name -> google.protobuf.Timestamp
	134, // 130: api.v0alpha.UpdateOutboundEmailGroupReq.sla_timeouts:type_name -> api.commons.SLATimeouts
	110, // 131: api.v0alpha.ListEmailMessageAttachmentsRes.email_message_attachments:type_name -> api.v0alpha.EmailMessageAttachment
	131, // 132: api.v0alpha.DashboardEmailConversationSearchReq.search_from:type_name -> google.protobuf.Timestamp
	131, // 133: api.v0alpha.DashboardEmailConversationSearchReq.search_to:type_name -> google.protobuf.Timestamp
	115, // 134: api.v0alpha.DashboardEmailConversationSearchRes.dashboard_email_conversation_res_entrys:type_name -> api.v0alpha.DashboardEmailConversationResEntry
	117, // 135: api.v0alpha.DashboardEmailConversationResEntry.email_conversation:type_name -> api.v0alpha.EmailConversation
	116, // 136: api.v0alpha.DashboardEmailConversationResEntry.email_conversation_assigned_users:type_name -> api.v0alpha.EmailConversationAssignedUser
	140, // 137: api.v0alpha.EmailConversationAssignedUser.assignment_type:type_name -> api.commons.AgentConversationAssignmentType
	131, // 138: api.v0alpha.EmailConversationAssignedUser.assigned_last_updated_time:type_name -> google.protobuf.Timestamp
	141, // 139: api.v0alpha.EmailConversationAssignedUser.assignment_status:type_name -> api.commons.AgentConversationAssignmentStatus
	132, // 140: api.v0alpha.EmailConversationAssignedUser.user_name:type_name -> google.protobuf.StringValue
	132, // 141: api.v0alpha.EmailConversation.conversation_id:type_name -> google.protobuf.StringValue
	132, // 142: api.v0alpha.EmailConversation.email_inbound_group_id:type_name -> google.protobuf.StringValue
	131, // 143: api.v0alpha.EmailConversation.conversation_created_time:type_name -> google.protobuf.Timestamp
	48,  // 144: api.v0alpha.EmailConversation.skills:type_name -> api.v0alpha.EmailConversationSkills
	142, // 145: api.v0alpha.EmailConversation.conversation_status:type_name -> api.commons.ConversationStatus
	131, // 146: api.v0alpha.EmailConversation.last_message_time:type_name -> google.protobuf.Timestamp
	132, // 147: api.v0alpha.EmailConversation.email_group_id:type_name -> google.protobuf.StringValue
	134, // 148: api.v0alpha.EmailConversation.sla_timeouts:type_name -> api.commons.SLATimeouts
	140, // 149: api.v0alpha.AssignEmailConversationReq.assignment_type:type_name -> api.commons.AgentConversationAssignmentType
	46,  // 150: api.v0alpha.ListCampaignsByConnectedInboxIdRes.connected_inbox:type_name -> api.v0alpha.ConnectedInbox
	126, // 151: api.v0alpha.ListCampaignsByConnectedInboxIdRes.inbound_email_campaigns:type_name -> api.v0alpha.InboundEmailCampaignWithProjectDetails
	127, // 152: api.v0alpha.ListCampaignsByConnectedInboxIdRes.outbound_email_campaigns:type_name -> api.v0alpha.OutboundEmailCampaignWithProjectDetails
	136, // 153: api.v0alpha.InboundEmailCampaignWithProjectDetails.status:type_name -> api.commons.EmailIBGroupStatus
	133, // 154: api.v0alpha.OutboundEmailCampaignWithProjectDetails.status:type_name -> api.commons.EmailStatus
	142, // 155: api.v0alpha.CloseEmailConversationReq.status:type_name -> api.commons.ConversationStatus
	2,   // 156: api.v0alpha.EmailApi.CreateEmailTemplate:input_type -> api.v0alpha.CreateEmailTemplateReq
	4,   // 157: api.v0alpha.EmailApi.UpdateEmailTemplate:input_type -> api.v0alpha.UpdateEmailTemplateReq
	35,  // 158: api.v0alpha.EmailApi.CreateEmailTemplateAttachment:input_type -> api.v0alpha.CreateEmailTemplateAttachmentReq
	37,  // 159: api.v0alpha.EmailApi.CopyEmailTemplateWithAttachments:input_type -> api.v0alpha.CopyEmailTemplateWithAttachmentsReq
	81,  // 160: api.v0alpha.EmailApi.UpdateEmailTemplateAttachment:input_type -> api.v0alpha.UpdateEmailTemplateAttachmentReq
	20,  // 161: api.v0alpha.EmailApi.GetEmailTemplateByTemplateSid:input_type -> api.v0alpha.GetEmailTemplateByTemplateSidReq
	18,  // 162: api.v0alpha.EmailApi.GetAllEmailTemplates:input_type -> api.v0alpha.GetAllEmailTemplatesReq
	6,   // 163: api.v0alpha.EmailApi.DeleteEmailTemplate:input_type -> api.v0alpha.DeleteEmailTemplateReq
	79,  // 164: api.v0alpha.EmailApi.DeleteEmailTemplateAttachmentById:input_type -> api.v0alpha.DeleteEmailTemplateAttachmentByIdReq
	77,  // 165: api.v0alpha.EmailApi.DownloadInboundEmailAttachment:input_type -> api.v0alpha.DownloadInboundEmailAttachmentReq
	24,  // 166: api.v0alpha.EmailApi.PureEmailGroupSearch:input_type -> api.v0alpha.EmailGroupSearchReq
	97,  // 167: api.v0alpha.EmailApi.ManagerListNewEmailMessageReplies:input_type -> api.v0alpha.ListNewEmailMessageRepliesReq
	97,  // 168: api.v0alpha.EmailApi.ListNewEmailMessageReplies:input_type -> api.v0alpha.ListNewEmailMessageRepliesReq
	31,  // 169: api.v0alpha.EmailApi.GetEmailTasksByGroupSids:input_type -> api.v0alpha.GetEmailTasksByGroupSidsReq
	9,   // 170: api.v0alpha.EmailApi.UpdateEmailGroupStatus:input_type -> api.v0alpha.EmailGroupStatusReq
	39,  // 171: api.v0alpha.EmailApi.GetEmailMessageDetails:input_type -> api.v0alpha.GetEmailMessageReq
	47,  // 172: api.v0alpha.EmailApi.CreateInboundEmailTemplate:input_type -> api.v0alpha.CreateInboundEmailTemplateReq
	50,  // 173: api.v0alpha.EmailApi.UpdateInboundEmailTemplate:input_type -> api.v0alpha.UpdateInboundEmailTemplateReq
	52,  // 174: api.v0alpha.EmailApi.DeleteInboundEmailTemplateById:input_type -> api.v0alpha.DeleteInboundEmailTemplateByIdReq
	55,  // 175: api.v0alpha.EmailApi.ListInboundEmailTemplates:input_type -> api.v0alpha.ListInboundEmailTemplatesReq
	57,  // 176: api.v0alpha.EmailApi.GetInboundEmailTemplateById:input_type -> api.v0alpha.GetInboundEmailTemplateByIdReq
	58,  // 177: api.v0alpha.EmailApi.UpdateInboundEmailGroupStatus:input_type -> api.v0alpha.UpdateInboundEmailGroupStatusReq
	60,  // 178: api.v0alpha.EmailApi.StopInboundEmailGroup:input_type -> api.v0alpha.StopInboundEmailGroupReq
	62,  // 179: api.v0alpha.EmailApi.StopAllInboundEmailGroups:input_type -> api.v0alpha.StopAllInboundEmailGroupsReq
	67,  // 180: api.v0alpha.EmailApi.PureInboundEmailGroupSearch:input_type -> api.v0alpha.PureInboundEmailGroupSearchReq
	69,  // 181: api.v0alpha.EmailApi.InboundEmailGroupSearch:input_type -> api.v0alpha.InboundEmailGroupSearchReq
	71,  // 182: api.v0alpha.EmailApi.ListInboundEmailGroupsByGroupIds:input_type -> api.v0alpha.ListInboundEmailGroupsByGroupIdsReq
	74,  // 183: api.v0alpha.EmailApi.ListInboundEmailTasksByGroupIds:input_type -> api.v0alpha.ListInboundEmailTasksByGroupIdsReq
	83,  // 184: api.v0alpha.EmailApi.ListActiveInboundEmailGroups:input_type -> api.v0alpha.ListActiveInboundEmailGroupsReq
	41,  // 185: api.v0alpha.EmailApi.Schedule:input_type -> api.v0alpha.ScheduleReq
	43,  // 186: api.v0alpha.EmailApi.ScheduleOutboundEmailGroup:input_type -> api.v0alpha.ScheduleOutboundEmailGroupReq
	91,  // 187: api.v0alpha.EmailApi.SchedulePureInboundEmail:input_type -> api.v0alpha.SchedulePureInboundEmailReq
	93,  // 188: api.v0alpha.EmailApi.CreateEmailMessageAgentReply:input_type -> api.v0alpha.CreateEmailMessageAgentReplyReq
	94,  // 189: api.v0alpha.EmailApi.CreateEmailMessageAgentReplyAttachment:input_type -> api.v0alpha.CreateEmailMessageAgentReplyAttachmentReq
	96,  // 190: api.v0alpha.EmailApi.SendReply:input_type -> api.v0alpha.SendReplyReq
	26,  // 191: api.v0alpha.EmailApi.GetEmailGroupsByGroupSids:input_type -> api.v0alpha.GetEmailGroupsByGroupSidsReq
	28,  // 192: api.v0alpha.EmailApi.GetEmailGroupByGroupSid:input_type -> api.v0alpha.GetEmailGroupByGroupSidReq
	30,  // 193: api.v0alpha.EmailApi.GetEmailGroupByGroupId:input_type -> api.v0alpha.GetEmailGroupByGroupIdReq
	100, // 194: api.v0alpha.EmailApi.SchedulePureOmniLinkInboundEmail:input_type -> api.v0alpha.SchedulePureOmniLinkInboundEmailReq
	102, // 195: api.v0alpha.EmailApi.UpdateInboundEmailGroup:input_type -> api.v0alpha.UpdateInboundEmailGroupReq
	11,  // 196: api.v0alpha.EmailApi.UpdateEmailGroupMstrSendsPerMinute:input_type -> api.v0alpha.EmailGroupSendsPerMinuteReq
	104, // 197: api.v0alpha.EmailApi.UpdateOutboundEmailGroup:input_type -> api.v0alpha.UpdateOutboundEmailGroupReq
	76,  // 198: api.v0alpha.EmailApi.GetInboundEmailGroupById:input_type -> api.v0alpha.InboundEmailGroupByIdReq
	106, // 199: api.v0alpha.EmailApi.CreateEmailMessageAttachment:input_type -> api.v0alpha.CreateEmailMessageAttachmentReq
	108, // 200: api.v0alpha.EmailApi.ListEmailMessageAttachments:input_type -> api.v0alpha.ListEmailMessageAttachmentsReq
	111, // 201: api.v0alpha.EmailApi.UnassignCurrentUserFromEmailConversation:input_type -> api.v0alpha.UnassignCurrentUserFromEmailConversationReq
	113, // 202: api.v0alpha.EmailApi.DashboardEmailConversationSearch:input_type -> api.v0alpha.DashboardEmailConversationSearchReq
	118, // 203: api.v0alpha.EmailApi.ReassignEmailConversation:input_type -> api.v0alpha.ReassignEmailConversationReq
	120, // 204: api.v0alpha.EmailApi.AssignEmailConversation:input_type -> api.v0alpha.AssignEmailConversationReq
	122, // 205: api.v0alpha.EmailApi.SuspendEmailConversation:input_type -> api.v0alpha.SuspendEmailConversationReq
	124, // 206: api.v0alpha.EmailApi.ListCampaignsByConnectedInboxId:input_type -> api.v0alpha.ListCampaignsByConnectedInboxIdReq
	128, // 207: api.v0alpha.EmailApi.CloseEmailConversation:input_type -> api.v0alpha.CloseEmailConversationReq
	3,   // 208: api.v0alpha.EmailApi.CreateEmailTemplate:output_type -> api.v0alpha.CreateEmailTemplateRes
	5,   // 209: api.v0alpha.EmailApi.UpdateEmailTemplate:output_type -> api.v0alpha.UpdateEmailTemplateRes
	36,  // 210: api.v0alpha.EmailApi.CreateEmailTemplateAttachment:output_type -> api.v0alpha.CreateEmailTemplateAttachmentRes
	38,  // 211: api.v0alpha.EmailApi.CopyEmailTemplateWithAttachments:output_type -> api.v0alpha.CopyEmailTemplateWithAttachmentsRes
	82,  // 212: api.v0alpha.EmailApi.UpdateEmailTemplateAttachment:output_type -> api.v0alpha.UpdateEmailTemplateAttachmentRes
	21,  // 213: api.v0alpha.EmailApi.GetEmailTemplateByTemplateSid:output_type -> api.v0alpha.EmailTemplateWithAttachments
	19,  // 214: api.v0alpha.EmailApi.GetAllEmailTemplates:output_type -> api.v0alpha.GetAllEmailTemplatesRes
	7,   // 215: api.v0alpha.EmailApi.DeleteEmailTemplate:output_type -> api.v0alpha.DeleteEmailTemplateRes
	80,  // 216: api.v0alpha.EmailApi.DeleteEmailTemplateAttachmentById:output_type -> api.v0alpha.DeleteEmailTemplateAttachmentByIdRes
	78,  // 217: api.v0alpha.EmailApi.DownloadInboundEmailAttachment:output_type -> api.v0alpha.DownloadInboundEmailAttachmentRes
	25,  // 218: api.v0alpha.EmailApi.PureEmailGroupSearch:output_type -> api.v0alpha.EmailGroupSearchRes
	98,  // 219: api.v0alpha.EmailApi.ManagerListNewEmailMessageReplies:output_type -> api.v0alpha.ListNewEmailMessageRepliesRes
	98,  // 220: api.v0alpha.EmailApi.ListNewEmailMessageReplies:output_type -> api.v0alpha.ListNewEmailMessageRepliesRes
	32,  // 221: api.v0alpha.EmailApi.GetEmailTasksByGroupSids:output_type -> api.v0alpha.GetEmailTasksByGroupSidsRes
	10,  // 222: api.v0alpha.EmailApi.UpdateEmailGroupStatus:output_type -> api.v0alpha.EmailGroupStatusRes
	40,  // 223: api.v0alpha.EmailApi.GetEmailMessageDetails:output_type -> api.v0alpha.GetEmailMessageRes
	49,  // 224: api.v0alpha.EmailApi.CreateInboundEmailTemplate:output_type -> api.v0alpha.CreateInboundEmailTemplateRes
	51,  // 225: api.v0alpha.EmailApi.UpdateInboundEmailTemplate:output_type -> api.v0alpha.UpdateInboundEmailTemplateRes
	53,  // 226: api.v0alpha.EmailApi.DeleteInboundEmailTemplateById:output_type -> api.v0alpha.DeleteInboundEmailTemplateByIdRes
	56,  // 227: api.v0alpha.EmailApi.ListInboundEmailTemplates:output_type -> api.v0alpha.ListInboundEmailTemplatesRes
	54,  // 228: api.v0alpha.EmailApi.GetInboundEmailTemplateById:output_type -> api.v0alpha.InboundEmailTemplate
	59,  // 229: api.v0alpha.EmailApi.UpdateInboundEmailGroupStatus:output_type -> api.v0alpha.UpdateInboundEmailGroupStatusRes
	61,  // 230: api.v0alpha.EmailApi.StopInboundEmailGroup:output_type -> api.v0alpha.StopInboundEmailGroupRes
	61,  // 231: api.v0alpha.EmailApi.StopAllInboundEmailGroups:output_type -> api.v0alpha.StopInboundEmailGroupRes
	68,  // 232: api.v0alpha.EmailApi.PureInboundEmailGroupSearch:output_type -> api.v0alpha.PureInboundEmailGroupSearchRes
	70,  // 233: api.v0alpha.EmailApi.InboundEmailGroupSearch:output_type -> api.v0alpha.InboundEmailGroupSearchRes
	72,  // 234: api.v0alpha.EmailApi.ListInboundEmailGroupsByGroupIds:output_type -> api.v0alpha.ListInboundEmailGroupsByGroupIdsRes
	75,  // 235: api.v0alpha.EmailApi.ListInboundEmailTasksByGroupIds:output_type -> api.v0alpha.ListInboundEmailTasksByGroupIdsRes
	84,  // 236: api.v0alpha.EmailApi.ListActiveInboundEmailGroups:output_type -> api.v0alpha.ListActiveInboundEmailGroupsRes
	42,  // 237: api.v0alpha.EmailApi.Schedule:output_type -> api.v0alpha.ScheduleRes
	44,  // 238: api.v0alpha.EmailApi.ScheduleOutboundEmailGroup:output_type -> api.v0alpha.ScheduleOutboundEmailGroupRes
	92,  // 239: api.v0alpha.EmailApi.SchedulePureInboundEmail:output_type -> api.v0alpha.SchedulePureInboundEmailRes
	99,  // 240: api.v0alpha.EmailApi.CreateEmailMessageAgentReply:output_type -> api.v0alpha.EmailMessageReplyWithAttachments
	95,  // 241: api.v0alpha.EmailApi.CreateEmailMessageAgentReplyAttachment:output_type -> api.v0alpha.CreateEmailMessageAgentReplyAttachmentRes
	99,  // 242: api.v0alpha.EmailApi.SendReply:output_type -> api.v0alpha.EmailMessageReplyWithAttachments
	27,  // 243: api.v0alpha.EmailApi.GetEmailGroupsByGroupSids:output_type -> api.v0alpha.GetEmailGroupsByGroupSidsRes
	29,  // 244: api.v0alpha.EmailApi.GetEmailGroupByGroupSid:output_type -> api.v0alpha.EmailGroupDetailsWithAttachments
	29,  // 245: api.v0alpha.EmailApi.GetEmailGroupByGroupId:output_type -> api.v0alpha.EmailGroupDetailsWithAttachments
	101, // 246: api.v0alpha.EmailApi.SchedulePureOmniLinkInboundEmail:output_type -> api.v0alpha.SchedulePureOmniLinkInboundEmailRes
	103, // 247: api.v0alpha.EmailApi.UpdateInboundEmailGroup:output_type -> api.v0alpha.UpdateInboundEmailGroupRes
	12,  // 248: api.v0alpha.EmailApi.UpdateEmailGroupMstrSendsPerMinute:output_type -> api.v0alpha.EmailGroupSendsPerMinuteRes
	105, // 249: api.v0alpha.EmailApi.UpdateOutboundEmailGroup:output_type -> api.v0alpha.UpdateOutboundEmailGroupRes
	65,  // 250: api.v0alpha.EmailApi.GetInboundEmailGroupById:output_type -> api.v0alpha.InboundEmailGroup
	107, // 251: api.v0alpha.EmailApi.CreateEmailMessageAttachment:output_type -> api.v0alpha.CreateEmailMessageAttachmentRes
	109, // 252: api.v0alpha.EmailApi.ListEmailMessageAttachments:output_type -> api.v0alpha.ListEmailMessageAttachmentsRes
	112, // 253: api.v0alpha.EmailApi.UnassignCurrentUserFromEmailConversation:output_type -> api.v0alpha.UnassignUserFromEmailConversationRes
	114, // 254: api.v0alpha.EmailApi.DashboardEmailConversationSearch:output_type -> api.v0alpha.DashboardEmailConversationSearchRes
	119, // 255: api.v0alpha.EmailApi.ReassignEmailConversation:output_type -> api.v0alpha.ReassignEmailConversationRes
	121, // 256: api.v0alpha.EmailApi.AssignEmailConversation:output_type -> api.v0alpha.AssignEmailConversationRes
	123, // 257: api.v0alpha.EmailApi.SuspendEmailConversation:output_type -> api.v0alpha.SuspendEmailConversationRes
	125, // 258: api.v0alpha.EmailApi.ListCampaignsByConnectedInboxId:output_type -> api.v0alpha.ListCampaignsByConnectedInboxIdRes
	129, // 259: api.v0alpha.EmailApi.CloseEmailConversation:output_type -> api.v0alpha.CloseEmailConversationRes
	208, // [208:260] is the sub-list for method output_type
	156, // [156:208] is the sub-list for method input_type
	156, // [156:156] is the sub-list for extension type_name
	156, // [156:156] is the sub-list for extension extendee
	0,   // [0:156] is the sub-list for field type_name
}

func init() { file_api_v0alpha_emailapi_proto_init() }
func file_api_v0alpha_emailapi_proto_init() {
	if File_api_v0alpha_emailapi_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_v0alpha_emailapi_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomUnsubscribeSettingsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomUnsubscribeSettingsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateEmailTemplateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateEmailTemplateRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEmailTemplateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEmailTemplateRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteEmailTemplateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteEmailTemplateRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailTemplateDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailGroupStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailGroupStatusRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailGroupSendsPerMinuteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailGroupSendsPerMinuteRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailGroupScheduleTimesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailGroupScheduleTimesRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllCustomUnsubscribeLinksReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailCustomUnsubscribeLink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllCustomUnsubscribeLinksRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllEmailTemplatesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllEmailTemplatesRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEmailTemplateByTemplateSidReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailTemplateWithAttachments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailTaskMstrDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailGroupSearchDetailsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailGroupSearchReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailGroupSearchRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEmailGroupsByGroupSidsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEmailGroupsByGroupSidsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEmailGroupByGroupSidReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailGroupDetailsWithAttachments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEmailGroupByGroupIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEmailTasksByGroupSidsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEmailTasksByGroupSidsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailTemplateAttachmentDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllEmailTemplateAttachmentRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateEmailTemplateAttachmentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateEmailTemplateAttachmentRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CopyEmailTemplateWithAttachmentsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CopyEmailTemplateWithAttachmentsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEmailMessageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEmailMessageRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScheduleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScheduleRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScheduleOutboundEmailGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScheduleOutboundEmailGroupRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailMessageDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectedInbox); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateInboundEmailTemplateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailConversationSkills); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateInboundEmailTemplateRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateInboundEmailTemplateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateInboundEmailTemplateRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteInboundEmailTemplateByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteInboundEmailTemplateByIdRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InboundEmailTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInboundEmailTemplatesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInboundEmailTemplatesRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInboundEmailTemplateByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateInboundEmailGroupStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateInboundEmailGroupStatusRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopInboundEmailGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopInboundEmailGroupRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopAllInboundEmailGroupsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopAllOutboundEmailGroupsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopAllOutboundEmailGroupsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InboundEmailGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PureInboundEmailGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PureInboundEmailGroupSearchReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PureInboundEmailGroupSearchRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InboundEmailGroupSearchReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InboundEmailGroupSearchRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInboundEmailGroupsByGroupIdsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInboundEmailGroupsByGroupIdsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InboundEmailTaskDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInboundEmailTasksByGroupIdsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInboundEmailTasksByGroupIdsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InboundEmailGroupByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadInboundEmailAttachmentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadInboundEmailAttachmentRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteEmailTemplateAttachmentByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteEmailTemplateAttachmentByIdRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEmailTemplateAttachmentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEmailTemplateAttachmentRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListActiveInboundEmailGroupsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListActiveInboundEmailGroupsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailMessageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailMessageReplyAttachment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEmailMessageReplyAttachmentsByReplyIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEmailMessageReplyAttachmentsByReplyIdRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InboundEmailGroupReplyAttachments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInboundEmailGroupReplyAttachmentsByIdRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchedulePureInboundEmailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchedulePureInboundEmailRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateEmailMessageAgentReplyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateEmailMessageAgentReplyAttachmentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateEmailMessageAgentReplyAttachmentRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendReplyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNewEmailMessageRepliesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNewEmailMessageRepliesRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailMessageReplyWithAttachments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchedulePureOmniLinkInboundEmailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchedulePureOmniLinkInboundEmailRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateInboundEmailGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateInboundEmailGroupRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOutboundEmailGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOutboundEmailGroupRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateEmailMessageAttachmentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateEmailMessageAttachmentRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEmailMessageAttachmentsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEmailMessageAttachmentsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailMessageAttachment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnassignCurrentUserFromEmailConversationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnassignUserFromEmailConversationRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DashboardEmailConversationSearchReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DashboardEmailConversationSearchRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DashboardEmailConversationResEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailConversationAssignedUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailConversation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReassignEmailConversationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReassignEmailConversationRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssignEmailConversationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssignEmailConversationRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuspendEmailConversationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuspendEmailConversationRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCampaignsByConnectedInboxIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCampaignsByConnectedInboxIdRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InboundEmailCampaignWithProjectDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OutboundEmailCampaignWithProjectDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseEmailConversationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_emailapi_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseEmailConversationRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v0alpha_emailapi_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   131,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v0alpha_emailapi_proto_goTypes,
		DependencyIndexes: file_api_v0alpha_emailapi_proto_depIdxs,
		MessageInfos:      file_api_v0alpha_emailapi_proto_msgTypes,
	}.Build()
	File_api_v0alpha_emailapi_proto = out.File
	file_api_v0alpha_emailapi_proto_rawDesc = nil
	file_api_v0alpha_emailapi_proto_goTypes = nil
	file_api_v0alpha_emailapi_proto_depIdxs = nil
}
