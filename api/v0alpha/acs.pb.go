// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: api/v0alpha/acs.proto

package v0alpha

import (
	commons "github.com/tcncloud/api-go/api/commons"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ScriptElementType int32

const (
	ScriptElementType_RAW_TEXT          ScriptElementType = 0 // Raw Text only (no response)
	ScriptElementType_TEXT_BOX          ScriptElementType = 1 // Free Form
	ScriptElementType_TEXT_BOX_ALPHA    ScriptElementType = 2
	ScriptElementType_TEXT_BOX_NUM      ScriptElementType = 3
	ScriptElementType_TEXT_AREA         ScriptElementType = 4
	ScriptElementType_TEXT_VERIFICATION ScriptElementType = 5
	ScriptElementType_REGEX             ScriptElementType = 6
	ScriptElementType_REGEX_TEXT_AREA   ScriptElementType = 7
	ScriptElementType_DROP_DOWN         ScriptElementType = 100 // Single Choice
	ScriptElementType_CALENDAR          ScriptElementType = 101
	ScriptElementType_PHONE             ScriptElementType = 102
	ScriptElementType_RADIO             ScriptElementType = 103
	ScriptElementType_MULTI_SELECT      ScriptElementType = 200 // Multi Choice
	ScriptElementType_CHECKBOX          ScriptElementType = 201
)

// Enum value maps for ScriptElementType.
var (
	ScriptElementType_name = map[int32]string{
		0:   "RAW_TEXT",
		1:   "TEXT_BOX",
		2:   "TEXT_BOX_ALPHA",
		3:   "TEXT_BOX_NUM",
		4:   "TEXT_AREA",
		5:   "TEXT_VERIFICATION",
		6:   "REGEX",
		7:   "REGEX_TEXT_AREA",
		100: "DROP_DOWN",
		101: "CALENDAR",
		102: "PHONE",
		103: "RADIO",
		200: "MULTI_SELECT",
		201: "CHECKBOX",
	}
	ScriptElementType_value = map[string]int32{
		"RAW_TEXT":          0,
		"TEXT_BOX":          1,
		"TEXT_BOX_ALPHA":    2,
		"TEXT_BOX_NUM":      3,
		"TEXT_AREA":         4,
		"TEXT_VERIFICATION": 5,
		"REGEX":             6,
		"REGEX_TEXT_AREA":   7,
		"DROP_DOWN":         100,
		"CALENDAR":          101,
		"PHONE":             102,
		"RADIO":             103,
		"MULTI_SELECT":      200,
		"CHECKBOX":          201,
	}
)

func (x ScriptElementType) Enum() *ScriptElementType {
	p := new(ScriptElementType)
	*p = x
	return p
}

func (x ScriptElementType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ScriptElementType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v0alpha_acs_proto_enumTypes[0].Descriptor()
}

func (ScriptElementType) Type() protoreflect.EnumType {
	return &file_api_v0alpha_acs_proto_enumTypes[0]
}

func (x ScriptElementType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ScriptElementType.Descriptor instead.
func (ScriptElementType) EnumDescriptor() ([]byte, []int) {
	return file_api_v0alpha_acs_proto_rawDescGZIP(), []int{0}
}

type RecordingOnNavEnum int32

const (
	RecordingOnNavEnum_KEEP RecordingOnNavEnum = 0
	RecordingOnNavEnum_ON   RecordingOnNavEnum = 1
	RecordingOnNavEnum_OFF  RecordingOnNavEnum = 2
)

// Enum value maps for RecordingOnNavEnum.
var (
	RecordingOnNavEnum_name = map[int32]string{
		0: "KEEP",
		1: "ON",
		2: "OFF",
	}
	RecordingOnNavEnum_value = map[string]int32{
		"KEEP": 0,
		"ON":   1,
		"OFF":  2,
	}
)

func (x RecordingOnNavEnum) Enum() *RecordingOnNavEnum {
	p := new(RecordingOnNavEnum)
	*p = x
	return p
}

func (x RecordingOnNavEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RecordingOnNavEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v0alpha_acs_proto_enumTypes[1].Descriptor()
}

func (RecordingOnNavEnum) Type() protoreflect.EnumType {
	return &file_api_v0alpha_acs_proto_enumTypes[1]
}

func (x RecordingOnNavEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RecordingOnNavEnum.Descriptor instead.
func (RecordingOnNavEnum) EnumDescriptor() ([]byte, []int) {
	return file_api_v0alpha_acs_proto_rawDescGZIP(), []int{1}
}

type ComparisonType int32

const (
	ComparisonType_EQUAL                 ComparisonType = 0
	ComparisonType_NOT_EQUAL             ComparisonType = 1
	ComparisonType_GREATER_THAN          ComparisonType = 2
	ComparisonType_LESS_THAN             ComparisonType = 3
	ComparisonType_GREATER_THAN_EQUAL_TO ComparisonType = 4
	ComparisonType_LESS_THAN_EQUAL_TO    ComparisonType = 5
	ComparisonType_CONTAINS              ComparisonType = 6
	ComparisonType_DOES_NOT_CONTAIN      ComparisonType = 7
	ComparisonType_BLANK                 ComparisonType = 8
	ComparisonType_NOT_BLANK             ComparisonType = 9
	ComparisonType_STARTS_WITH           ComparisonType = 10
	ComparisonType_DOES_NOT_START_WITH   ComparisonType = 11
	ComparisonType_ENDS_WITH             ComparisonType = 12
	ComparisonType_DOES_NOT_END_WITH     ComparisonType = 13
)

// Enum value maps for ComparisonType.
var (
	ComparisonType_name = map[int32]string{
		0:  "EQUAL",
		1:  "NOT_EQUAL",
		2:  "GREATER_THAN",
		3:  "LESS_THAN",
		4:  "GREATER_THAN_EQUAL_TO",
		5:  "LESS_THAN_EQUAL_TO",
		6:  "CONTAINS",
		7:  "DOES_NOT_CONTAIN",
		8:  "BLANK",
		9:  "NOT_BLANK",
		10: "STARTS_WITH",
		11: "DOES_NOT_START_WITH",
		12: "ENDS_WITH",
		13: "DOES_NOT_END_WITH",
	}
	ComparisonType_value = map[string]int32{
		"EQUAL":                 0,
		"NOT_EQUAL":             1,
		"GREATER_THAN":          2,
		"LESS_THAN":             3,
		"GREATER_THAN_EQUAL_TO": 4,
		"LESS_THAN_EQUAL_TO":    5,
		"CONTAINS":              6,
		"DOES_NOT_CONTAIN":      7,
		"BLANK":                 8,
		"NOT_BLANK":             9,
		"STARTS_WITH":           10,
		"DOES_NOT_START_WITH":   11,
		"ENDS_WITH":             12,
		"DOES_NOT_END_WITH":     13,
	}
)

func (x ComparisonType) Enum() *ComparisonType {
	p := new(ComparisonType)
	*p = x
	return p
}

func (x ComparisonType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ComparisonType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v0alpha_acs_proto_enumTypes[2].Descriptor()
}

func (ComparisonType) Type() protoreflect.EnumType {
	return &file_api_v0alpha_acs_proto_enumTypes[2]
}

func (x ComparisonType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ComparisonType.Descriptor instead.
func (ComparisonType) EnumDescriptor() ([]byte, []int) {
	return file_api_v0alpha_acs_proto_rawDescGZIP(), []int{2}
}

type AgentEventTypeEnum int32

const (
	AgentEventTypeEnum_CALL_CONNECTED         AgentEventTypeEnum = 0
	AgentEventTypeEnum_CALL_DISCONNECTED      AgentEventTypeEnum = 1
	AgentEventTypeEnum_SCRIPT_PAGE_CHANGE     AgentEventTypeEnum = 2
	AgentEventTypeEnum_SCRIPT_ELEMENT_FOCUS   AgentEventTypeEnum = 3
	AgentEventTypeEnum_SCRIPT_ELEMENT_UPDATED AgentEventTypeEnum = 4
	AgentEventTypeEnum_KEY_PRESS              AgentEventTypeEnum = 5
	AgentEventTypeEnum_CLICK_LINK             AgentEventTypeEnum = 6
	AgentEventTypeEnum_CLICK_BUTTON           AgentEventTypeEnum = 7
	AgentEventTypeEnum_APP_UNFOCUSED          AgentEventTypeEnum = 8
)

// Enum value maps for AgentEventTypeEnum.
var (
	AgentEventTypeEnum_name = map[int32]string{
		0: "CALL_CONNECTED",
		1: "CALL_DISCONNECTED",
		2: "SCRIPT_PAGE_CHANGE",
		3: "SCRIPT_ELEMENT_FOCUS",
		4: "SCRIPT_ELEMENT_UPDATED",
		5: "KEY_PRESS",
		6: "CLICK_LINK",
		7: "CLICK_BUTTON",
		8: "APP_UNFOCUSED",
	}
	AgentEventTypeEnum_value = map[string]int32{
		"CALL_CONNECTED":         0,
		"CALL_DISCONNECTED":      1,
		"SCRIPT_PAGE_CHANGE":     2,
		"SCRIPT_ELEMENT_FOCUS":   3,
		"SCRIPT_ELEMENT_UPDATED": 4,
		"KEY_PRESS":              5,
		"CLICK_LINK":             6,
		"CLICK_BUTTON":           7,
		"APP_UNFOCUSED":          8,
	}
)

func (x AgentEventTypeEnum) Enum() *AgentEventTypeEnum {
	p := new(AgentEventTypeEnum)
	*p = x
	return p
}

func (x AgentEventTypeEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AgentEventTypeEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v0alpha_acs_proto_enumTypes[3].Descriptor()
}

func (AgentEventTypeEnum) Type() protoreflect.EnumType {
	return &file_api_v0alpha_acs_proto_enumTypes[3]
}

func (x AgentEventTypeEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AgentEventTypeEnum.Descriptor instead.
func (AgentEventTypeEnum) EnumDescriptor() ([]byte, []int) {
	return file_api_v0alpha_acs_proto_rawDescGZIP(), []int{3}
}

type MapperRuleFieldEnum int32

const (
	// agent info
	MapperRuleFieldEnum_AGENT_ID       MapperRuleFieldEnum = 0
	MapperRuleFieldEnum_AGENT_USERNAME MapperRuleFieldEnum = 3
	MapperRuleFieldEnum_CALLER_ID      MapperRuleFieldEnum = 5
	MapperRuleFieldEnum_PHONE_NUMBER   MapperRuleFieldEnum = 2 // consumer phone number?
	MapperRuleFieldEnum_GROUP_ID       MapperRuleFieldEnum = 7
	// phone metadata
	MapperRuleFieldEnum_AREA_CODE                  MapperRuleFieldEnum = 8
	MapperRuleFieldEnum_COUNTRY_CODE               MapperRuleFieldEnum = 10
	MapperRuleFieldEnum_NUMBER_TYPE                MapperRuleFieldEnum = 17
	MapperRuleFieldEnum_REGION_STATE_PROVINCE_CODE MapperRuleFieldEnum = 19
	MapperRuleFieldEnum_REGION_STATE_PROVINCE_NAME MapperRuleFieldEnum = 20
	MapperRuleFieldEnum_TIME_ZONE                  MapperRuleFieldEnum = 21
	// zip/postal metadata
	MapperRuleFieldEnum_CITY_NAME                   MapperRuleFieldEnum = 23
	MapperRuleFieldEnum_COUNTY_NAME                 MapperRuleFieldEnum = 26
	MapperRuleFieldEnum_STATE_PROVINCE_ABBREVIATION MapperRuleFieldEnum = 29
	MapperRuleFieldEnum_STATE_PROVINCE_NAME         MapperRuleFieldEnum = 30
	// everything else
	MapperRuleFieldEnum_DATE                    MapperRuleFieldEnum = 32
	MapperRuleFieldEnum_TIME                    MapperRuleFieldEnum = 33 // probably need to validate in frontend like 11:30am
	MapperRuleFieldEnum_CUSTOM_METADATA         MapperRuleFieldEnum = 35 // text box input or?
	MapperRuleFieldEnum_SCHEDULED_CALLBACK_DATA MapperRuleFieldEnum = 36 // text box or pull?
	MapperRuleFieldEnum_AGENT_SKILLS            MapperRuleFieldEnum = 37 // need to fetch list of skills from org
	MapperRuleFieldEnum_DAY_OF_WEEK             MapperRuleFieldEnum = 40
	MapperRuleFieldEnum_MONTH_OF_YEAR           MapperRuleFieldEnum = 41
	MapperRuleFieldEnum_IVR                     MapperRuleFieldEnum = 42
)

// Enum value maps for MapperRuleFieldEnum.
var (
	MapperRuleFieldEnum_name = map[int32]string{
		0:  "AGENT_ID",
		3:  "AGENT_USERNAME",
		5:  "CALLER_ID",
		2:  "PHONE_NUMBER",
		7:  "GROUP_ID",
		8:  "AREA_CODE",
		10: "COUNTRY_CODE",
		17: "NUMBER_TYPE",
		19: "REGION_STATE_PROVINCE_CODE",
		20: "REGION_STATE_PROVINCE_NAME",
		21: "TIME_ZONE",
		23: "CITY_NAME",
		26: "COUNTY_NAME",
		29: "STATE_PROVINCE_ABBREVIATION",
		30: "STATE_PROVINCE_NAME",
		32: "DATE",
		33: "TIME",
		35: "CUSTOM_METADATA",
		36: "SCHEDULED_CALLBACK_DATA",
		37: "AGENT_SKILLS",
		40: "DAY_OF_WEEK",
		41: "MONTH_OF_YEAR",
		42: "IVR",
	}
	MapperRuleFieldEnum_value = map[string]int32{
		"AGENT_ID":                    0,
		"AGENT_USERNAME":              3,
		"CALLER_ID":                   5,
		"PHONE_NUMBER":                2,
		"GROUP_ID":                    7,
		"AREA_CODE":                   8,
		"COUNTRY_CODE":                10,
		"NUMBER_TYPE":                 17,
		"REGION_STATE_PROVINCE_CODE":  19,
		"REGION_STATE_PROVINCE_NAME":  20,
		"TIME_ZONE":                   21,
		"CITY_NAME":                   23,
		"COUNTY_NAME":                 26,
		"STATE_PROVINCE_ABBREVIATION": 29,
		"STATE_PROVINCE_NAME":         30,
		"DATE":                        32,
		"TIME":                        33,
		"CUSTOM_METADATA":             35,
		"SCHEDULED_CALLBACK_DATA":     36,
		"AGENT_SKILLS":                37,
		"DAY_OF_WEEK":                 40,
		"MONTH_OF_YEAR":               41,
		"IVR":                         42,
	}
)

func (x MapperRuleFieldEnum) Enum() *MapperRuleFieldEnum {
	p := new(MapperRuleFieldEnum)
	*p = x
	return p
}

func (x MapperRuleFieldEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MapperRuleFieldEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v0alpha_acs_proto_enumTypes[4].Descriptor()
}

func (MapperRuleFieldEnum) Type() protoreflect.EnumType {
	return &file_api_v0alpha_acs_proto_enumTypes[4]
}

func (x MapperRuleFieldEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MapperRuleFieldEnum.Descriptor instead.
func (MapperRuleFieldEnum) EnumDescriptor() ([]byte, []int) {
	return file_api_v0alpha_acs_proto_rawDescGZIP(), []int{4}
}

type MapperRuleConditionEnum int32

const (
	MapperRuleConditionEnum_MAPPER_EQUAL                 MapperRuleConditionEnum = 0
	MapperRuleConditionEnum_MAPPER_NOT_EQUAL             MapperRuleConditionEnum = 1
	MapperRuleConditionEnum_MAPPER_GREATER_THAN          MapperRuleConditionEnum = 2
	MapperRuleConditionEnum_MAPPER_LESS_THAN             MapperRuleConditionEnum = 3
	MapperRuleConditionEnum_MAPPER_GREATER_THAN_EQUAL_TO MapperRuleConditionEnum = 4
	MapperRuleConditionEnum_MAPPER_LESS_THAN_EQUAL_TO    MapperRuleConditionEnum = 5
	MapperRuleConditionEnum_MAPPER_CONTAINS              MapperRuleConditionEnum = 6
	MapperRuleConditionEnum_MAPPER_DOES_NOT_CONTAIN      MapperRuleConditionEnum = 7
)

// Enum value maps for MapperRuleConditionEnum.
var (
	MapperRuleConditionEnum_name = map[int32]string{
		0: "MAPPER_EQUAL",
		1: "MAPPER_NOT_EQUAL",
		2: "MAPPER_GREATER_THAN",
		3: "MAPPER_LESS_THAN",
		4: "MAPPER_GREATER_THAN_EQUAL_TO",
		5: "MAPPER_LESS_THAN_EQUAL_TO",
		6: "MAPPER_CONTAINS",
		7: "MAPPER_DOES_NOT_CONTAIN",
	}
	MapperRuleConditionEnum_value = map[string]int32{
		"MAPPER_EQUAL":                 0,
		"MAPPER_NOT_EQUAL":             1,
		"MAPPER_GREATER_THAN":          2,
		"MAPPER_LESS_THAN":             3,
		"MAPPER_GREATER_THAN_EQUAL_TO": 4,
		"MAPPER_LESS_THAN_EQUAL_TO":    5,
		"MAPPER_CONTAINS":              6,
		"MAPPER_DOES_NOT_CONTAIN":      7,
	}
)

func (x MapperRuleConditionEnum) Enum() *MapperRuleConditionEnum {
	p := new(MapperRuleConditionEnum)
	*p = x
	return p
}

func (x MapperRuleConditionEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MapperRuleConditionEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v0alpha_acs_proto_enumTypes[5].Descriptor()
}

func (MapperRuleConditionEnum) Type() protoreflect.EnumType {
	return &file_api_v0alpha_acs_proto_enumTypes[5]
}

func (x MapperRuleConditionEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MapperRuleConditionEnum.Descriptor instead.
func (MapperRuleConditionEnum) EnumDescriptor() ([]byte, []int) {
	return file_api_v0alpha_acs_proto_rawDescGZIP(), []int{5}
}

type ClickButton_Buttons int32

const (
	ClickButton_SCHEDULED_CALLBACK ClickButton_Buttons = 0
	ClickButton_NEXT_CALL          ClickButton_Buttons = 1 // TODO etc etc
)

// Enum value maps for ClickButton_Buttons.
var (
	ClickButton_Buttons_name = map[int32]string{
		0: "SCHEDULED_CALLBACK",
		1: "NEXT_CALL",
	}
	ClickButton_Buttons_value = map[string]int32{
		"SCHEDULED_CALLBACK": 0,
		"NEXT_CALL":          1,
	}
)

func (x ClickButton_Buttons) Enum() *ClickButton_Buttons {
	p := new(ClickButton_Buttons)
	*p = x
	return p
}

func (x ClickButton_Buttons) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClickButton_Buttons) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v0alpha_acs_proto_enumTypes[6].Descriptor()
}

func (ClickButton_Buttons) Type() protoreflect.EnumType {
	return &file_api_v0alpha_acs_proto_enumTypes[6]
}

func (x ClickButton_Buttons) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClickButton_Buttons.Descriptor instead.
func (ClickButton_Buttons) EnumDescriptor() ([]byte, []int) {
	return file_api_v0alpha_acs_proto_rawDescGZIP(), []int{24, 0}
}

type KeyPress_WhichKey int32

const (
	KeyPress_TAB   KeyPress_WhichKey = 0
	KeyPress_ENTER KeyPress_WhichKey = 1
	KeyPress_ESC   KeyPress_WhichKey = 2 // TODO: keyboard shortcuts
)

// Enum value maps for KeyPress_WhichKey.
var (
	KeyPress_WhichKey_name = map[int32]string{
		0: "TAB",
		1: "ENTER",
		2: "ESC",
	}
	KeyPress_WhichKey_value = map[string]int32{
		"TAB":   0,
		"ENTER": 1,
		"ESC":   2,
	}
)

func (x KeyPress_WhichKey) Enum() *KeyPress_WhichKey {
	p := new(KeyPress_WhichKey)
	*p = x
	return p
}

func (x KeyPress_WhichKey) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KeyPress_WhichKey) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v0alpha_acs_proto_enumTypes[7].Descriptor()
}

func (KeyPress_WhichKey) Type() protoreflect.EnumType {
	return &file_api_v0alpha_acs_proto_enumTypes[7]
}

func (x KeyPress_WhichKey) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KeyPress_WhichKey.Descriptor instead.
func (KeyPress_WhichKey) EnumDescriptor() ([]byte, []int) {
	return file_api_v0alpha_acs_proto_rawDescGZIP(), []int{27, 0}
}

type CreateScriptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Script *Script `protobuf:"bytes,1,opt,name=script,proto3" json:"script,omitempty"`
}

func (x *CreateScriptRequest) Reset() {
	*x = CreateScriptRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_acs_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateScriptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateScriptRequest) ProtoMessage() {}

func (x *CreateScriptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_acs_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateScriptRequest.ProtoReflect.Descriptor instead.
func (*CreateScriptRequest) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_acs_proto_rawDescGZIP(), []int{0}
}

func (x *CreateScriptRequest) GetScript() *Script {
	if x != nil {
		return x.Script
	}
	return nil
}

type CreateScriptResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScriptId string `protobuf:"bytes,1,opt,name=script_id,json=scriptId,proto3" json:"script_id,omitempty"`
}

func (x *CreateScriptResponse) Reset() {
	*x = CreateScriptResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_acs_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateScriptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateScriptResponse) ProtoMessage() {}

func (x *CreateScriptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_acs_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateScriptResponse.ProtoReflect.Descriptor instead.
func (*CreateScriptResponse) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_acs_proto_rawDescGZIP(), []int{1}
}

func (x *CreateScriptResponse) GetScriptId() string {
	if x != nil {
		return x.ScriptId
	}
	return ""
}

type UpdateScriptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Script   *Script `protobuf:"bytes,1,opt,name=script,proto3" json:"script,omitempty"`
	ScriptId string  `protobuf:"bytes,2,opt,name=script_id,json=scriptId,proto3" json:"script_id,omitempty"`
}

func (x *UpdateScriptRequest) Reset() {
	*x = UpdateScriptRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_acs_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateScriptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateScriptRequest) ProtoMessage() {}

func (x *UpdateScriptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_acs_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateScriptRequest.ProtoReflect.Descriptor instead.
func (*UpdateScriptRequest) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_acs_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateScriptRequest) GetScript() *Script {
	if x != nil {
		return x.Script
	}
	return nil
}

func (x *UpdateScriptRequest) GetScriptId() string {
	if x != nil {
		return x.ScriptId
	}
	return ""
}

type UpdateScriptResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScriptId string `protobuf:"bytes,1,opt,name=script_id,json=scriptId,proto3" json:"script_id,omitempty"`
}

func (x *UpdateScriptResponse) Reset() {
	*x = UpdateScriptResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_acs_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateScriptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateScriptResponse) ProtoMessage() {}

func (x *UpdateScriptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_acs_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateScriptResponse.ProtoReflect.Descriptor instead.
func (*UpdateScriptResponse) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_acs_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateScriptResponse) GetScriptId() string {
	if x != nil {
		return x.ScriptId
	}
	return ""
}

type GetScriptByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScriptId string `protobuf:"bytes,1,opt,name=script_id,json=scriptId,proto3" json:"script_id,omitempty"`
}

func (x *GetScriptByIdRequest) Reset() {
	*x = GetScriptByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_acs_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetScriptByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScriptByIdRequest) ProtoMessage() {}

func (x *GetScriptByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_acs_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScriptByIdRequest.ProtoReflect.Descriptor instead.
func (*GetScriptByIdRequest) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_acs_proto_rawDescGZIP(), []int{4}
}

func (x *GetScriptByIdRequest) GetScriptId() string {
	if x != nil {
		return x.ScriptId
	}
	return ""
}

type GetScriptByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Script   *Script `protobuf:"bytes,1,opt,name=script,proto3" json:"script,omitempty"`
	ScriptId string  `protobuf:"bytes,2,opt,name=script_id,json=scriptId,proto3" json:"script_id,omitempty"`
}

func (x *GetScriptByIdResponse) Reset() {
	*x = GetScriptByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_acs_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetScriptByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScriptByIdResponse) ProtoMessage() {}

func (x *GetScriptByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_acs_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScriptByIdResponse.ProtoReflect.Descriptor instead.
func (*GetScriptByIdResponse) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_acs_proto_rawDescGZIP(), []int{5}
}

func (x *GetScriptByIdResponse) GetScript() *Script {
	if x != nil {
		return x.Script
	}
	return nil
}

func (x *GetScriptByIdResponse) GetScriptId() string {
	if x != nil {
		return x.ScriptId
	}
	return ""
}

type ListScriptsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListScriptsRequest) Reset() {
	*x = ListScriptsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_acs_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListScriptsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListScriptsRequest) ProtoMessage() {}

func (x *ListScriptsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_acs_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListScriptsRequest.ProtoReflect.Descriptor instead.
func (*ListScriptsRequest) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_acs_proto_rawDescGZIP(), []int{6}
}

type ScriptDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScriptId    string `protobuf:"bytes,1,opt,name=script_id,json=scriptId,proto3" json:"script_id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *ScriptDetails) Reset() {
	*x = ScriptDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_acs_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScriptDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScriptDetails) ProtoMessage() {}

func (x *ScriptDetails) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_acs_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScriptDetails.ProtoReflect.Descriptor instead.
func (*ScriptDetails) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_acs_proto_rawDescGZIP(), []int{7}
}

func (x *ScriptDetails) GetScriptId() string {
	if x != nil {
		return x.ScriptId
	}
	return ""
}

func (x *ScriptDetails) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ScriptDetails) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type Script struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pages       []*ScriptPage `protobuf:"bytes,1,rep,name=pages,proto3" json:"pages,omitempty"`
	Name        string        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string        `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Script) Reset() {
	*x = Script{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_acs_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Script) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Script) ProtoMessage() {}

func (x *Script) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_acs_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Script.ProtoReflect.Descriptor instead.
func (*Script) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_acs_proto_rawDescGZIP(), []int{8}
}

func (x *Script) GetPages() []*ScriptPage {
	if x != nil {
		return x.Pages
	}
	return nil
}

func (x *Script) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Script) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type ScriptPage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNumber      int64              `protobuf:"varint,1,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	RecordOnArrival RecordingOnNavEnum `protobuf:"varint,2,opt,name=record_on_arrival,json=recordOnArrival,proto3,enum=api.v0alpha.RecordingOnNavEnum" json:"record_on_arrival,omitempty"`
	RecordOnExit    RecordingOnNavEnum `protobuf:"varint,3,opt,name=record_on_exit,json=recordOnExit,proto3,enum=api.v0alpha.RecordingOnNavEnum" json:"record_on_exit,omitempty"`
	Elements        []*ScriptElement   `protobuf:"bytes,4,rep,name=elements,proto3" json:"elements,omitempty"`
}

func (x *ScriptPage) Reset() {
	*x = ScriptPage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_acs_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScriptPage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScriptPage) ProtoMessage() {}

func (x *ScriptPage) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_acs_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScriptPage.ProtoReflect.Descriptor instead.
func (*ScriptPage) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_acs_proto_rawDescGZIP(), []int{9}
}

func (x *ScriptPage) GetPageNumber() int64 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *ScriptPage) GetRecordOnArrival() RecordingOnNavEnum {
	if x != nil {
		return x.RecordOnArrival
	}
	return RecordingOnNavEnum_KEEP
}

func (x *ScriptPage) GetRecordOnExit() RecordingOnNavEnum {
	if x != nil {
		return x.RecordOnExit
	}
	return RecordingOnNavEnum_KEEP
}

func (x *ScriptPage) GetElements() []*ScriptElement {
	if x != nil {
		return x.Elements
	}
	return nil
}

type ScriptElement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`     // uuid
	Name        string             `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"` // no spaces and special chars !@#$%^&*(){}[],;"':\/?<>.
	Header      string             `protobuf:"bytes,3,opt,name=header,proto3" json:"header,omitempty"`
	Prompt      string             `protobuf:"bytes,4,opt,name=prompt,proto3" json:"prompt,omitempty"`
	Required    bool               `protobuf:"varint,5,opt,name=required,proto3" json:"required,omitempty"`
	Conditional []*ConditionOption `protobuf:"bytes,6,rep,name=conditional,proto3" json:"conditional,omitempty"`
	Element     *ElementType       `protobuf:"bytes,7,opt,name=element,proto3" json:"element,omitempty"`
}

func (x *ScriptElement) Reset() {
	*x = ScriptElement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_acs_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScriptElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScriptElement) ProtoMessage() {}

func (x *ScriptElement) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_acs_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScriptElement.ProtoReflect.Descriptor instead.
func (*ScriptElement) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_acs_proto_rawDescGZIP(), []int{10}
}

func (x *ScriptElement) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ScriptElement) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ScriptElement) GetHeader() string {
	if x != nil {
		return x.Header
	}
	return ""
}

func (x *ScriptElement) GetPrompt() string {
	if x != nil {
		return x.Prompt
	}
	return ""
}

func (x *ScriptElement) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

func (x *ScriptElement) GetConditional() []*ConditionOption {
	if x != nil {
		return x.Conditional
	}
	return nil
}

func (x *ScriptElement) GetElement() *ElementType {
	if x != nil {
		return x.Element
	}
	return nil
}

type ElementType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Element:
	//
	//	*ElementType_RawText
	//	*ElementType_TextArea
	//	*ElementType_TextBox
	//	*ElementType_TextBoxAlpha
	//	*ElementType_TextBoxNum
	//	*ElementType_TextVerification
	//	*ElementType_Regex
	//	*ElementType_RegexTextArea
	//	*ElementType_DropDown
	//	*ElementType_Calendar
	//	*ElementType_Phone
	//	*ElementType_Radio
	//	*ElementType_MultiSelect
	//	*ElementType_Checkbox
	Element isElementType_Element `protobuf_oneof:"element"`
}

func (x *ElementType) Reset() {
	*x = ElementType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_acs_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ElementType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ElementType) ProtoMessage() {}

func (x *ElementType) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_acs_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ElementType.ProtoReflect.Descriptor instead.
func (*ElementType) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_acs_proto_rawDescGZIP(), []int{11}
}

func (m *ElementType) GetElement() isElementType_Element {
	if m != nil {
		return m.Element
	}
	return nil
}

func (x *ElementType) GetRawText() *RawText {
	if x, ok := x.GetElement().(*ElementType_RawText); ok {
		return x.RawText
	}
	return nil
}

func (x *ElementType) GetTextArea() *StringDefaultValue {
	if x, ok := x.GetElement().(*ElementType_TextArea); ok {
		return x.TextArea
	}
	return nil
}

func (x *ElementType) GetTextBox() *StringDefaultValue {
	if x, ok := x.GetElement().(*ElementType_TextBox); ok {
		return x.TextBox
	}
	return nil
}

func (x *ElementType) GetTextBoxAlpha() *StringDefaultValue {
	if x, ok := x.GetElement().(*ElementType_TextBoxAlpha); ok {
		return x.TextBoxAlpha
	}
	return nil
}

func (x *ElementType) GetTextBoxNum() *StringDefaultValue {
	if x, ok := x.GetElement().(*ElementType_TextBoxNum); ok {
		return x.TextBoxNum
	}
	return nil
}

func (x *ElementType) GetTextVerification() *StringDefaultValue {
	if x, ok := x.GetElement().(*ElementType_TextVerification); ok {
		return x.TextVerification
	}
	return nil
}

func (x *ElementType) GetRegex() *RegexDefaultValue {
	if x, ok := x.GetElement().(*ElementType_Regex); ok {
		return x.Regex
	}
	return nil
}

func (x *ElementType) GetRegexTextArea() *RegexDefaultValue {
	if x, ok := x.GetElement().(*ElementType_RegexTextArea); ok {
		return x.RegexTextArea
	}
	return nil
}

func (x *ElementType) GetDropDown() *SelectDefaultValue {
	if x, ok := x.GetElement().(*ElementType_DropDown); ok {
		return x.DropDown
	}
	return nil
}

func (x *ElementType) GetCalendar() *StringDefaultValue {
	if x, ok := x.GetElement().(*ElementType_Calendar); ok {
		return x.Calendar
	}
	return nil
}

func (x *ElementType) GetPhone() *StringDefaultValue {
	if x, ok := x.GetElement().(*ElementType_Phone); ok {
		return x.Phone
	}
	return nil
}

func (x *ElementType) GetRadio() *SelectDefaultValue {
	if x, ok := x.GetElement().(*ElementType_Radio); ok {
		return x.Radio
	}
	return nil
}

func (x *ElementType) GetMultiSelect() *MultiSelectDefaultValue {
	if x, ok := x.GetElement().(*ElementType_MultiSelect); ok {
		return x.MultiSelect
	}
	return nil
}

func (x *ElementType) GetCheckbox() *MultiSelectDefaultValue {
	if x, ok := x.GetElement().(*ElementType_Checkbox); ok {
		return x.Checkbox
	}
	return nil
}

type isElementType_Element interface {
	isElementType_Element()
}

type ElementType_RawText struct {
	RawText *RawText `protobuf:"bytes,1,opt,name=raw_text,json=rawText,proto3,oneof"` // RawText, no value
}

type ElementType_TextArea struct {
	TextArea *StringDefaultValue `protobuf:"bytes,2,opt,name=text_area,json=textArea,proto3,oneof"` // FreeForm
}

type ElementType_TextBox struct {
	TextBox *StringDefaultValue `protobuf:"bytes,3,opt,name=text_box,json=textBox,proto3,oneof"`
}

type ElementType_TextBoxAlpha struct {
	TextBoxAlpha *StringDefaultValue `protobuf:"bytes,4,opt,name=text_box_alpha,json=textBoxAlpha,proto3,oneof"`
}

type ElementType_TextBoxNum struct {
	TextBoxNum *StringDefaultValue `protobuf:"bytes,5,opt,name=text_box_num,json=textBoxNum,proto3,oneof"`
}

type ElementType_TextVerification struct {
	TextVerification *StringDefaultValue `protobuf:"bytes,6,opt,name=text_verification,json=textVerification,proto3,oneof"`
}

type ElementType_Regex struct {
	Regex *RegexDefaultValue `protobuf:"bytes,7,opt,name=regex,proto3,oneof"`
}

type ElementType_RegexTextArea struct {
	RegexTextArea *RegexDefaultValue `protobuf:"bytes,8,opt,name=regex_text_area,json=regexTextArea,proto3,oneof"`
}

type ElementType_DropDown struct {
	DropDown *SelectDefaultValue `protobuf:"bytes,100,opt,name=drop_down,json=dropDown,proto3,oneof"` // SingleChoice
}

type ElementType_Calendar struct {
	Calendar *StringDefaultValue `protobuf:"bytes,101,opt,name=calendar,proto3,oneof"`
}

type ElementType_Phone struct {
	Phone *StringDefaultValue `protobuf:"bytes,102,opt,name=phone,proto3,oneof"`
}

type ElementType_Radio struct {
	Radio *SelectDefaultValue `protobuf:"bytes,103,opt,name=radio,proto3,oneof"`
}

type ElementType_MultiSelect struct {
	MultiSelect *MultiSelectDefaultValue `protobuf:"bytes,200,opt,name=multi_select,json=multiSelect,proto3,oneof"` // MultiChoice
}

type ElementType_Checkbox struct {
	Checkbox *MultiSelectDefaultValue `protobuf:"bytes,201,opt,name=checkbox,proto3,oneof"`
}

func (*ElementType_RawText) isElementType_Element() {}

func (*ElementType_TextArea) isElementType_Element() {}

func (*ElementType_TextBox) isElementType_Element() {}

func (*ElementType_TextBoxAlpha) isElementType_Element() {}

func (*ElementType_TextBoxNum) isElementType_Element() {}

func (*ElementType_TextVerification) isElementType_Element() {}

func (*ElementType_Regex) isElementType_Element() {}

func (*ElementType_RegexTextArea) isElementType_Element() {}

func (*ElementType_DropDown) isElementType_Element() {}

func (*ElementType_Calendar) isElementType_Element() {}

func (*ElementType_Phone) isElementType_Element() {}

func (*ElementType_Radio) isElementType_Element() {}

func (*ElementType_MultiSelect) isElementType_Element() {}

func (*ElementType_Checkbox) isElementType_Element() {}

type RawText struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RawText) Reset() {
	*x = RawText{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_acs_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RawText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawText) ProtoMessage() {}

func (x *RawText) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_acs_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RawText.ProtoReflect.Descriptor instead.
func (*RawText) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_acs_proto_rawDescGZIP(), []int{12}
}

type StringDefaultValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefaultValue string `protobuf:"bytes,1,opt,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"`
}

func (x *StringDefaultValue) Reset() {
	*x = StringDefaultValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_acs_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringDefaultValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringDefaultValue) ProtoMessage() {}

func (x *StringDefaultValue) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_acs_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringDefaultValue.ProtoReflect.Descriptor instead.
func (*StringDefaultValue) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_acs_proto_rawDescGZIP(), []int{13}
}

func (x *StringDefaultValue) GetDefaultValue() string {
	if x != nil {
		return x.DefaultValue
	}
	return ""
}

type RegexDefaultValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefaultValue         string `protobuf:"bytes,1,opt,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"`
	ResponseEvaluatorSid int64  `protobuf:"varint,2,opt,name=response_evaluator_sid,json=responseEvaluatorSid,proto3" json:"response_evaluator_sid,omitempty"` // xml_client_property_sid
}

func (x *RegexDefaultValue) Reset() {
	*x = RegexDefaultValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_acs_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegexDefaultValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegexDefaultValue) ProtoMessage() {}

func (x *RegexDefaultValue) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_acs_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegexDefaultValue.ProtoReflect.Descriptor instead.
func (*RegexDefaultValue) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_acs_proto_rawDescGZIP(), []int{14}
}

func (x *RegexDefaultValue) GetDefaultValue() string {
	if x != nil {
		return x.DefaultValue
	}
	return ""
}

func (x *RegexDefaultValue) GetResponseEvaluatorSid() int64 {
	if x != nil {
		return x.ResponseEvaluatorSid
	}
	return 0
}

type SelectDefaultValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Options           []string `protobuf:"bytes,1,rep,name=options,proto3" json:"options,omitempty"`
	DefaultValueIndex int64    `protobuf:"varint,2,opt,name=default_value_index,json=defaultValueIndex,proto3" json:"default_value_index,omitempty"`
}

func (x *SelectDefaultValue) Reset() {
	*x = SelectDefaultValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_acs_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectDefaultValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectDefaultValue) ProtoMessage() {}

func (x *SelectDefaultValue) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_acs_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectDefaultValue.ProtoReflect.Descriptor instead.
func (*SelectDefaultValue) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_acs_proto_rawDescGZIP(), []int{15}
}

func (x *SelectDefaultValue) GetOptions() []string {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *SelectDefaultValue) GetDefaultValueIndex() int64 {
	if x != nil {
		return x.DefaultValueIndex
	}
	return 0
}

type MultiSelectDefaultValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Options             []string `protobuf:"bytes,1,rep,name=options,proto3" json:"options,omitempty"`
	DefaultValueIndexes []int64  `protobuf:"varint,2,rep,packed,name=default_value_indexes,json=defaultValueIndexes,proto3" json:"default_value_indexes,omitempty"` // makes sense to support multiple on these right?
}

func (x *MultiSelectDefaultValue) Reset() {
	*x = MultiSelectDefaultValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_acs_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiSelectDefaultValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiSelectDefaultValue) ProtoMessage() {}

func (x *MultiSelectDefaultValue) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_acs_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiSelectDefaultValue.ProtoReflect.Descriptor instead.
func (*MultiSelectDefaultValue) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_acs_proto_rawDescGZIP(), []int{16}
}

func (x *MultiSelectDefaultValue) GetOptions() []string {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *MultiSelectDefaultValue) GetDefaultValueIndexes() []int64 {
	if x != nil {
		return x.DefaultValueIndexes
	}
	return nil
}

type ConditionOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value      string         `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Comparison ComparisonType `protobuf:"varint,2,opt,name=comparison,proto3,enum=api.v0alpha.ComparisonType" json:"comparison,omitempty"`
	PageNumber int64          `protobuf:"varint,3,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
}

func (x *ConditionOption) Reset() {
	*x = ConditionOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_acs_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConditionOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConditionOption) ProtoMessage() {}

func (x *ConditionOption) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_acs_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConditionOption.ProtoReflect.Descriptor instead.
func (*ConditionOption) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_acs_proto_rawDescGZIP(), []int{17}
}

func (x *ConditionOption) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ConditionOption) GetComparison() ComparisonType {
	if x != nil {
		return x.Comparison
	}
	return ComparisonType_EQUAL
}

func (x *ConditionOption) GetPageNumber() int64 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

// -------- Agent Actions Stream -------
// continuously tracked and occasionally batch updated
type AgentAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp    *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Event        *AgentEventType        `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	SessionSid   int64                  `protobuf:"varint,3,opt,name=session_sid,json=sessionSid,proto3" json:"session_sid,omitempty"`
	AgentCallSid int64                  `protobuf:"varint,4,opt,name=agent_call_sid,json=agentCallSid,proto3" json:"agent_call_sid,omitempty"`
}

func (x *AgentAction) Reset() {
	*x = AgentAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_acs_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentAction) ProtoMessage() {}

func (x *AgentAction) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_acs_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentAction.ProtoReflect.Descriptor instead.
func (*AgentAction) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_acs_proto_rawDescGZIP(), []int{18}
}

func (x *AgentAction) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *AgentAction) GetEvent() *AgentEventType {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *AgentAction) GetSessionSid() int64 {
	if x != nil {
		return x.SessionSid
	}
	return 0
}

func (x *AgentAction) GetAgentCallSid() int64 {
	if x != nil {
		return x.AgentCallSid
	}
	return 0
}

type AgentEventType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Event:
	//
	//	*AgentEventType_Connected
	//	*AgentEventType_Disconnected
	//	*AgentEventType_PageChange
	//	*AgentEventType_ElementFocus
	//	*AgentEventType_ElementUpdated
	//	*AgentEventType_KeyPress
	//	*AgentEventType_ClickLink
	//	*AgentEventType_ClickButton
	//	*AgentEventType_AppUnfocused
	//	*AgentEventType_AppRefocused
	Event isAgentEventType_Event `protobuf_oneof:"event"`
}

func (x *AgentEventType) Reset() {
	*x = AgentEventType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_acs_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentEventType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentEventType) ProtoMessage() {}

func (x *AgentEventType) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_acs_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentEventType.ProtoReflect.Descriptor instead.
func (*AgentEventType) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_acs_proto_rawDescGZIP(), []int{19}
}

func (m *AgentEventType) GetEvent() isAgentEventType_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *AgentEventType) GetConnected() *CallConnected {
	if x, ok := x.GetEvent().(*AgentEventType_Connected); ok {
		return x.Connected
	}
	return nil
}

func (x *AgentEventType) GetDisconnected() *CallDisconnected {
	if x, ok := x.GetEvent().(*AgentEventType_Disconnected); ok {
		return x.Disconnected
	}
	return nil
}

func (x *AgentEventType) GetPageChange() *PageChange {
	if x, ok := x.GetEvent().(*AgentEventType_PageChange); ok {
		return x.PageChange
	}
	return nil
}

func (x *AgentEventType) GetElementFocus() *ElementFocus {
	if x, ok := x.GetEvent().(*AgentEventType_ElementFocus); ok {
		return x.ElementFocus
	}
	return nil
}

func (x *AgentEventType) GetElementUpdated() *ElementResponse {
	if x, ok := x.GetEvent().(*AgentEventType_ElementUpdated); ok {
		return x.ElementUpdated
	}
	return nil
}

func (x *AgentEventType) GetKeyPress() *KeyPress {
	if x, ok := x.GetEvent().(*AgentEventType_KeyPress); ok {
		return x.KeyPress
	}
	return nil
}

func (x *AgentEventType) GetClickLink() *ClickLink {
	if x, ok := x.GetEvent().(*AgentEventType_ClickLink); ok {
		return x.ClickLink
	}
	return nil
}

func (x *AgentEventType) GetClickButton() *ClickButton {
	if x, ok := x.GetEvent().(*AgentEventType_ClickButton); ok {
		return x.ClickButton
	}
	return nil
}

func (x *AgentEventType) GetAppUnfocused() *AppUnfocused {
	if x, ok := x.GetEvent().(*AgentEventType_AppUnfocused); ok {
		return x.AppUnfocused
	}
	return nil
}

func (x *AgentEventType) GetAppRefocused() *AppRefocused {
	if x, ok := x.GetEvent().(*AgentEventType_AppRefocused); ok {
		return x.AppRefocused
	}
	return nil
}

type isAgentEventType_Event interface {
	isAgentEventType_Event()
}

type AgentEventType_Connected struct {
	Connected *CallConnected `protobuf:"bytes,1,opt,name=connected,proto3,oneof"` // relative timestamp
}

type AgentEventType_Disconnected struct {
	Disconnected *CallDisconnected `protobuf:"bytes,2,opt,name=disconnected,proto3,oneof"` // relative timstamp
}

type AgentEventType_PageChange struct {
	PageChange *PageChange `protobuf:"bytes,3,opt,name=page_change,json=pageChange,proto3,oneof"` // script pagination nav
}

type AgentEventType_ElementFocus struct {
	ElementFocus *ElementFocus `protobuf:"bytes,4,opt,name=element_focus,json=elementFocus,proto3,oneof"` // script element was focused by user
}

type AgentEventType_ElementUpdated struct {
	ElementUpdated *ElementResponse `protobuf:"bytes,5,opt,name=element_updated,json=elementUpdated,proto3,oneof"` // script element was updated by user
}

type AgentEventType_KeyPress struct {
	KeyPress *KeyPress `protobuf:"bytes,6,opt,name=key_press,json=keyPress,proto3,oneof"` // special key presses (shortcuts, etc)
}

type AgentEventType_ClickLink struct {
	ClickLink *ClickLink `protobuf:"bytes,7,opt,name=click_link,json=clickLink,proto3,oneof"` // weblink or link script element clicked
}

type AgentEventType_ClickButton struct {
	ClickButton *ClickButton `protobuf:"bytes,8,opt,name=click_button,json=clickButton,proto3,oneof"` // a button in the UI was clicked
}

type AgentEventType_AppUnfocused struct {
	AppUnfocused *AppUnfocused `protobuf:"bytes,9,opt,name=app_unfocused,json=appUnfocused,proto3,oneof"` // the entire app was unfocused
}

type AgentEventType_AppRefocused struct {
	AppRefocused *AppRefocused `protobuf:"bytes,10,opt,name=app_refocused,json=appRefocused,proto3,oneof"` // the entire app was refocused
}

func (*AgentEventType_Connected) isAgentEventType_Event() {}

func (*AgentEventType_Disconnected) isAgentEventType_Event() {}

func (*AgentEventType_PageChange) isAgentEventType_Event() {}

func (*AgentEventType_ElementFocus) isAgentEventType_Event() {}

func (*AgentEventType_ElementUpdated) isAgentEventType_Event() {}

func (*AgentEventType_KeyPress) isAgentEventType_Event() {}

func (*AgentEventType_ClickLink) isAgentEventType_Event() {}

func (*AgentEventType_ClickButton) isAgentEventType_Event() {}

func (*AgentEventType_AppUnfocused) isAgentEventType_Event() {}

func (*AgentEventType_AppRefocused) isAgentEventType_Event() {}

type CallConnected struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CallConnected) Reset() {
	*x = CallConnected{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_acs_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallConnected) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallConnected) ProtoMessage() {}

func (x *CallConnected) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_acs_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallConnected.ProtoReflect.Descriptor instead.
func (*CallConnected) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_acs_proto_rawDescGZIP(), []int{20}
}

type CallDisconnected struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CallDisconnected) Reset() {
	*x = CallDisconnected{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_acs_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallDisconnected) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallDisconnected) ProtoMessage() {}

func (x *CallDisconnected) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_acs_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallDisconnected.ProtoReflect.Descriptor instead.
func (*CallDisconnected) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_acs_proto_rawDescGZIP(), []int{21}
}

type AppUnfocused struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AppUnfocused) Reset() {
	*x = AppUnfocused{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_acs_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppUnfocused) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppUnfocused) ProtoMessage() {}

func (x *AppUnfocused) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_acs_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppUnfocused.ProtoReflect.Descriptor instead.
func (*AppUnfocused) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_acs_proto_rawDescGZIP(), []int{22}
}

type AppRefocused struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AppRefocused) Reset() {
	*x = AppRefocused{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_acs_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppRefocused) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppRefocused) ProtoMessage() {}

func (x *AppRefocused) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_acs_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppRefocused.ProtoReflect.Descriptor instead.
func (*AppRefocused) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_acs_proto_rawDescGZIP(), []int{23}
}

type ClickButton struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Button ClickButton_Buttons `protobuf:"varint,1,opt,name=button,proto3,enum=api.v0alpha.ClickButton_Buttons" json:"button,omitempty"`
}

func (x *ClickButton) Reset() {
	*x = ClickButton{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_acs_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClickButton) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClickButton) ProtoMessage() {}

func (x *ClickButton) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_acs_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClickButton.ProtoReflect.Descriptor instead.
func (*ClickButton) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_acs_proto_rawDescGZIP(), []int{24}
}

func (x *ClickButton) GetButton() ClickButton_Buttons {
	if x != nil {
		return x.Button
	}
	return ClickButton_SCHEDULED_CALLBACK
}

// the changed the page
// (maybe include an option for when they hit next instead of a page number)
type PageChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PreviousPage    int64 `protobuf:"varint,1,opt,name=previous_page,json=previousPage,proto3" json:"previous_page,omitempty"`
	DestinationPage int64 `protobuf:"varint,2,opt,name=destination_page,json=destinationPage,proto3" json:"destination_page,omitempty"`
}

func (x *PageChange) Reset() {
	*x = PageChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_acs_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageChange) ProtoMessage() {}

func (x *PageChange) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_acs_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageChange.ProtoReflect.Descriptor instead.
func (*PageChange) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_acs_proto_rawDescGZIP(), []int{25}
}

func (x *PageChange) GetPreviousPage() int64 {
	if x != nil {
		return x.PreviousPage
	}
	return 0
}

func (x *PageChange) GetDestinationPage() int64 {
	if x != nil {
		return x.DestinationPage
	}
	return 0
}

// an element was focused
type ElementFocus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ElementId string `protobuf:"bytes,1,opt,name=element_id,json=elementId,proto3" json:"element_id,omitempty"`
}

func (x *ElementFocus) Reset() {
	*x = ElementFocus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_acs_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ElementFocus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ElementFocus) ProtoMessage() {}

func (x *ElementFocus) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_acs_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ElementFocus.ProtoReflect.Descriptor instead.
func (*ElementFocus) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_acs_proto_rawDescGZIP(), []int{26}
}

func (x *ElementFocus) GetElementId() string {
	if x != nil {
		return x.ElementId
	}
	return ""
}

// a special key was pressed
// note: might not need this since tabs will be an element focus and enter will be an unfocus
type KeyPress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyPress KeyPress_WhichKey `protobuf:"varint,2,opt,name=key_press,json=keyPress,proto3,enum=api.v0alpha.KeyPress_WhichKey" json:"key_press,omitempty"`
}

func (x *KeyPress) Reset() {
	*x = KeyPress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_acs_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyPress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyPress) ProtoMessage() {}

func (x *KeyPress) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_acs_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyPress.ProtoReflect.Descriptor instead.
func (*KeyPress) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_acs_proto_rawDescGZIP(), []int{27}
}

func (x *KeyPress) GetKeyPress() KeyPress_WhichKey {
	if x != nil {
		return x.KeyPress
	}
	return KeyPress_TAB
}

// they clicked a link the ScriptElement (markdown)
type ClickLink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ElementId string `protobuf:"bytes,1,opt,name=element_id,json=elementId,proto3" json:"element_id,omitempty"`
	Url       string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"` // maybe include the url with the mailmerge fields intact
}

func (x *ClickLink) Reset() {
	*x = ClickLink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_acs_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClickLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClickLink) ProtoMessage() {}

func (x *ClickLink) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_acs_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClickLink.ProtoReflect.Descriptor instead.
func (*ClickLink) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_acs_proto_rawDescGZIP(), []int{28}
}

func (x *ClickLink) GetElementId() string {
	if x != nil {
		return x.ElementId
	}
	return ""
}

func (x *ClickLink) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// -------- Agent Script Responses --------
type SaveResponsesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScriptId   string `protobuf:"bytes,1,opt,name=script_id,json=scriptId,proto3" json:"script_id,omitempty"`       // need to link these? for transfers?
	CallId     int64  `protobuf:"varint,2,opt,name=call_id,json=callId,proto3" json:"call_id,omitempty"`            // needed for sure
	CampaignId string `protobuf:"bytes,3,opt,name=campaign_id,json=campaignId,proto3" json:"campaign_id,omitempty"` // to enable searching by campaign? maybe not relevant
	// string org_id = 4;
	// string region_id = 5;
	// int64 agent_id = 6;                     // only one agent_id associated with this anyway...
	Responses *Responses `protobuf:"bytes,7,opt,name=responses,proto3" json:"responses,omitempty"`
}

func (x *SaveResponsesRequest) Reset() {
	*x = SaveResponsesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_acs_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveResponsesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveResponsesRequest) ProtoMessage() {}

func (x *SaveResponsesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_acs_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveResponsesRequest.ProtoReflect.Descriptor instead.
func (*SaveResponsesRequest) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_acs_proto_rawDescGZIP(), []int{29}
}

func (x *SaveResponsesRequest) GetScriptId() string {
	if x != nil {
		return x.ScriptId
	}
	return ""
}

func (x *SaveResponsesRequest) GetCallId() int64 {
	if x != nil {
		return x.CallId
	}
	return 0
}

func (x *SaveResponsesRequest) GetCampaignId() string {
	if x != nil {
		return x.CampaignId
	}
	return ""
}

func (x *SaveResponsesRequest) GetResponses() *Responses {
	if x != nil {
		return x.Responses
	}
	return nil
}

type Responses struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Responses []*ElementResponse `protobuf:"bytes,1,rep,name=responses,proto3" json:"responses,omitempty"`
}

func (x *Responses) Reset() {
	*x = Responses{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_acs_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Responses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Responses) ProtoMessage() {}

func (x *Responses) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_acs_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Responses.ProtoReflect.Descriptor instead.
func (*Responses) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_acs_proto_rawDescGZIP(), []int{30}
}

func (x *Responses) GetResponses() []*ElementResponse {
	if x != nil {
		return x.Responses
	}
	return nil
}

type StringArrayResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []string `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *StringArrayResponse) Reset() {
	*x = StringArrayResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_acs_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringArrayResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringArrayResponse) ProtoMessage() {}

func (x *StringArrayResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_acs_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringArrayResponse.ProtoReflect.Descriptor instead.
func (*StringArrayResponse) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_acs_proto_rawDescGZIP(), []int{31}
}

func (x *StringArrayResponse) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

type RegexStringResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value                string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	ResponseEvaluatorSid int64  `protobuf:"varint,2,opt,name=response_evaluator_sid,json=responseEvaluatorSid,proto3" json:"response_evaluator_sid,omitempty"` // used for validating on call history edits
}

func (x *RegexStringResponse) Reset() {
	*x = RegexStringResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_acs_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegexStringResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegexStringResponse) ProtoMessage() {}

func (x *RegexStringResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_acs_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegexStringResponse.ProtoReflect.Descriptor instead.
func (*RegexStringResponse) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_acs_proto_rawDescGZIP(), []int{32}
}

func (x *RegexStringResponse) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *RegexStringResponse) GetResponseEvaluatorSid() int64 {
	if x != nil {
		return x.ResponseEvaluatorSid
	}
	return 0
}

type ElementResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // used for populating on transfer
	Header     string                 `protobuf:"bytes,2,opt,name=header,proto3" json:"header,omitempty"`
	LastEdited *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=last_edited,json=lastEdited,proto3" json:"last_edited,omitempty"`
	// Types that are assignable to Element:
	//
	//	*ElementResponse_TextArea
	//	*ElementResponse_TextBox
	//	*ElementResponse_TextBoxAlpha
	//	*ElementResponse_TextBoxNum
	//	*ElementResponse_TextVerification
	//	*ElementResponse_Regex
	//	*ElementResponse_RegexTextArea
	//	*ElementResponse_DropDown
	//	*ElementResponse_Calendar
	//	*ElementResponse_Phone
	//	*ElementResponse_Radio
	//	*ElementResponse_MultiSelect
	//	*ElementResponse_Checkbox
	Element isElementResponse_Element `protobuf_oneof:"element"`
}

func (x *ElementResponse) Reset() {
	*x = ElementResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_acs_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ElementResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ElementResponse) ProtoMessage() {}

func (x *ElementResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_acs_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ElementResponse.ProtoReflect.Descriptor instead.
func (*ElementResponse) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_acs_proto_rawDescGZIP(), []int{33}
}

func (x *ElementResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ElementResponse) GetHeader() string {
	if x != nil {
		return x.Header
	}
	return ""
}

func (x *ElementResponse) GetLastEdited() *timestamppb.Timestamp {
	if x != nil {
		return x.LastEdited
	}
	return nil
}

func (m *ElementResponse) GetElement() isElementResponse_Element {
	if m != nil {
		return m.Element
	}
	return nil
}

func (x *ElementResponse) GetTextArea() string {
	if x, ok := x.GetElement().(*ElementResponse_TextArea); ok {
		return x.TextArea
	}
	return ""
}

func (x *ElementResponse) GetTextBox() string {
	if x, ok := x.GetElement().(*ElementResponse_TextBox); ok {
		return x.TextBox
	}
	return ""
}

func (x *ElementResponse) GetTextBoxAlpha() string {
	if x, ok := x.GetElement().(*ElementResponse_TextBoxAlpha); ok {
		return x.TextBoxAlpha
	}
	return ""
}

func (x *ElementResponse) GetTextBoxNum() string {
	if x, ok := x.GetElement().(*ElementResponse_TextBoxNum); ok {
		return x.TextBoxNum
	}
	return ""
}

func (x *ElementResponse) GetTextVerification() string {
	if x, ok := x.GetElement().(*ElementResponse_TextVerification); ok {
		return x.TextVerification
	}
	return ""
}

func (x *ElementResponse) GetRegex() *RegexStringResponse {
	if x, ok := x.GetElement().(*ElementResponse_Regex); ok {
		return x.Regex
	}
	return nil
}

func (x *ElementResponse) GetRegexTextArea() *RegexStringResponse {
	if x, ok := x.GetElement().(*ElementResponse_RegexTextArea); ok {
		return x.RegexTextArea
	}
	return nil
}

func (x *ElementResponse) GetDropDown() string {
	if x, ok := x.GetElement().(*ElementResponse_DropDown); ok {
		return x.DropDown
	}
	return ""
}

func (x *ElementResponse) GetCalendar() string {
	if x, ok := x.GetElement().(*ElementResponse_Calendar); ok {
		return x.Calendar
	}
	return ""
}

func (x *ElementResponse) GetPhone() string {
	if x, ok := x.GetElement().(*ElementResponse_Phone); ok {
		return x.Phone
	}
	return ""
}

func (x *ElementResponse) GetRadio() string {
	if x, ok := x.GetElement().(*ElementResponse_Radio); ok {
		return x.Radio
	}
	return ""
}

func (x *ElementResponse) GetMultiSelect() *StringArrayResponse {
	if x, ok := x.GetElement().(*ElementResponse_MultiSelect); ok {
		return x.MultiSelect
	}
	return nil
}

func (x *ElementResponse) GetCheckbox() *StringArrayResponse {
	if x, ok := x.GetElement().(*ElementResponse_Checkbox); ok {
		return x.Checkbox
	}
	return nil
}

type isElementResponse_Element interface {
	isElementResponse_Element()
}

type ElementResponse_TextArea struct {
	// RawText raw_text = 1;                  // No Response
	TextArea string `protobuf:"bytes,10,opt,name=text_area,json=textArea,proto3,oneof"` // FreeForm
}

type ElementResponse_TextBox struct {
	TextBox string `protobuf:"bytes,11,opt,name=text_box,json=textBox,proto3,oneof"`
}

type ElementResponse_TextBoxAlpha struct {
	TextBoxAlpha string `protobuf:"bytes,12,opt,name=text_box_alpha,json=textBoxAlpha,proto3,oneof"`
}

type ElementResponse_TextBoxNum struct {
	TextBoxNum string `protobuf:"bytes,13,opt,name=text_box_num,json=textBoxNum,proto3,oneof"`
}

type ElementResponse_TextVerification struct {
	TextVerification string `protobuf:"bytes,14,opt,name=text_verification,json=textVerification,proto3,oneof"`
}

type ElementResponse_Regex struct {
	Regex *RegexStringResponse `protobuf:"bytes,15,opt,name=regex,proto3,oneof"`
}

type ElementResponse_RegexTextArea struct {
	RegexTextArea *RegexStringResponse `protobuf:"bytes,16,opt,name=regex_text_area,json=regexTextArea,proto3,oneof"`
}

type ElementResponse_DropDown struct {
	DropDown string `protobuf:"bytes,100,opt,name=drop_down,json=dropDown,proto3,oneof"` // SingleChoice
}

type ElementResponse_Calendar struct {
	Calendar string `protobuf:"bytes,101,opt,name=calendar,proto3,oneof"`
}

type ElementResponse_Phone struct {
	Phone string `protobuf:"bytes,102,opt,name=phone,proto3,oneof"`
}

type ElementResponse_Radio struct {
	Radio string `protobuf:"bytes,103,opt,name=radio,proto3,oneof"`
}

type ElementResponse_MultiSelect struct {
	MultiSelect *StringArrayResponse `protobuf:"bytes,200,opt,name=multi_select,json=multiSelect,proto3,oneof"` // MultiChoice
}

type ElementResponse_Checkbox struct {
	Checkbox *StringArrayResponse `protobuf:"bytes,201,opt,name=checkbox,proto3,oneof"`
}

func (*ElementResponse_TextArea) isElementResponse_Element() {}

func (*ElementResponse_TextBox) isElementResponse_Element() {}

func (*ElementResponse_TextBoxAlpha) isElementResponse_Element() {}

func (*ElementResponse_TextBoxNum) isElementResponse_Element() {}

func (*ElementResponse_TextVerification) isElementResponse_Element() {}

func (*ElementResponse_Regex) isElementResponse_Element() {}

func (*ElementResponse_RegexTextArea) isElementResponse_Element() {}

func (*ElementResponse_DropDown) isElementResponse_Element() {}

func (*ElementResponse_Calendar) isElementResponse_Element() {}

func (*ElementResponse_Phone) isElementResponse_Element() {}

func (*ElementResponse_Radio) isElementResponse_Element() {}

func (*ElementResponse_MultiSelect) isElementResponse_Element() {}

func (*ElementResponse_Checkbox) isElementResponse_Element() {}

type SaveResponsesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SaveResponsesResponse) Reset() {
	*x = SaveResponsesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_acs_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveResponsesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveResponsesResponse) ProtoMessage() {}

func (x *SaveResponsesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_acs_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveResponsesResponse.ProtoReflect.Descriptor instead.
func (*SaveResponsesResponse) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_acs_proto_rawDescGZIP(), []int{34}
}

type GetResponsesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallId int64 `protobuf:"varint,1,opt,name=call_id,json=callId,proto3" json:"call_id,omitempty"`
}

func (x *GetResponsesRequest) Reset() {
	*x = GetResponsesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_acs_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResponsesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponsesRequest) ProtoMessage() {}

func (x *GetResponsesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_acs_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponsesRequest.ProtoReflect.Descriptor instead.
func (*GetResponsesRequest) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_acs_proto_rawDescGZIP(), []int{35}
}

func (x *GetResponsesRequest) GetCallId() int64 {
	if x != nil {
		return x.CallId
	}
	return 0
}

type GetResponsesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Responses  *Responses `protobuf:"bytes,1,opt,name=responses,proto3" json:"responses,omitempty"`
	ScriptId   string     `protobuf:"bytes,2,opt,name=script_id,json=scriptId,proto3" json:"script_id,omitempty"`
	CampaignId string     `protobuf:"bytes,3,opt,name=campaign_id,json=campaignId,proto3" json:"campaign_id,omitempty"`
}

func (x *GetResponsesResponse) Reset() {
	*x = GetResponsesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_acs_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResponsesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponsesResponse) ProtoMessage() {}

func (x *GetResponsesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_acs_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponsesResponse.ProtoReflect.Descriptor instead.
func (*GetResponsesResponse) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_acs_proto_rawDescGZIP(), []int{36}
}

func (x *GetResponsesResponse) GetResponses() *Responses {
	if x != nil {
		return x.Responses
	}
	return nil
}

func (x *GetResponsesResponse) GetScriptId() string {
	if x != nil {
		return x.ScriptId
	}
	return ""
}

func (x *GetResponsesResponse) GetCampaignId() string {
	if x != nil {
		return x.CampaignId
	}
	return ""
}

type UpdateRulesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rules []*RuleDetails `protobuf:"bytes,1,rep,name=rules,proto3" json:"rules,omitempty"`
}

func (x *UpdateRulesRequest) Reset() {
	*x = UpdateRulesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_acs_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRulesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRulesRequest) ProtoMessage() {}

func (x *UpdateRulesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_acs_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRulesRequest.ProtoReflect.Descriptor instead.
func (*UpdateRulesRequest) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_acs_proto_rawDescGZIP(), []int{37}
}

func (x *UpdateRulesRequest) GetRules() []*RuleDetails {
	if x != nil {
		return x.Rules
	}
	return nil
}

type UpdateRulesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MapperIds []string `protobuf:"bytes,1,rep,name=mapper_ids,json=mapperIds,proto3" json:"mapper_ids,omitempty"`
}

func (x *UpdateRulesResponse) Reset() {
	*x = UpdateRulesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_acs_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRulesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRulesResponse) ProtoMessage() {}

func (x *UpdateRulesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_acs_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRulesResponse.ProtoReflect.Descriptor instead.
func (*UpdateRulesResponse) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_acs_proto_rawDescGZIP(), []int{38}
}

func (x *UpdateRulesResponse) GetMapperIds() []string {
	if x != nil {
		return x.MapperIds
	}
	return nil
}

type RegexEvaluator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Regex       string `protobuf:"bytes,4,opt,name=regex,proto3" json:"regex,omitempty"`
}

func (x *RegexEvaluator) Reset() {
	*x = RegexEvaluator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_acs_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegexEvaluator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegexEvaluator) ProtoMessage() {}

func (x *RegexEvaluator) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_acs_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegexEvaluator.ProtoReflect.Descriptor instead.
func (*RegexEvaluator) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_acs_proto_rawDescGZIP(), []int{39}
}

func (x *RegexEvaluator) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RegexEvaluator) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RegexEvaluator) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *RegexEvaluator) GetRegex() string {
	if x != nil {
		return x.Regex
	}
	return ""
}

type CreateRegexEvaluatorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Regex       string `protobuf:"bytes,3,opt,name=regex,proto3" json:"regex,omitempty"` // string org_id = 4;
}

func (x *CreateRegexEvaluatorRequest) Reset() {
	*x = CreateRegexEvaluatorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_acs_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRegexEvaluatorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRegexEvaluatorRequest) ProtoMessage() {}

func (x *CreateRegexEvaluatorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_acs_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRegexEvaluatorRequest.ProtoReflect.Descriptor instead.
func (*CreateRegexEvaluatorRequest) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_acs_proto_rawDescGZIP(), []int{40}
}

func (x *CreateRegexEvaluatorRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateRegexEvaluatorRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateRegexEvaluatorRequest) GetRegex() string {
	if x != nil {
		return x.Regex
	}
	return ""
}

type CreateRegexEvaluatorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateRegexEvaluatorResponse) Reset() {
	*x = CreateRegexEvaluatorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_acs_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRegexEvaluatorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRegexEvaluatorResponse) ProtoMessage() {}

func (x *CreateRegexEvaluatorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_acs_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRegexEvaluatorResponse.ProtoReflect.Descriptor instead.
func (*CreateRegexEvaluatorResponse) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_acs_proto_rawDescGZIP(), []int{41}
}

func (x *CreateRegexEvaluatorResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UpdateRegexEvaluatorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Regex       string `protobuf:"bytes,4,opt,name=regex,proto3" json:"regex,omitempty"` // string org_id = 5;
}

func (x *UpdateRegexEvaluatorRequest) Reset() {
	*x = UpdateRegexEvaluatorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_acs_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRegexEvaluatorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRegexEvaluatorRequest) ProtoMessage() {}

func (x *UpdateRegexEvaluatorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_acs_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRegexEvaluatorRequest.ProtoReflect.Descriptor instead.
func (*UpdateRegexEvaluatorRequest) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_acs_proto_rawDescGZIP(), []int{42}
}

func (x *UpdateRegexEvaluatorRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateRegexEvaluatorRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateRegexEvaluatorRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateRegexEvaluatorRequest) GetRegex() string {
	if x != nil {
		return x.Regex
	}
	return ""
}

type UpdateRegexEvaluatorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UpdateRegexEvaluatorResponse) Reset() {
	*x = UpdateRegexEvaluatorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_acs_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRegexEvaluatorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRegexEvaluatorResponse) ProtoMessage() {}

func (x *UpdateRegexEvaluatorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_acs_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRegexEvaluatorResponse.ProtoReflect.Descriptor instead.
func (*UpdateRegexEvaluatorResponse) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_acs_proto_rawDescGZIP(), []int{43}
}

func (x *UpdateRegexEvaluatorResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListRegexEvaluatorsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListRegexEvaluatorsRequest) Reset() {
	*x = ListRegexEvaluatorsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_acs_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRegexEvaluatorsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRegexEvaluatorsRequest) ProtoMessage() {}

func (x *ListRegexEvaluatorsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_acs_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRegexEvaluatorsRequest.ProtoReflect.Descriptor instead.
func (*ListRegexEvaluatorsRequest) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_acs_proto_rawDescGZIP(), []int{44}
}

type ListRegexEvaluatorsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Regexes []*RegexEvaluator `protobuf:"bytes,1,rep,name=regexes,proto3" json:"regexes,omitempty"`
}

func (x *ListRegexEvaluatorsResponse) Reset() {
	*x = ListRegexEvaluatorsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_acs_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRegexEvaluatorsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRegexEvaluatorsResponse) ProtoMessage() {}

func (x *ListRegexEvaluatorsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_acs_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRegexEvaluatorsResponse.ProtoReflect.Descriptor instead.
func (*ListRegexEvaluatorsResponse) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_acs_proto_rawDescGZIP(), []int{45}
}

func (x *ListRegexEvaluatorsResponse) GetRegexes() []*RegexEvaluator {
	if x != nil {
		return x.Regexes
	}
	return nil
}

type CreateRuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field       MapperRuleFieldEnum     `protobuf:"varint,1,opt,name=field,proto3,enum=api.v0alpha.MapperRuleFieldEnum" json:"field,omitempty"`
	Condition   MapperRuleConditionEnum `protobuf:"varint,2,opt,name=condition,proto3,enum=api.v0alpha.MapperRuleConditionEnum" json:"condition,omitempty"`
	Value       string                  `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	ScriptId    string                  `protobuf:"bytes,4,opt,name=script_id,json=scriptId,proto3" json:"script_id,omitempty"`
	Position    int64                   `protobuf:"varint,5,opt,name=position,proto3" json:"position,omitempty"`
	CustomField string                  `protobuf:"bytes,6,opt,name=custom_field,json=customField,proto3" json:"custom_field,omitempty"`
}

func (x *CreateRuleRequest) Reset() {
	*x = CreateRuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_acs_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRuleRequest) ProtoMessage() {}

func (x *CreateRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_acs_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRuleRequest.ProtoReflect.Descriptor instead.
func (*CreateRuleRequest) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_acs_proto_rawDescGZIP(), []int{46}
}

func (x *CreateRuleRequest) GetField() MapperRuleFieldEnum {
	if x != nil {
		return x.Field
	}
	return MapperRuleFieldEnum_AGENT_ID
}

func (x *CreateRuleRequest) GetCondition() MapperRuleConditionEnum {
	if x != nil {
		return x.Condition
	}
	return MapperRuleConditionEnum_MAPPER_EQUAL
}

func (x *CreateRuleRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *CreateRuleRequest) GetScriptId() string {
	if x != nil {
		return x.ScriptId
	}
	return ""
}

func (x *CreateRuleRequest) GetPosition() int64 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *CreateRuleRequest) GetCustomField() string {
	if x != nil {
		return x.CustomField
	}
	return ""
}

type CreateRuleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MapperId string `protobuf:"bytes,1,opt,name=mapper_id,json=mapperId,proto3" json:"mapper_id,omitempty"`
}

func (x *CreateRuleResponse) Reset() {
	*x = CreateRuleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_acs_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRuleResponse) ProtoMessage() {}

func (x *CreateRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_acs_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRuleResponse.ProtoReflect.Descriptor instead.
func (*CreateRuleResponse) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_acs_proto_rawDescGZIP(), []int{47}
}

func (x *CreateRuleResponse) GetMapperId() string {
	if x != nil {
		return x.MapperId
	}
	return ""
}

type ListRulesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListRulesRequest) Reset() {
	*x = ListRulesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_acs_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRulesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRulesRequest) ProtoMessage() {}

func (x *ListRulesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_acs_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRulesRequest.ProtoReflect.Descriptor instead.
func (*ListRulesRequest) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_acs_proto_rawDescGZIP(), []int{48}
}

type RuleDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field       MapperRuleFieldEnum     `protobuf:"varint,1,opt,name=field,proto3,enum=api.v0alpha.MapperRuleFieldEnum" json:"field,omitempty"`
	Condition   MapperRuleConditionEnum `protobuf:"varint,2,opt,name=condition,proto3,enum=api.v0alpha.MapperRuleConditionEnum" json:"condition,omitempty"`
	Value       string                  `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	MapperId    string                  `protobuf:"bytes,4,opt,name=mapper_id,json=mapperId,proto3" json:"mapper_id,omitempty"`
	ScriptId    string                  `protobuf:"bytes,5,opt,name=script_id,json=scriptId,proto3" json:"script_id,omitempty"`
	Position    int64                   `protobuf:"varint,6,opt,name=position,proto3" json:"position,omitempty"`
	CustomField string                  `protobuf:"bytes,7,opt,name=custom_field,json=customField,proto3" json:"custom_field,omitempty"`
}

func (x *RuleDetails) Reset() {
	*x = RuleDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_acs_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuleDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleDetails) ProtoMessage() {}

func (x *RuleDetails) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_acs_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleDetails.ProtoReflect.Descriptor instead.
func (*RuleDetails) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_acs_proto_rawDescGZIP(), []int{49}
}

func (x *RuleDetails) GetField() MapperRuleFieldEnum {
	if x != nil {
		return x.Field
	}
	return MapperRuleFieldEnum_AGENT_ID
}

func (x *RuleDetails) GetCondition() MapperRuleConditionEnum {
	if x != nil {
		return x.Condition
	}
	return MapperRuleConditionEnum_MAPPER_EQUAL
}

func (x *RuleDetails) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *RuleDetails) GetMapperId() string {
	if x != nil {
		return x.MapperId
	}
	return ""
}

func (x *RuleDetails) GetScriptId() string {
	if x != nil {
		return x.ScriptId
	}
	return ""
}

func (x *RuleDetails) GetPosition() int64 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *RuleDetails) GetCustomField() string {
	if x != nil {
		return x.CustomField
	}
	return ""
}

type ListRulesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rules []*RuleDetails `protobuf:"bytes,1,rep,name=rules,proto3" json:"rules,omitempty"`
}

func (x *ListRulesResponse) Reset() {
	*x = ListRulesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_acs_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRulesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRulesResponse) ProtoMessage() {}

func (x *ListRulesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_acs_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRulesResponse.ProtoReflect.Descriptor instead.
func (*ListRulesResponse) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_acs_proto_rawDescGZIP(), []int{50}
}

func (x *ListRulesResponse) GetRules() []*RuleDetails {
	if x != nil {
		return x.Rules
	}
	return nil
}

type DeleteRuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MapperId string `protobuf:"bytes,1,opt,name=mapper_id,json=mapperId,proto3" json:"mapper_id,omitempty"`
}

func (x *DeleteRuleRequest) Reset() {
	*x = DeleteRuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_acs_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRuleRequest) ProtoMessage() {}

func (x *DeleteRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_acs_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRuleRequest.ProtoReflect.Descriptor instead.
func (*DeleteRuleRequest) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_acs_proto_rawDescGZIP(), []int{51}
}

func (x *DeleteRuleRequest) GetMapperId() string {
	if x != nil {
		return x.MapperId
	}
	return ""
}

type DeleteRuleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MapperId string `protobuf:"bytes,1,opt,name=mapper_id,json=mapperId,proto3" json:"mapper_id,omitempty"`
}

func (x *DeleteRuleResponse) Reset() {
	*x = DeleteRuleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_acs_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRuleResponse) ProtoMessage() {}

func (x *DeleteRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_acs_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRuleResponse.ProtoReflect.Descriptor instead.
func (*DeleteRuleResponse) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_acs_proto_rawDescGZIP(), []int{52}
}

func (x *DeleteRuleResponse) GetMapperId() string {
	if x != nil {
		return x.MapperId
	}
	return ""
}

type GetScriptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallId              int64                 `protobuf:"varint,3,opt,name=call_id,json=callId,proto3" json:"call_id,omitempty"`
	CallType            commons.CallType_Enum `protobuf:"varint,4,opt,name=call_type,json=callType,proto3,enum=api.commons.CallType_Enum" json:"call_type,omitempty"`
	ScheduledCallbackId string                `protobuf:"bytes,5,opt,name=scheduled_callback_id,json=scheduledCallbackId,proto3" json:"scheduled_callback_id,omitempty"`
}

func (x *GetScriptRequest) Reset() {
	*x = GetScriptRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_acs_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetScriptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScriptRequest) ProtoMessage() {}

func (x *GetScriptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_acs_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScriptRequest.ProtoReflect.Descriptor instead.
func (*GetScriptRequest) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_acs_proto_rawDescGZIP(), []int{53}
}

func (x *GetScriptRequest) GetCallId() int64 {
	if x != nil {
		return x.CallId
	}
	return 0
}

func (x *GetScriptRequest) GetCallType() commons.CallType_Enum {
	if x != nil {
		return x.CallType
	}
	return commons.CallType_Enum(0)
}

func (x *GetScriptRequest) GetScheduledCallbackId() string {
	if x != nil {
		return x.ScheduledCallbackId
	}
	return ""
}

type GetScriptResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Script   *Script `protobuf:"bytes,1,opt,name=script,proto3" json:"script,omitempty"`
	ScriptId string  `protobuf:"bytes,2,opt,name=script_id,json=scriptId,proto3" json:"script_id,omitempty"`
}

func (x *GetScriptResponse) Reset() {
	*x = GetScriptResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_acs_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetScriptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScriptResponse) ProtoMessage() {}

func (x *GetScriptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_acs_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScriptResponse.ProtoReflect.Descriptor instead.
func (*GetScriptResponse) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_acs_proto_rawDescGZIP(), []int{54}
}

func (x *GetScriptResponse) GetScript() *Script {
	if x != nil {
		return x.Script
	}
	return nil
}

func (x *GetScriptResponse) GetScriptId() string {
	if x != nil {
		return x.ScriptId
	}
	return ""
}

var File_api_v0alpha_acs_proto protoreflect.FileDescriptor

var file_api_v0alpha_acs_proto_rawDesc = []byte{
	0x0a, 0x15, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x61, 0x63,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x1a, 0x15, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x73, 0x2f, 0x61, 0x63, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x42, 0x0a, 0x13, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2b, 0x0a, 0x06, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x06, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x22, 0x33,
	0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x49, 0x64, 0x22, 0x5f, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x06, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52,
	0x06, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x49, 0x64, 0x22, 0x33, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x49, 0x64, 0x22, 0x33, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x49, 0x64, 0x22, 0x61,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x06, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x49,
	0x64, 0x22, 0x14, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x62, 0x0a, 0x0d, 0x53, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x6d, 0x0a, 0x06, 0x53,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x2d, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x50, 0x61, 0x67, 0x65, 0x52, 0x05, 0x70,
	0x61, 0x67, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xf9, 0x01, 0x0a, 0x0a, 0x53,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x50, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x4b, 0x0a, 0x11, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x5f, 0x6f, 0x6e, 0x5f, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x4f, 0x6e, 0x4e,
	0x61, 0x76, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4f, 0x6e,
	0x41, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x12, 0x45, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x5f, 0x6f, 0x6e, 0x5f, 0x65, 0x78, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x4f, 0x6e, 0x4e, 0x61, 0x76, 0x45, 0x6e, 0x75, 0x6d,
	0x52, 0x0c, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4f, 0x6e, 0x45, 0x78, 0x69, 0x74, 0x12, 0x36,
	0x0a, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x65, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xf3, 0x01, 0x0a, 0x0d, 0x53, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x3e, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x63, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x12, 0x32, 0x0a, 0x07, 0x65, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x07, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xab, 0x07, 0x0a,
	0x0b, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x31, 0x0a, 0x08,
	0x72, 0x61, 0x77, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x52, 0x61, 0x77,
	0x54, 0x65, 0x78, 0x74, 0x48, 0x00, 0x52, 0x07, 0x72, 0x61, 0x77, 0x54, 0x65, 0x78, 0x74, 0x12,
	0x3e, 0x0a, 0x09, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x08, 0x74, 0x65, 0x78, 0x74, 0x41, 0x72, 0x65, 0x61, 0x12,
	0x3c, 0x0a, 0x08, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x62, 0x6f, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x48, 0x00, 0x52, 0x07, 0x74, 0x65, 0x78, 0x74, 0x42, 0x6f, 0x78, 0x12, 0x47, 0x0a,
	0x0e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x62, 0x6f, 0x78, 0x5f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x74, 0x65, 0x78, 0x74, 0x42, 0x6f,
	0x78, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x12, 0x43, 0x0a, 0x0c, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x62,
	0x6f, 0x78, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52,
	0x0a, 0x74, 0x65, 0x78, 0x74, 0x42, 0x6f, 0x78, 0x4e, 0x75, 0x6d, 0x12, 0x4e, 0x0a, 0x11, 0x74,
	0x65, 0x78, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x10, 0x74, 0x65, 0x78, 0x74, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x05, 0x72,
	0x65, 0x67, 0x65, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x52, 0x65, 0x67, 0x65, 0x78, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x05, 0x72, 0x65,
	0x67, 0x65, 0x78, 0x12, 0x48, 0x0a, 0x0f, 0x72, 0x65, 0x67, 0x65, 0x78, 0x5f, 0x74, 0x65, 0x78,
	0x74, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x52, 0x65, 0x67, 0x65, 0x78,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x0d,
	0x72, 0x65, 0x67, 0x65, 0x78, 0x54, 0x65, 0x78, 0x74, 0x41, 0x72, 0x65, 0x61, 0x12, 0x3e, 0x0a,
	0x09, 0x64, 0x72, 0x6f, 0x70, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x48, 0x00, 0x52, 0x08, 0x64, 0x72, 0x6f, 0x70, 0x44, 0x6f, 0x77, 0x6e, 0x12, 0x3d, 0x0a,
	0x08, 0x63, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x48, 0x00, 0x52, 0x08, 0x63, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x12, 0x37, 0x0a, 0x05,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x05,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x37, 0x0a, 0x05, 0x72, 0x61, 0x64, 0x69, 0x6f, 0x18, 0x67,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x05, 0x72, 0x61, 0x64, 0x69, 0x6f, 0x12, 0x4a,
	0x0a, 0x0c, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x18, 0xc8,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x6d,
	0x75, 0x6c, 0x74, 0x69, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x43, 0x0a, 0x08, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x62, 0x6f, 0x78, 0x18, 0xc9, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x62, 0x6f, 0x78, 0x42,
	0x09, 0x0a, 0x07, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x09, 0x0a, 0x07, 0x52, 0x61,
	0x77, 0x54, 0x65, 0x78, 0x74, 0x22, 0x39, 0x0a, 0x12, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x6e, 0x0a, 0x11, 0x52, 0x65, 0x67, 0x65, 0x78, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x6f, 0x72,
	0x5f, 0x73, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x69, 0x64,
	0x22, 0x5e, 0x0a, 0x12, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x2e, 0x0a, 0x13, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x22, 0x67, 0x0a, 0x17, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x13, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x22, 0x85, 0x01, 0x0a, 0x0f, 0x43, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x3b, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x69, 0x73, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x69, 0x73, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x69, 0x73, 0x6f, 0x6e,
	0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x22, 0xc1, 0x01, 0x0a, 0x0b, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x31, 0x0a, 0x05, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x64, 0x12,
	0x24, 0x0a, 0x0e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x73, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x61,
	0x6c, 0x6c, 0x53, 0x69, 0x64, 0x22, 0x93, 0x05, 0x0a, 0x0e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3a, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x12, 0x43, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0c, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x3a, 0x0a, 0x0b, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x50, 0x61, 0x67,
	0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x40, 0x0a, 0x0d, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x66, 0x6f, 0x63, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x45, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x48, 0x00, 0x52, 0x0c, 0x65, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x12, 0x47, 0x0a, 0x0f, 0x65, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x45,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00,
	0x52, 0x0e, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x12, 0x34, 0x0a, 0x09, 0x6b, 0x65, 0x79, 0x5f, 0x70, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x4b, 0x65, 0x79, 0x50, 0x72, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x08, 0x6b, 0x65,
	0x79, 0x50, 0x72, 0x65, 0x73, 0x73, 0x12, 0x37, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x5f,
	0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x4c, 0x69,
	0x6e, 0x6b, 0x48, 0x00, 0x52, 0x09, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x4c, 0x69, 0x6e, 0x6b, 0x12,
	0x3d, 0x0a, 0x0c, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x48,
	0x00, 0x52, 0x0b, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x40,
	0x0a, 0x0d, 0x61, 0x70, 0x70, 0x5f, 0x75, 0x6e, 0x66, 0x6f, 0x63, 0x75, 0x73, 0x65, 0x64, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x41, 0x70, 0x70, 0x55, 0x6e, 0x66, 0x6f, 0x63, 0x75, 0x73, 0x65, 0x64,
	0x48, 0x00, 0x52, 0x0c, 0x61, 0x70, 0x70, 0x55, 0x6e, 0x66, 0x6f, 0x63, 0x75, 0x73, 0x65, 0x64,
	0x12, 0x40, 0x0a, 0x0d, 0x61, 0x70, 0x70, 0x5f, 0x72, 0x65, 0x66, 0x6f, 0x63, 0x75, 0x73, 0x65,
	0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x41, 0x70, 0x70, 0x52, 0x65, 0x66, 0x6f, 0x63, 0x75, 0x73,
	0x65, 0x64, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x70, 0x70, 0x52, 0x65, 0x66, 0x6f, 0x63, 0x75, 0x73,
	0x65, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x0f, 0x0a, 0x0d, 0x43,
	0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x22, 0x12, 0x0a, 0x10,
	0x43, 0x61, 0x6c, 0x6c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x22, 0x0e, 0x0a, 0x0c, 0x41, 0x70, 0x70, 0x55, 0x6e, 0x66, 0x6f, 0x63, 0x75, 0x73, 0x65, 0x64,
	0x22, 0x0e, 0x0a, 0x0c, 0x41, 0x70, 0x70, 0x52, 0x65, 0x66, 0x6f, 0x63, 0x75, 0x73, 0x65, 0x64,
	0x22, 0x79, 0x0a, 0x0b, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12,
	0x38, 0x0a, 0x06, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6c,
	0x69, 0x63, 0x6b, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x2e, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e,
	0x73, 0x52, 0x06, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x22, 0x30, 0x0a, 0x07, 0x42, 0x75, 0x74,
	0x74, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x45,
	0x44, 0x5f, 0x43, 0x41, 0x4c, 0x4c, 0x42, 0x41, 0x43, 0x4b, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09,
	0x4e, 0x45, 0x58, 0x54, 0x5f, 0x43, 0x41, 0x4c, 0x4c, 0x10, 0x01, 0x22, 0x5c, 0x0a, 0x0a, 0x50,
	0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x65,
	0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x50, 0x61, 0x67, 0x65, 0x12, 0x29,
	0x0a, 0x10, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x67, 0x65, 0x22, 0x2d, 0x0a, 0x0c, 0x45, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x70, 0x0a, 0x08, 0x4b, 0x65, 0x79, 0x50,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x3b, 0x0a, 0x09, 0x6b, 0x65, 0x79, 0x5f, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4b, 0x65, 0x79, 0x50, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x57,
	0x68, 0x69, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x50, 0x72, 0x65, 0x73,
	0x73, 0x22, 0x27, 0x0a, 0x08, 0x57, 0x68, 0x69, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x12, 0x07, 0x0a,
	0x03, 0x54, 0x41, 0x42, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x4e, 0x54, 0x45, 0x52, 0x10,
	0x01, 0x12, 0x07, 0x0a, 0x03, 0x45, 0x53, 0x43, 0x10, 0x02, 0x22, 0x3c, 0x0a, 0x09, 0x43, 0x6c,
	0x69, 0x63, 0x6b, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0xa3, 0x01, 0x0a, 0x14, 0x53, 0x61, 0x76,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x63, 0x61, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x6d, 0x70, 0x61,
	0x69, 0x67, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61,
	0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x73, 0x52, 0x09, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x22, 0x47,
	0x0a, 0x09, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x12, 0x3a, 0x0a, 0x09, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x45, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x09, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x22, 0x2d, 0x0a, 0x13, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x41, 0x72, 0x72, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x61, 0x0a, 0x13, 0x52, 0x65, 0x67, 0x65, 0x78, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f,
	0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x14, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x61,
	0x6c, 0x75, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x69, 0x64, 0x22, 0xb4, 0x05, 0x0a, 0x0f, 0x45, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x3b, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x65, 0x64,
	0x69, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x45, 0x64, 0x69, 0x74,
	0x65, 0x64, 0x12, 0x1d, 0x0a, 0x09, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x74, 0x65, 0x78, 0x74, 0x41, 0x72, 0x65,
	0x61, 0x12, 0x1b, 0x0a, 0x08, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x62, 0x6f, 0x78, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x74, 0x65, 0x78, 0x74, 0x42, 0x6f, 0x78, 0x12, 0x26,
	0x0a, 0x0e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x62, 0x6f, 0x78, 0x5f, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x74, 0x65, 0x78, 0x74, 0x42, 0x6f,
	0x78, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x62,
	0x6f, 0x78, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a,
	0x74, 0x65, 0x78, 0x74, 0x42, 0x6f, 0x78, 0x4e, 0x75, 0x6d, 0x12, 0x2d, 0x0a, 0x11, 0x74, 0x65,
	0x78, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x10, 0x74, 0x65, 0x78, 0x74, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x05, 0x72, 0x65, 0x67,
	0x65, 0x78, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x52, 0x65, 0x67, 0x65, 0x78, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x05, 0x72, 0x65,
	0x67, 0x65, 0x78, 0x12, 0x4a, 0x0a, 0x0f, 0x72, 0x65, 0x67, 0x65, 0x78, 0x5f, 0x74, 0x65, 0x78,
	0x74, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x52, 0x65, 0x67, 0x65, 0x78,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00,
	0x52, 0x0d, 0x72, 0x65, 0x67, 0x65, 0x78, 0x54, 0x65, 0x78, 0x74, 0x41, 0x72, 0x65, 0x61, 0x12,
	0x1d, 0x0a, 0x09, 0x64, 0x72, 0x6f, 0x70, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x18, 0x64, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x64, 0x72, 0x6f, 0x70, 0x44, 0x6f, 0x77, 0x6e, 0x12, 0x1c,
	0x0a, 0x08, 0x63, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x08, 0x63, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x12, 0x16, 0x0a, 0x05,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x05, 0x72, 0x61, 0x64, 0x69, 0x6f, 0x18, 0x67, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x72, 0x61, 0x64, 0x69, 0x6f, 0x12, 0x46, 0x0a, 0x0c,
	0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x18, 0xc8, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x41, 0x72, 0x72, 0x61, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x12, 0x3f, 0x0a, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x62, 0x6f, 0x78,
	0x18, 0xc9, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x41, 0x72, 0x72, 0x61,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x08, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x62, 0x6f, 0x78, 0x42, 0x09, 0x0a, 0x07, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x22, 0x17, 0x0a, 0x15, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2e, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x49, 0x64, 0x22, 0x8a, 0x01, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x34, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x52, 0x09, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x6d, 0x70,
	0x61, 0x69, 0x67, 0x6e, 0x49, 0x64, 0x22, 0x44, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x05,
	0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x22, 0x34, 0x0a, 0x13,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x49,
	0x64, 0x73, 0x22, 0x6c, 0x0a, 0x0e, 0x52, 0x65, 0x67, 0x65, 0x78, 0x45, 0x76, 0x61, 0x6c, 0x75,
	0x61, 0x74, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65,
	0x67, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x67, 0x65, 0x78,
	0x22, 0x69, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x65, 0x78, 0x45,
	0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x67, 0x65, 0x78, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x67, 0x65, 0x78, 0x22, 0x2e, 0x0a, 0x1c, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x65, 0x78, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61,
	0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x79, 0x0a, 0x1b, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x65, 0x78, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61,
	0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x67, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x72, 0x65, 0x67, 0x65, 0x78, 0x22, 0x2e, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x67, 0x65, 0x78, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1c, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x67, 0x65, 0x78, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x54, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x67, 0x65,
	0x78, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x07, 0x72, 0x65, 0x67, 0x65, 0x78, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x52, 0x65, 0x67, 0x65, 0x78, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x6f,
	0x72, 0x52, 0x07, 0x72, 0x65, 0x67, 0x65, 0x78, 0x65, 0x73, 0x22, 0x81, 0x02, 0x0a, 0x11, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x36, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4d, 0x61,
	0x70, 0x70, 0x65, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6e, 0x75,
	0x6d, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x42, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4d, 0x61, 0x70, 0x70, 0x65, 0x72,
	0x52, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x75,
	0x6d, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x22, 0x31,
	0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x12, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x98, 0x02, 0x0a, 0x0b, 0x52, 0x75, 0x6c, 0x65, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x36, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x4d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x42, 0x0a,
	0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4d,
	0x61, 0x70, 0x70, 0x65, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x70, 0x70, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x61, 0x70, 0x70,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a,
	0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x22, 0x43, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x05,
	0x72, 0x75, 0x6c, 0x65, 0x73, 0x22, 0x30, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61,
	0x70, 0x70, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d,
	0x61, 0x70, 0x70, 0x65, 0x72, 0x49, 0x64, 0x22, 0x31, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x49, 0x64, 0x22, 0x98, 0x01, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x09, 0x63, 0x61, 0x6c, 0x6c,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x79,
	0x70, 0x65, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x32, 0x0a, 0x15, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x5f, 0x63,
	0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x13, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x43, 0x61, 0x6c, 0x6c, 0x62,
	0x61, 0x63, 0x6b, 0x49, 0x64, 0x22, 0x5d, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52,
	0x06, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x49, 0x64, 0x2a, 0xf0, 0x01, 0x0a, 0x11, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x45,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x41,
	0x57, 0x5f, 0x54, 0x45, 0x58, 0x54, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x45, 0x58, 0x54,
	0x5f, 0x42, 0x4f, 0x58, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x54, 0x45, 0x58, 0x54, 0x5f, 0x42,
	0x4f, 0x58, 0x5f, 0x41, 0x4c, 0x50, 0x48, 0x41, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x45,
	0x58, 0x54, 0x5f, 0x42, 0x4f, 0x58, 0x5f, 0x4e, 0x55, 0x4d, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09,
	0x54, 0x45, 0x58, 0x54, 0x5f, 0x41, 0x52, 0x45, 0x41, 0x10, 0x04, 0x12, 0x15, 0x0a, 0x11, 0x54,
	0x45, 0x58, 0x54, 0x5f, 0x56, 0x45, 0x52, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x10, 0x05, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x45, 0x47, 0x45, 0x58, 0x10, 0x06, 0x12, 0x13, 0x0a,
	0x0f, 0x52, 0x45, 0x47, 0x45, 0x58, 0x5f, 0x54, 0x45, 0x58, 0x54, 0x5f, 0x41, 0x52, 0x45, 0x41,
	0x10, 0x07, 0x12, 0x0d, 0x0a, 0x09, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x10,
	0x64, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x41, 0x4c, 0x45, 0x4e, 0x44, 0x41, 0x52, 0x10, 0x65, 0x12,
	0x09, 0x0a, 0x05, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x10, 0x66, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x41,
	0x44, 0x49, 0x4f, 0x10, 0x67, 0x12, 0x11, 0x0a, 0x0c, 0x4d, 0x55, 0x4c, 0x54, 0x49, 0x5f, 0x53,
	0x45, 0x4c, 0x45, 0x43, 0x54, 0x10, 0xc8, 0x01, 0x12, 0x0d, 0x0a, 0x08, 0x43, 0x48, 0x45, 0x43,
	0x4b, 0x42, 0x4f, 0x58, 0x10, 0xc9, 0x01, 0x2a, 0x2f, 0x0a, 0x12, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x67, 0x4f, 0x6e, 0x4e, 0x61, 0x76, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x08, 0x0a,
	0x04, 0x4b, 0x45, 0x45, 0x50, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4e, 0x10, 0x01, 0x12,
	0x07, 0x0a, 0x03, 0x4f, 0x46, 0x46, 0x10, 0x02, 0x2a, 0x8c, 0x02, 0x0a, 0x0e, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x72, 0x69, 0x73, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x45,
	0x51, 0x55, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x51,
	0x55, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x47, 0x52, 0x45, 0x41, 0x54, 0x45, 0x52,
	0x5f, 0x54, 0x48, 0x41, 0x4e, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x4c, 0x45, 0x53, 0x53, 0x5f,
	0x54, 0x48, 0x41, 0x4e, 0x10, 0x03, 0x12, 0x19, 0x0a, 0x15, 0x47, 0x52, 0x45, 0x41, 0x54, 0x45,
	0x52, 0x5f, 0x54, 0x48, 0x41, 0x4e, 0x5f, 0x45, 0x51, 0x55, 0x41, 0x4c, 0x5f, 0x54, 0x4f, 0x10,
	0x04, 0x12, 0x16, 0x0a, 0x12, 0x4c, 0x45, 0x53, 0x53, 0x5f, 0x54, 0x48, 0x41, 0x4e, 0x5f, 0x45,
	0x51, 0x55, 0x41, 0x4c, 0x5f, 0x54, 0x4f, 0x10, 0x05, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x4e,
	0x54, 0x41, 0x49, 0x4e, 0x53, 0x10, 0x06, 0x12, 0x14, 0x0a, 0x10, 0x44, 0x4f, 0x45, 0x53, 0x5f,
	0x4e, 0x4f, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x41, 0x49, 0x4e, 0x10, 0x07, 0x12, 0x09, 0x0a,
	0x05, 0x42, 0x4c, 0x41, 0x4e, 0x4b, 0x10, 0x08, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x54, 0x5f,
	0x42, 0x4c, 0x41, 0x4e, 0x4b, 0x10, 0x09, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x54, 0x41, 0x52, 0x54,
	0x53, 0x5f, 0x57, 0x49, 0x54, 0x48, 0x10, 0x0a, 0x12, 0x17, 0x0a, 0x13, 0x44, 0x4f, 0x45, 0x53,
	0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x5f, 0x57, 0x49, 0x54, 0x48, 0x10,
	0x0b, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x4e, 0x44, 0x53, 0x5f, 0x57, 0x49, 0x54, 0x48, 0x10, 0x0c,
	0x12, 0x15, 0x0a, 0x11, 0x44, 0x4f, 0x45, 0x53, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x4e, 0x44,
	0x5f, 0x57, 0x49, 0x54, 0x48, 0x10, 0x0d, 0x2a, 0xd1, 0x01, 0x0a, 0x12, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x12,
	0x0a, 0x0e, 0x43, 0x41, 0x4c, 0x4c, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x41, 0x4c, 0x4c, 0x5f, 0x44, 0x49, 0x53, 0x43, 0x4f,
	0x4e, 0x4e, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x43, 0x52,
	0x49, 0x50, 0x54, 0x5f, 0x50, 0x41, 0x47, 0x45, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x10,
	0x02, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x5f, 0x45, 0x4c, 0x45, 0x4d,
	0x45, 0x4e, 0x54, 0x5f, 0x46, 0x4f, 0x43, 0x55, 0x53, 0x10, 0x03, 0x12, 0x1a, 0x0a, 0x16, 0x53,
	0x43, 0x52, 0x49, 0x50, 0x54, 0x5f, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x55, 0x50,
	0x44, 0x41, 0x54, 0x45, 0x44, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x4b, 0x45, 0x59, 0x5f, 0x50,
	0x52, 0x45, 0x53, 0x53, 0x10, 0x05, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x4c, 0x49, 0x43, 0x4b, 0x5f,
	0x4c, 0x49, 0x4e, 0x4b, 0x10, 0x06, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x4c, 0x49, 0x43, 0x4b, 0x5f,
	0x42, 0x55, 0x54, 0x54, 0x4f, 0x4e, 0x10, 0x07, 0x12, 0x11, 0x0a, 0x0d, 0x41, 0x50, 0x50, 0x5f,
	0x55, 0x4e, 0x46, 0x4f, 0x43, 0x55, 0x53, 0x45, 0x44, 0x10, 0x08, 0x2a, 0xc6, 0x03, 0x0a, 0x13,
	0x4d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x45,
	0x6e, 0x75, 0x6d, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x5f, 0x49, 0x44, 0x10,
	0x00, 0x12, 0x12, 0x0a, 0x0e, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x4e,
	0x41, 0x4d, 0x45, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x41, 0x4c, 0x4c, 0x45, 0x52, 0x5f,
	0x49, 0x44, 0x10, 0x05, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x5f, 0x4e, 0x55,
	0x4d, 0x42, 0x45, 0x52, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f,
	0x49, 0x44, 0x10, 0x07, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x52, 0x45, 0x41, 0x5f, 0x43, 0x4f, 0x44,
	0x45, 0x10, 0x08, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x43,
	0x4f, 0x44, 0x45, 0x10, 0x0a, 0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x10, 0x11, 0x12, 0x1e, 0x0a, 0x1a, 0x52, 0x45, 0x47, 0x49, 0x4f, 0x4e,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x4e, 0x43, 0x45, 0x5f,
	0x43, 0x4f, 0x44, 0x45, 0x10, 0x13, 0x12, 0x1e, 0x0a, 0x1a, 0x52, 0x45, 0x47, 0x49, 0x4f, 0x4e,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x4e, 0x43, 0x45, 0x5f,
	0x4e, 0x41, 0x4d, 0x45, 0x10, 0x14, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x5a,
	0x4f, 0x4e, 0x45, 0x10, 0x15, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x49, 0x54, 0x59, 0x5f, 0x4e, 0x41,
	0x4d, 0x45, 0x10, 0x17, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x59, 0x5f, 0x4e,
	0x41, 0x4d, 0x45, 0x10, 0x1a, 0x12, 0x1f, 0x0a, 0x1b, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x50,
	0x52, 0x4f, 0x56, 0x49, 0x4e, 0x43, 0x45, 0x5f, 0x41, 0x42, 0x42, 0x52, 0x45, 0x56, 0x49, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x10, 0x1d, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f,
	0x50, 0x52, 0x4f, 0x56, 0x49, 0x4e, 0x43, 0x45, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x1e, 0x12,
	0x08, 0x0a, 0x04, 0x44, 0x41, 0x54, 0x45, 0x10, 0x20, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x49, 0x4d,
	0x45, 0x10, 0x21, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x5f, 0x4d, 0x45,
	0x54, 0x41, 0x44, 0x41, 0x54, 0x41, 0x10, 0x23, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x43, 0x48, 0x45,
	0x44, 0x55, 0x4c, 0x45, 0x44, 0x5f, 0x43, 0x41, 0x4c, 0x4c, 0x42, 0x41, 0x43, 0x4b, 0x5f, 0x44,
	0x41, 0x54, 0x41, 0x10, 0x24, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x5f, 0x53,
	0x4b, 0x49, 0x4c, 0x4c, 0x53, 0x10, 0x25, 0x12, 0x0f, 0x0a, 0x0b, 0x44, 0x41, 0x59, 0x5f, 0x4f,
	0x46, 0x5f, 0x57, 0x45, 0x45, 0x4b, 0x10, 0x28, 0x12, 0x11, 0x0a, 0x0d, 0x4d, 0x4f, 0x4e, 0x54,
	0x48, 0x5f, 0x4f, 0x46, 0x5f, 0x59, 0x45, 0x41, 0x52, 0x10, 0x29, 0x12, 0x07, 0x0a, 0x03, 0x49,
	0x56, 0x52, 0x10, 0x2a, 0x2a, 0xe3, 0x01, 0x0a, 0x17, 0x4d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x52,
	0x75, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x75, 0x6d,
	0x12, 0x10, 0x0a, 0x0c, 0x4d, 0x41, 0x50, 0x50, 0x45, 0x52, 0x5f, 0x45, 0x51, 0x55, 0x41, 0x4c,
	0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x41, 0x50, 0x50, 0x45, 0x52, 0x5f, 0x4e, 0x4f, 0x54,
	0x5f, 0x45, 0x51, 0x55, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x4d, 0x41, 0x50, 0x50,
	0x45, 0x52, 0x5f, 0x47, 0x52, 0x45, 0x41, 0x54, 0x45, 0x52, 0x5f, 0x54, 0x48, 0x41, 0x4e, 0x10,
	0x02, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x41, 0x50, 0x50, 0x45, 0x52, 0x5f, 0x4c, 0x45, 0x53, 0x53,
	0x5f, 0x54, 0x48, 0x41, 0x4e, 0x10, 0x03, 0x12, 0x20, 0x0a, 0x1c, 0x4d, 0x41, 0x50, 0x50, 0x45,
	0x52, 0x5f, 0x47, 0x52, 0x45, 0x41, 0x54, 0x45, 0x52, 0x5f, 0x54, 0x48, 0x41, 0x4e, 0x5f, 0x45,
	0x51, 0x55, 0x41, 0x4c, 0x5f, 0x54, 0x4f, 0x10, 0x04, 0x12, 0x1d, 0x0a, 0x19, 0x4d, 0x41, 0x50,
	0x50, 0x45, 0x52, 0x5f, 0x4c, 0x45, 0x53, 0x53, 0x5f, 0x54, 0x48, 0x41, 0x4e, 0x5f, 0x45, 0x51,
	0x55, 0x41, 0x4c, 0x5f, 0x54, 0x4f, 0x10, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x4d, 0x41, 0x50, 0x50,
	0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x41, 0x49, 0x4e, 0x53, 0x10, 0x06, 0x12, 0x1b, 0x0a,
	0x17, 0x4d, 0x41, 0x50, 0x50, 0x45, 0x52, 0x5f, 0x44, 0x4f, 0x45, 0x53, 0x5f, 0x4e, 0x4f, 0x54,
	0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x41, 0x49, 0x4e, 0x10, 0x07, 0x32, 0xa3, 0x0e, 0x0a, 0x03, 0x41,
	0x63, 0x73, 0x12, 0x7e, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x12, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x3a,
	0x01, 0x2a, 0x22, 0x1e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2f, 0x61, 0x63, 0x73, 0x2f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2f, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x12, 0x7e, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x12, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x3a,
	0x01, 0x2a, 0x22, 0x1e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2f, 0x61, 0x63, 0x73, 0x2f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2f, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x82, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x42, 0x79, 0x49, 0x64, 0x12, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x42, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x24, 0x3a, 0x01, 0x2a, 0x22, 0x1f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2f, 0x61, 0x63, 0x73, 0x2f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2f,
	0x67, 0x65, 0x74, 0x62, 0x79, 0x69, 0x64, 0x12, 0x75, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x73, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x3a, 0x01, 0x2a, 0x22, 0x1c,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x61, 0x63, 0x73,
	0x2f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x30, 0x01, 0x12, 0x82,
	0x01, 0x0a, 0x0d, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73,
	0x12, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53,
	0x61, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x3a,
	0x01, 0x2a, 0x22, 0x1f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2f, 0x61, 0x63, 0x73, 0x2f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x2f, 0x73,
	0x61, 0x76, 0x65, 0x12, 0x7e, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x73, 0x12, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23,
	0x3a, 0x01, 0x2a, 0x22, 0x1e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2f, 0x61, 0x63, 0x73, 0x2f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x2f,
	0x67, 0x65, 0x74, 0x12, 0x78, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x75, 0x6c,
	0x65, 0x12, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x3a, 0x01, 0x2a, 0x22, 0x1e, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x61, 0x63, 0x73, 0x2f,
	0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x7b, 0x0a,
	0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x1f, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x3a, 0x01, 0x2a, 0x22, 0x1e, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x61, 0x63, 0x73, 0x2f, 0x6d, 0x61, 0x70,
	0x70, 0x65, 0x72, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x73, 0x0a, 0x09, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x3a, 0x01,
	0x2a, 0x22, 0x1c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f,
	0x61, 0x63, 0x73, 0x2f, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12,
	0x95, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x65, 0x78, 0x45,
	0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67,
	0x65, 0x78, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x65, 0x78, 0x45, 0x76, 0x61, 0x6c,
	0x75, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x22, 0x3a, 0x01, 0x2a, 0x22, 0x1d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x61, 0x63, 0x73, 0x2f, 0x72, 0x65, 0x67, 0x65, 0x78,
	0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x95, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x67, 0x65, 0x78, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x6f, 0x72,
	0x12, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x65, 0x78, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61,
	0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x67, 0x65, 0x78, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x3a, 0x01, 0x2a,
	0x22, 0x1d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x61,
	0x63, 0x73, 0x2f, 0x72, 0x65, 0x67, 0x65, 0x78, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x90, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x67, 0x65, 0x78, 0x45, 0x76, 0x61,
	0x6c, 0x75, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x67, 0x65, 0x78, 0x45,
	0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x67, 0x65, 0x78, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x6f,
	0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x20, 0x3a, 0x01, 0x2a, 0x22, 0x1b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2f, 0x61, 0x63, 0x73, 0x2f, 0x72, 0x65, 0x67, 0x65, 0x78, 0x2f, 0x6c, 0x69,
	0x73, 0x74, 0x12, 0x78, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65,
	0x12, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x3a, 0x01, 0x2a, 0x22, 0x1e, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x61, 0x63, 0x73, 0x2f, 0x6d,
	0x61, 0x70, 0x70, 0x65, 0x72, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x72, 0x0a, 0x09,
	0x47, 0x65, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20,
	0x3a, 0x01, 0x2a, 0x22, 0x1b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2f, 0x61, 0x63, 0x73, 0x2f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2f, 0x67, 0x65, 0x74,
	0x42, 0x90, 0x01, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x42, 0x08, 0x41, 0x63, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01,
	0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x63, 0x6e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x61, 0x70, 0x69, 0x2d, 0x67, 0x6f, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0xa2, 0x02, 0x03, 0x41, 0x56, 0x58, 0xaa, 0x02,
	0x0b, 0x41, 0x70, 0x69, 0x2e, 0x56, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0xca, 0x02, 0x0b, 0x41,
	0x70, 0x69, 0x5c, 0x56, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0xe2, 0x02, 0x17, 0x41, 0x70, 0x69,
	0x5c, 0x56, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0c, 0x41, 0x70, 0x69, 0x3a, 0x3a, 0x56, 0x30, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_v0alpha_acs_proto_rawDescOnce sync.Once
	file_api_v0alpha_acs_proto_rawDescData = file_api_v0alpha_acs_proto_rawDesc
)

func file_api_v0alpha_acs_proto_rawDescGZIP() []byte {
	file_api_v0alpha_acs_proto_rawDescOnce.Do(func() {
		file_api_v0alpha_acs_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v0alpha_acs_proto_rawDescData)
	})
	return file_api_v0alpha_acs_proto_rawDescData
}

var file_api_v0alpha_acs_proto_enumTypes = make([]protoimpl.EnumInfo, 8)
var file_api_v0alpha_acs_proto_msgTypes = make([]protoimpl.MessageInfo, 55)
var file_api_v0alpha_acs_proto_goTypes = []interface{}{
	(ScriptElementType)(0),               // 0: api.v0alpha.ScriptElementType
	(RecordingOnNavEnum)(0),              // 1: api.v0alpha.RecordingOnNavEnum
	(ComparisonType)(0),                  // 2: api.v0alpha.ComparisonType
	(AgentEventTypeEnum)(0),              // 3: api.v0alpha.AgentEventTypeEnum
	(MapperRuleFieldEnum)(0),             // 4: api.v0alpha.MapperRuleFieldEnum
	(MapperRuleConditionEnum)(0),         // 5: api.v0alpha.MapperRuleConditionEnum
	(ClickButton_Buttons)(0),             // 6: api.v0alpha.ClickButton.Buttons
	(KeyPress_WhichKey)(0),               // 7: api.v0alpha.KeyPress.WhichKey
	(*CreateScriptRequest)(nil),          // 8: api.v0alpha.CreateScriptRequest
	(*CreateScriptResponse)(nil),         // 9: api.v0alpha.CreateScriptResponse
	(*UpdateScriptRequest)(nil),          // 10: api.v0alpha.UpdateScriptRequest
	(*UpdateScriptResponse)(nil),         // 11: api.v0alpha.UpdateScriptResponse
	(*GetScriptByIdRequest)(nil),         // 12: api.v0alpha.GetScriptByIdRequest
	(*GetScriptByIdResponse)(nil),        // 13: api.v0alpha.GetScriptByIdResponse
	(*ListScriptsRequest)(nil),           // 14: api.v0alpha.ListScriptsRequest
	(*ScriptDetails)(nil),                // 15: api.v0alpha.ScriptDetails
	(*Script)(nil),                       // 16: api.v0alpha.Script
	(*ScriptPage)(nil),                   // 17: api.v0alpha.ScriptPage
	(*ScriptElement)(nil),                // 18: api.v0alpha.ScriptElement
	(*ElementType)(nil),                  // 19: api.v0alpha.ElementType
	(*RawText)(nil),                      // 20: api.v0alpha.RawText
	(*StringDefaultValue)(nil),           // 21: api.v0alpha.StringDefaultValue
	(*RegexDefaultValue)(nil),            // 22: api.v0alpha.RegexDefaultValue
	(*SelectDefaultValue)(nil),           // 23: api.v0alpha.SelectDefaultValue
	(*MultiSelectDefaultValue)(nil),      // 24: api.v0alpha.MultiSelectDefaultValue
	(*ConditionOption)(nil),              // 25: api.v0alpha.ConditionOption
	(*AgentAction)(nil),                  // 26: api.v0alpha.AgentAction
	(*AgentEventType)(nil),               // 27: api.v0alpha.AgentEventType
	(*CallConnected)(nil),                // 28: api.v0alpha.CallConnected
	(*CallDisconnected)(nil),             // 29: api.v0alpha.CallDisconnected
	(*AppUnfocused)(nil),                 // 30: api.v0alpha.AppUnfocused
	(*AppRefocused)(nil),                 // 31: api.v0alpha.AppRefocused
	(*ClickButton)(nil),                  // 32: api.v0alpha.ClickButton
	(*PageChange)(nil),                   // 33: api.v0alpha.PageChange
	(*ElementFocus)(nil),                 // 34: api.v0alpha.ElementFocus
	(*KeyPress)(nil),                     // 35: api.v0alpha.KeyPress
	(*ClickLink)(nil),                    // 36: api.v0alpha.ClickLink
	(*SaveResponsesRequest)(nil),         // 37: api.v0alpha.SaveResponsesRequest
	(*Responses)(nil),                    // 38: api.v0alpha.Responses
	(*StringArrayResponse)(nil),          // 39: api.v0alpha.StringArrayResponse
	(*RegexStringResponse)(nil),          // 40: api.v0alpha.RegexStringResponse
	(*ElementResponse)(nil),              // 41: api.v0alpha.ElementResponse
	(*SaveResponsesResponse)(nil),        // 42: api.v0alpha.SaveResponsesResponse
	(*GetResponsesRequest)(nil),          // 43: api.v0alpha.GetResponsesRequest
	(*GetResponsesResponse)(nil),         // 44: api.v0alpha.GetResponsesResponse
	(*UpdateRulesRequest)(nil),           // 45: api.v0alpha.UpdateRulesRequest
	(*UpdateRulesResponse)(nil),          // 46: api.v0alpha.UpdateRulesResponse
	(*RegexEvaluator)(nil),               // 47: api.v0alpha.RegexEvaluator
	(*CreateRegexEvaluatorRequest)(nil),  // 48: api.v0alpha.CreateRegexEvaluatorRequest
	(*CreateRegexEvaluatorResponse)(nil), // 49: api.v0alpha.CreateRegexEvaluatorResponse
	(*UpdateRegexEvaluatorRequest)(nil),  // 50: api.v0alpha.UpdateRegexEvaluatorRequest
	(*UpdateRegexEvaluatorResponse)(nil), // 51: api.v0alpha.UpdateRegexEvaluatorResponse
	(*ListRegexEvaluatorsRequest)(nil),   // 52: api.v0alpha.ListRegexEvaluatorsRequest
	(*ListRegexEvaluatorsResponse)(nil),  // 53: api.v0alpha.ListRegexEvaluatorsResponse
	(*CreateRuleRequest)(nil),            // 54: api.v0alpha.CreateRuleRequest
	(*CreateRuleResponse)(nil),           // 55: api.v0alpha.CreateRuleResponse
	(*ListRulesRequest)(nil),             // 56: api.v0alpha.ListRulesRequest
	(*RuleDetails)(nil),                  // 57: api.v0alpha.RuleDetails
	(*ListRulesResponse)(nil),            // 58: api.v0alpha.ListRulesResponse
	(*DeleteRuleRequest)(nil),            // 59: api.v0alpha.DeleteRuleRequest
	(*DeleteRuleResponse)(nil),           // 60: api.v0alpha.DeleteRuleResponse
	(*GetScriptRequest)(nil),             // 61: api.v0alpha.GetScriptRequest
	(*GetScriptResponse)(nil),            // 62: api.v0alpha.GetScriptResponse
	(*timestamppb.Timestamp)(nil),        // 63: google.protobuf.Timestamp
	(commons.CallType_Enum)(0),           // 64: api.commons.CallType.Enum
}
var file_api_v0alpha_acs_proto_depIdxs = []int32{
	16, // 0: api.v0alpha.CreateScriptRequest.script:type_name -> api.v0alpha.Script
	16, // 1: api.v0alpha.UpdateScriptRequest.script:type_name -> api.v0alpha.Script
	16, // 2: api.v0alpha.GetScriptByIdResponse.script:type_name -> api.v0alpha.Script
	17, // 3: api.v0alpha.Script.pages:type_name -> api.v0alpha.ScriptPage
	1,  // 4: api.v0alpha.ScriptPage.record_on_arrival:type_name -> api.v0alpha.RecordingOnNavEnum
	1,  // 5: api.v0alpha.ScriptPage.record_on_exit:type_name -> api.v0alpha.RecordingOnNavEnum
	18, // 6: api.v0alpha.ScriptPage.elements:type_name -> api.v0alpha.ScriptElement
	25, // 7: api.v0alpha.ScriptElement.conditional:type_name -> api.v0alpha.ConditionOption
	19, // 8: api.v0alpha.ScriptElement.element:type_name -> api.v0alpha.ElementType
	20, // 9: api.v0alpha.ElementType.raw_text:type_name -> api.v0alpha.RawText
	21, // 10: api.v0alpha.ElementType.text_area:type_name -> api.v0alpha.StringDefaultValue
	21, // 11: api.v0alpha.ElementType.text_box:type_name -> api.v0alpha.StringDefaultValue
	21, // 12: api.v0alpha.ElementType.text_box_alpha:type_name -> api.v0alpha.StringDefaultValue
	21, // 13: api.v0alpha.ElementType.text_box_num:type_name -> api.v0alpha.StringDefaultValue
	21, // 14: api.v0alpha.ElementType.text_verification:type_name -> api.v0alpha.StringDefaultValue
	22, // 15: api.v0alpha.ElementType.regex:type_name -> api.v0alpha.RegexDefaultValue
	22, // 16: api.v0alpha.ElementType.regex_text_area:type_name -> api.v0alpha.RegexDefaultValue
	23, // 17: api.v0alpha.ElementType.drop_down:type_name -> api.v0alpha.SelectDefaultValue
	21, // 18: api.v0alpha.ElementType.calendar:type_name -> api.v0alpha.StringDefaultValue
	21, // 19: api.v0alpha.ElementType.phone:type_name -> api.v0alpha.StringDefaultValue
	23, // 20: api.v0alpha.ElementType.radio:type_name -> api.v0alpha.SelectDefaultValue
	24, // 21: api.v0alpha.ElementType.multi_select:type_name -> api.v0alpha.MultiSelectDefaultValue
	24, // 22: api.v0alpha.ElementType.checkbox:type_name -> api.v0alpha.MultiSelectDefaultValue
	2,  // 23: api.v0alpha.ConditionOption.comparison:type_name -> api.v0alpha.ComparisonType
	63, // 24: api.v0alpha.AgentAction.timestamp:type_name -> google.protobuf.Timestamp
	27, // 25: api.v0alpha.AgentAction.event:type_name -> api.v0alpha.AgentEventType
	28, // 26: api.v0alpha.AgentEventType.connected:type_name -> api.v0alpha.CallConnected
	29, // 27: api.v0alpha.AgentEventType.disconnected:type_name -> api.v0alpha.CallDisconnected
	33, // 28: api.v0alpha.AgentEventType.page_change:type_name -> api.v0alpha.PageChange
	34, // 29: api.v0alpha.AgentEventType.element_focus:type_name -> api.v0alpha.ElementFocus
	41, // 30: api.v0alpha.AgentEventType.element_updated:type_name -> api.v0alpha.ElementResponse
	35, // 31: api.v0alpha.AgentEventType.key_press:type_name -> api.v0alpha.KeyPress
	36, // 32: api.v0alpha.AgentEventType.click_link:type_name -> api.v0alpha.ClickLink
	32, // 33: api.v0alpha.AgentEventType.click_button:type_name -> api.v0alpha.ClickButton
	30, // 34: api.v0alpha.AgentEventType.app_unfocused:type_name -> api.v0alpha.AppUnfocused
	31, // 35: api.v0alpha.AgentEventType.app_refocused:type_name -> api.v0alpha.AppRefocused
	6,  // 36: api.v0alpha.ClickButton.button:type_name -> api.v0alpha.ClickButton.Buttons
	7,  // 37: api.v0alpha.KeyPress.key_press:type_name -> api.v0alpha.KeyPress.WhichKey
	38, // 38: api.v0alpha.SaveResponsesRequest.responses:type_name -> api.v0alpha.Responses
	41, // 39: api.v0alpha.Responses.responses:type_name -> api.v0alpha.ElementResponse
	63, // 40: api.v0alpha.ElementResponse.last_edited:type_name -> google.protobuf.Timestamp
	40, // 41: api.v0alpha.ElementResponse.regex:type_name -> api.v0alpha.RegexStringResponse
	40, // 42: api.v0alpha.ElementResponse.regex_text_area:type_name -> api.v0alpha.RegexStringResponse
	39, // 43: api.v0alpha.ElementResponse.multi_select:type_name -> api.v0alpha.StringArrayResponse
	39, // 44: api.v0alpha.ElementResponse.checkbox:type_name -> api.v0alpha.StringArrayResponse
	38, // 45: api.v0alpha.GetResponsesResponse.responses:type_name -> api.v0alpha.Responses
	57, // 46: api.v0alpha.UpdateRulesRequest.rules:type_name -> api.v0alpha.RuleDetails
	47, // 47: api.v0alpha.ListRegexEvaluatorsResponse.regexes:type_name -> api.v0alpha.RegexEvaluator
	4,  // 48: api.v0alpha.CreateRuleRequest.field:type_name -> api.v0alpha.MapperRuleFieldEnum
	5,  // 49: api.v0alpha.CreateRuleRequest.condition:type_name -> api.v0alpha.MapperRuleConditionEnum
	4,  // 50: api.v0alpha.RuleDetails.field:type_name -> api.v0alpha.MapperRuleFieldEnum
	5,  // 51: api.v0alpha.RuleDetails.condition:type_name -> api.v0alpha.MapperRuleConditionEnum
	57, // 52: api.v0alpha.ListRulesResponse.rules:type_name -> api.v0alpha.RuleDetails
	64, // 53: api.v0alpha.GetScriptRequest.call_type:type_name -> api.commons.CallType.Enum
	16, // 54: api.v0alpha.GetScriptResponse.script:type_name -> api.v0alpha.Script
	8,  // 55: api.v0alpha.Acs.CreateScript:input_type -> api.v0alpha.CreateScriptRequest
	10, // 56: api.v0alpha.Acs.UpdateScript:input_type -> api.v0alpha.UpdateScriptRequest
	12, // 57: api.v0alpha.Acs.GetScriptById:input_type -> api.v0alpha.GetScriptByIdRequest
	14, // 58: api.v0alpha.Acs.ListScripts:input_type -> api.v0alpha.ListScriptsRequest
	37, // 59: api.v0alpha.Acs.SaveResponses:input_type -> api.v0alpha.SaveResponsesRequest
	43, // 60: api.v0alpha.Acs.GetResponses:input_type -> api.v0alpha.GetResponsesRequest
	54, // 61: api.v0alpha.Acs.CreateRule:input_type -> api.v0alpha.CreateRuleRequest
	45, // 62: api.v0alpha.Acs.UpdateRules:input_type -> api.v0alpha.UpdateRulesRequest
	56, // 63: api.v0alpha.Acs.ListRules:input_type -> api.v0alpha.ListRulesRequest
	48, // 64: api.v0alpha.Acs.CreateRegexEvaluator:input_type -> api.v0alpha.CreateRegexEvaluatorRequest
	50, // 65: api.v0alpha.Acs.UpdateRegexEvaluator:input_type -> api.v0alpha.UpdateRegexEvaluatorRequest
	52, // 66: api.v0alpha.Acs.ListRegexEvaluators:input_type -> api.v0alpha.ListRegexEvaluatorsRequest
	59, // 67: api.v0alpha.Acs.DeleteRule:input_type -> api.v0alpha.DeleteRuleRequest
	61, // 68: api.v0alpha.Acs.GetScript:input_type -> api.v0alpha.GetScriptRequest
	9,  // 69: api.v0alpha.Acs.CreateScript:output_type -> api.v0alpha.CreateScriptResponse
	11, // 70: api.v0alpha.Acs.UpdateScript:output_type -> api.v0alpha.UpdateScriptResponse
	13, // 71: api.v0alpha.Acs.GetScriptById:output_type -> api.v0alpha.GetScriptByIdResponse
	15, // 72: api.v0alpha.Acs.ListScripts:output_type -> api.v0alpha.ScriptDetails
	42, // 73: api.v0alpha.Acs.SaveResponses:output_type -> api.v0alpha.SaveResponsesResponse
	44, // 74: api.v0alpha.Acs.GetResponses:output_type -> api.v0alpha.GetResponsesResponse
	55, // 75: api.v0alpha.Acs.CreateRule:output_type -> api.v0alpha.CreateRuleResponse
	46, // 76: api.v0alpha.Acs.UpdateRules:output_type -> api.v0alpha.UpdateRulesResponse
	58, // 77: api.v0alpha.Acs.ListRules:output_type -> api.v0alpha.ListRulesResponse
	49, // 78: api.v0alpha.Acs.CreateRegexEvaluator:output_type -> api.v0alpha.CreateRegexEvaluatorResponse
	51, // 79: api.v0alpha.Acs.UpdateRegexEvaluator:output_type -> api.v0alpha.UpdateRegexEvaluatorResponse
	53, // 80: api.v0alpha.Acs.ListRegexEvaluators:output_type -> api.v0alpha.ListRegexEvaluatorsResponse
	60, // 81: api.v0alpha.Acs.DeleteRule:output_type -> api.v0alpha.DeleteRuleResponse
	62, // 82: api.v0alpha.Acs.GetScript:output_type -> api.v0alpha.GetScriptResponse
	69, // [69:83] is the sub-list for method output_type
	55, // [55:69] is the sub-list for method input_type
	55, // [55:55] is the sub-list for extension type_name
	55, // [55:55] is the sub-list for extension extendee
	0,  // [0:55] is the sub-list for field type_name
}

func init() { file_api_v0alpha_acs_proto_init() }
func file_api_v0alpha_acs_proto_init() {
	if File_api_v0alpha_acs_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_v0alpha_acs_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateScriptRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_acs_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateScriptResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_acs_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateScriptRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_acs_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateScriptResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_acs_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetScriptByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_acs_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetScriptByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_acs_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListScriptsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_acs_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScriptDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_acs_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Script); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_acs_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScriptPage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_acs_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScriptElement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_acs_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ElementType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_acs_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RawText); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_acs_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringDefaultValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_acs_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegexDefaultValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_acs_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectDefaultValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_acs_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiSelectDefaultValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_acs_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConditionOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_acs_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_acs_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentEventType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_acs_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallConnected); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_acs_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallDisconnected); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_acs_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppUnfocused); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_acs_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppRefocused); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_acs_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClickButton); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_acs_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_acs_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ElementFocus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_acs_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyPress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_acs_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClickLink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_acs_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveResponsesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_acs_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Responses); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_acs_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringArrayResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_acs_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegexStringResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_acs_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ElementResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_acs_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveResponsesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_acs_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResponsesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_acs_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResponsesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_acs_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRulesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_acs_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRulesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_acs_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegexEvaluator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_acs_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRegexEvaluatorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_acs_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRegexEvaluatorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_acs_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRegexEvaluatorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_acs_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRegexEvaluatorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_acs_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRegexEvaluatorsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_acs_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRegexEvaluatorsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_acs_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_acs_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRuleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_acs_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRulesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_acs_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuleDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_acs_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRulesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_acs_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_acs_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRuleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_acs_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetScriptRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_acs_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetScriptResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_v0alpha_acs_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*ElementType_RawText)(nil),
		(*ElementType_TextArea)(nil),
		(*ElementType_TextBox)(nil),
		(*ElementType_TextBoxAlpha)(nil),
		(*ElementType_TextBoxNum)(nil),
		(*ElementType_TextVerification)(nil),
		(*ElementType_Regex)(nil),
		(*ElementType_RegexTextArea)(nil),
		(*ElementType_DropDown)(nil),
		(*ElementType_Calendar)(nil),
		(*ElementType_Phone)(nil),
		(*ElementType_Radio)(nil),
		(*ElementType_MultiSelect)(nil),
		(*ElementType_Checkbox)(nil),
	}
	file_api_v0alpha_acs_proto_msgTypes[19].OneofWrappers = []interface{}{
		(*AgentEventType_Connected)(nil),
		(*AgentEventType_Disconnected)(nil),
		(*AgentEventType_PageChange)(nil),
		(*AgentEventType_ElementFocus)(nil),
		(*AgentEventType_ElementUpdated)(nil),
		(*AgentEventType_KeyPress)(nil),
		(*AgentEventType_ClickLink)(nil),
		(*AgentEventType_ClickButton)(nil),
		(*AgentEventType_AppUnfocused)(nil),
		(*AgentEventType_AppRefocused)(nil),
	}
	file_api_v0alpha_acs_proto_msgTypes[33].OneofWrappers = []interface{}{
		(*ElementResponse_TextArea)(nil),
		(*ElementResponse_TextBox)(nil),
		(*ElementResponse_TextBoxAlpha)(nil),
		(*ElementResponse_TextBoxNum)(nil),
		(*ElementResponse_TextVerification)(nil),
		(*ElementResponse_Regex)(nil),
		(*ElementResponse_RegexTextArea)(nil),
		(*ElementResponse_DropDown)(nil),
		(*ElementResponse_Calendar)(nil),
		(*ElementResponse_Phone)(nil),
		(*ElementResponse_Radio)(nil),
		(*ElementResponse_MultiSelect)(nil),
		(*ElementResponse_Checkbox)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v0alpha_acs_proto_rawDesc,
			NumEnums:      8,
			NumMessages:   55,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v0alpha_acs_proto_goTypes,
		DependencyIndexes: file_api_v0alpha_acs_proto_depIdxs,
		EnumInfos:         file_api_v0alpha_acs_proto_enumTypes,
		MessageInfos:      file_api_v0alpha_acs_proto_msgTypes,
	}.Build()
	File_api_v0alpha_acs_proto = out.File
	file_api_v0alpha_acs_proto_rawDesc = nil
	file_api_v0alpha_acs_proto_goTypes = nil
	file_api_v0alpha_acs_proto_depIdxs = nil
}
