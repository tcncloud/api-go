// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: api/v0alpha/omniapi.proto

package v0alpha

import (
	commons "github.com/tcncloud/api-go/api/commons"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SuggestResponseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationId string `protobuf:"bytes,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
}

func (x *SuggestResponseReq) Reset() {
	*x = SuggestResponseReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestResponseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestResponseReq) ProtoMessage() {}

func (x *SuggestResponseReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestResponseReq.ProtoReflect.Descriptor instead.
func (*SuggestResponseReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{0}
}

func (x *SuggestResponseReq) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

type SuggestResponseRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SuggestedResponse string `protobuf:"bytes,1,opt,name=suggested_response,json=suggestedResponse,proto3" json:"suggested_response,omitempty"`
}

func (x *SuggestResponseRes) Reset() {
	*x = SuggestResponseRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestResponseRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestResponseRes) ProtoMessage() {}

func (x *SuggestResponseRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestResponseRes.ProtoReflect.Descriptor instead.
func (*SuggestResponseRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{1}
}

func (x *SuggestResponseRes) GetSuggestedResponse() string {
	if x != nil {
		return x.SuggestedResponse
	}
	return ""
}

// CreateCampaignReq - request to create an omni campaign
type CreateCampaignReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the campaign to create
	Campaign *commons.OmniCampaign `protobuf:"bytes,1,opt,name=campaign,proto3" json:"campaign,omitempty"`
	// the modules to create on the campaign
	Modules []*CreateCampaignReq_CampaignModule `protobuf:"bytes,2,rep,name=modules,proto3" json:"modules,omitempty"`
}

func (x *CreateCampaignReq) Reset() {
	*x = CreateCampaignReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCampaignReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCampaignReq) ProtoMessage() {}

func (x *CreateCampaignReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCampaignReq.ProtoReflect.Descriptor instead.
func (*CreateCampaignReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{2}
}

func (x *CreateCampaignReq) GetCampaign() *commons.OmniCampaign {
	if x != nil {
		return x.Campaign
	}
	return nil
}

func (x *CreateCampaignReq) GetModules() []*CreateCampaignReq_CampaignModule {
	if x != nil {
		return x.Modules
	}
	return nil
}

// ContactListsDataSource - data source for getting contacts from one or more contact lists
type ContactListsDataSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the contact lists to retrieve contacts from TODO: rename contact_lists
	ContactListsDataSource []*ContactListDataSource `protobuf:"bytes,1,rep,name=contact_lists_data_source,json=contactListsDataSource,proto3" json:"contact_lists_data_source,omitempty"`
}

func (x *ContactListsDataSource) Reset() {
	*x = ContactListsDataSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContactListsDataSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContactListsDataSource) ProtoMessage() {}

func (x *ContactListsDataSource) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContactListsDataSource.ProtoReflect.Descriptor instead.
func (*ContactListsDataSource) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{3}
}

func (x *ContactListsDataSource) GetContactListsDataSource() []*ContactListDataSource {
	if x != nil {
		return x.ContactListsDataSource
	}
	return nil
}

// ContactListDataSource  - contains information to retrieve data from a contact list
type ContactListDataSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the contact list identifier
	ContactListSid int64 `protobuf:"varint,1,opt,name=contact_list_sid,json=contactListSid,proto3" json:"contact_list_sid,omitempty"`
}

func (x *ContactListDataSource) Reset() {
	*x = ContactListDataSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContactListDataSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContactListDataSource) ProtoMessage() {}

func (x *ContactListDataSource) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContactListDataSource.ProtoReflect.Descriptor instead.
func (*ContactListDataSource) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{4}
}

func (x *ContactListDataSource) GetContactListSid() int64 {
	if x != nil {
		return x.ContactListSid
	}
	return 0
}

// ListCampaignsReq - request to list all campaigns using a given filter
type ListCampaignsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the statuses to select by when listing campaigns (if empty, selects all)
	Statuses []commons.OmniCampaignStatus `protobuf:"varint,1,rep,packed,name=statuses,proto3,enum=api.commons.OmniCampaignStatus" json:"statuses,omitempty"`
	// field mask for selecting extra campaign module details (if empty, does not select any details)
	FieldMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"`
	// the filter to select by
	//
	// Types that are assignable to Filter:
	//
	//	*ListCampaignsReq_ByIds_
	//	*ListCampaignsReq_ByProject_
	//	*ListCampaignsReq_ByTime_
	//	*ListCampaignsReq_ByUnsubscribeLink_
	//	*ListCampaignsReq_ByConnectedInbox_
	//	*ListCampaignsReq_ByVerifiedEmail_
	//	*ListCampaignsReq_BySmsNumber_
	Filter isListCampaignsReq_Filter `protobuf_oneof:"filter"`
}

func (x *ListCampaignsReq) Reset() {
	*x = ListCampaignsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCampaignsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCampaignsReq) ProtoMessage() {}

func (x *ListCampaignsReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCampaignsReq.ProtoReflect.Descriptor instead.
func (*ListCampaignsReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{5}
}

func (x *ListCampaignsReq) GetStatuses() []commons.OmniCampaignStatus {
	if x != nil {
		return x.Statuses
	}
	return nil
}

func (x *ListCampaignsReq) GetFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

func (m *ListCampaignsReq) GetFilter() isListCampaignsReq_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (x *ListCampaignsReq) GetByIds() *ListCampaignsReq_ByIds {
	if x, ok := x.GetFilter().(*ListCampaignsReq_ByIds_); ok {
		return x.ByIds
	}
	return nil
}

func (x *ListCampaignsReq) GetByProject() *ListCampaignsReq_ByProject {
	if x, ok := x.GetFilter().(*ListCampaignsReq_ByProject_); ok {
		return x.ByProject
	}
	return nil
}

func (x *ListCampaignsReq) GetByTime() *ListCampaignsReq_ByTime {
	if x, ok := x.GetFilter().(*ListCampaignsReq_ByTime_); ok {
		return x.ByTime
	}
	return nil
}

func (x *ListCampaignsReq) GetByUnsubscribeLink() *ListCampaignsReq_ByUnsubscribeLink {
	if x, ok := x.GetFilter().(*ListCampaignsReq_ByUnsubscribeLink_); ok {
		return x.ByUnsubscribeLink
	}
	return nil
}

func (x *ListCampaignsReq) GetByConnectedInbox() *ListCampaignsReq_ByConnectedInbox {
	if x, ok := x.GetFilter().(*ListCampaignsReq_ByConnectedInbox_); ok {
		return x.ByConnectedInbox
	}
	return nil
}

func (x *ListCampaignsReq) GetByVerifiedEmail() *ListCampaignsReq_ByVerifiedEmail {
	if x, ok := x.GetFilter().(*ListCampaignsReq_ByVerifiedEmail_); ok {
		return x.ByVerifiedEmail
	}
	return nil
}

func (x *ListCampaignsReq) GetBySmsNumber() *ListCampaignsReq_BySmsNumber {
	if x, ok := x.GetFilter().(*ListCampaignsReq_BySmsNumber_); ok {
		return x.BySmsNumber
	}
	return nil
}

type isListCampaignsReq_Filter interface {
	isListCampaignsReq_Filter()
}

type ListCampaignsReq_ByIds_ struct {
	ByIds *ListCampaignsReq_ByIds `protobuf:"bytes,100,opt,name=by_ids,json=byIds,proto3,oneof"`
}

type ListCampaignsReq_ByProject_ struct {
	ByProject *ListCampaignsReq_ByProject `protobuf:"bytes,101,opt,name=by_project,json=byProject,proto3,oneof"`
}

type ListCampaignsReq_ByTime_ struct {
	ByTime *ListCampaignsReq_ByTime `protobuf:"bytes,102,opt,name=by_time,json=byTime,proto3,oneof"`
}

type ListCampaignsReq_ByUnsubscribeLink_ struct {
	ByUnsubscribeLink *ListCampaignsReq_ByUnsubscribeLink `protobuf:"bytes,103,opt,name=by_unsubscribe_link,json=byUnsubscribeLink,proto3,oneof"`
}

type ListCampaignsReq_ByConnectedInbox_ struct {
	ByConnectedInbox *ListCampaignsReq_ByConnectedInbox `protobuf:"bytes,104,opt,name=by_connected_inbox,json=byConnectedInbox,proto3,oneof"`
}

type ListCampaignsReq_ByVerifiedEmail_ struct {
	ByVerifiedEmail *ListCampaignsReq_ByVerifiedEmail `protobuf:"bytes,105,opt,name=by_verified_email,json=byVerifiedEmail,proto3,oneof"`
}

type ListCampaignsReq_BySmsNumber_ struct {
	BySmsNumber *ListCampaignsReq_BySmsNumber `protobuf:"bytes,106,opt,name=by_sms_number,json=bySmsNumber,proto3,oneof"`
}

func (*ListCampaignsReq_ByIds_) isListCampaignsReq_Filter() {}

func (*ListCampaignsReq_ByProject_) isListCampaignsReq_Filter() {}

func (*ListCampaignsReq_ByTime_) isListCampaignsReq_Filter() {}

func (*ListCampaignsReq_ByUnsubscribeLink_) isListCampaignsReq_Filter() {}

func (*ListCampaignsReq_ByConnectedInbox_) isListCampaignsReq_Filter() {}

func (*ListCampaignsReq_ByVerifiedEmail_) isListCampaignsReq_Filter() {}

func (*ListCampaignsReq_BySmsNumber_) isListCampaignsReq_Filter() {}

// ListCampaignsRes - result of listing filtered campaigns
type ListCampaignsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the listed campaigns
	Campaigns []*commons.OmniCampaign `protobuf:"bytes,1,rep,name=campaigns,proto3" json:"campaigns,omitempty"`
	// associated modules
	Modules []*commons.OmniCampaignModule `protobuf:"bytes,2,rep,name=modules,proto3" json:"modules,omitempty"`
}

func (x *ListCampaignsRes) Reset() {
	*x = ListCampaignsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCampaignsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCampaignsRes) ProtoMessage() {}

func (x *ListCampaignsRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCampaignsRes.ProtoReflect.Descriptor instead.
func (*ListCampaignsRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{6}
}

func (x *ListCampaignsRes) GetCampaigns() []*commons.OmniCampaign {
	if x != nil {
		return x.Campaigns
	}
	return nil
}

func (x *ListCampaignsRes) GetModules() []*commons.OmniCampaignModule {
	if x != nil {
		return x.Modules
	}
	return nil
}

// Request to get a campaign by it's id
type GetCampaignByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the campaign id
	CampaignSid int64 `protobuf:"varint,1,opt,name=campaign_sid,json=campaignSid,proto3" json:"campaign_sid,omitempty"`
}

func (x *GetCampaignByIdReq) Reset() {
	*x = GetCampaignByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCampaignByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCampaignByIdReq) ProtoMessage() {}

func (x *GetCampaignByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCampaignByIdReq.ProtoReflect.Descriptor instead.
func (*GetCampaignByIdReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{7}
}

func (x *GetCampaignByIdReq) GetCampaignSid() int64 {
	if x != nil {
		return x.CampaignSid
	}
	return 0
}

// Request to retrieve an off-loaded text message payload
type GetOffLoadedTextMessageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The off-loaded location of the text message payload;
	// this is generated by the omni service when creating
	// an OmniOffLoadedTextMessage payload for an OmniMessage.
	Location string `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *GetOffLoadedTextMessageReq) Reset() {
	*x = GetOffLoadedTextMessageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOffLoadedTextMessageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOffLoadedTextMessageReq) ProtoMessage() {}

func (x *GetOffLoadedTextMessageReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOffLoadedTextMessageReq.ProtoReflect.Descriptor instead.
func (*GetOffLoadedTextMessageReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{8}
}

func (x *GetOffLoadedTextMessageReq) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

// Result of retrieving an off-loaded text message payload
type GetOffLoadedTextMessageRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the text message, containing Urls.
	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *GetOffLoadedTextMessageRes) Reset() {
	*x = GetOffLoadedTextMessageRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOffLoadedTextMessageRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOffLoadedTextMessageRes) ProtoMessage() {}

func (x *GetOffLoadedTextMessageRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOffLoadedTextMessageRes.ProtoReflect.Descriptor instead.
func (*GetOffLoadedTextMessageRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{9}
}

func (x *GetOffLoadedTextMessageRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ManagerListMessagesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// TimeStamp
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// User_id
	UserId string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// live flag
	Live bool `protobuf:"varint,4,opt,name=live,proto3" json:"live,omitempty"`
	// channel type
	ChannelType commons.ChannelType `protobuf:"varint,5,opt,name=channel_type,json=channelType,proto3,enum=api.commons.ChannelType" json:"channel_type,omitempty"`
	// Types that are assignable to Filter:
	//
	//	*ManagerListMessagesReq_ByConversationSid_
	//	*ManagerListMessagesReq_ByTaskSid_
	Filter isManagerListMessagesReq_Filter `protobuf_oneof:"filter"`
}

func (x *ManagerListMessagesReq) Reset() {
	*x = ManagerListMessagesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManagerListMessagesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManagerListMessagesReq) ProtoMessage() {}

func (x *ManagerListMessagesReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManagerListMessagesReq.ProtoReflect.Descriptor instead.
func (*ManagerListMessagesReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{10}
}

func (x *ManagerListMessagesReq) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *ManagerListMessagesReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ManagerListMessagesReq) GetLive() bool {
	if x != nil {
		return x.Live
	}
	return false
}

func (x *ManagerListMessagesReq) GetChannelType() commons.ChannelType {
	if x != nil {
		return x.ChannelType
	}
	return commons.ChannelType(0)
}

func (m *ManagerListMessagesReq) GetFilter() isManagerListMessagesReq_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (x *ManagerListMessagesReq) GetByConversationSid() *ManagerListMessagesReq_ByConversationSid {
	if x, ok := x.GetFilter().(*ManagerListMessagesReq_ByConversationSid_); ok {
		return x.ByConversationSid
	}
	return nil
}

func (x *ManagerListMessagesReq) GetByTaskSid() *ManagerListMessagesReq_ByTaskSid {
	if x, ok := x.GetFilter().(*ManagerListMessagesReq_ByTaskSid_); ok {
		return x.ByTaskSid
	}
	return nil
}

type isManagerListMessagesReq_Filter interface {
	isManagerListMessagesReq_Filter()
}

type ManagerListMessagesReq_ByConversationSid_ struct {
	// select messages by the given conversation sid
	ByConversationSid *ManagerListMessagesReq_ByConversationSid `protobuf:"bytes,101,opt,name=by_conversation_sid,json=byConversationSid,proto3,oneof"`
}

type ManagerListMessagesReq_ByTaskSid_ struct {
	// select message by the given task sid
	ByTaskSid *ManagerListMessagesReq_ByTaskSid `protobuf:"bytes,102,opt,name=by_task_sid,json=byTaskSid,proto3,oneof"`
}

func (*ManagerListMessagesReq_ByConversationSid_) isManagerListMessagesReq_Filter() {}

func (*ManagerListMessagesReq_ByTaskSid_) isManagerListMessagesReq_Filter() {}

type ListMessagesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// timestamp
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// live flag
	Live bool `protobuf:"varint,5,opt,name=live,proto3" json:"live,omitempty"`
	// channel type
	ChannelType commons.ChannelType `protobuf:"varint,6,opt,name=channel_type,json=channelType,proto3,enum=api.commons.ChannelType" json:"channel_type,omitempty"`
	// Types that are assignable to Filter:
	//
	//	*ListMessagesReq_ByConversationSid_
	Filter isListMessagesReq_Filter `protobuf_oneof:"filter"`
}

func (x *ListMessagesReq) Reset() {
	*x = ListMessagesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMessagesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMessagesReq) ProtoMessage() {}

func (x *ListMessagesReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMessagesReq.ProtoReflect.Descriptor instead.
func (*ListMessagesReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{11}
}

func (x *ListMessagesReq) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *ListMessagesReq) GetLive() bool {
	if x != nil {
		return x.Live
	}
	return false
}

func (x *ListMessagesReq) GetChannelType() commons.ChannelType {
	if x != nil {
		return x.ChannelType
	}
	return commons.ChannelType(0)
}

func (m *ListMessagesReq) GetFilter() isListMessagesReq_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (x *ListMessagesReq) GetByConversationSid() *ListMessagesReq_ByConversationSid {
	if x, ok := x.GetFilter().(*ListMessagesReq_ByConversationSid_); ok {
		return x.ByConversationSid
	}
	return nil
}

type isListMessagesReq_Filter interface {
	isListMessagesReq_Filter()
}

type ListMessagesReq_ByConversationSid_ struct {
	// select messages by the given conversation sid
	ByConversationSid *ListMessagesReq_ByConversationSid `protobuf:"bytes,101,opt,name=by_conversation_sid,json=byConversationSid,proto3,oneof"`
}

func (*ListMessagesReq_ByConversationSid_) isListMessagesReq_Filter() {}

type ChatMessageUserInformation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ChatMessageUserInformation) Reset() {
	*x = ChatMessageUserInformation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatMessageUserInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessageUserInformation) ProtoMessage() {}

func (x *ChatMessageUserInformation) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessageUserInformation.ProtoReflect.Descriptor instead.
func (*ChatMessageUserInformation) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{12}
}

func (x *ChatMessageUserInformation) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ChatMessageUserInformation) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type SendOmniMessageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the id of the conversation this message belongs to
	ConversationSid int64 `protobuf:"varint,1,opt,name=conversation_sid,json=conversationSid,proto3" json:"conversation_sid,omitempty"`
	// the message
	Payload *commons.OmniMessagePayload `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	// the id of the chat campaign
	CampaignSid int64 `protobuf:"varint,4,opt,name=campaign_sid,json=campaignSid,proto3" json:"campaign_sid,omitempty"`
	// a unique id created by the client to ensure it doesn't send the same message twice
	UiReferenceId string `protobuf:"bytes,5,opt,name=ui_reference_id,json=uiReferenceId,proto3" json:"ui_reference_id,omitempty"`
	// channel type
	ChannelType commons.ChannelType `protobuf:"varint,6,opt,name=channel_type,json=channelType,proto3,enum=api.commons.ChannelType" json:"channel_type,omitempty"`
}

func (x *SendOmniMessageReq) Reset() {
	*x = SendOmniMessageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendOmniMessageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendOmniMessageReq) ProtoMessage() {}

func (x *SendOmniMessageReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendOmniMessageReq.ProtoReflect.Descriptor instead.
func (*SendOmniMessageReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{13}
}

func (x *SendOmniMessageReq) GetConversationSid() int64 {
	if x != nil {
		return x.ConversationSid
	}
	return 0
}

func (x *SendOmniMessageReq) GetPayload() *commons.OmniMessagePayload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *SendOmniMessageReq) GetCampaignSid() int64 {
	if x != nil {
		return x.CampaignSid
	}
	return 0
}

func (x *SendOmniMessageReq) GetUiReferenceId() string {
	if x != nil {
		return x.UiReferenceId
	}
	return ""
}

func (x *SendOmniMessageReq) GetChannelType() commons.ChannelType {
	if x != nil {
		return x.ChannelType
	}
	return commons.ChannelType(0)
}

// Request to update a campaign
type UpdateCampaignReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the campaign to update
	Campaign *commons.OmniCampaign `protobuf:"bytes,1,opt,name=campaign,proto3" json:"campaign,omitempty"`
	// the identifier of the user who initiated the request
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// list of all fields being updated
	FieldMask *fieldmaskpb.FieldMask `protobuf:"bytes,100,opt,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"`
}

func (x *UpdateCampaignReq) Reset() {
	*x = UpdateCampaignReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCampaignReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCampaignReq) ProtoMessage() {}

func (x *UpdateCampaignReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCampaignReq.ProtoReflect.Descriptor instead.
func (*UpdateCampaignReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateCampaignReq) GetCampaign() *commons.OmniCampaign {
	if x != nil {
		return x.Campaign
	}
	return nil
}

func (x *UpdateCampaignReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateCampaignReq) GetFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

// UpdateCampaignRes - result of updating a campaign
type UpdateCampaignRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the identifier for the ghost notification
	NotifierId string `protobuf:"bytes,1,opt,name=notifier_id,json=notifierId,proto3" json:"notifier_id,omitempty"`
}

func (x *UpdateCampaignRes) Reset() {
	*x = UpdateCampaignRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCampaignRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCampaignRes) ProtoMessage() {}

func (x *UpdateCampaignRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCampaignRes.ProtoReflect.Descriptor instead.
func (*UpdateCampaignRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateCampaignRes) GetNotifierId() string {
	if x != nil {
		return x.NotifierId
	}
	return ""
}

// ListConversationsReq - request to get conversations
type ListConversationsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the channel types to list conversations for
	ChannelTypes []commons.ChannelType `protobuf:"varint,1,rep,packed,name=channel_types,json=channelTypes,proto3,enum=api.commons.ChannelType" json:"channel_types,omitempty"`
	// field mask to filter what is returned by each row
	FieldMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"`
	// list of conversation status that we want returned, if empty return everything.
	Statuses []commons.ConversationStatus `protobuf:"varint,3,rep,packed,name=statuses,proto3,enum=api.commons.ConversationStatus" json:"statuses,omitempty"`
	// the filter for determining what rows to pull
	//
	// Types that are assignable to Filter:
	//
	//	*ListConversationsReq_ByTime_
	//	*ListConversationsReq_ByAssignedUser_
	Filter isListConversationsReq_Filter `protobuf_oneof:"filter"`
}

func (x *ListConversationsReq) Reset() {
	*x = ListConversationsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListConversationsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConversationsReq) ProtoMessage() {}

func (x *ListConversationsReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConversationsReq.ProtoReflect.Descriptor instead.
func (*ListConversationsReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{16}
}

func (x *ListConversationsReq) GetChannelTypes() []commons.ChannelType {
	if x != nil {
		return x.ChannelTypes
	}
	return nil
}

func (x *ListConversationsReq) GetFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

func (x *ListConversationsReq) GetStatuses() []commons.ConversationStatus {
	if x != nil {
		return x.Statuses
	}
	return nil
}

func (m *ListConversationsReq) GetFilter() isListConversationsReq_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (x *ListConversationsReq) GetByTime() *ListConversationsReq_ByTime {
	if x, ok := x.GetFilter().(*ListConversationsReq_ByTime_); ok {
		return x.ByTime
	}
	return nil
}

func (x *ListConversationsReq) GetByAssignedUser() *ListConversationsReq_ByAssignedUser {
	if x, ok := x.GetFilter().(*ListConversationsReq_ByAssignedUser_); ok {
		return x.ByAssignedUser
	}
	return nil
}

type isListConversationsReq_Filter interface {
	isListConversationsReq_Filter()
}

type ListConversationsReq_ByTime_ struct {
	// list conversations by time
	ByTime *ListConversationsReq_ByTime `protobuf:"bytes,100,opt,name=by_time,json=byTime,proto3,oneof"`
}

type ListConversationsReq_ByAssignedUser_ struct {
	// list conversations by assigned user
	ByAssignedUser *ListConversationsReq_ByAssignedUser `protobuf:"bytes,101,opt,name=by_assigned_user,json=byAssignedUser,proto3,oneof"`
}

func (*ListConversationsReq_ByTime_) isListConversationsReq_Filter() {}

func (*ListConversationsReq_ByAssignedUser_) isListConversationsReq_Filter() {}

// ListConversationsRes - list of conversations satisfying the request parameters
type ListConversationsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// list of conversations for the dashboard
	Conversations []*commons.OmniConversation `protobuf:"bytes,1,rep,name=conversations,proto3" json:"conversations,omitempty"`
	// Token to retrieve the next page of tasks, or empty if there are no more pages
	// Only returned if using the ByTime or ByAssignedUser filters
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListConversationsRes) Reset() {
	*x = ListConversationsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListConversationsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConversationsRes) ProtoMessage() {}

func (x *ListConversationsRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConversationsRes.ProtoReflect.Descriptor instead.
func (*ListConversationsRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{17}
}

func (x *ListConversationsRes) GetConversations() []*commons.OmniConversation {
	if x != nil {
		return x.Conversations
	}
	return nil
}

func (x *ListConversationsRes) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// CreateDispositionReq - request to create a disposition
type CreateDispositionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the string of the disposition to create
	Disposition string `protobuf:"bytes,1,opt,name=disposition,proto3" json:"disposition,omitempty"`
}

func (x *CreateDispositionReq) Reset() {
	*x = CreateDispositionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDispositionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDispositionReq) ProtoMessage() {}

func (x *CreateDispositionReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDispositionReq.ProtoReflect.Descriptor instead.
func (*CreateDispositionReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{18}
}

func (x *CreateDispositionReq) GetDisposition() string {
	if x != nil {
		return x.Disposition
	}
	return ""
}

// CreateDispositionRes - result of creating a disposition
type CreateDispositionRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the unique id of the created disposition
	DispositionSid int64 `protobuf:"varint,1,opt,name=disposition_sid,json=dispositionSid,proto3" json:"disposition_sid,omitempty"`
}

func (x *CreateDispositionRes) Reset() {
	*x = CreateDispositionRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDispositionRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDispositionRes) ProtoMessage() {}

func (x *CreateDispositionRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDispositionRes.ProtoReflect.Descriptor instead.
func (*CreateDispositionRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{19}
}

func (x *CreateDispositionRes) GetDispositionSid() int64 {
	if x != nil {
		return x.DispositionSid
	}
	return 0
}

// DeleteDispositionReq - request to delete a disposition
type DeleteDispositionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the disposition to delete
	Disposition *commons.Disposition `protobuf:"bytes,1,opt,name=disposition,proto3" json:"disposition,omitempty"`
}

func (x *DeleteDispositionReq) Reset() {
	*x = DeleteDispositionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDispositionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDispositionReq) ProtoMessage() {}

func (x *DeleteDispositionReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDispositionReq.ProtoReflect.Descriptor instead.
func (*DeleteDispositionReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{20}
}

func (x *DeleteDispositionReq) GetDisposition() *commons.Disposition {
	if x != nil {
		return x.Disposition
	}
	return nil
}

// ListDispositionsReq - request to list dispositions
type ListDispositionsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListDispositionsReq) Reset() {
	*x = ListDispositionsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDispositionsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDispositionsReq) ProtoMessage() {}

func (x *ListDispositionsReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDispositionsReq.ProtoReflect.Descriptor instead.
func (*ListDispositionsReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{21}
}

// ListDispositionsRes - result to listing dispositions
type ListDispositionsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the listed dispositions
	Dispositions []*commons.Disposition `protobuf:"bytes,1,rep,name=dispositions,proto3" json:"dispositions,omitempty"`
}

func (x *ListDispositionsRes) Reset() {
	*x = ListDispositionsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDispositionsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDispositionsRes) ProtoMessage() {}

func (x *ListDispositionsRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDispositionsRes.ProtoReflect.Descriptor instead.
func (*ListDispositionsRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{22}
}

func (x *ListDispositionsRes) GetDispositions() []*commons.Disposition {
	if x != nil {
		return x.Dispositions
	}
	return nil
}

// UpdateDispositionReq - request to update disposition
type UpdateDispositionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the disposition identifier
	DispositionSid int64 `protobuf:"varint,1,opt,name=disposition_sid,json=dispositionSid,proto3" json:"disposition_sid,omitempty"`
	// the updated disposition string
	Disposition string `protobuf:"bytes,2,opt,name=disposition,proto3" json:"disposition,omitempty"`
}

func (x *UpdateDispositionReq) Reset() {
	*x = UpdateDispositionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDispositionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDispositionReq) ProtoMessage() {}

func (x *UpdateDispositionReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDispositionReq.ProtoReflect.Descriptor instead.
func (*UpdateDispositionReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{23}
}

func (x *UpdateDispositionReq) GetDispositionSid() int64 {
	if x != nil {
		return x.DispositionSid
	}
	return 0
}

func (x *UpdateDispositionReq) GetDisposition() string {
	if x != nil {
		return x.Disposition
	}
	return ""
}

// ListCustomUnsubscribeLinksRes - result to listing custom unsubscribe links
type ListCustomUnsubscribeLinksRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the listed custom unsubscribe links
	CustomUnsubscribeLinks []*commons.OmniCustomUnsubscribeLink `protobuf:"bytes,1,rep,name=custom_unsubscribe_links,json=customUnsubscribeLinks,proto3" json:"custom_unsubscribe_links,omitempty"`
}

func (x *ListCustomUnsubscribeLinksRes) Reset() {
	*x = ListCustomUnsubscribeLinksRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCustomUnsubscribeLinksRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCustomUnsubscribeLinksRes) ProtoMessage() {}

func (x *ListCustomUnsubscribeLinksRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCustomUnsubscribeLinksRes.ProtoReflect.Descriptor instead.
func (*ListCustomUnsubscribeLinksRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{24}
}

func (x *ListCustomUnsubscribeLinksRes) GetCustomUnsubscribeLinks() []*commons.OmniCustomUnsubscribeLink {
	if x != nil {
		return x.CustomUnsubscribeLinks
	}
	return nil
}

// CreateUnsubscribeLinkRes - result to creating unsubscribe link
type CreateCustomUnsubscribeLinkRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// custom unsubscribe link sid
	CustomUnsubscribeLinkSid int64 `protobuf:"varint,1,opt,name=custom_unsubscribe_link_sid,json=customUnsubscribeLinkSid,proto3" json:"custom_unsubscribe_link_sid,omitempty"`
	// validation of link url
	Validated bool `protobuf:"varint,2,opt,name=validated,proto3" json:"validated,omitempty"`
}

func (x *CreateCustomUnsubscribeLinkRes) Reset() {
	*x = CreateCustomUnsubscribeLinkRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCustomUnsubscribeLinkRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCustomUnsubscribeLinkRes) ProtoMessage() {}

func (x *CreateCustomUnsubscribeLinkRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCustomUnsubscribeLinkRes.ProtoReflect.Descriptor instead.
func (*CreateCustomUnsubscribeLinkRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{25}
}

func (x *CreateCustomUnsubscribeLinkRes) GetCustomUnsubscribeLinkSid() int64 {
	if x != nil {
		return x.CustomUnsubscribeLinkSid
	}
	return 0
}

func (x *CreateCustomUnsubscribeLinkRes) GetValidated() bool {
	if x != nil {
		return x.Validated
	}
	return false
}

// Request to update unsubscribe link details
type UpdateCustomUnsubscribeLinkReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// custom unsubscribe link sid
	CustomUnsubscribeLinkSid int64 `protobuf:"varint,1,opt,name=custom_unsubscribe_link_sid,json=customUnsubscribeLinkSid,proto3" json:"custom_unsubscribe_link_sid,omitempty"`
	// link name
	LinkName string `protobuf:"bytes,2,opt,name=link_name,json=linkName,proto3" json:"link_name,omitempty"`
	// link url
	LinkUrl string `protobuf:"bytes,3,opt,name=link_url,json=linkUrl,proto3" json:"link_url,omitempty"`
	// link description
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *UpdateCustomUnsubscribeLinkReq) Reset() {
	*x = UpdateCustomUnsubscribeLinkReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCustomUnsubscribeLinkReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCustomUnsubscribeLinkReq) ProtoMessage() {}

func (x *UpdateCustomUnsubscribeLinkReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCustomUnsubscribeLinkReq.ProtoReflect.Descriptor instead.
func (*UpdateCustomUnsubscribeLinkReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{26}
}

func (x *UpdateCustomUnsubscribeLinkReq) GetCustomUnsubscribeLinkSid() int64 {
	if x != nil {
		return x.CustomUnsubscribeLinkSid
	}
	return 0
}

func (x *UpdateCustomUnsubscribeLinkReq) GetLinkName() string {
	if x != nil {
		return x.LinkName
	}
	return ""
}

func (x *UpdateCustomUnsubscribeLinkReq) GetLinkUrl() string {
	if x != nil {
		return x.LinkUrl
	}
	return ""
}

func (x *UpdateCustomUnsubscribeLinkReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// Response to update unsubscribe link details
type UpdateCustomUnsubscribeLinkRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// validation of link url
	Validated bool `protobuf:"varint,1,opt,name=validated,proto3" json:"validated,omitempty"`
	// when the url was last validated
	DateValidated *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=date_validated,json=dateValidated,proto3" json:"date_validated,omitempty"`
}

func (x *UpdateCustomUnsubscribeLinkRes) Reset() {
	*x = UpdateCustomUnsubscribeLinkRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCustomUnsubscribeLinkRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCustomUnsubscribeLinkRes) ProtoMessage() {}

func (x *UpdateCustomUnsubscribeLinkRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCustomUnsubscribeLinkRes.ProtoReflect.Descriptor instead.
func (*UpdateCustomUnsubscribeLinkRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{27}
}

func (x *UpdateCustomUnsubscribeLinkRes) GetValidated() bool {
	if x != nil {
		return x.Validated
	}
	return false
}

func (x *UpdateCustomUnsubscribeLinkRes) GetDateValidated() *timestamppb.Timestamp {
	if x != nil {
		return x.DateValidated
	}
	return nil
}

// Request to delete unsubscribe link details
type DeleteCustomUnsubscribeLinkReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// custom unsubscribe link sid
	CustomUnsubscribeLinkSid int64 `protobuf:"varint,1,opt,name=custom_unsubscribe_link_sid,json=customUnsubscribeLinkSid,proto3" json:"custom_unsubscribe_link_sid,omitempty"`
}

func (x *DeleteCustomUnsubscribeLinkReq) Reset() {
	*x = DeleteCustomUnsubscribeLinkReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCustomUnsubscribeLinkReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCustomUnsubscribeLinkReq) ProtoMessage() {}

func (x *DeleteCustomUnsubscribeLinkReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCustomUnsubscribeLinkReq.ProtoReflect.Descriptor instead.
func (*DeleteCustomUnsubscribeLinkReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{28}
}

func (x *DeleteCustomUnsubscribeLinkReq) GetCustomUnsubscribeLinkSid() int64 {
	if x != nil {
		return x.CustomUnsubscribeLinkSid
	}
	return 0
}

// Request to pause a campaign
type PauseCampaignReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the campaign identifier
	CampaignSid int64 `protobuf:"varint,1,opt,name=campaign_sid,json=campaignSid,proto3" json:"campaign_sid,omitempty"`
	// the campaign's channel type
	ChannelType commons.ChannelType `protobuf:"varint,2,opt,name=channel_type,json=channelType,proto3,enum=api.commons.ChannelType" json:"channel_type,omitempty"`
	// the campaign direction
	CampaignDirection commons.OmniCampaignDirection `protobuf:"varint,3,opt,name=campaign_direction,json=campaignDirection,proto3,enum=api.commons.OmniCampaignDirection" json:"campaign_direction,omitempty"`
}

func (x *PauseCampaignReq) Reset() {
	*x = PauseCampaignReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PauseCampaignReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PauseCampaignReq) ProtoMessage() {}

func (x *PauseCampaignReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PauseCampaignReq.ProtoReflect.Descriptor instead.
func (*PauseCampaignReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{29}
}

func (x *PauseCampaignReq) GetCampaignSid() int64 {
	if x != nil {
		return x.CampaignSid
	}
	return 0
}

func (x *PauseCampaignReq) GetChannelType() commons.ChannelType {
	if x != nil {
		return x.ChannelType
	}
	return commons.ChannelType(0)
}

func (x *PauseCampaignReq) GetCampaignDirection() commons.OmniCampaignDirection {
	if x != nil {
		return x.CampaignDirection
	}
	return commons.OmniCampaignDirection(0)
}

// Response to pause a campaign
type PauseCampaignRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// send back ghost notifier referenceID
	ReferenceId string `protobuf:"bytes,1,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"`
}

func (x *PauseCampaignRes) Reset() {
	*x = PauseCampaignRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PauseCampaignRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PauseCampaignRes) ProtoMessage() {}

func (x *PauseCampaignRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PauseCampaignRes.ProtoReflect.Descriptor instead.
func (*PauseCampaignRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{30}
}

func (x *PauseCampaignRes) GetReferenceId() string {
	if x != nil {
		return x.ReferenceId
	}
	return ""
}

// Request to resume a campaign
type ResumeCampaignReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the campaign identifier
	CampaignSid int64 `protobuf:"varint,1,opt,name=campaign_sid,json=campaignSid,proto3" json:"campaign_sid,omitempty"`
	// the campaign's channel type
	ChannelType commons.ChannelType `protobuf:"varint,2,opt,name=channel_type,json=channelType,proto3,enum=api.commons.ChannelType" json:"channel_type,omitempty"`
	// the campaign direction
	CampaignDirection commons.OmniCampaignDirection `protobuf:"varint,3,opt,name=campaign_direction,json=campaignDirection,proto3,enum=api.commons.OmniCampaignDirection" json:"campaign_direction,omitempty"`
}

func (x *ResumeCampaignReq) Reset() {
	*x = ResumeCampaignReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResumeCampaignReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResumeCampaignReq) ProtoMessage() {}

func (x *ResumeCampaignReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResumeCampaignReq.ProtoReflect.Descriptor instead.
func (*ResumeCampaignReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{31}
}

func (x *ResumeCampaignReq) GetCampaignSid() int64 {
	if x != nil {
		return x.CampaignSid
	}
	return 0
}

func (x *ResumeCampaignReq) GetChannelType() commons.ChannelType {
	if x != nil {
		return x.ChannelType
	}
	return commons.ChannelType(0)
}

func (x *ResumeCampaignReq) GetCampaignDirection() commons.OmniCampaignDirection {
	if x != nil {
		return x.CampaignDirection
	}
	return commons.OmniCampaignDirection(0)
}

// Response to resume a campaign
type ResumeCampaignRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// send back ghost notifier referenceID
	ReferenceId string `protobuf:"bytes,1,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"`
}

func (x *ResumeCampaignRes) Reset() {
	*x = ResumeCampaignRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResumeCampaignRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResumeCampaignRes) ProtoMessage() {}

func (x *ResumeCampaignRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResumeCampaignRes.ProtoReflect.Descriptor instead.
func (*ResumeCampaignRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{32}
}

func (x *ResumeCampaignRes) GetReferenceId() string {
	if x != nil {
		return x.ReferenceId
	}
	return ""
}

// Request to archive a campaign
type ArchiveCampaignReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the campaign identifier
	CampaignSid int64 `protobuf:"varint,1,opt,name=campaign_sid,json=campaignSid,proto3" json:"campaign_sid,omitempty"`
	// the campaign's channel type
	ChannelType commons.ChannelType `protobuf:"varint,2,opt,name=channel_type,json=channelType,proto3,enum=api.commons.ChannelType" json:"channel_type,omitempty"`
	// the campaign direction
	CampaignDirection commons.OmniCampaignDirection `protobuf:"varint,3,opt,name=campaign_direction,json=campaignDirection,proto3,enum=api.commons.OmniCampaignDirection" json:"campaign_direction,omitempty"`
}

func (x *ArchiveCampaignReq) Reset() {
	*x = ArchiveCampaignReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArchiveCampaignReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArchiveCampaignReq) ProtoMessage() {}

func (x *ArchiveCampaignReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArchiveCampaignReq.ProtoReflect.Descriptor instead.
func (*ArchiveCampaignReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{33}
}

func (x *ArchiveCampaignReq) GetCampaignSid() int64 {
	if x != nil {
		return x.CampaignSid
	}
	return 0
}

func (x *ArchiveCampaignReq) GetChannelType() commons.ChannelType {
	if x != nil {
		return x.ChannelType
	}
	return commons.ChannelType(0)
}

func (x *ArchiveCampaignReq) GetCampaignDirection() commons.OmniCampaignDirection {
	if x != nil {
		return x.CampaignDirection
	}
	return commons.OmniCampaignDirection(0)
}

// Response to archive a campaign
type ArchiveCampaignRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// send back ghost notifier referenceID
	ReferenceId string `protobuf:"bytes,1,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"`
}

func (x *ArchiveCampaignRes) Reset() {
	*x = ArchiveCampaignRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArchiveCampaignRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArchiveCampaignRes) ProtoMessage() {}

func (x *ArchiveCampaignRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArchiveCampaignRes.ProtoReflect.Descriptor instead.
func (*ArchiveCampaignRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{34}
}

func (x *ArchiveCampaignRes) GetReferenceId() string {
	if x != nil {
		return x.ReferenceId
	}
	return ""
}

// Request to update pacing speed for a campaign
// Pacing speed updates are possible only for outbound campaigns like Email|SMS (not for CHAT)
type UpdateCampaignPacingSpeedReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the campaign identifier
	CampaignSid int64 `protobuf:"varint,1,opt,name=campaign_sid,json=campaignSid,proto3" json:"campaign_sid,omitempty"`
	// the campaign's channel type
	ChannelType commons.ChannelType `protobuf:"varint,2,opt,name=channel_type,json=channelType,proto3,enum=api.commons.ChannelType" json:"channel_type,omitempty"`
	// the campaign direction
	CampaignDirection commons.OmniCampaignDirection `protobuf:"varint,3,opt,name=campaign_direction,json=campaignDirection,proto3,enum=api.commons.OmniCampaignDirection" json:"campaign_direction,omitempty"`
	// sends per hour
	SendsPerHour int64 `protobuf:"varint,4,opt,name=sends_per_hour,json=sendsPerHour,proto3" json:"sends_per_hour,omitempty"`
	// the campaignModules identifier
	CampaignModuleSid int64 `protobuf:"varint,5,opt,name=campaign_module_sid,json=campaignModuleSid,proto3" json:"campaign_module_sid,omitempty"`
}

func (x *UpdateCampaignPacingSpeedReq) Reset() {
	*x = UpdateCampaignPacingSpeedReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCampaignPacingSpeedReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCampaignPacingSpeedReq) ProtoMessage() {}

func (x *UpdateCampaignPacingSpeedReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCampaignPacingSpeedReq.ProtoReflect.Descriptor instead.
func (*UpdateCampaignPacingSpeedReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{35}
}

func (x *UpdateCampaignPacingSpeedReq) GetCampaignSid() int64 {
	if x != nil {
		return x.CampaignSid
	}
	return 0
}

func (x *UpdateCampaignPacingSpeedReq) GetChannelType() commons.ChannelType {
	if x != nil {
		return x.ChannelType
	}
	return commons.ChannelType(0)
}

func (x *UpdateCampaignPacingSpeedReq) GetCampaignDirection() commons.OmniCampaignDirection {
	if x != nil {
		return x.CampaignDirection
	}
	return commons.OmniCampaignDirection(0)
}

func (x *UpdateCampaignPacingSpeedReq) GetSendsPerHour() int64 {
	if x != nil {
		return x.SendsPerHour
	}
	return 0
}

func (x *UpdateCampaignPacingSpeedReq) GetCampaignModuleSid() int64 {
	if x != nil {
		return x.CampaignModuleSid
	}
	return 0
}

// Response to update pacing speed for a campaign
type UpdateCampaignPacingSpeedRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// send back ghost notifier referenceID
	ReferenceId string `protobuf:"bytes,1,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"`
}

func (x *UpdateCampaignPacingSpeedRes) Reset() {
	*x = UpdateCampaignPacingSpeedRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCampaignPacingSpeedRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCampaignPacingSpeedRes) ProtoMessage() {}

func (x *UpdateCampaignPacingSpeedRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCampaignPacingSpeedRes.ProtoReflect.Descriptor instead.
func (*UpdateCampaignPacingSpeedRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{36}
}

func (x *UpdateCampaignPacingSpeedRes) GetReferenceId() string {
	if x != nil {
		return x.ReferenceId
	}
	return ""
}

// ListContactListsReq - request to list contact lists
type ListContactListsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// field mask to filter what is returned by each row
	FieldMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"`
	// the filter to select by
	//
	// Types that are assignable to Filter:
	//
	//	*ListContactListsReq_ByProject_
	Filter isListContactListsReq_Filter `protobuf_oneof:"filter"`
}

func (x *ListContactListsReq) Reset() {
	*x = ListContactListsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListContactListsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListContactListsReq) ProtoMessage() {}

func (x *ListContactListsReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListContactListsReq.ProtoReflect.Descriptor instead.
func (*ListContactListsReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{37}
}

func (x *ListContactListsReq) GetFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

func (m *ListContactListsReq) GetFilter() isListContactListsReq_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (x *ListContactListsReq) GetByProject() *ListContactListsReq_ByProject {
	if x, ok := x.GetFilter().(*ListContactListsReq_ByProject_); ok {
		return x.ByProject
	}
	return nil
}

type isListContactListsReq_Filter interface {
	isListContactListsReq_Filter()
}

type ListContactListsReq_ByProject_ struct {
	// select contact lists by project id
	ByProject *ListContactListsReq_ByProject `protobuf:"bytes,100,opt,name=by_project,json=byProject,proto3,oneof"`
}

func (*ListContactListsReq_ByProject_) isListContactListsReq_Filter() {}

// ListContactListsRes - result to listing contact lists
type ListContactListsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the listed contact lists
	ContactLists []*commons.ContactList `protobuf:"bytes,1,rep,name=contact_lists,json=contactLists,proto3" json:"contact_lists,omitempty"`
}

func (x *ListContactListsRes) Reset() {
	*x = ListContactListsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListContactListsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListContactListsRes) ProtoMessage() {}

func (x *ListContactListsRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListContactListsRes.ProtoReflect.Descriptor instead.
func (*ListContactListsRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{38}
}

func (x *ListContactListsRes) GetContactLists() []*commons.ContactList {
	if x != nil {
		return x.ContactLists
	}
	return nil
}

// GetAvailableHeadersReq - request to retrieve all available headers for contact lists
type GetAvailableHeadersReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAvailableHeadersReq) Reset() {
	*x = GetAvailableHeadersReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAvailableHeadersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvailableHeadersReq) ProtoMessage() {}

func (x *GetAvailableHeadersReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvailableHeadersReq.ProtoReflect.Descriptor instead.
func (*GetAvailableHeadersReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{39}
}

// GetAvailableHeadersRes - response containing all available contact list headers
type GetAvailableHeadersRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the available contact list headers
	Headers []*HeaderGroup `protobuf:"bytes,1,rep,name=headers,proto3" json:"headers,omitempty"`
}

func (x *GetAvailableHeadersRes) Reset() {
	*x = GetAvailableHeadersRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAvailableHeadersRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvailableHeadersRes) ProtoMessage() {}

func (x *GetAvailableHeadersRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvailableHeadersRes.ProtoReflect.Descriptor instead.
func (*GetAvailableHeadersRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{40}
}

func (x *GetAvailableHeadersRes) GetHeaders() []*HeaderGroup {
	if x != nil {
		return x.Headers
	}
	return nil
}

// HeaderGroup - represents a group of headers for a contact list
type HeaderGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the name of this group
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// the headers provided by this group
	Headers []string `protobuf:"bytes,2,rep,name=headers,proto3" json:"headers,omitempty"`
}

func (x *HeaderGroup) Reset() {
	*x = HeaderGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeaderGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeaderGroup) ProtoMessage() {}

func (x *HeaderGroup) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeaderGroup.ProtoReflect.Descriptor instead.
func (*HeaderGroup) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{41}
}

func (x *HeaderGroup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HeaderGroup) GetHeaders() []string {
	if x != nil {
		return x.Headers
	}
	return nil
}

// GetTaskReq - request to retrieve a task
type GetTaskReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// field mask for selecting optional details
	FieldMask *fieldmaskpb.FieldMask `protobuf:"bytes,1,opt,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"`
	// the filter to use when retrieving a task
	//
	// Types that are assignable to Filter:
	//
	//	*GetTaskReq_ByConversation_
	Filter isGetTaskReq_Filter `protobuf_oneof:"filter"`
}

func (x *GetTaskReq) Reset() {
	*x = GetTaskReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskReq) ProtoMessage() {}

func (x *GetTaskReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskReq.ProtoReflect.Descriptor instead.
func (*GetTaskReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{42}
}

func (x *GetTaskReq) GetFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

func (m *GetTaskReq) GetFilter() isGetTaskReq_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (x *GetTaskReq) GetByConversation() *GetTaskReq_ByConversation {
	if x, ok := x.GetFilter().(*GetTaskReq_ByConversation_); ok {
		return x.ByConversation
	}
	return nil
}

type isGetTaskReq_Filter interface {
	isGetTaskReq_Filter()
}

type GetTaskReq_ByConversation_ struct {
	ByConversation *GetTaskReq_ByConversation `protobuf:"bytes,100,opt,name=by_conversation,json=byConversation,proto3,oneof"`
}

func (*GetTaskReq_ByConversation_) isGetTaskReq_Filter() {}

// ListTasksReq - request to list tasks
type ListTasksReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// field mask for selecting optional details
	FieldMask *fieldmaskpb.FieldMask `protobuf:"bytes,1,opt,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"`
	// the filter to use when retrieving tasks
	//
	// Types that are assignable to Filter:
	//
	//	*ListTasksReq_ByCampaign_
	Filter isListTasksReq_Filter `protobuf_oneof:"filter"`
}

func (x *ListTasksReq) Reset() {
	*x = ListTasksReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTasksReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTasksReq) ProtoMessage() {}

func (x *ListTasksReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTasksReq.ProtoReflect.Descriptor instead.
func (*ListTasksReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{43}
}

func (x *ListTasksReq) GetFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

func (m *ListTasksReq) GetFilter() isListTasksReq_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (x *ListTasksReq) GetByCampaign() *ListTasksReq_ByCampaign {
	if x, ok := x.GetFilter().(*ListTasksReq_ByCampaign_); ok {
		return x.ByCampaign
	}
	return nil
}

type isListTasksReq_Filter interface {
	isListTasksReq_Filter()
}

type ListTasksReq_ByCampaign_ struct {
	ByCampaign *ListTasksReq_ByCampaign `protobuf:"bytes,100,opt,name=by_campaign,json=byCampaign,proto3,oneof"`
}

func (*ListTasksReq_ByCampaign_) isListTasksReq_Filter() {}

// ListTasksRes - result of listing tasks
type ListTasksRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Token to retrieve the next page of tasks, or empty if there are
	// no more tasks in the list.
	NextPageToken string `protobuf:"bytes,1,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	// The list of tasks.
	Tasks []*commons.OmniTask `protobuf:"bytes,2,rep,name=tasks,proto3" json:"tasks,omitempty"`
}

func (x *ListTasksRes) Reset() {
	*x = ListTasksRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTasksRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTasksRes) ProtoMessage() {}

func (x *ListTasksRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTasksRes.ProtoReflect.Descriptor instead.
func (*ListTasksRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{44}
}

func (x *ListTasksRes) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListTasksRes) GetTasks() []*commons.OmniTask {
	if x != nil {
		return x.Tasks
	}
	return nil
}

// CreateConnectedInboxRes - result of creating a new connected inbox
type CreateConnectedInboxRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the generated connected inbox identifier
	ConnectedInboxSid int64 `protobuf:"varint,1,opt,name=connected_inbox_sid,json=connectedInboxSid,proto3" json:"connected_inbox_sid,omitempty"`
}

func (x *CreateConnectedInboxRes) Reset() {
	*x = CreateConnectedInboxRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateConnectedInboxRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConnectedInboxRes) ProtoMessage() {}

func (x *CreateConnectedInboxRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConnectedInboxRes.ProtoReflect.Descriptor instead.
func (*CreateConnectedInboxRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{45}
}

func (x *CreateConnectedInboxRes) GetConnectedInboxSid() int64 {
	if x != nil {
		return x.ConnectedInboxSid
	}
	return 0
}

// DeleteConnectedInboxBySidReq - request to delete a connected inbox
type DeleteConnectedInboxBySidReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// connected inbox identifier
	ConnectedInboxSid int64 `protobuf:"varint,1,opt,name=connected_inbox_sid,json=connectedInboxSid,proto3" json:"connected_inbox_sid,omitempty"`
}

func (x *DeleteConnectedInboxBySidReq) Reset() {
	*x = DeleteConnectedInboxBySidReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteConnectedInboxBySidReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteConnectedInboxBySidReq) ProtoMessage() {}

func (x *DeleteConnectedInboxBySidReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteConnectedInboxBySidReq.ProtoReflect.Descriptor instead.
func (*DeleteConnectedInboxBySidReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{46}
}

func (x *DeleteConnectedInboxBySidReq) GetConnectedInboxSid() int64 {
	if x != nil {
		return x.ConnectedInboxSid
	}
	return 0
}

// GetConnectedInboxBySid - request to retrieve a connected inbox
type GetConnectedInboxBySidReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// connected inbox identifier
	ConnectedInboxSid int64 `protobuf:"varint,1,opt,name=connected_inbox_sid,json=connectedInboxSid,proto3" json:"connected_inbox_sid,omitempty"`
}

func (x *GetConnectedInboxBySidReq) Reset() {
	*x = GetConnectedInboxBySidReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConnectedInboxBySidReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConnectedInboxBySidReq) ProtoMessage() {}

func (x *GetConnectedInboxBySidReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConnectedInboxBySidReq.ProtoReflect.Descriptor instead.
func (*GetConnectedInboxBySidReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{47}
}

func (x *GetConnectedInboxBySidReq) GetConnectedInboxSid() int64 {
	if x != nil {
		return x.ConnectedInboxSid
	}
	return 0
}

// SendgridAccountByClientReq -
type SendgridAccountByClientReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SendgridAccountByClientReq) Reset() {
	*x = SendgridAccountByClientReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendgridAccountByClientReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendgridAccountByClientReq) ProtoMessage() {}

func (x *SendgridAccountByClientReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendgridAccountByClientReq.ProtoReflect.Descriptor instead.
func (*SendgridAccountByClientReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{48}
}

// SendgridAccountByClientRes -
type SendgridAccountByClientRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// retult -
	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *SendgridAccountByClientRes) Reset() {
	*x = SendgridAccountByClientRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendgridAccountByClientRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendgridAccountByClientRes) ProtoMessage() {}

func (x *SendgridAccountByClientRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendgridAccountByClientRes.ProtoReflect.Descriptor instead.
func (*SendgridAccountByClientRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{49}
}

func (x *SendgridAccountByClientRes) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// ListConnectedInboxesReq - request to list the connected inboxes for an organization
type ListConnectedInboxesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// what fields should be returned on the associated campaigns (if no field mask: no associated campaigns; if empty field mask, empty campaigns)
	FieldMask *fieldmaskpb.FieldMask `protobuf:"bytes,1,opt,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"`
}

func (x *ListConnectedInboxesReq) Reset() {
	*x = ListConnectedInboxesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListConnectedInboxesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConnectedInboxesReq) ProtoMessage() {}

func (x *ListConnectedInboxesReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConnectedInboxesReq.ProtoReflect.Descriptor instead.
func (*ListConnectedInboxesReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{50}
}

func (x *ListConnectedInboxesReq) GetFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

// ListConnectedInboxesRes - result to listing an organization's connected inboxes
type ListConnectedInboxesRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the listed connected inboxes
	ConnectedInboxes []*ListConnectedInboxesRes_ListConnectedInbox `protobuf:"bytes,1,rep,name=connected_inboxes,json=connectedInboxes,proto3" json:"connected_inboxes,omitempty"`
}

func (x *ListConnectedInboxesRes) Reset() {
	*x = ListConnectedInboxesRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListConnectedInboxesRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConnectedInboxesRes) ProtoMessage() {}

func (x *ListConnectedInboxesRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConnectedInboxesRes.ProtoReflect.Descriptor instead.
func (*ListConnectedInboxesRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{51}
}

func (x *ListConnectedInboxesRes) GetConnectedInboxes() []*ListConnectedInboxesRes_ListConnectedInbox {
	if x != nil {
		return x.ConnectedInboxes
	}
	return nil
}

// TestConnectedInboxRes - result of testing a connected inbox login
type TestConnectedInboxRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// whether the test was a success
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// test-specific details
	Details string `protobuf:"bytes,2,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *TestConnectedInboxRes) Reset() {
	*x = TestConnectedInboxRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestConnectedInboxRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestConnectedInboxRes) ProtoMessage() {}

func (x *TestConnectedInboxRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestConnectedInboxRes.ProtoReflect.Descriptor instead.
func (*TestConnectedInboxRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{52}
}

func (x *TestConnectedInboxRes) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *TestConnectedInboxRes) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

// UpdateConnectedInboxReq - request to update a connected inbox
type UpdateConnectedInboxReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the connected inbox to update with the specified fields updated
	ConnectedInbox *commons.ConnectedInbox `protobuf:"bytes,1,opt,name=connected_inbox,json=connectedInbox,proto3" json:"connected_inbox,omitempty"`
	// the fields to update
	FieldMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"`
}

func (x *UpdateConnectedInboxReq) Reset() {
	*x = UpdateConnectedInboxReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateConnectedInboxReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateConnectedInboxReq) ProtoMessage() {}

func (x *UpdateConnectedInboxReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateConnectedInboxReq.ProtoReflect.Descriptor instead.
func (*UpdateConnectedInboxReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{53}
}

func (x *UpdateConnectedInboxReq) GetConnectedInbox() *commons.ConnectedInbox {
	if x != nil {
		return x.ConnectedInbox
	}
	return nil
}

func (x *UpdateConnectedInboxReq) GetFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

// creates verified email
type CreateVerifiedEmailRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// generated identifier field
	VerifiedEmailSid int64 `protobuf:"varint,1,opt,name=verified_email_sid,json=verifiedEmailSid,proto3" json:"verified_email_sid,omitempty"`
}

func (x *CreateVerifiedEmailRes) Reset() {
	*x = CreateVerifiedEmailRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVerifiedEmailRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVerifiedEmailRes) ProtoMessage() {}

func (x *CreateVerifiedEmailRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVerifiedEmailRes.ProtoReflect.Descriptor instead.
func (*CreateVerifiedEmailRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{54}
}

func (x *CreateVerifiedEmailRes) GetVerifiedEmailSid() int64 {
	if x != nil {
		return x.VerifiedEmailSid
	}
	return 0
}

// request to send email notification
type SendEmailNotificationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// email subject
	Subject string `protobuf:"bytes,2,opt,name=subject,proto3" json:"subject,omitempty"`
	// data
	Data string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	// email message
	Message string `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	// to email addresses
	ToEmailAddressArr []string `protobuf:"bytes,5,rep,name=to_email_address_arr,json=toEmailAddressArr,proto3" json:"to_email_address_arr,omitempty"`
}

func (x *SendEmailNotificationReq) Reset() {
	*x = SendEmailNotificationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendEmailNotificationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendEmailNotificationReq) ProtoMessage() {}

func (x *SendEmailNotificationReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendEmailNotificationReq.ProtoReflect.Descriptor instead.
func (*SendEmailNotificationReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{55}
}

func (x *SendEmailNotificationReq) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *SendEmailNotificationReq) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *SendEmailNotificationReq) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SendEmailNotificationReq) GetToEmailAddressArr() []string {
	if x != nil {
		return x.ToEmailAddressArr
	}
	return nil
}

// response to email notification
type SendEmailNotificationRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SendEmailNotificationRes) Reset() {
	*x = SendEmailNotificationRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendEmailNotificationRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendEmailNotificationRes) ProtoMessage() {}

func (x *SendEmailNotificationRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendEmailNotificationRes.ProtoReflect.Descriptor instead.
func (*SendEmailNotificationRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{56}
}

// request to delete verified email
// GetVerifiedEmailBySidReq -
type GetVerifiedEmailBySidReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// verified_email_id
	VerifiedEmailSid int64 `protobuf:"varint,1,opt,name=verified_email_sid,json=verifiedEmailSid,proto3" json:"verified_email_sid,omitempty"`
}

func (x *GetVerifiedEmailBySidReq) Reset() {
	*x = GetVerifiedEmailBySidReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVerifiedEmailBySidReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVerifiedEmailBySidReq) ProtoMessage() {}

func (x *GetVerifiedEmailBySidReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVerifiedEmailBySidReq.ProtoReflect.Descriptor instead.
func (*GetVerifiedEmailBySidReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{57}
}

func (x *GetVerifiedEmailBySidReq) GetVerifiedEmailSid() int64 {
	if x != nil {
		return x.VerifiedEmailSid
	}
	return 0
}

// DeleteVerifiedEmailReq - request to delete verified email
type DeleteVerifiedEmailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// verified email identifier
	VerifiedEmailSid int64 `protobuf:"varint,1,opt,name=verified_email_sid,json=verifiedEmailSid,proto3" json:"verified_email_sid,omitempty"`
}

func (x *DeleteVerifiedEmailReq) Reset() {
	*x = DeleteVerifiedEmailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteVerifiedEmailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVerifiedEmailReq) ProtoMessage() {}

func (x *DeleteVerifiedEmailReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVerifiedEmailReq.ProtoReflect.Descriptor instead.
func (*DeleteVerifiedEmailReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{58}
}

func (x *DeleteVerifiedEmailReq) GetVerifiedEmailSid() int64 {
	if x != nil {
		return x.VerifiedEmailSid
	}
	return 0
}

// request to list verified email
type ListVerifiedEmailsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListVerifiedEmailsReq) Reset() {
	*x = ListVerifiedEmailsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVerifiedEmailsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVerifiedEmailsReq) ProtoMessage() {}

func (x *ListVerifiedEmailsReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVerifiedEmailsReq.ProtoReflect.Descriptor instead.
func (*ListVerifiedEmailsReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{59}
}

// response to list verified email
type ListVerifiedEmailsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// list of verified emails
	VerifiedEmails []*commons.VerifiedEmail `protobuf:"bytes,1,rep,name=verified_emails,json=verifiedEmails,proto3" json:"verified_emails,omitempty"`
}

func (x *ListVerifiedEmailsRes) Reset() {
	*x = ListVerifiedEmailsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVerifiedEmailsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVerifiedEmailsRes) ProtoMessage() {}

func (x *ListVerifiedEmailsRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVerifiedEmailsRes.ProtoReflect.Descriptor instead.
func (*ListVerifiedEmailsRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{60}
}

func (x *ListVerifiedEmailsRes) GetVerifiedEmails() []*commons.VerifiedEmail {
	if x != nil {
		return x.VerifiedEmails
	}
	return nil
}

// request to resend verified email
type ResendVerifiedEmailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// verified_email_sid
	VerifiedEmailSid int64 `protobuf:"varint,1,opt,name=verified_email_sid,json=verifiedEmailSid,proto3" json:"verified_email_sid,omitempty"`
}

func (x *ResendVerifiedEmailReq) Reset() {
	*x = ResendVerifiedEmailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResendVerifiedEmailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResendVerifiedEmailReq) ProtoMessage() {}

func (x *ResendVerifiedEmailReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResendVerifiedEmailReq.ProtoReflect.Descriptor instead.
func (*ResendVerifiedEmailReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{61}
}

func (x *ResendVerifiedEmailReq) GetVerifiedEmailSid() int64 {
	if x != nil {
		return x.VerifiedEmailSid
	}
	return 0
}

// response to resend verified email
type ResendVerifiedEmailRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResendVerifiedEmailRes) Reset() {
	*x = ResendVerifiedEmailRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResendVerifiedEmailRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResendVerifiedEmailRes) ProtoMessage() {}

func (x *ResendVerifiedEmailRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResendVerifiedEmailRes.ProtoReflect.Descriptor instead.
func (*ResendVerifiedEmailRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{62}
}

// request to update verified email description
type UpdateVerifiedEmailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VerifiedEmailSid int64  `protobuf:"varint,1,opt,name=verified_email_sid,json=verifiedEmailSid,proto3" json:"verified_email_sid,omitempty"`
	Description      string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *UpdateVerifiedEmailReq) Reset() {
	*x = UpdateVerifiedEmailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateVerifiedEmailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVerifiedEmailReq) ProtoMessage() {}

func (x *UpdateVerifiedEmailReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVerifiedEmailReq.ProtoReflect.Descriptor instead.
func (*UpdateVerifiedEmailReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{63}
}

func (x *UpdateVerifiedEmailReq) GetVerifiedEmailSid() int64 {
	if x != nil {
		return x.VerifiedEmailSid
	}
	return 0
}

func (x *UpdateVerifiedEmailReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// GetPendingGoogleXOAuth2DataReq - request to get pending GoogleXOAuth2 data
type GetPendingGoogleXOAuth2DataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// token identifying the GoogleXOAuth2 data
	IdentificationToken string `protobuf:"bytes,1,opt,name=identification_token,json=identificationToken,proto3" json:"identification_token,omitempty"`
}

func (x *GetPendingGoogleXOAuth2DataReq) Reset() {
	*x = GetPendingGoogleXOAuth2DataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPendingGoogleXOAuth2DataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPendingGoogleXOAuth2DataReq) ProtoMessage() {}

func (x *GetPendingGoogleXOAuth2DataReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPendingGoogleXOAuth2DataReq.ProtoReflect.Descriptor instead.
func (*GetPendingGoogleXOAuth2DataReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{64}
}

func (x *GetPendingGoogleXOAuth2DataReq) GetIdentificationToken() string {
	if x != nil {
		return x.IdentificationToken
	}
	return ""
}

// GetPendingGoogleXOAuth2DataRes - result of getting pending GoogleXOAuth2 data
type GetPendingGoogleXOAuth2DataRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the GoogleXOAuth2 email address
	EmailAddress string `protobuf:"bytes,1,opt,name=email_address,json=emailAddress,proto3" json:"email_address,omitempty"`
}

func (x *GetPendingGoogleXOAuth2DataRes) Reset() {
	*x = GetPendingGoogleXOAuth2DataRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPendingGoogleXOAuth2DataRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPendingGoogleXOAuth2DataRes) ProtoMessage() {}

func (x *GetPendingGoogleXOAuth2DataRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPendingGoogleXOAuth2DataRes.ProtoReflect.Descriptor instead.
func (*GetPendingGoogleXOAuth2DataRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{65}
}

func (x *GetPendingGoogleXOAuth2DataRes) GetEmailAddress() string {
	if x != nil {
		return x.EmailAddress
	}
	return ""
}

// request to send feedback notifications
type SendFeedbackEmailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// from email address
	FromEmail string `protobuf:"bytes,1,opt,name=from_email,json=fromEmail,proto3" json:"from_email,omitempty"`
	// email description
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// session id
	SessionId string `protobuf:"bytes,3,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	// email screenshot
	Screenshot string `protobuf:"bytes,4,opt,name=screenshot,proto3" json:"screenshot,omitempty"`
}

func (x *SendFeedbackEmailReq) Reset() {
	*x = SendFeedbackEmailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendFeedbackEmailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendFeedbackEmailReq) ProtoMessage() {}

func (x *SendFeedbackEmailReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendFeedbackEmailReq.ProtoReflect.Descriptor instead.
func (*SendFeedbackEmailReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{66}
}

func (x *SendFeedbackEmailReq) GetFromEmail() string {
	if x != nil {
		return x.FromEmail
	}
	return ""
}

func (x *SendFeedbackEmailReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SendFeedbackEmailReq) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *SendFeedbackEmailReq) GetScreenshot() string {
	if x != nil {
		return x.Screenshot
	}
	return ""
}

// response to send feedback notifications
type SendFeedbackEmailRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SendFeedbackEmailRes) Reset() {
	*x = SendFeedbackEmailRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendFeedbackEmailRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendFeedbackEmailRes) ProtoMessage() {}

func (x *SendFeedbackEmailRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendFeedbackEmailRes.ProtoReflect.Descriptor instead.
func (*SendFeedbackEmailRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{67}
}

// request to get attachment details
type GetOmniAttachmentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// flag to include attachment download url or not
	IncludeDownloadUrl bool `protobuf:"varint,1,opt,name=include_download_url,json=includeDownloadUrl,proto3" json:"include_download_url,omitempty"`
	// the filter to select by
	//
	// Types that are assignable to Filter:
	//
	//	*GetOmniAttachmentReq_ByOmniAttachmentSid_
	Filter isGetOmniAttachmentReq_Filter `protobuf_oneof:"filter"`
}

func (x *GetOmniAttachmentReq) Reset() {
	*x = GetOmniAttachmentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOmniAttachmentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOmniAttachmentReq) ProtoMessage() {}

func (x *GetOmniAttachmentReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOmniAttachmentReq.ProtoReflect.Descriptor instead.
func (*GetOmniAttachmentReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{68}
}

func (x *GetOmniAttachmentReq) GetIncludeDownloadUrl() bool {
	if x != nil {
		return x.IncludeDownloadUrl
	}
	return false
}

func (m *GetOmniAttachmentReq) GetFilter() isGetOmniAttachmentReq_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (x *GetOmniAttachmentReq) GetByOmniAttachmentSid() *GetOmniAttachmentReq_ByOmniAttachmentSid {
	if x, ok := x.GetFilter().(*GetOmniAttachmentReq_ByOmniAttachmentSid_); ok {
		return x.ByOmniAttachmentSid
	}
	return nil
}

type isGetOmniAttachmentReq_Filter interface {
	isGetOmniAttachmentReq_Filter()
}

type GetOmniAttachmentReq_ByOmniAttachmentSid_ struct {
	// filter by attachment sid
	ByOmniAttachmentSid *GetOmniAttachmentReq_ByOmniAttachmentSid `protobuf:"bytes,100,opt,name=by_omni_attachment_sid,json=byOmniAttachmentSid,proto3,oneof"`
}

func (*GetOmniAttachmentReq_ByOmniAttachmentSid_) isGetOmniAttachmentReq_Filter() {}

// CreateTasksReq - create tasks per a contact list
type CreateTasksReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// campaign identifier
	CampaignSid int64 `protobuf:"varint,1,opt,name=campaign_sid,json=campaignSid,proto3" json:"campaign_sid,omitempty"`
	// campaign module identifier
	CampaignModuleSid int64 `protobuf:"varint,2,opt,name=campaign_module_sid,json=campaignModuleSid,proto3" json:"campaign_module_sid,omitempty"`
	// what data to use when creating tasks
	//
	// Types that are assignable to DataSource:
	//
	//	*CreateTasksReq_ContactListDataSource
	DataSource isCreateTasksReq_DataSource `protobuf_oneof:"data_source"`
}

func (x *CreateTasksReq) Reset() {
	*x = CreateTasksReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTasksReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTasksReq) ProtoMessage() {}

func (x *CreateTasksReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTasksReq.ProtoReflect.Descriptor instead.
func (*CreateTasksReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{69}
}

func (x *CreateTasksReq) GetCampaignSid() int64 {
	if x != nil {
		return x.CampaignSid
	}
	return 0
}

func (x *CreateTasksReq) GetCampaignModuleSid() int64 {
	if x != nil {
		return x.CampaignModuleSid
	}
	return 0
}

func (m *CreateTasksReq) GetDataSource() isCreateTasksReq_DataSource {
	if m != nil {
		return m.DataSource
	}
	return nil
}

func (x *CreateTasksReq) GetContactListDataSource() *ContactListDataSource {
	if x, ok := x.GetDataSource().(*CreateTasksReq_ContactListDataSource); ok {
		return x.ContactListDataSource
	}
	return nil
}

type isCreateTasksReq_DataSource interface {
	isCreateTasksReq_DataSource()
}

type CreateTasksReq_ContactListDataSource struct {
	ContactListDataSource *ContactListDataSource `protobuf:"bytes,100,opt,name=contact_list_data_source,json=contactListDataSource,proto3,oneof"`
}

func (*CreateTasksReq_ContactListDataSource) isCreateTasksReq_DataSource() {}

// CreateTasksRes -
type CreateTasksRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ghost notifier reference identifier
	ReferenceId string `protobuf:"bytes,1,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"`
}

func (x *CreateTasksRes) Reset() {
	*x = CreateTasksRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTasksRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTasksRes) ProtoMessage() {}

func (x *CreateTasksRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTasksRes.ProtoReflect.Descriptor instead.
func (*CreateTasksRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{70}
}

func (x *CreateTasksRes) GetReferenceId() string {
	if x != nil {
		return x.ReferenceId
	}
	return ""
}

// CreateSignatureReq - request to create a new message signature
type CreateSignatureReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the signature text to create
	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	// the name for the signature
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// the description for the signature
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *CreateSignatureReq) Reset() {
	*x = CreateSignatureReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSignatureReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSignatureReq) ProtoMessage() {}

func (x *CreateSignatureReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSignatureReq.ProtoReflect.Descriptor instead.
func (*CreateSignatureReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{71}
}

func (x *CreateSignatureReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *CreateSignatureReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateSignatureReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// CreateSignatureRes - the result of creating a new signature
type CreateSignatureRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the created signature object
	Signature *commons.Signature `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *CreateSignatureRes) Reset() {
	*x = CreateSignatureRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSignatureRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSignatureRes) ProtoMessage() {}

func (x *CreateSignatureRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSignatureRes.ProtoReflect.Descriptor instead.
func (*CreateSignatureRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{72}
}

func (x *CreateSignatureRes) GetSignature() *commons.Signature {
	if x != nil {
		return x.Signature
	}
	return nil
}

// DeleteSignatureReq - request to delete message signature
type DeleteSignatureReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// identifier of the signature to delete
	SignatureSid int64 `protobuf:"varint,1,opt,name=signature_sid,json=signatureSid,proto3" json:"signature_sid,omitempty"`
}

func (x *DeleteSignatureReq) Reset() {
	*x = DeleteSignatureReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSignatureReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSignatureReq) ProtoMessage() {}

func (x *DeleteSignatureReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSignatureReq.ProtoReflect.Descriptor instead.
func (*DeleteSignatureReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{73}
}

func (x *DeleteSignatureReq) GetSignatureSid() int64 {
	if x != nil {
		return x.SignatureSid
	}
	return 0
}

// DeleteSignatureReq - result of deleting message signature
type DeleteSignatureRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteSignatureRes) Reset() {
	*x = DeleteSignatureRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSignatureRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSignatureRes) ProtoMessage() {}

func (x *DeleteSignatureRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSignatureRes.ProtoReflect.Descriptor instead.
func (*DeleteSignatureRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{74}
}

// ListSignaturesReq - request to list message signatures
type ListSignaturesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListSignaturesReq) Reset() {
	*x = ListSignaturesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSignaturesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSignaturesReq) ProtoMessage() {}

func (x *ListSignaturesReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSignaturesReq.ProtoReflect.Descriptor instead.
func (*ListSignaturesReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{75}
}

// ListSignaturesRes - result of listing message signatures
type ListSignaturesRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the message signatures created by the organization
	Signatures []*commons.Signature `protobuf:"bytes,1,rep,name=signatures,proto3" json:"signatures,omitempty"`
}

func (x *ListSignaturesRes) Reset() {
	*x = ListSignaturesRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSignaturesRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSignaturesRes) ProtoMessage() {}

func (x *ListSignaturesRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSignaturesRes.ProtoReflect.Descriptor instead.
func (*ListSignaturesRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{76}
}

func (x *ListSignaturesRes) GetSignatures() []*commons.Signature {
	if x != nil {
		return x.Signatures
	}
	return nil
}

// UpdateSignatureReq - request to update a message signature
type UpdateSignatureReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the signature details to update
	Signature *commons.Signature `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	// the field mask to update with
	FieldMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"`
}

func (x *UpdateSignatureReq) Reset() {
	*x = UpdateSignatureReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSignatureReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSignatureReq) ProtoMessage() {}

func (x *UpdateSignatureReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSignatureReq.ProtoReflect.Descriptor instead.
func (*UpdateSignatureReq) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{77}
}

func (x *UpdateSignatureReq) GetSignature() *commons.Signature {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *UpdateSignatureReq) GetFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

// UpdateSignatureRes - response to updating a message signature
type UpdateSignatureRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the updated signature
	Signature *commons.Signature `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *UpdateSignatureRes) Reset() {
	*x = UpdateSignatureRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSignatureRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSignatureRes) ProtoMessage() {}

func (x *UpdateSignatureRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSignatureRes.ProtoReflect.Descriptor instead.
func (*UpdateSignatureRes) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{78}
}

func (x *UpdateSignatureRes) GetSignature() *commons.Signature {
	if x != nil {
		return x.Signature
	}
	return nil
}

// CampaignModule - information required to create an omni campaign module
type CreateCampaignReq_CampaignModule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the module to create
	Module *commons.OmniCampaignModule `protobuf:"bytes,1,opt,name=module,proto3" json:"module,omitempty"`
	// the data source for outbound contacts (only applicable if outbound module)
	//
	// Types that are assignable to DataSource:
	//
	//	*CreateCampaignReq_CampaignModule_OmniContactList
	DataSource isCreateCampaignReq_CampaignModule_DataSource `protobuf_oneof:"data_source"`
}

func (x *CreateCampaignReq_CampaignModule) Reset() {
	*x = CreateCampaignReq_CampaignModule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCampaignReq_CampaignModule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCampaignReq_CampaignModule) ProtoMessage() {}

func (x *CreateCampaignReq_CampaignModule) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCampaignReq_CampaignModule.ProtoReflect.Descriptor instead.
func (*CreateCampaignReq_CampaignModule) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{2, 0}
}

func (x *CreateCampaignReq_CampaignModule) GetModule() *commons.OmniCampaignModule {
	if x != nil {
		return x.Module
	}
	return nil
}

func (m *CreateCampaignReq_CampaignModule) GetDataSource() isCreateCampaignReq_CampaignModule_DataSource {
	if m != nil {
		return m.DataSource
	}
	return nil
}

func (x *CreateCampaignReq_CampaignModule) GetOmniContactList() *ContactListsDataSource {
	if x, ok := x.GetDataSource().(*CreateCampaignReq_CampaignModule_OmniContactList); ok {
		return x.OmniContactList
	}
	return nil
}

type isCreateCampaignReq_CampaignModule_DataSource interface {
	isCreateCampaignReq_CampaignModule_DataSource()
}

type CreateCampaignReq_CampaignModule_OmniContactList struct {
	OmniContactList *ContactListsDataSource `protobuf:"bytes,100,opt,name=omni_contact_list,json=omniContactList,proto3,oneof"` // TODO: make plural
}

func (*CreateCampaignReq_CampaignModule_OmniContactList) isCreateCampaignReq_CampaignModule_DataSource() {
}

// ByConnectedInbox - filter to list campaigns by the provided connected inbox
type ListCampaignsReq_ByConnectedInbox struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// connected inbox identifier
	InboxSid int64 `protobuf:"varint,1,opt,name=inbox_sid,json=inboxSid,proto3" json:"inbox_sid,omitempty"`
}

func (x *ListCampaignsReq_ByConnectedInbox) Reset() {
	*x = ListCampaignsReq_ByConnectedInbox{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCampaignsReq_ByConnectedInbox) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCampaignsReq_ByConnectedInbox) ProtoMessage() {}

func (x *ListCampaignsReq_ByConnectedInbox) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCampaignsReq_ByConnectedInbox.ProtoReflect.Descriptor instead.
func (*ListCampaignsReq_ByConnectedInbox) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{5, 0}
}

func (x *ListCampaignsReq_ByConnectedInbox) GetInboxSid() int64 {
	if x != nil {
		return x.InboxSid
	}
	return 0
}

// ByIds - filter to list campaigns by ids
type ListCampaignsReq_ByIds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// campaign ids to search for
	CampaignSids []int64 `protobuf:"varint,1,rep,packed,name=campaign_sids,json=campaignSids,proto3" json:"campaign_sids,omitempty"`
}

func (x *ListCampaignsReq_ByIds) Reset() {
	*x = ListCampaignsReq_ByIds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCampaignsReq_ByIds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCampaignsReq_ByIds) ProtoMessage() {}

func (x *ListCampaignsReq_ByIds) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCampaignsReq_ByIds.ProtoReflect.Descriptor instead.
func (*ListCampaignsReq_ByIds) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{5, 1}
}

func (x *ListCampaignsReq_ByIds) GetCampaignSids() []int64 {
	if x != nil {
		return x.CampaignSids
	}
	return nil
}

// ByProject - filter to list campaigns by project
type ListCampaignsReq_ByProject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// project identifier
	ProjectSid int64 `protobuf:"varint,1,opt,name=project_sid,json=projectSid,proto3" json:"project_sid,omitempty"`
}

func (x *ListCampaignsReq_ByProject) Reset() {
	*x = ListCampaignsReq_ByProject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCampaignsReq_ByProject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCampaignsReq_ByProject) ProtoMessage() {}

func (x *ListCampaignsReq_ByProject) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCampaignsReq_ByProject.ProtoReflect.Descriptor instead.
func (*ListCampaignsReq_ByProject) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{5, 2}
}

func (x *ListCampaignsReq_ByProject) GetProjectSid() int64 {
	if x != nil {
		return x.ProjectSid
	}
	return 0
}

// ByTime - filter to list running campaigns by scheduled_start_time
type ListCampaignsReq_ByTime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// time to search from
	SearchFrom *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=search_from,json=searchFrom,proto3" json:"search_from,omitempty"`
	// time to search to
	SearchTo *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=search_to,json=searchTo,proto3" json:"search_to,omitempty"`
}

func (x *ListCampaignsReq_ByTime) Reset() {
	*x = ListCampaignsReq_ByTime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCampaignsReq_ByTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCampaignsReq_ByTime) ProtoMessage() {}

func (x *ListCampaignsReq_ByTime) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCampaignsReq_ByTime.ProtoReflect.Descriptor instead.
func (*ListCampaignsReq_ByTime) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{5, 3}
}

func (x *ListCampaignsReq_ByTime) GetSearchFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.SearchFrom
	}
	return nil
}

func (x *ListCampaignsReq_ByTime) GetSearchTo() *timestamppb.Timestamp {
	if x != nil {
		return x.SearchTo
	}
	return nil
}

// ByUnsubscribeLink - filter to list campaigns using the provided unsubscribe link
type ListCampaignsReq_ByUnsubscribeLink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// custom unsubscribe link identifier
	LinkSid int64 `protobuf:"varint,1,opt,name=link_sid,json=linkSid,proto3" json:"link_sid,omitempty"`
}

func (x *ListCampaignsReq_ByUnsubscribeLink) Reset() {
	*x = ListCampaignsReq_ByUnsubscribeLink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCampaignsReq_ByUnsubscribeLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCampaignsReq_ByUnsubscribeLink) ProtoMessage() {}

func (x *ListCampaignsReq_ByUnsubscribeLink) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCampaignsReq_ByUnsubscribeLink.ProtoReflect.Descriptor instead.
func (*ListCampaignsReq_ByUnsubscribeLink) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{5, 4}
}

func (x *ListCampaignsReq_ByUnsubscribeLink) GetLinkSid() int64 {
	if x != nil {
		return x.LinkSid
	}
	return 0
}

// ByVerifiedEmail - filter to list campaigns by the verified email
type ListCampaignsReq_ByVerifiedEmail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// verified email identifier
	EmailSid int64 `protobuf:"varint,1,opt,name=email_sid,json=emailSid,proto3" json:"email_sid,omitempty"`
}

func (x *ListCampaignsReq_ByVerifiedEmail) Reset() {
	*x = ListCampaignsReq_ByVerifiedEmail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCampaignsReq_ByVerifiedEmail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCampaignsReq_ByVerifiedEmail) ProtoMessage() {}

func (x *ListCampaignsReq_ByVerifiedEmail) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCampaignsReq_ByVerifiedEmail.ProtoReflect.Descriptor instead.
func (*ListCampaignsReq_ByVerifiedEmail) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{5, 5}
}

func (x *ListCampaignsReq_ByVerifiedEmail) GetEmailSid() int64 {
	if x != nil {
		return x.EmailSid
	}
	return 0
}

// BySmsNumber - filter the list of campaigns by the Sms Number
type ListCampaignsReq_BySmsNumber struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// sms number
	Number string `protobuf:"bytes,1,opt,name=number,proto3" json:"number,omitempty"`
}

func (x *ListCampaignsReq_BySmsNumber) Reset() {
	*x = ListCampaignsReq_BySmsNumber{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCampaignsReq_BySmsNumber) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCampaignsReq_BySmsNumber) ProtoMessage() {}

func (x *ListCampaignsReq_BySmsNumber) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCampaignsReq_BySmsNumber.ProtoReflect.Descriptor instead.
func (*ListCampaignsReq_BySmsNumber) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{5, 6}
}

func (x *ListCampaignsReq_BySmsNumber) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

// filter used to get messages by conversation sid
type ManagerListMessagesReq_ByConversationSid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the conversation identifier
	ConversationSid int64 `protobuf:"varint,1,opt,name=conversation_sid,json=conversationSid,proto3" json:"conversation_sid,omitempty"`
}

func (x *ManagerListMessagesReq_ByConversationSid) Reset() {
	*x = ManagerListMessagesReq_ByConversationSid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManagerListMessagesReq_ByConversationSid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManagerListMessagesReq_ByConversationSid) ProtoMessage() {}

func (x *ManagerListMessagesReq_ByConversationSid) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManagerListMessagesReq_ByConversationSid.ProtoReflect.Descriptor instead.
func (*ManagerListMessagesReq_ByConversationSid) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{10, 0}
}

func (x *ManagerListMessagesReq_ByConversationSid) GetConversationSid() int64 {
	if x != nil {
		return x.ConversationSid
	}
	return 0
}

// filter used to get messages by task sid
type ManagerListMessagesReq_ByTaskSid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the task identifier
	TaskSid int64 `protobuf:"varint,1,opt,name=task_sid,json=taskSid,proto3" json:"task_sid,omitempty"`
}

func (x *ManagerListMessagesReq_ByTaskSid) Reset() {
	*x = ManagerListMessagesReq_ByTaskSid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManagerListMessagesReq_ByTaskSid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManagerListMessagesReq_ByTaskSid) ProtoMessage() {}

func (x *ManagerListMessagesReq_ByTaskSid) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManagerListMessagesReq_ByTaskSid.ProtoReflect.Descriptor instead.
func (*ManagerListMessagesReq_ByTaskSid) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{10, 1}
}

func (x *ManagerListMessagesReq_ByTaskSid) GetTaskSid() int64 {
	if x != nil {
		return x.TaskSid
	}
	return 0
}

type ListMessagesReq_ByConversationSid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the conversation identifier
	ConversationSid int64 `protobuf:"varint,1,opt,name=conversation_sid,json=conversationSid,proto3" json:"conversation_sid,omitempty"`
}

func (x *ListMessagesReq_ByConversationSid) Reset() {
	*x = ListMessagesReq_ByConversationSid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMessagesReq_ByConversationSid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMessagesReq_ByConversationSid) ProtoMessage() {}

func (x *ListMessagesReq_ByConversationSid) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMessagesReq_ByConversationSid.ProtoReflect.Descriptor instead.
func (*ListMessagesReq_ByConversationSid) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{11, 0}
}

func (x *ListMessagesReq_ByConversationSid) GetConversationSid() int64 {
	if x != nil {
		return x.ConversationSid
	}
	return 0
}

// message filter to list conversations by time
type ListConversationsReq_ByTime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// start time for filtering conversations
	StartTime *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// stop time for filtering conversations
	EndTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	// Optional. The number of listconversation to include in a single response. When not provided this defaults to 100.
	PageSize uint32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Optional. When provided all other request fields are ignored.
	PageToken string `protobuf:"bytes,5,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListConversationsReq_ByTime) Reset() {
	*x = ListConversationsReq_ByTime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListConversationsReq_ByTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConversationsReq_ByTime) ProtoMessage() {}

func (x *ListConversationsReq_ByTime) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConversationsReq_ByTime.ProtoReflect.Descriptor instead.
func (*ListConversationsReq_ByTime) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{16, 0}
}

func (x *ListConversationsReq_ByTime) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *ListConversationsReq_ByTime) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *ListConversationsReq_ByTime) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListConversationsReq_ByTime) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

// message filter to list conversations by assigned user
type ListConversationsReq_ByAssignedUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the assigned user
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// the statuses of the conversations to retrieve, or empty if retrieving everything : deprecated because we moved to the main request.
	//
	// Deprecated: Marked as deprecated in api/v0alpha/omniapi.proto.
	Statuses []commons.ConversationStatus `protobuf:"varint,2,rep,packed,name=statuses,proto3,enum=api.commons.ConversationStatus" json:"statuses,omitempty"`
	// Optional. The number of listconversation to include in a single response. When not provided this defaults to 100.
	PageSize uint32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Optional. When provided all other request fields are ignored.
	PageToken string `protobuf:"bytes,5,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListConversationsReq_ByAssignedUser) Reset() {
	*x = ListConversationsReq_ByAssignedUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListConversationsReq_ByAssignedUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConversationsReq_ByAssignedUser) ProtoMessage() {}

func (x *ListConversationsReq_ByAssignedUser) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConversationsReq_ByAssignedUser.ProtoReflect.Descriptor instead.
func (*ListConversationsReq_ByAssignedUser) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{16, 1}
}

func (x *ListConversationsReq_ByAssignedUser) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// Deprecated: Marked as deprecated in api/v0alpha/omniapi.proto.
func (x *ListConversationsReq_ByAssignedUser) GetStatuses() []commons.ConversationStatus {
	if x != nil {
		return x.Statuses
	}
	return nil
}

func (x *ListConversationsReq_ByAssignedUser) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListConversationsReq_ByAssignedUser) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

// ByProject - filter to list campaigns by project
type ListContactListsReq_ByProject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// project identifier
	ProjectSid int64 `protobuf:"varint,1,opt,name=project_sid,json=projectSid,proto3" json:"project_sid,omitempty"`
}

func (x *ListContactListsReq_ByProject) Reset() {
	*x = ListContactListsReq_ByProject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListContactListsReq_ByProject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListContactListsReq_ByProject) ProtoMessage() {}

func (x *ListContactListsReq_ByProject) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListContactListsReq_ByProject.ProtoReflect.Descriptor instead.
func (*ListContactListsReq_ByProject) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{37, 0}
}

func (x *ListContactListsReq_ByProject) GetProjectSid() int64 {
	if x != nil {
		return x.ProjectSid
	}
	return 0
}

// ByConversation - retrieves the task the conversation was created from
type GetTaskReq_ByConversation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the conversation identifier
	ConversationSid int64 `protobuf:"varint,1,opt,name=conversation_sid,json=conversationSid,proto3" json:"conversation_sid,omitempty"`
}

func (x *GetTaskReq_ByConversation) Reset() {
	*x = GetTaskReq_ByConversation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskReq_ByConversation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskReq_ByConversation) ProtoMessage() {}

func (x *GetTaskReq_ByConversation) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskReq_ByConversation.ProtoReflect.Descriptor instead.
func (*GetTaskReq_ByConversation) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{42, 0}
}

func (x *GetTaskReq_ByConversation) GetConversationSid() int64 {
	if x != nil {
		return x.ConversationSid
	}
	return 0
}

// ByCampaign - retrieve tasks for the specified campaign
type ListTasksReq_ByCampaign struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The campaign identifier.
	CampaignSid int64 `protobuf:"varint,1,opt,name=campaign_sid,json=campaignSid,proto3" json:"campaign_sid,omitempty"`
	// Optional. The number of tasks to include in a single response. When  not provided
	// this defaults to 100.
	PageSize uint32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Optional. The next_page_token returned from a previous List request, if any.
	// When provided all other request fields are ignored.
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListTasksReq_ByCampaign) Reset() {
	*x = ListTasksReq_ByCampaign{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTasksReq_ByCampaign) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTasksReq_ByCampaign) ProtoMessage() {}

func (x *ListTasksReq_ByCampaign) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTasksReq_ByCampaign.ProtoReflect.Descriptor instead.
func (*ListTasksReq_ByCampaign) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{43, 0}
}

func (x *ListTasksReq_ByCampaign) GetCampaignSid() int64 {
	if x != nil {
		return x.CampaignSid
	}
	return 0
}

func (x *ListTasksReq_ByCampaign) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListTasksReq_ByCampaign) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

// ListConnectedInbox - a wrapper for a listed connected inbox containing the inbox and a list of it's associated campaigns
type ListConnectedInboxesRes_ListConnectedInbox struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the listed connected inbox
	ConnectedInbox *commons.ConnectedInbox `protobuf:"bytes,1,opt,name=connected_inbox,json=connectedInbox,proto3" json:"connected_inbox,omitempty"`
	// the associated campaigns
	Campaigns []*commons.OmniCampaign `protobuf:"bytes,2,rep,name=campaigns,proto3" json:"campaigns,omitempty"`
}

func (x *ListConnectedInboxesRes_ListConnectedInbox) Reset() {
	*x = ListConnectedInboxesRes_ListConnectedInbox{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListConnectedInboxesRes_ListConnectedInbox) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConnectedInboxesRes_ListConnectedInbox) ProtoMessage() {}

func (x *ListConnectedInboxesRes_ListConnectedInbox) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConnectedInboxesRes_ListConnectedInbox.ProtoReflect.Descriptor instead.
func (*ListConnectedInboxesRes_ListConnectedInbox) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{51, 0}
}

func (x *ListConnectedInboxesRes_ListConnectedInbox) GetConnectedInbox() *commons.ConnectedInbox {
	if x != nil {
		return x.ConnectedInbox
	}
	return nil
}

func (x *ListConnectedInboxesRes_ListConnectedInbox) GetCampaigns() []*commons.OmniCampaign {
	if x != nil {
		return x.Campaigns
	}
	return nil
}

// ByOmniAttachmentSid - filter to get attachment details by sid
type GetOmniAttachmentReq_ByOmniAttachmentSid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the attachment file identifier
	OmniAttachmentSid int64 `protobuf:"varint,1,opt,name=omni_attachment_sid,json=omniAttachmentSid,proto3" json:"omni_attachment_sid,omitempty"`
}

func (x *GetOmniAttachmentReq_ByOmniAttachmentSid) Reset() {
	*x = GetOmniAttachmentReq_ByOmniAttachmentSid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0alpha_omniapi_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOmniAttachmentReq_ByOmniAttachmentSid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOmniAttachmentReq_ByOmniAttachmentSid) ProtoMessage() {}

func (x *GetOmniAttachmentReq_ByOmniAttachmentSid) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_omniapi_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOmniAttachmentReq_ByOmniAttachmentSid.ProtoReflect.Descriptor instead.
func (*GetOmniAttachmentReq_ByOmniAttachmentSid) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_omniapi_proto_rawDescGZIP(), []int{68, 0}
}

func (x *GetOmniAttachmentReq_ByOmniAttachmentSid) GetOmniAttachmentSid() int64 {
	if x != nil {
		return x.OmniAttachmentSid
	}
	return 0
}

var File_api_v0alpha_omniapi_proto protoreflect.FileDescriptor

var file_api_v0alpha_omniapi_proto_rawDesc = []byte{
	0x0a, 0x19, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x6f, 0x6d,
	0x6e, 0x69, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x1a, 0x1d, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2f, 0x6f, 0x6d, 0x6e, 0x69, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x73, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x3d, 0x0a, 0x12, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x71, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x22, 0x43, 0x0a, 0x12, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x12, 0x2d, 0x0a, 0x12, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73,
	0x74, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xc1, 0x02, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x35, 0x0a, 0x08, 0x63,
	0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x6d, 0x6e, 0x69,
	0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x52, 0x08, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69,
	0x67, 0x6e, 0x12, 0x47, 0x0a, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e,
	0x52, 0x65, 0x71, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x4d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x1a, 0xab, 0x01, 0x0a, 0x0e,
	0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x37,
	0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x6d, 0x6e,
	0x69, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52,
	0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x51, 0x0a, 0x11, 0x6f, 0x6d, 0x6e, 0x69, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x64, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x44, 0x61, 0x74,
	0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x6f, 0x6d, 0x6e, 0x69, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x77, 0x0a, 0x16, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x5d, 0x0a, 0x19, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x16, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x22, 0x45, 0x0a, 0x15, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x10, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x73, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x69, 0x64, 0x22, 0xf6, 0x08, 0x0a, 0x10, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x12, 0x3b,
	0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e,
	0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x4f,
	0x6d, 0x6e, 0x69, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x09, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x3c, 0x0a, 0x06, 0x62, 0x79, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x2e, 0x42, 0x79, 0x49, 0x64, 0x73, 0x48, 0x00, 0x52, 0x05, 0x62,
	0x79, 0x49, 0x64, 0x73, 0x12, 0x48, 0x0a, 0x0a, 0x62, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61,
	0x69, 0x67, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x2e, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x48, 0x00, 0x52, 0x09, 0x62, 0x79, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x3f,
	0x0a, 0x07, 0x62, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x2e, 0x42,
	0x79, 0x54, 0x69, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x06, 0x62, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x61, 0x0a, 0x13, 0x62, 0x79, 0x5f, 0x75, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x2e, 0x42, 0x79, 0x55, 0x6e,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x48, 0x00, 0x52,
	0x11, 0x62, 0x79, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4c, 0x69,
	0x6e, 0x6b, 0x12, 0x5e, 0x0a, 0x12, 0x62, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x5f, 0x69, 0x6e, 0x62, 0x6f, 0x78, 0x18, 0x68, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x2e, 0x42, 0x79,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x62, 0x6f, 0x78, 0x48, 0x00,
	0x52, 0x10, 0x62, 0x79, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x62,
	0x6f, 0x78, 0x12, 0x5b, 0x0a, 0x11, 0x62, 0x79, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x69, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x2e, 0x42, 0x79, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x48, 0x00, 0x52, 0x0f,
	0x62, 0x79, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x4f, 0x0a, 0x0d, 0x62, 0x79, 0x5f, 0x73, 0x6d, 0x73, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x6a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x2e, 0x42, 0x79, 0x53, 0x6d, 0x73, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x48, 0x00, 0x52, 0x0b, 0x62, 0x79, 0x53, 0x6d, 0x73, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x1a, 0x33, 0x0a, 0x10, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49,
	0x6e, 0x62, 0x6f, 0x78, 0x12, 0x1f, 0x0a, 0x09, 0x69, 0x6e, 0x62, 0x6f, 0x78, 0x5f, 0x73, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x08, 0x69, 0x6e, 0x62,
	0x6f, 0x78, 0x53, 0x69, 0x64, 0x1a, 0x30, 0x0a, 0x05, 0x42, 0x79, 0x49, 0x64, 0x73, 0x12, 0x27,
	0x0a, 0x0d, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x5f, 0x73, 0x69, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x0c, 0x63, 0x61, 0x6d, 0x70, 0x61,
	0x69, 0x67, 0x6e, 0x53, 0x69, 0x64, 0x73, 0x1a, 0x30, 0x0a, 0x09, 0x42, 0x79, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x12, 0x23, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x0a, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x69, 0x64, 0x1a, 0x7e, 0x0a, 0x06, 0x42, 0x79, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x66, 0x72,
	0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x72, 0x6f, 0x6d,
	0x12, 0x37, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x74, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x08, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x6f, 0x1a, 0x32, 0x0a, 0x11, 0x42, 0x79, 0x55,
	0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x1d,
	0x0a, 0x08, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x42, 0x02, 0x30, 0x01, 0x52, 0x07, 0x6c, 0x69, 0x6e, 0x6b, 0x53, 0x69, 0x64, 0x1a, 0x32, 0x0a,
	0x0f, 0x42, 0x79, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x1f, 0x0a, 0x09, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x08, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x69,
	0x64, 0x1a, 0x25, 0x0a, 0x0b, 0x42, 0x79, 0x53, 0x6d, 0x73, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x08, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x22, 0x86, 0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61,
	0x69, 0x67, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x12, 0x37, 0x0a, 0x09, 0x63, 0x61, 0x6d, 0x70, 0x61,
	0x69, 0x67, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x6d, 0x6e, 0x69, 0x43, 0x61, 0x6d,
	0x70, 0x61, 0x69, 0x67, 0x6e, 0x52, 0x09, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73,
	0x12, 0x39, 0x0a, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e,
	0x4f, 0x6d, 0x6e, 0x69, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x4d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x22, 0x3b, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x12, 0x25, 0x0a, 0x0c, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x5f, 0x73, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x0b, 0x63, 0x61, 0x6d,
	0x70, 0x61, 0x69, 0x67, 0x6e, 0x53, 0x69, 0x64, 0x22, 0x38, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4f,
	0x66, 0x66, 0x4c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x54, 0x65, 0x78, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x36, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4f, 0x66, 0x66, 0x4c, 0x6f, 0x61, 0x64,
	0x65, 0x64, 0x54, 0x65, 0x78, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xf0, 0x03, 0x0a, 0x16, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x76, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6c, 0x69, 0x76, 0x65, 0x12, 0x3b, 0x0a, 0x0c,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73,
	0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x67, 0x0a, 0x13, 0x62, 0x79, 0x5f,
	0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x69, 0x64,
	0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x2e, 0x42, 0x79, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x64, 0x48, 0x00, 0x52,
	0x11, 0x62, 0x79, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x69, 0x64, 0x12, 0x4f, 0x0a, 0x0b, 0x62, 0x79, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x69,
	0x64, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x2e, 0x42, 0x79, 0x54,
	0x61, 0x73, 0x6b, 0x53, 0x69, 0x64, 0x48, 0x00, 0x52, 0x09, 0x62, 0x79, 0x54, 0x61, 0x73, 0x6b,
	0x53, 0x69, 0x64, 0x1a, 0x42, 0x0a, 0x11, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x64, 0x12, 0x2d, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x64, 0x1a, 0x2a, 0x0a, 0x09, 0x42, 0x79, 0x54, 0x61, 0x73,
	0x6b, 0x53, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x07, 0x74, 0x61, 0x73, 0x6b,
	0x53, 0x69, 0x64, 0x42, 0x08, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0xcc, 0x02,
	0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6c,
	0x69, 0x76, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6c, 0x69, 0x76, 0x65, 0x12,
	0x3b, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x60, 0x0a, 0x13,
	0x62, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x73, 0x69, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x2e, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x64, 0x48, 0x00, 0x52, 0x11, 0x62, 0x79, 0x43,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x64, 0x1a, 0x42,
	0x0a, 0x11, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x69, 0x64, 0x12, 0x2d, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30,
	0x01, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x69, 0x64, 0x42, 0x08, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x49, 0x0a, 0x1a,
	0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x8a, 0x02, 0x0a, 0x12, 0x53, 0x65, 0x6e, 0x64,
	0x4f, 0x6d, 0x6e, 0x69, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x2d,
	0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x0f, 0x63, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x64, 0x12, 0x39, 0x0a,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x6d, 0x6e,
	0x69, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x25, 0x0a, 0x0c, 0x63, 0x61, 0x6d, 0x70,
	0x61, 0x69, 0x67, 0x6e, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02,
	0x30, 0x01, 0x52, 0x0b, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x53, 0x69, 0x64, 0x12,
	0x26, 0x0a, 0x0f, 0x75, 0x69, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x75, 0x69, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x54, 0x79, 0x70, 0x65, 0x22, 0x9e, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x35, 0x0a, 0x08, 0x63, 0x61,
	0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x6d, 0x6e, 0x69, 0x43,
	0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x52, 0x08, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67,
	0x6e, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x34, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x49, 0x64, 0x22, 0xdc, 0x05, 0x0a, 0x14,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x12, 0x3d, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54, 0x79,
	0x70, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73,
	0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d,
	0x61, 0x73, 0x6b, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x3b,
	0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0e,
	0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x43,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x12, 0x43, 0x0a, 0x07, 0x62,
	0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x2e,
	0x42, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x06, 0x62, 0x79, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x5c, 0x0a, 0x10, 0x62, 0x79, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x2e, 0x42, 0x79,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0e,
	0x62, 0x79, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x1a, 0xb6,
	0x01, 0x0a, 0x06, 0x42, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61,
	0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x1a, 0xa6, 0x01, 0x0a, 0x0e, 0x42, 0x79, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x3f, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x02, 0x18, 0x01, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x42, 0x08, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x83, 0x01, 0x0a, 0x14, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x12, 0x43, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x6d, 0x6e, 0x69, 0x43, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74,
	0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0x38, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x69, 0x73, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x69, 0x73, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x43, 0x0a, 0x14, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x44, 0x69, 0x73, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x12, 0x2b, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52,
	0x0e, 0x64, 0x69, 0x73, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x64, 0x22,
	0x52, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x73, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x3a, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x15, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x73, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x22, 0x53, 0x0a, 0x13, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x69, 0x73, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x12, 0x3c, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0x65, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x73, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x42, 0x02, 0x30, 0x01, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x81, 0x01, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x12, 0x60, 0x0a, 0x18, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x5f, 0x75, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x5f, 0x6c,
	0x69, 0x6e, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x6d, 0x6e, 0x69, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4c, 0x69,
	0x6e, 0x6b, 0x52, 0x16, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x22, 0x81, 0x01, 0x0a, 0x1e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x55, 0x6e, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x12, 0x41, 0x0a,
	0x1b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x75, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x18, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x55, 0x6e,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x69, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0xbd,
	0x01, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x55,
	0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65,
	0x71, 0x12, 0x41, 0x0a, 0x1b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x75, 0x6e, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x73, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x18, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4c, 0x69, 0x6e,
	0x6b, 0x53, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x69, 0x6e, 0x6b, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x69, 0x6e, 0x6b, 0x55, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x81,
	0x01, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x55,
	0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x41, 0x0a, 0x0e, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0d, 0x64, 0x61, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x22, 0x63, 0x0a, 0x1e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4c, 0x69, 0x6e,
	0x6b, 0x52, 0x65, 0x71, 0x12, 0x41, 0x0a, 0x1b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x75,
	0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x5f,
	0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x18, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x69, 0x64, 0x22, 0xc9, 0x01, 0x0a, 0x10, 0x50, 0x61, 0x75, 0x73,
	0x65, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x0c,
	0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x0b, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e,
	0x53, 0x69, 0x64, 0x12, 0x3b, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x51, 0x0a, 0x12, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x5f, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x6d, 0x6e, 0x69, 0x43,
	0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x11, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x35, 0x0a, 0x10, 0x50, 0x61, 0x75, 0x73, 0x65, 0x43, 0x61, 0x6d, 0x70,
	0x61, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x22, 0xca, 0x01, 0x0a, 0x11, 0x52,
	0x65, 0x73, 0x75, 0x6d, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71,
	0x12, 0x25, 0x0a, 0x0c, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x5f, 0x73, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x0b, 0x63, 0x61, 0x6d, 0x70,
	0x61, 0x69, 0x67, 0x6e, 0x53, 0x69, 0x64, 0x12, 0x3b, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x51, 0x0a, 0x12, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e,
	0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x4f,
	0x6d, 0x6e, 0x69, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x36, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x75, 0x6d,
	0x65, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x22,
	0xcb, 0x01, 0x0a, 0x12, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x61,
	0x69, 0x67, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x0c, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69,
	0x67, 0x6e, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01,
	0x52, 0x0b, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x53, 0x69, 0x64, 0x12, 0x3b, 0x0a,
	0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x51, 0x0a, 0x12, 0x63, 0x61,
	0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x6d, 0x6e, 0x69, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67,
	0x6e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x63, 0x61, 0x6d, 0x70,
	0x61, 0x69, 0x67, 0x6e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x37, 0x0a,
	0x12, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e,
	0x52, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x22, 0xaf, 0x02, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x50, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x53,
	0x70, 0x65, 0x65, 0x64, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x0c, 0x63, 0x61, 0x6d, 0x70, 0x61,
	0x69, 0x67, 0x6e, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30,
	0x01, 0x52, 0x0b, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x53, 0x69, 0x64, 0x12, 0x3b,
	0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x51, 0x0a, 0x12, 0x63,
	0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x6d, 0x6e, 0x69, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69,
	0x67, 0x6e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x63, 0x61, 0x6d,
	0x70, 0x61, 0x69, 0x67, 0x6e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24,
	0x0a, 0x0e, 0x73, 0x65, 0x6e, 0x64, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x68, 0x6f, 0x75, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x73, 0x65, 0x6e, 0x64, 0x73, 0x50, 0x65, 0x72,
	0x48, 0x6f, 0x75, 0x72, 0x12, 0x32, 0x0a, 0x13, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e,
	0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x11, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x4d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x69, 0x64, 0x22, 0x41, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x50, 0x61, 0x63, 0x69, 0x6e, 0x67,
	0x53, 0x70, 0x65, 0x65, 0x64, 0x52, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x22, 0xd9, 0x01, 0x0a, 0x13,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x39, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73,
	0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d,
	0x61, 0x73, 0x6b, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x4b,
	0x0a, 0x0a, 0x62, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x64, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x2e, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x48, 0x00,
	0x52, 0x09, 0x62, 0x79, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x1a, 0x30, 0x0a, 0x09, 0x42,
	0x79, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x23, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30,
	0x01, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x69, 0x64, 0x42, 0x08, 0x0a,
	0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x54, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x12, 0x3d,
	0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x22, 0x18, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x22, 0x4c, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x73, 0x12, 0x32, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x07, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x73, 0x22, 0x3b, 0x0a, 0x0b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x73, 0x22, 0xe5, 0x01, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65,
	0x71, 0x12, 0x39, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73,
	0x6b, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x51, 0x0a, 0x0f,
	0x62, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x2e, 0x42,
	0x79, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52,
	0x0e, 0x62, 0x79, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a,
	0x3f, 0x0a, 0x0e, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x2d, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52,
	0x0f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x64,
	0x42, 0x08, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x8d, 0x02, 0x0a, 0x0c, 0x4c,
	0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x12, 0x39, 0x0a, 0x0a, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x09, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x47, 0x0a, 0x0b, 0x62, 0x79, 0x5f, 0x63, 0x61, 0x6d,
	0x70, 0x61, 0x69, 0x67, 0x6e, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61,
	0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x2e, 0x42, 0x79, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67,
	0x6e, 0x48, 0x00, 0x52, 0x0a, 0x62, 0x79, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x1a,
	0x6f, 0x0a, 0x0a, 0x42, 0x79, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x12, 0x25, 0x0a,
	0x0c, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x0b, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67,
	0x6e, 0x53, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x42, 0x08, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x63, 0x0a, 0x0c, 0x4c, 0x69,
	0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65,
	0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x2b, 0x0a, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e,
	0x4f, 0x6d, 0x6e, 0x69, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x22,
	0x4d, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x49, 0x6e, 0x62, 0x6f, 0x78, 0x52, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x13, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x62, 0x6f, 0x78, 0x5f, 0x73, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x11, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x62, 0x6f, 0x78, 0x53, 0x69, 0x64, 0x22, 0x52,
	0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x49, 0x6e, 0x62, 0x6f, 0x78, 0x42, 0x79, 0x53, 0x69, 0x64, 0x52, 0x65, 0x71, 0x12, 0x32,
	0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x62, 0x6f,
	0x78, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52,
	0x11, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x62, 0x6f, 0x78, 0x53,
	0x69, 0x64, 0x22, 0x4f, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x49, 0x6e, 0x62, 0x6f, 0x78, 0x42, 0x79, 0x53, 0x69, 0x64, 0x52, 0x65, 0x71, 0x12,
	0x32, 0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x62,
	0x6f, 0x78, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01,
	0x52, 0x11, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x62, 0x6f, 0x78,
	0x53, 0x69, 0x64, 0x22, 0x1c, 0x0a, 0x1a, 0x53, 0x65, 0x6e, 0x64, 0x67, 0x72, 0x69, 0x64, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x22, 0x34, 0x0a, 0x1a, 0x53, 0x65, 0x6e, 0x64, 0x67, 0x72, 0x69, 0x64, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x54, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x62, 0x6f, 0x78, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x12, 0x39, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61,
	0x73, 0x6b, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x95, 0x02,
	0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49,
	0x6e, 0x62, 0x6f, 0x78, 0x65, 0x73, 0x52, 0x65, 0x73, 0x12, 0x64, 0x0a, 0x11, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x62, 0x6f, 0x78, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x49, 0x6e, 0x62, 0x6f, 0x78, 0x65, 0x73, 0x52, 0x65, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x62, 0x6f, 0x78, 0x52, 0x10, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x62, 0x6f, 0x78, 0x65, 0x73, 0x1a,
	0x93, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x49, 0x6e, 0x62, 0x6f, 0x78, 0x12, 0x44, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x62, 0x6f, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x62, 0x6f, 0x78, 0x52, 0x0e, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x62, 0x6f, 0x78, 0x12, 0x37, 0x0a, 0x09,
	0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x6d,
	0x6e, 0x69, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x52, 0x09, 0x63, 0x61, 0x6d, 0x70,
	0x61, 0x69, 0x67, 0x6e, 0x73, 0x22, 0x4b, 0x0a, 0x15, 0x54, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x62, 0x6f, 0x78, 0x52, 0x65, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x22, 0x9a, 0x01, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x62, 0x6f, 0x78, 0x52, 0x65, 0x71, 0x12, 0x44,
	0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x62, 0x6f,
	0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49,
	0x6e, 0x62, 0x6f, 0x78, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49,
	0x6e, 0x62, 0x6f, 0x78, 0x12, 0x39, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61,
	0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x4d, 0x61, 0x73, 0x6b, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x22,
	0x4a, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x12, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x73, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x10, 0x76, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x69, 0x64, 0x22, 0x93, 0x01, 0x0a, 0x18,
	0x53, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x2f, 0x0a, 0x14, 0x74, 0x6f, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x5f, 0x61, 0x72, 0x72, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11,
	0x74, 0x6f, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x41, 0x72,
	0x72, 0x22, 0x1a, 0x0a, 0x18, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x22, 0x4c, 0x0a,
	0x18, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x42, 0x79, 0x53, 0x69, 0x64, 0x52, 0x65, 0x71, 0x12, 0x30, 0x0a, 0x12, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x73, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x10, 0x76, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x69, 0x64, 0x22, 0x4a, 0x0a, 0x16, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x30, 0x0a, 0x12, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x10, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x53, 0x69, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71,
	0x22, 0x5c, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x12, 0x43, 0x0a, 0x0f, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73,
	0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x0e,
	0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x4a,
	0x0a, 0x16, 0x52, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x30, 0x0a, 0x12, 0x76, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x10, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x69, 0x64, 0x22, 0x18, 0x0a, 0x16, 0x52, 0x65,
	0x73, 0x65, 0x6e, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x73, 0x22, 0x6c, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x30,
	0x0a, 0x12, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x5f, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x10,
	0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x69, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x53, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x58, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x32, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x12, 0x31, 0x0a, 0x14, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x13, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x45, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x50, 0x65,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x58, 0x4f, 0x41, 0x75, 0x74,
	0x68, 0x32, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x96,
	0x01, 0x0a, 0x14, 0x53, 0x65, 0x6e, 0x64, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x5f,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x72, 0x6f,
	0x6d, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x72, 0x65, 0x65,
	0x6e, 0x73, 0x68, 0x6f, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x72,
	0x65, 0x65, 0x6e, 0x73, 0x68, 0x6f, 0x74, 0x22, 0x16, 0x0a, 0x14, 0x53, 0x65, 0x6e, 0x64, 0x46,
	0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x22,
	0x8b, 0x02, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4f, 0x6d, 0x6e, 0x69, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x30, 0x0a, 0x14, 0x69, 0x6e, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x44,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x12, 0x6c, 0x0a, 0x16, 0x62, 0x79,
	0x5f, 0x6f, 0x6d, 0x6e, 0x69, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x73, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x6d, 0x6e, 0x69,
	0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x2e, 0x42, 0x79,
	0x4f, 0x6d, 0x6e, 0x69, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x69,
	0x64, 0x48, 0x00, 0x52, 0x13, 0x62, 0x79, 0x4f, 0x6d, 0x6e, 0x69, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x64, 0x1a, 0x49, 0x0a, 0x13, 0x42, 0x79, 0x4f, 0x6d,
	0x6e, 0x69, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x64, 0x12,
	0x32, 0x0a, 0x13, 0x6f, 0x6d, 0x6e, 0x69, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01,
	0x52, 0x11, 0x6f, 0x6d, 0x6e, 0x69, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x53, 0x69, 0x64, 0x42, 0x08, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0xd9, 0x01,
	0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x25, 0x0a, 0x0c, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x5f, 0x73, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x0b, 0x63, 0x61, 0x6d, 0x70,
	0x61, 0x69, 0x67, 0x6e, 0x53, 0x69, 0x64, 0x12, 0x32, 0x0a, 0x13, 0x63, 0x61, 0x6d, 0x70, 0x61,
	0x69, 0x67, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x11, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69,
	0x67, 0x6e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x69, 0x64, 0x12, 0x5d, 0x0a, 0x18, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x48, 0x00, 0x52, 0x15, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x33, 0x0a, 0x0e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x22, 0x68,
	0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4a, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x12, 0x34,
	0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x22, 0x3d, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x12, 0x27, 0x0a, 0x0d, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x0c, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x53, 0x69, 0x64, 0x22, 0x14, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x22, 0x13, 0x0a, 0x11, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x22, 0x4b,
	0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52,
	0x0a, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x22, 0x85, 0x01, 0x0a, 0x12,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x34, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x73, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4d,
	0x61, 0x73, 0x6b, 0x22, 0x4a, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x32,
	0xaf, 0x36, 0x0a, 0x07, 0x4f, 0x6d, 0x6e, 0x69, 0x41, 0x70, 0x69, 0x12, 0x84, 0x01, 0x0a, 0x0f,
	0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x12,
	0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x41, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71,
	0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x41,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x52, 0x65,
	0x73, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x3a, 0x01, 0x2a, 0x22, 0x24, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x6f, 0x6d, 0x6e, 0x69, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69,
	0x67, 0x6e, 0x12, 0x7b, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6d, 0x70,
	0x61, 0x69, 0x67, 0x6e, 0x12, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67,
	0x6e, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x73, 0x2e, 0x4f, 0x6d, 0x6e, 0x69, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x22,
	0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x3a, 0x01, 0x2a, 0x22, 0x23, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x6f, 0x6d, 0x6e, 0x69, 0x61, 0x70, 0x69,
	0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x12,
	0x7e, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x42, 0x79,
	0x49, 0x64, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x42, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x73, 0x2e, 0x4f, 0x6d, 0x6e, 0x69, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x22, 0x2f,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x3a, 0x01, 0x2a, 0x22, 0x24, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x6f, 0x6d, 0x6e, 0x69, 0x61, 0x70, 0x69, 0x2f,
	0x67, 0x65, 0x74, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x62, 0x79, 0x69, 0x64, 0x12,
	0x7c, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73,
	0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x1a,
	0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x22, 0x2d,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x3a, 0x01, 0x2a, 0x22, 0x22, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x6f, 0x6d, 0x6e, 0x69, 0x61, 0x70, 0x69, 0x2f,
	0x6c, 0x69, 0x73, 0x74, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x12, 0x7c, 0x0a,
	0x0d, 0x50, 0x61, 0x75, 0x73, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x12, 0x1d,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x50, 0x61, 0x75,
	0x73, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x50, 0x61, 0x75, 0x73,
	0x65, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x73, 0x22, 0x2d, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x27, 0x3a, 0x01, 0x2a, 0x22, 0x22, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x6f, 0x6d, 0x6e, 0x69, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x61,
	0x75, 0x73, 0x65, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x12, 0x80, 0x01, 0x0a, 0x0e,
	0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x12, 0x1e,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x52, 0x65, 0x73,
	0x75, 0x6d, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1e,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x52, 0x65, 0x73,
	0x75, 0x6d, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x73, 0x22, 0x2e,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x3a, 0x01, 0x2a, 0x22, 0x23, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x6f, 0x6d, 0x6e, 0x69, 0x61, 0x70, 0x69, 0x2f,
	0x72, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x12, 0x80,
	0x01, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67,
	0x6e, 0x12, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x52, 0x65,
	0x71, 0x1a, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x52, 0x65,
	0x73, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x3a, 0x01, 0x2a, 0x22, 0x23, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x6f, 0x6d, 0x6e, 0x69, 0x61,
	0x70, 0x69, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67,
	0x6e, 0x12, 0xac, 0x01, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6d, 0x70,
	0x61, 0x69, 0x67, 0x6e, 0x50, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12,
	0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x50, 0x61, 0x63, 0x69,
	0x6e, 0x67, 0x53, 0x70, 0x65, 0x65, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x50, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x53, 0x70, 0x65,
	0x65, 0x64, 0x52, 0x65, 0x73, 0x22, 0x39, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x33, 0x3a, 0x01, 0x2a,
	0x22, 0x2e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x6f,
	0x6d, 0x6e, 0x69, 0x61, 0x70, 0x69, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x63, 0x61, 0x6d,
	0x70, 0x61, 0x69, 0x67, 0x6e, 0x70, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x73, 0x70, 0x65, 0x65, 0x64,
	0x12, 0xa4, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4f, 0x66, 0x66, 0x4c, 0x6f, 0x61, 0x64, 0x65,
	0x64, 0x54, 0x65, 0x78, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x27, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x66,
	0x66, 0x4c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x54, 0x65, 0x78, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x66, 0x66, 0x4c, 0x6f, 0x61, 0x64, 0x65, 0x64,
	0x54, 0x65, 0x78, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x22, 0x37,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x31, 0x3a, 0x01, 0x2a, 0x22, 0x2c, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x6f, 0x6d, 0x6e, 0x69, 0x61, 0x70, 0x69, 0x2f,
	0x67, 0x65, 0x74, 0x6f, 0x66, 0x66, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x74, 0x65, 0x78, 0x74,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x8b, 0x01, 0x0a, 0x13, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12,
	0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x73, 0x2e, 0x4f, 0x6d, 0x6e, 0x69, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x33,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x3a, 0x01, 0x2a, 0x22, 0x28, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x6f, 0x6d, 0x6e, 0x69, 0x61, 0x70, 0x69, 0x2f,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x6c, 0x69, 0x73, 0x74, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x30, 0x01, 0x12, 0x76, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x73, 0x2e, 0x4f, 0x6d, 0x6e, 0x69, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x2c, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x26, 0x3a, 0x01, 0x2a, 0x22, 0x21, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x6f, 0x6d, 0x6e, 0x69, 0x61, 0x70, 0x69, 0x2f, 0x6c,
	0x69, 0x73, 0x74, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x30, 0x01, 0x12, 0x77, 0x0a,
	0x0f, 0x53, 0x65, 0x6e, 0x64, 0x4f, 0x6d, 0x6e, 0x69, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53,
	0x65, 0x6e, 0x64, 0x4f, 0x6d, 0x6e, 0x69, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x3a, 0x01, 0x2a,
	0x22, 0x24, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x6f,
	0x6d, 0x6e, 0x69, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x65, 0x6e, 0x64, 0x6f, 0x6d, 0x6e, 0x69, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x85, 0x01, 0x0a, 0x16, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x53, 0x65, 0x6e, 0x64, 0x4f, 0x6d, 0x6e, 0x69, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x53, 0x65, 0x6e, 0x64, 0x4f, 0x6d, 0x6e, 0x69, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x36, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x30, 0x3a, 0x01,
	0x2a, 0x22, 0x2b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f,
	0x6f, 0x6d, 0x6e, 0x69, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x73,
	0x65, 0x6e, 0x64, 0x6f, 0x6d, 0x6e, 0x69, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x93,
	0x01, 0x0a, 0x18, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x21, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x21,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x22, 0x31, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x3a, 0x01, 0x2a, 0x22, 0x26, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x6f, 0x6d, 0x6e, 0x69, 0x61,
	0x70, 0x69, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x84, 0x01, 0x0a, 0x0f, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x29, 0x3a, 0x01, 0x2a, 0x22, 0x24, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2f, 0x6f, 0x6d, 0x6e, 0x69, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x75, 0x67, 0x67,
	0x65, 0x73, 0x74, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8c, 0x01, 0x0a, 0x11,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x69, 0x73, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x69, 0x73, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x69, 0x73, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x22, 0x31, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x3a,
	0x01, 0x2a, 0x22, 0x26, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2f, 0x6f, 0x6d, 0x6e, 0x69, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x69, 0x73, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x7d, 0x0a, 0x11, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x73, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x73, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x1a, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x31, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x3a, 0x01,
	0x2a, 0x22, 0x26, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f,
	0x6f, 0x6d, 0x6e, 0x69, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x69,
	0x73, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x88, 0x01, 0x0a, 0x10, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x69, 0x73, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x20,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x69, 0x73, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x69, 0x73, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x22, 0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x3a, 0x01, 0x2a, 0x22, 0x25, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x6f, 0x6d, 0x6e, 0x69,
	0x61, 0x70, 0x69, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x64, 0x69, 0x73, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x7d, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69,
	0x73, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69,
	0x73, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x31, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x3a, 0x01, 0x2a, 0x22, 0x26, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x6f, 0x6d, 0x6e, 0x69, 0x61, 0x70,
	0x69, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x69, 0x73, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x98, 0x01, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4c, 0x69, 0x6e,
	0x6b, 0x73, 0x12, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x55,
	0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52,
	0x65, 0x73, 0x22, 0x3a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x34, 0x3a, 0x01, 0x2a, 0x22, 0x2f, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x6f, 0x6d, 0x6e, 0x69,
	0x61, 0x70, 0x69, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x75, 0x6e,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0xaf,
	0x01, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x55,
	0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x26,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x6d, 0x6e,
	0x69, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x1a, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4c, 0x69, 0x6e, 0x6b,
	0x52, 0x65, 0x73, 0x22, 0x3b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x35, 0x3a, 0x01, 0x2a, 0x22, 0x30,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x6f, 0x6d, 0x6e,
	0x69, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x75, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x6c, 0x69, 0x6e, 0x6b,
	0x12, 0xb4, 0x01, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4c, 0x69, 0x6e, 0x6b,
	0x12, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x55, 0x6e, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x2b, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x22, 0x3b, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x35, 0x3a, 0x01, 0x2a, 0x22, 0x30, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2f, 0x6f, 0x6d, 0x6e, 0x69, 0x61, 0x70, 0x69, 0x2f, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x75, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x9b, 0x01, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4c, 0x69, 0x6e,
	0x6b, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x3b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x35,
	0x3a, 0x01, 0x2a, 0x22, 0x30, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2f, 0x6f, 0x6d, 0x6e, 0x69, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x75, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x88, 0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x12, 0x20, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x22, 0x30,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x3a, 0x01, 0x2a, 0x22, 0x25, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x6f, 0x6d, 0x6e, 0x69, 0x61, 0x70, 0x69, 0x2f,
	0x6c, 0x69, 0x73, 0x74, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x73,
	0x12, 0x94, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x73, 0x22, 0x33, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x3a, 0x01, 0x2a, 0x22, 0x28, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x6f, 0x6d, 0x6e, 0x69,
	0x61, 0x70, 0x69, 0x2f, 0x67, 0x65, 0x74, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x62, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x54, 0x61,
	0x73, 0x6b, 0x12, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x6d, 0x6e, 0x69, 0x54, 0x61,
	0x73, 0x6b, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x3a, 0x01, 0x2a, 0x22, 0x1c, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x6f, 0x6d, 0x6e, 0x69,
	0x61, 0x70, 0x69, 0x2f, 0x67, 0x65, 0x74, 0x74, 0x61, 0x73, 0x6b, 0x12, 0x6c, 0x0a, 0x09, 0x4c,
	0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x22, 0x29,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x3a, 0x01, 0x2a, 0x22, 0x1e, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x6f, 0x6d, 0x6e, 0x69, 0x61, 0x70, 0x69, 0x2f,
	0x6c, 0x69, 0x73, 0x74, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x8f, 0x01, 0x0a, 0x14, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x62,
	0x6f, 0x78, 0x12, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73,
	0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x62, 0x6f, 0x78, 0x1a,
	0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x62,
	0x6f, 0x78, 0x52, 0x65, 0x73, 0x22, 0x34, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2e, 0x3a, 0x01, 0x2a,
	0x22, 0x29, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x6f,
	0x6d, 0x6e, 0x69, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x69, 0x6e, 0x62, 0x6f, 0x78, 0x12, 0x95, 0x01, 0x0a, 0x19,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49,
	0x6e, 0x62, 0x6f, 0x78, 0x42, 0x79, 0x53, 0x69, 0x64, 0x12, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x62, 0x6f, 0x78, 0x42, 0x79, 0x53, 0x69,
	0x64, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x39, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x33,
	0x3a, 0x01, 0x2a, 0x22, 0x2e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2f, 0x6f, 0x6d, 0x6e, 0x69, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x69, 0x6e, 0x62, 0x6f, 0x78, 0x62, 0x79,
	0x73, 0x69, 0x64, 0x12, 0x95, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x62, 0x6f, 0x78, 0x42, 0x79, 0x53, 0x69, 0x64, 0x12, 0x26,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x62, 0x6f, 0x78, 0x42, 0x79,
	0x53, 0x69, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49, 0x6e,
	0x62, 0x6f, 0x78, 0x22, 0x36, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x30, 0x3a, 0x01, 0x2a, 0x22, 0x2b,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x6f, 0x6d, 0x6e,
	0x69, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x65, 0x74, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x69, 0x6e, 0x62, 0x6f, 0x78, 0x62, 0x79, 0x73, 0x69, 0x64, 0x12, 0xaf, 0x01, 0x0a, 0x1c,
	0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x6e, 0x64, 0x67, 0x72, 0x69, 0x64, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x12, 0x27, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x67,
	0x72, 0x69, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x67, 0x72, 0x69, 0x64, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x42, 0x79, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x22, 0x3d,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x37, 0x3a, 0x01, 0x2a, 0x22, 0x32, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x61, 0x70, 0x69,
	0x2f, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x73, 0x65, 0x6e, 0x64, 0x67, 0x72, 0x69, 0x64,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x12, 0x98, 0x01,
	0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49,
	0x6e, 0x62, 0x6f, 0x78, 0x65, 0x73, 0x12, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x49, 0x6e, 0x62, 0x6f, 0x78, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x62, 0x6f, 0x78, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x22, 0x34, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2e, 0x3a, 0x01, 0x2a, 0x22, 0x29, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x6f, 0x6d, 0x6e, 0x69,
	0x61, 0x70, 0x69, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x69, 0x6e, 0x62, 0x6f, 0x78, 0x65, 0x73, 0x12, 0x89, 0x01, 0x0a, 0x12, 0x54, 0x65, 0x73,
	0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x62, 0x6f, 0x78, 0x12,
	0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x62, 0x6f, 0x78, 0x1a, 0x22, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x62, 0x6f, 0x78, 0x52, 0x65, 0x73,
	0x22, 0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x3a, 0x01, 0x2a, 0x22, 0x27, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x6f, 0x6d, 0x6e, 0x69, 0x61, 0x70,
	0x69, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x69,
	0x6e, 0x62, 0x6f, 0x78, 0x12, 0x86, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x62, 0x6f, 0x78, 0x12, 0x24, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x62, 0x6f, 0x78,
	0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x34, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2e, 0x3a,
	0x01, 0x2a, 0x22, 0x29, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2f, 0x6f, 0x6d, 0x6e, 0x69, 0x61, 0x70, 0x69, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x69, 0x6e, 0x62, 0x6f, 0x78, 0x12, 0x8b, 0x01,
	0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x73, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x1a, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x22, 0x33, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x3a, 0x01,
	0x2a, 0x22, 0x28, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f,
	0x6f, 0x6d, 0x6e, 0x69, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x76, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x9d, 0x01, 0x0a, 0x15,
	0x53, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x22, 0x36, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x30, 0x3a, 0x01, 0x2a, 0x22, 0x2b,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x83, 0x01, 0x0a, 0x13,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x33, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x2d, 0x3a, 0x01, 0x2a, 0x22, 0x28, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x6f, 0x6d, 0x6e, 0x69, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x90, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x42, 0x79, 0x53, 0x69, 0x64, 0x12, 0x25, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x42, 0x79, 0x53, 0x69, 0x64, 0x52,
	0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73,
	0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x34,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2e, 0x3a, 0x01, 0x2a, 0x22, 0x29, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x6f, 0x6d, 0x6e, 0x69, 0x61, 0x70, 0x69, 0x2f,
	0x67, 0x65, 0x74, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x62, 0x79, 0x69, 0x64, 0x12, 0x90, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x22, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x1a,
	0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x73,
	0x52, 0x65, 0x73, 0x22, 0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x3a, 0x01, 0x2a, 0x22, 0x27,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x6f, 0x6d, 0x6e,
	0x69, 0x61, 0x70, 0x69, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x94, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x65,
	0x6e, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x52, 0x65,
	0x73, 0x65, 0x6e, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x22, 0x33, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x2d, 0x3a, 0x01, 0x2a, 0x22, 0x28, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2f, 0x6f, 0x6d, 0x6e, 0x69, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x65, 0x6e,
	0x64, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x83,
	0x01, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x33, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x3a, 0x01, 0x2a, 0x22, 0x28, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x6f, 0x6d, 0x6e, 0x69, 0x61, 0x70, 0x69,
	0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0xb4, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x50, 0x65, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x58, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x32,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x58, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x32, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x1a, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x58, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x32, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x22, 0x3b,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x35, 0x3a, 0x01, 0x2a, 0x22, 0x30, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x6f, 0x6d, 0x6e, 0x69, 0x61, 0x70, 0x69, 0x2f,
	0x67, 0x65, 0x74, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x78, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x64, 0x61, 0x74, 0x61, 0x12, 0x8c, 0x01, 0x0a, 0x11,
	0x53, 0x65, 0x6e, 0x64, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x53, 0x65, 0x6e, 0x64, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x22, 0x31, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x3a,
	0x01, 0x2a, 0x22, 0x26, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2f, 0x6f, 0x6d, 0x6e, 0x69, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x65, 0x6e, 0x64, 0x66, 0x65, 0x65,
	0x64, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x86, 0x01, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x4f, 0x6d, 0x6e, 0x69, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47,
	0x65, 0x74, 0x4f, 0x6d, 0x6e, 0x69, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x73, 0x2e, 0x4f, 0x6d, 0x6e, 0x69, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x22, 0x31, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x3a, 0x01, 0x2a, 0x22, 0x26, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x6f, 0x6d, 0x6e, 0x69, 0x61, 0x70,
	0x69, 0x2f, 0x67, 0x65, 0x74, 0x6f, 0x6d, 0x6e, 0x69, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x74, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73,
	0x6b, 0x73, 0x12, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x1a,
	0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x22, 0x2b, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x25, 0x3a, 0x01, 0x2a, 0x22, 0x20, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x6f, 0x6d, 0x6e, 0x69, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x84, 0x01, 0x0a, 0x0f, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1f, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1f,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x22,
	0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x3a, 0x01, 0x2a, 0x22, 0x24, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x6f, 0x6d, 0x6e, 0x69, 0x61, 0x70, 0x69,
	0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x12, 0x84, 0x01, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x3a, 0x01,
	0x2a, 0x22, 0x24, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f,
	0x6f, 0x6d, 0x6e, 0x69, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x80, 0x01, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x1e, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x28, 0x3a, 0x01, 0x2a, 0x22, 0x23, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2f, 0x6f, 0x6d, 0x6e, 0x69, 0x61, 0x70, 0x69, 0x2f, 0x6c, 0x69, 0x73, 0x74,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x84, 0x01, 0x0a, 0x0f, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1f,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73,
	0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x3a, 0x01, 0x2a, 0x22, 0x24, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x6f, 0x6d, 0x6e, 0x69, 0x61, 0x70,
	0x69, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x42, 0x94, 0x01, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x42, 0x0c, 0x4f, 0x6d, 0x6e, 0x69, 0x61, 0x70, 0x69, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x74, 0x63, 0x6e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x61, 0x70, 0x69, 0x2d, 0x67,
	0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0xa2, 0x02, 0x03,
	0x41, 0x56, 0x58, 0xaa, 0x02, 0x0b, 0x41, 0x70, 0x69, 0x2e, 0x56, 0x30, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0xca, 0x02, 0x0b, 0x41, 0x70, 0x69, 0x5c, 0x56, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0xe2,
	0x02, 0x17, 0x41, 0x70, 0x69, 0x5c, 0x56, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x5c, 0x47, 0x50,
	0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0c, 0x41, 0x70, 0x69, 0x3a,
	0x3a, 0x56, 0x30, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_v0alpha_omniapi_proto_rawDescOnce sync.Once
	file_api_v0alpha_omniapi_proto_rawDescData = file_api_v0alpha_omniapi_proto_rawDesc
)

func file_api_v0alpha_omniapi_proto_rawDescGZIP() []byte {
	file_api_v0alpha_omniapi_proto_rawDescOnce.Do(func() {
		file_api_v0alpha_omniapi_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v0alpha_omniapi_proto_rawDescData)
	})
	return file_api_v0alpha_omniapi_proto_rawDescData
}

var file_api_v0alpha_omniapi_proto_msgTypes = make([]protoimpl.MessageInfo, 97)
var file_api_v0alpha_omniapi_proto_goTypes = []interface{}{
	(*SuggestResponseReq)(nil),                         // 0: api.v0alpha.SuggestResponseReq
	(*SuggestResponseRes)(nil),                         // 1: api.v0alpha.SuggestResponseRes
	(*CreateCampaignReq)(nil),                          // 2: api.v0alpha.CreateCampaignReq
	(*ContactListsDataSource)(nil),                     // 3: api.v0alpha.ContactListsDataSource
	(*ContactListDataSource)(nil),                      // 4: api.v0alpha.ContactListDataSource
	(*ListCampaignsReq)(nil),                           // 5: api.v0alpha.ListCampaignsReq
	(*ListCampaignsRes)(nil),                           // 6: api.v0alpha.ListCampaignsRes
	(*GetCampaignByIdReq)(nil),                         // 7: api.v0alpha.GetCampaignByIdReq
	(*GetOffLoadedTextMessageReq)(nil),                 // 8: api.v0alpha.GetOffLoadedTextMessageReq
	(*GetOffLoadedTextMessageRes)(nil),                 // 9: api.v0alpha.GetOffLoadedTextMessageRes
	(*ManagerListMessagesReq)(nil),                     // 10: api.v0alpha.ManagerListMessagesReq
	(*ListMessagesReq)(nil),                            // 11: api.v0alpha.ListMessagesReq
	(*ChatMessageUserInformation)(nil),                 // 12: api.v0alpha.ChatMessageUserInformation
	(*SendOmniMessageReq)(nil),                         // 13: api.v0alpha.SendOmniMessageReq
	(*UpdateCampaignReq)(nil),                          // 14: api.v0alpha.UpdateCampaignReq
	(*UpdateCampaignRes)(nil),                          // 15: api.v0alpha.UpdateCampaignRes
	(*ListConversationsReq)(nil),                       // 16: api.v0alpha.ListConversationsReq
	(*ListConversationsRes)(nil),                       // 17: api.v0alpha.ListConversationsRes
	(*CreateDispositionReq)(nil),                       // 18: api.v0alpha.CreateDispositionReq
	(*CreateDispositionRes)(nil),                       // 19: api.v0alpha.CreateDispositionRes
	(*DeleteDispositionReq)(nil),                       // 20: api.v0alpha.DeleteDispositionReq
	(*ListDispositionsReq)(nil),                        // 21: api.v0alpha.ListDispositionsReq
	(*ListDispositionsRes)(nil),                        // 22: api.v0alpha.ListDispositionsRes
	(*UpdateDispositionReq)(nil),                       // 23: api.v0alpha.UpdateDispositionReq
	(*ListCustomUnsubscribeLinksRes)(nil),              // 24: api.v0alpha.ListCustomUnsubscribeLinksRes
	(*CreateCustomUnsubscribeLinkRes)(nil),             // 25: api.v0alpha.CreateCustomUnsubscribeLinkRes
	(*UpdateCustomUnsubscribeLinkReq)(nil),             // 26: api.v0alpha.UpdateCustomUnsubscribeLinkReq
	(*UpdateCustomUnsubscribeLinkRes)(nil),             // 27: api.v0alpha.UpdateCustomUnsubscribeLinkRes
	(*DeleteCustomUnsubscribeLinkReq)(nil),             // 28: api.v0alpha.DeleteCustomUnsubscribeLinkReq
	(*PauseCampaignReq)(nil),                           // 29: api.v0alpha.PauseCampaignReq
	(*PauseCampaignRes)(nil),                           // 30: api.v0alpha.PauseCampaignRes
	(*ResumeCampaignReq)(nil),                          // 31: api.v0alpha.ResumeCampaignReq
	(*ResumeCampaignRes)(nil),                          // 32: api.v0alpha.ResumeCampaignRes
	(*ArchiveCampaignReq)(nil),                         // 33: api.v0alpha.ArchiveCampaignReq
	(*ArchiveCampaignRes)(nil),                         // 34: api.v0alpha.ArchiveCampaignRes
	(*UpdateCampaignPacingSpeedReq)(nil),               // 35: api.v0alpha.UpdateCampaignPacingSpeedReq
	(*UpdateCampaignPacingSpeedRes)(nil),               // 36: api.v0alpha.UpdateCampaignPacingSpeedRes
	(*ListContactListsReq)(nil),                        // 37: api.v0alpha.ListContactListsReq
	(*ListContactListsRes)(nil),                        // 38: api.v0alpha.ListContactListsRes
	(*GetAvailableHeadersReq)(nil),                     // 39: api.v0alpha.GetAvailableHeadersReq
	(*GetAvailableHeadersRes)(nil),                     // 40: api.v0alpha.GetAvailableHeadersRes
	(*HeaderGroup)(nil),                                // 41: api.v0alpha.HeaderGroup
	(*GetTaskReq)(nil),                                 // 42: api.v0alpha.GetTaskReq
	(*ListTasksReq)(nil),                               // 43: api.v0alpha.ListTasksReq
	(*ListTasksRes)(nil),                               // 44: api.v0alpha.ListTasksRes
	(*CreateConnectedInboxRes)(nil),                    // 45: api.v0alpha.CreateConnectedInboxRes
	(*DeleteConnectedInboxBySidReq)(nil),               // 46: api.v0alpha.DeleteConnectedInboxBySidReq
	(*GetConnectedInboxBySidReq)(nil),                  // 47: api.v0alpha.GetConnectedInboxBySidReq
	(*SendgridAccountByClientReq)(nil),                 // 48: api.v0alpha.SendgridAccountByClientReq
	(*SendgridAccountByClientRes)(nil),                 // 49: api.v0alpha.SendgridAccountByClientRes
	(*ListConnectedInboxesReq)(nil),                    // 50: api.v0alpha.ListConnectedInboxesReq
	(*ListConnectedInboxesRes)(nil),                    // 51: api.v0alpha.ListConnectedInboxesRes
	(*TestConnectedInboxRes)(nil),                      // 52: api.v0alpha.TestConnectedInboxRes
	(*UpdateConnectedInboxReq)(nil),                    // 53: api.v0alpha.UpdateConnectedInboxReq
	(*CreateVerifiedEmailRes)(nil),                     // 54: api.v0alpha.CreateVerifiedEmailRes
	(*SendEmailNotificationReq)(nil),                   // 55: api.v0alpha.SendEmailNotificationReq
	(*SendEmailNotificationRes)(nil),                   // 56: api.v0alpha.SendEmailNotificationRes
	(*GetVerifiedEmailBySidReq)(nil),                   // 57: api.v0alpha.GetVerifiedEmailBySidReq
	(*DeleteVerifiedEmailReq)(nil),                     // 58: api.v0alpha.DeleteVerifiedEmailReq
	(*ListVerifiedEmailsReq)(nil),                      // 59: api.v0alpha.ListVerifiedEmailsReq
	(*ListVerifiedEmailsRes)(nil),                      // 60: api.v0alpha.ListVerifiedEmailsRes
	(*ResendVerifiedEmailReq)(nil),                     // 61: api.v0alpha.ResendVerifiedEmailReq
	(*ResendVerifiedEmailRes)(nil),                     // 62: api.v0alpha.ResendVerifiedEmailRes
	(*UpdateVerifiedEmailReq)(nil),                     // 63: api.v0alpha.UpdateVerifiedEmailReq
	(*GetPendingGoogleXOAuth2DataReq)(nil),             // 64: api.v0alpha.GetPendingGoogleXOAuth2DataReq
	(*GetPendingGoogleXOAuth2DataRes)(nil),             // 65: api.v0alpha.GetPendingGoogleXOAuth2DataRes
	(*SendFeedbackEmailReq)(nil),                       // 66: api.v0alpha.SendFeedbackEmailReq
	(*SendFeedbackEmailRes)(nil),                       // 67: api.v0alpha.SendFeedbackEmailRes
	(*GetOmniAttachmentReq)(nil),                       // 68: api.v0alpha.GetOmniAttachmentReq
	(*CreateTasksReq)(nil),                             // 69: api.v0alpha.CreateTasksReq
	(*CreateTasksRes)(nil),                             // 70: api.v0alpha.CreateTasksRes
	(*CreateSignatureReq)(nil),                         // 71: api.v0alpha.CreateSignatureReq
	(*CreateSignatureRes)(nil),                         // 72: api.v0alpha.CreateSignatureRes
	(*DeleteSignatureReq)(nil),                         // 73: api.v0alpha.DeleteSignatureReq
	(*DeleteSignatureRes)(nil),                         // 74: api.v0alpha.DeleteSignatureRes
	(*ListSignaturesReq)(nil),                          // 75: api.v0alpha.ListSignaturesReq
	(*ListSignaturesRes)(nil),                          // 76: api.v0alpha.ListSignaturesRes
	(*UpdateSignatureReq)(nil),                         // 77: api.v0alpha.UpdateSignatureReq
	(*UpdateSignatureRes)(nil),                         // 78: api.v0alpha.UpdateSignatureRes
	(*CreateCampaignReq_CampaignModule)(nil),           // 79: api.v0alpha.CreateCampaignReq.CampaignModule
	(*ListCampaignsReq_ByConnectedInbox)(nil),          // 80: api.v0alpha.ListCampaignsReq.ByConnectedInbox
	(*ListCampaignsReq_ByIds)(nil),                     // 81: api.v0alpha.ListCampaignsReq.ByIds
	(*ListCampaignsReq_ByProject)(nil),                 // 82: api.v0alpha.ListCampaignsReq.ByProject
	(*ListCampaignsReq_ByTime)(nil),                    // 83: api.v0alpha.ListCampaignsReq.ByTime
	(*ListCampaignsReq_ByUnsubscribeLink)(nil),         // 84: api.v0alpha.ListCampaignsReq.ByUnsubscribeLink
	(*ListCampaignsReq_ByVerifiedEmail)(nil),           // 85: api.v0alpha.ListCampaignsReq.ByVerifiedEmail
	(*ListCampaignsReq_BySmsNumber)(nil),               // 86: api.v0alpha.ListCampaignsReq.BySmsNumber
	(*ManagerListMessagesReq_ByConversationSid)(nil),   // 87: api.v0alpha.ManagerListMessagesReq.ByConversationSid
	(*ManagerListMessagesReq_ByTaskSid)(nil),           // 88: api.v0alpha.ManagerListMessagesReq.ByTaskSid
	(*ListMessagesReq_ByConversationSid)(nil),          // 89: api.v0alpha.ListMessagesReq.ByConversationSid
	(*ListConversationsReq_ByTime)(nil),                // 90: api.v0alpha.ListConversationsReq.ByTime
	(*ListConversationsReq_ByAssignedUser)(nil),        // 91: api.v0alpha.ListConversationsReq.ByAssignedUser
	(*ListContactListsReq_ByProject)(nil),              // 92: api.v0alpha.ListContactListsReq.ByProject
	(*GetTaskReq_ByConversation)(nil),                  // 93: api.v0alpha.GetTaskReq.ByConversation
	(*ListTasksReq_ByCampaign)(nil),                    // 94: api.v0alpha.ListTasksReq.ByCampaign
	(*ListConnectedInboxesRes_ListConnectedInbox)(nil), // 95: api.v0alpha.ListConnectedInboxesRes.ListConnectedInbox
	(*GetOmniAttachmentReq_ByOmniAttachmentSid)(nil),   // 96: api.v0alpha.GetOmniAttachmentReq.ByOmniAttachmentSid
	(*commons.OmniCampaign)(nil),                       // 97: api.commons.OmniCampaign
	(commons.OmniCampaignStatus)(0),                    // 98: api.commons.OmniCampaignStatus
	(*fieldmaskpb.FieldMask)(nil),                      // 99: google.protobuf.FieldMask
	(*commons.OmniCampaignModule)(nil),                 // 100: api.commons.OmniCampaignModule
	(*timestamppb.Timestamp)(nil),                      // 101: google.protobuf.Timestamp
	(commons.ChannelType)(0),                           // 102: api.commons.ChannelType
	(*commons.OmniMessagePayload)(nil),                 // 103: api.commons.OmniMessagePayload
	(commons.ConversationStatus)(0),                    // 104: api.commons.ConversationStatus
	(*commons.OmniConversation)(nil),                   // 105: api.commons.OmniConversation
	(*commons.Disposition)(nil),                        // 106: api.commons.Disposition
	(*commons.OmniCustomUnsubscribeLink)(nil),          // 107: api.commons.OmniCustomUnsubscribeLink
	(commons.OmniCampaignDirection)(0),                 // 108: api.commons.OmniCampaignDirection
	(*commons.ContactList)(nil),                        // 109: api.commons.ContactList
	(*commons.OmniTask)(nil),                           // 110: api.commons.OmniTask
	(*commons.ConnectedInbox)(nil),                     // 111: api.commons.ConnectedInbox
	(*commons.VerifiedEmail)(nil),                      // 112: api.commons.VerifiedEmail
	(*commons.Signature)(nil),                          // 113: api.commons.Signature
	(*commons.Empty)(nil),                              // 114: api.commons.Empty
	(*commons.OmniMessage)(nil),                        // 115: api.commons.OmniMessage
	(*commons.OmniAttachment)(nil),                     // 116: api.commons.OmniAttachment
}
var file_api_v0alpha_omniapi_proto_depIdxs = []int32{
	97,  // 0: api.v0alpha.CreateCampaignReq.campaign:type_name -> api.commons.OmniCampaign
	79,  // 1: api.v0alpha.CreateCampaignReq.modules:type_name -> api.v0alpha.CreateCampaignReq.CampaignModule
	4,   // 2: api.v0alpha.ContactListsDataSource.contact_lists_data_source:type_name -> api.v0alpha.ContactListDataSource
	98,  // 3: api.v0alpha.ListCampaignsReq.statuses:type_name -> api.commons.OmniCampaignStatus
	99,  // 4: api.v0alpha.ListCampaignsReq.field_mask:type_name -> google.protobuf.FieldMask
	81,  // 5: api.v0alpha.ListCampaignsReq.by_ids:type_name -> api.v0alpha.ListCampaignsReq.ByIds
	82,  // 6: api.v0alpha.ListCampaignsReq.by_project:type_name -> api.v0alpha.ListCampaignsReq.ByProject
	83,  // 7: api.v0alpha.ListCampaignsReq.by_time:type_name -> api.v0alpha.ListCampaignsReq.ByTime
	84,  // 8: api.v0alpha.ListCampaignsReq.by_unsubscribe_link:type_name -> api.v0alpha.ListCampaignsReq.ByUnsubscribeLink
	80,  // 9: api.v0alpha.ListCampaignsReq.by_connected_inbox:type_name -> api.v0alpha.ListCampaignsReq.ByConnectedInbox
	85,  // 10: api.v0alpha.ListCampaignsReq.by_verified_email:type_name -> api.v0alpha.ListCampaignsReq.ByVerifiedEmail
	86,  // 11: api.v0alpha.ListCampaignsReq.by_sms_number:type_name -> api.v0alpha.ListCampaignsReq.BySmsNumber
	97,  // 12: api.v0alpha.ListCampaignsRes.campaigns:type_name -> api.commons.OmniCampaign
	100, // 13: api.v0alpha.ListCampaignsRes.modules:type_name -> api.commons.OmniCampaignModule
	101, // 14: api.v0alpha.ManagerListMessagesReq.timestamp:type_name -> google.protobuf.Timestamp
	102, // 15: api.v0alpha.ManagerListMessagesReq.channel_type:type_name -> api.commons.ChannelType
	87,  // 16: api.v0alpha.ManagerListMessagesReq.by_conversation_sid:type_name -> api.v0alpha.ManagerListMessagesReq.ByConversationSid
	88,  // 17: api.v0alpha.ManagerListMessagesReq.by_task_sid:type_name -> api.v0alpha.ManagerListMessagesReq.ByTaskSid
	101, // 18: api.v0alpha.ListMessagesReq.timestamp:type_name -> google.protobuf.Timestamp
	102, // 19: api.v0alpha.ListMessagesReq.channel_type:type_name -> api.commons.ChannelType
	89,  // 20: api.v0alpha.ListMessagesReq.by_conversation_sid:type_name -> api.v0alpha.ListMessagesReq.ByConversationSid
	103, // 21: api.v0alpha.SendOmniMessageReq.payload:type_name -> api.commons.OmniMessagePayload
	102, // 22: api.v0alpha.SendOmniMessageReq.channel_type:type_name -> api.commons.ChannelType
	97,  // 23: api.v0alpha.UpdateCampaignReq.campaign:type_name -> api.commons.OmniCampaign
	99,  // 24: api.v0alpha.UpdateCampaignReq.field_mask:type_name -> google.protobuf.FieldMask
	102, // 25: api.v0alpha.ListConversationsReq.channel_types:type_name -> api.commons.ChannelType
	99,  // 26: api.v0alpha.ListConversationsReq.field_mask:type_name -> google.protobuf.FieldMask
	104, // 27: api.v0alpha.ListConversationsReq.statuses:type_name -> api.commons.ConversationStatus
	90,  // 28: api.v0alpha.ListConversationsReq.by_time:type_name -> api.v0alpha.ListConversationsReq.ByTime
	91,  // 29: api.v0alpha.ListConversationsReq.by_assigned_user:type_name -> api.v0alpha.ListConversationsReq.ByAssignedUser
	105, // 30: api.v0alpha.ListConversationsRes.conversations:type_name -> api.commons.OmniConversation
	106, // 31: api.v0alpha.DeleteDispositionReq.disposition:type_name -> api.commons.Disposition
	106, // 32: api.v0alpha.ListDispositionsRes.dispositions:type_name -> api.commons.Disposition
	107, // 33: api.v0alpha.ListCustomUnsubscribeLinksRes.custom_unsubscribe_links:type_name -> api.commons.OmniCustomUnsubscribeLink
	101, // 34: api.v0alpha.UpdateCustomUnsubscribeLinkRes.date_validated:type_name -> google.protobuf.Timestamp
	102, // 35: api.v0alpha.PauseCampaignReq.channel_type:type_name -> api.commons.ChannelType
	108, // 36: api.v0alpha.PauseCampaignReq.campaign_direction:type_name -> api.commons.OmniCampaignDirection
	102, // 37: api.v0alpha.ResumeCampaignReq.channel_type:type_name -> api.commons.ChannelType
	108, // 38: api.v0alpha.ResumeCampaignReq.campaign_direction:type_name -> api.commons.OmniCampaignDirection
	102, // 39: api.v0alpha.ArchiveCampaignReq.channel_type:type_name -> api.commons.ChannelType
	108, // 40: api.v0alpha.ArchiveCampaignReq.campaign_direction:type_name -> api.commons.OmniCampaignDirection
	102, // 41: api.v0alpha.UpdateCampaignPacingSpeedReq.channel_type:type_name -> api.commons.ChannelType
	108, // 42: api.v0alpha.UpdateCampaignPacingSpeedReq.campaign_direction:type_name -> api.commons.OmniCampaignDirection
	99,  // 43: api.v0alpha.ListContactListsReq.field_mask:type_name -> google.protobuf.FieldMask
	92,  // 44: api.v0alpha.ListContactListsReq.by_project:type_name -> api.v0alpha.ListContactListsReq.ByProject
	109, // 45: api.v0alpha.ListContactListsRes.contact_lists:type_name -> api.commons.ContactList
	41,  // 46: api.v0alpha.GetAvailableHeadersRes.headers:type_name -> api.v0alpha.HeaderGroup
	99,  // 47: api.v0alpha.GetTaskReq.field_mask:type_name -> google.protobuf.FieldMask
	93,  // 48: api.v0alpha.GetTaskReq.by_conversation:type_name -> api.v0alpha.GetTaskReq.ByConversation
	99,  // 49: api.v0alpha.ListTasksReq.field_mask:type_name -> google.protobuf.FieldMask
	94,  // 50: api.v0alpha.ListTasksReq.by_campaign:type_name -> api.v0alpha.ListTasksReq.ByCampaign
	110, // 51: api.v0alpha.ListTasksRes.tasks:type_name -> api.commons.OmniTask
	99,  // 52: api.v0alpha.ListConnectedInboxesReq.field_mask:type_name -> google.protobuf.FieldMask
	95,  // 53: api.v0alpha.ListConnectedInboxesRes.connected_inboxes:type_name -> api.v0alpha.ListConnectedInboxesRes.ListConnectedInbox
	111, // 54: api.v0alpha.UpdateConnectedInboxReq.connected_inbox:type_name -> api.commons.ConnectedInbox
	99,  // 55: api.v0alpha.UpdateConnectedInboxReq.field_mask:type_name -> google.protobuf.FieldMask
	112, // 56: api.v0alpha.ListVerifiedEmailsRes.verified_emails:type_name -> api.commons.VerifiedEmail
	96,  // 57: api.v0alpha.GetOmniAttachmentReq.by_omni_attachment_sid:type_name -> api.v0alpha.GetOmniAttachmentReq.ByOmniAttachmentSid
	4,   // 58: api.v0alpha.CreateTasksReq.contact_list_data_source:type_name -> api.v0alpha.ContactListDataSource
	113, // 59: api.v0alpha.CreateSignatureRes.signature:type_name -> api.commons.Signature
	113, // 60: api.v0alpha.ListSignaturesRes.signatures:type_name -> api.commons.Signature
	113, // 61: api.v0alpha.UpdateSignatureReq.signature:type_name -> api.commons.Signature
	99,  // 62: api.v0alpha.UpdateSignatureReq.field_mask:type_name -> google.protobuf.FieldMask
	113, // 63: api.v0alpha.UpdateSignatureRes.signature:type_name -> api.commons.Signature
	100, // 64: api.v0alpha.CreateCampaignReq.CampaignModule.module:type_name -> api.commons.OmniCampaignModule
	3,   // 65: api.v0alpha.CreateCampaignReq.CampaignModule.omni_contact_list:type_name -> api.v0alpha.ContactListsDataSource
	101, // 66: api.v0alpha.ListCampaignsReq.ByTime.search_from:type_name -> google.protobuf.Timestamp
	101, // 67: api.v0alpha.ListCampaignsReq.ByTime.search_to:type_name -> google.protobuf.Timestamp
	101, // 68: api.v0alpha.ListConversationsReq.ByTime.start_time:type_name -> google.protobuf.Timestamp
	101, // 69: api.v0alpha.ListConversationsReq.ByTime.end_time:type_name -> google.protobuf.Timestamp
	104, // 70: api.v0alpha.ListConversationsReq.ByAssignedUser.statuses:type_name -> api.commons.ConversationStatus
	111, // 71: api.v0alpha.ListConnectedInboxesRes.ListConnectedInbox.connected_inbox:type_name -> api.commons.ConnectedInbox
	97,  // 72: api.v0alpha.ListConnectedInboxesRes.ListConnectedInbox.campaigns:type_name -> api.commons.OmniCampaign
	33,  // 73: api.v0alpha.OmniApi.ArchiveCampaign:input_type -> api.v0alpha.ArchiveCampaignReq
	2,   // 74: api.v0alpha.OmniApi.CreateCampaign:input_type -> api.v0alpha.CreateCampaignReq
	7,   // 75: api.v0alpha.OmniApi.GetCampaignById:input_type -> api.v0alpha.GetCampaignByIdReq
	5,   // 76: api.v0alpha.OmniApi.ListCampaigns:input_type -> api.v0alpha.ListCampaignsReq
	29,  // 77: api.v0alpha.OmniApi.PauseCampaign:input_type -> api.v0alpha.PauseCampaignReq
	31,  // 78: api.v0alpha.OmniApi.ResumeCampaign:input_type -> api.v0alpha.ResumeCampaignReq
	14,  // 79: api.v0alpha.OmniApi.UpdateCampaign:input_type -> api.v0alpha.UpdateCampaignReq
	35,  // 80: api.v0alpha.OmniApi.UpdateCampaignPacingSpeed:input_type -> api.v0alpha.UpdateCampaignPacingSpeedReq
	8,   // 81: api.v0alpha.OmniApi.GetOffLoadedTextMessage:input_type -> api.v0alpha.GetOffLoadedTextMessageReq
	10,  // 82: api.v0alpha.OmniApi.ManagerListMessages:input_type -> api.v0alpha.ManagerListMessagesReq
	11,  // 83: api.v0alpha.OmniApi.ListMessages:input_type -> api.v0alpha.ListMessagesReq
	13,  // 84: api.v0alpha.OmniApi.SendOmniMessage:input_type -> api.v0alpha.SendOmniMessageReq
	13,  // 85: api.v0alpha.OmniApi.ManagerSendOmniMessage:input_type -> api.v0alpha.SendOmniMessageReq
	16,  // 86: api.v0alpha.OmniApi.ManagerListConversations:input_type -> api.v0alpha.ListConversationsReq
	0,   // 87: api.v0alpha.OmniApi.SuggestResponse:input_type -> api.v0alpha.SuggestResponseReq
	18,  // 88: api.v0alpha.OmniApi.CreateDisposition:input_type -> api.v0alpha.CreateDispositionReq
	20,  // 89: api.v0alpha.OmniApi.DeleteDisposition:input_type -> api.v0alpha.DeleteDispositionReq
	21,  // 90: api.v0alpha.OmniApi.ListDispositions:input_type -> api.v0alpha.ListDispositionsReq
	23,  // 91: api.v0alpha.OmniApi.UpdateDisposition:input_type -> api.v0alpha.UpdateDispositionReq
	114, // 92: api.v0alpha.OmniApi.ListCustomUnsubscribeLinks:input_type -> api.commons.Empty
	107, // 93: api.v0alpha.OmniApi.CreateCustomUnsubscribeLink:input_type -> api.commons.OmniCustomUnsubscribeLink
	26,  // 94: api.v0alpha.OmniApi.UpdateCustomUnsubscribeLink:input_type -> api.v0alpha.UpdateCustomUnsubscribeLinkReq
	28,  // 95: api.v0alpha.OmniApi.DeleteCustomUnsubscribeLink:input_type -> api.v0alpha.DeleteCustomUnsubscribeLinkReq
	37,  // 96: api.v0alpha.OmniApi.ListContactLists:input_type -> api.v0alpha.ListContactListsReq
	39,  // 97: api.v0alpha.OmniApi.GetAvailableHeaders:input_type -> api.v0alpha.GetAvailableHeadersReq
	42,  // 98: api.v0alpha.OmniApi.GetTask:input_type -> api.v0alpha.GetTaskReq
	43,  // 99: api.v0alpha.OmniApi.ListTasks:input_type -> api.v0alpha.ListTasksReq
	111, // 100: api.v0alpha.OmniApi.CreateConnectedInbox:input_type -> api.commons.ConnectedInbox
	46,  // 101: api.v0alpha.OmniApi.DeleteConnectedInboxBySid:input_type -> api.v0alpha.DeleteConnectedInboxBySidReq
	47,  // 102: api.v0alpha.OmniApi.GetConnectedInboxBySid:input_type -> api.v0alpha.GetConnectedInboxBySidReq
	48,  // 103: api.v0alpha.OmniApi.PerformSendgridAccountChecks:input_type -> api.v0alpha.SendgridAccountByClientReq
	50,  // 104: api.v0alpha.OmniApi.ListConnectedInboxes:input_type -> api.v0alpha.ListConnectedInboxesReq
	111, // 105: api.v0alpha.OmniApi.TestConnectedInbox:input_type -> api.commons.ConnectedInbox
	53,  // 106: api.v0alpha.OmniApi.UpdateConnectedInbox:input_type -> api.v0alpha.UpdateConnectedInboxReq
	112, // 107: api.v0alpha.OmniApi.CreateVerifiedEmail:input_type -> api.commons.VerifiedEmail
	55,  // 108: api.v0alpha.OmniApi.SendEmailNotification:input_type -> api.v0alpha.SendEmailNotificationReq
	58,  // 109: api.v0alpha.OmniApi.DeleteVerifiedEmail:input_type -> api.v0alpha.DeleteVerifiedEmailReq
	57,  // 110: api.v0alpha.OmniApi.GetVerifiedEmailBySid:input_type -> api.v0alpha.GetVerifiedEmailBySidReq
	59,  // 111: api.v0alpha.OmniApi.ListVerifiedEmails:input_type -> api.v0alpha.ListVerifiedEmailsReq
	61,  // 112: api.v0alpha.OmniApi.ResendVerifiedEmail:input_type -> api.v0alpha.ResendVerifiedEmailReq
	63,  // 113: api.v0alpha.OmniApi.UpdateVerifiedEmail:input_type -> api.v0alpha.UpdateVerifiedEmailReq
	64,  // 114: api.v0alpha.OmniApi.GetPendingGoogleXOAuth2Data:input_type -> api.v0alpha.GetPendingGoogleXOAuth2DataReq
	66,  // 115: api.v0alpha.OmniApi.SendFeedbackEmail:input_type -> api.v0alpha.SendFeedbackEmailReq
	68,  // 116: api.v0alpha.OmniApi.GetOmniAttachment:input_type -> api.v0alpha.GetOmniAttachmentReq
	69,  // 117: api.v0alpha.OmniApi.CreateTasks:input_type -> api.v0alpha.CreateTasksReq
	71,  // 118: api.v0alpha.OmniApi.CreateSignature:input_type -> api.v0alpha.CreateSignatureReq
	73,  // 119: api.v0alpha.OmniApi.DeleteSignature:input_type -> api.v0alpha.DeleteSignatureReq
	75,  // 120: api.v0alpha.OmniApi.ListSignatures:input_type -> api.v0alpha.ListSignaturesReq
	77,  // 121: api.v0alpha.OmniApi.UpdateSignature:input_type -> api.v0alpha.UpdateSignatureReq
	34,  // 122: api.v0alpha.OmniApi.ArchiveCampaign:output_type -> api.v0alpha.ArchiveCampaignRes
	97,  // 123: api.v0alpha.OmniApi.CreateCampaign:output_type -> api.commons.OmniCampaign
	97,  // 124: api.v0alpha.OmniApi.GetCampaignById:output_type -> api.commons.OmniCampaign
	6,   // 125: api.v0alpha.OmniApi.ListCampaigns:output_type -> api.v0alpha.ListCampaignsRes
	30,  // 126: api.v0alpha.OmniApi.PauseCampaign:output_type -> api.v0alpha.PauseCampaignRes
	32,  // 127: api.v0alpha.OmniApi.ResumeCampaign:output_type -> api.v0alpha.ResumeCampaignRes
	15,  // 128: api.v0alpha.OmniApi.UpdateCampaign:output_type -> api.v0alpha.UpdateCampaignRes
	36,  // 129: api.v0alpha.OmniApi.UpdateCampaignPacingSpeed:output_type -> api.v0alpha.UpdateCampaignPacingSpeedRes
	9,   // 130: api.v0alpha.OmniApi.GetOffLoadedTextMessage:output_type -> api.v0alpha.GetOffLoadedTextMessageRes
	115, // 131: api.v0alpha.OmniApi.ManagerListMessages:output_type -> api.commons.OmniMessage
	115, // 132: api.v0alpha.OmniApi.ListMessages:output_type -> api.commons.OmniMessage
	114, // 133: api.v0alpha.OmniApi.SendOmniMessage:output_type -> api.commons.Empty
	114, // 134: api.v0alpha.OmniApi.ManagerSendOmniMessage:output_type -> api.commons.Empty
	17,  // 135: api.v0alpha.OmniApi.ManagerListConversations:output_type -> api.v0alpha.ListConversationsRes
	1,   // 136: api.v0alpha.OmniApi.SuggestResponse:output_type -> api.v0alpha.SuggestResponseRes
	19,  // 137: api.v0alpha.OmniApi.CreateDisposition:output_type -> api.v0alpha.CreateDispositionRes
	114, // 138: api.v0alpha.OmniApi.DeleteDisposition:output_type -> api.commons.Empty
	22,  // 139: api.v0alpha.OmniApi.ListDispositions:output_type -> api.v0alpha.ListDispositionsRes
	114, // 140: api.v0alpha.OmniApi.UpdateDisposition:output_type -> api.commons.Empty
	24,  // 141: api.v0alpha.OmniApi.ListCustomUnsubscribeLinks:output_type -> api.v0alpha.ListCustomUnsubscribeLinksRes
	25,  // 142: api.v0alpha.OmniApi.CreateCustomUnsubscribeLink:output_type -> api.v0alpha.CreateCustomUnsubscribeLinkRes
	27,  // 143: api.v0alpha.OmniApi.UpdateCustomUnsubscribeLink:output_type -> api.v0alpha.UpdateCustomUnsubscribeLinkRes
	114, // 144: api.v0alpha.OmniApi.DeleteCustomUnsubscribeLink:output_type -> api.commons.Empty
	38,  // 145: api.v0alpha.OmniApi.ListContactLists:output_type -> api.v0alpha.ListContactListsRes
	40,  // 146: api.v0alpha.OmniApi.GetAvailableHeaders:output_type -> api.v0alpha.GetAvailableHeadersRes
	110, // 147: api.v0alpha.OmniApi.GetTask:output_type -> api.commons.OmniTask
	44,  // 148: api.v0alpha.OmniApi.ListTasks:output_type -> api.v0alpha.ListTasksRes
	45,  // 149: api.v0alpha.OmniApi.CreateConnectedInbox:output_type -> api.v0alpha.CreateConnectedInboxRes
	114, // 150: api.v0alpha.OmniApi.DeleteConnectedInboxBySid:output_type -> api.commons.Empty
	111, // 151: api.v0alpha.OmniApi.GetConnectedInboxBySid:output_type -> api.commons.ConnectedInbox
	49,  // 152: api.v0alpha.OmniApi.PerformSendgridAccountChecks:output_type -> api.v0alpha.SendgridAccountByClientRes
	51,  // 153: api.v0alpha.OmniApi.ListConnectedInboxes:output_type -> api.v0alpha.ListConnectedInboxesRes
	52,  // 154: api.v0alpha.OmniApi.TestConnectedInbox:output_type -> api.v0alpha.TestConnectedInboxRes
	114, // 155: api.v0alpha.OmniApi.UpdateConnectedInbox:output_type -> api.commons.Empty
	54,  // 156: api.v0alpha.OmniApi.CreateVerifiedEmail:output_type -> api.v0alpha.CreateVerifiedEmailRes
	56,  // 157: api.v0alpha.OmniApi.SendEmailNotification:output_type -> api.v0alpha.SendEmailNotificationRes
	114, // 158: api.v0alpha.OmniApi.DeleteVerifiedEmail:output_type -> api.commons.Empty
	112, // 159: api.v0alpha.OmniApi.GetVerifiedEmailBySid:output_type -> api.commons.VerifiedEmail
	60,  // 160: api.v0alpha.OmniApi.ListVerifiedEmails:output_type -> api.v0alpha.ListVerifiedEmailsRes
	62,  // 161: api.v0alpha.OmniApi.ResendVerifiedEmail:output_type -> api.v0alpha.ResendVerifiedEmailRes
	114, // 162: api.v0alpha.OmniApi.UpdateVerifiedEmail:output_type -> api.commons.Empty
	65,  // 163: api.v0alpha.OmniApi.GetPendingGoogleXOAuth2Data:output_type -> api.v0alpha.GetPendingGoogleXOAuth2DataRes
	67,  // 164: api.v0alpha.OmniApi.SendFeedbackEmail:output_type -> api.v0alpha.SendFeedbackEmailRes
	116, // 165: api.v0alpha.OmniApi.GetOmniAttachment:output_type -> api.commons.OmniAttachment
	70,  // 166: api.v0alpha.OmniApi.CreateTasks:output_type -> api.v0alpha.CreateTasksRes
	72,  // 167: api.v0alpha.OmniApi.CreateSignature:output_type -> api.v0alpha.CreateSignatureRes
	74,  // 168: api.v0alpha.OmniApi.DeleteSignature:output_type -> api.v0alpha.DeleteSignatureRes
	76,  // 169: api.v0alpha.OmniApi.ListSignatures:output_type -> api.v0alpha.ListSignaturesRes
	78,  // 170: api.v0alpha.OmniApi.UpdateSignature:output_type -> api.v0alpha.UpdateSignatureRes
	122, // [122:171] is the sub-list for method output_type
	73,  // [73:122] is the sub-list for method input_type
	73,  // [73:73] is the sub-list for extension type_name
	73,  // [73:73] is the sub-list for extension extendee
	0,   // [0:73] is the sub-list for field type_name
}

func init() { file_api_v0alpha_omniapi_proto_init() }
func file_api_v0alpha_omniapi_proto_init() {
	if File_api_v0alpha_omniapi_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_v0alpha_omniapi_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestResponseReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestResponseRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCampaignReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContactListsDataSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContactListDataSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCampaignsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCampaignsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCampaignByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOffLoadedTextMessageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOffLoadedTextMessageRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManagerListMessagesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMessagesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatMessageUserInformation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendOmniMessageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCampaignReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCampaignRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListConversationsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListConversationsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDispositionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDispositionRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDispositionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDispositionsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDispositionsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDispositionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCustomUnsubscribeLinksRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCustomUnsubscribeLinkRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCustomUnsubscribeLinkReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCustomUnsubscribeLinkRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCustomUnsubscribeLinkReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PauseCampaignReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PauseCampaignRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResumeCampaignReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResumeCampaignRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArchiveCampaignReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArchiveCampaignRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCampaignPacingSpeedReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCampaignPacingSpeedRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListContactListsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListContactListsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAvailableHeadersReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAvailableHeadersRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeaderGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTasksReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTasksRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateConnectedInboxRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteConnectedInboxBySidReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConnectedInboxBySidReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendgridAccountByClientReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendgridAccountByClientRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListConnectedInboxesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListConnectedInboxesRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestConnectedInboxRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateConnectedInboxReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVerifiedEmailRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendEmailNotificationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendEmailNotificationRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVerifiedEmailBySidReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteVerifiedEmailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVerifiedEmailsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVerifiedEmailsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResendVerifiedEmailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResendVerifiedEmailRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateVerifiedEmailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPendingGoogleXOAuth2DataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPendingGoogleXOAuth2DataRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendFeedbackEmailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendFeedbackEmailRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOmniAttachmentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTasksReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTasksRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSignatureReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSignatureRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSignatureReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSignatureRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSignaturesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSignaturesRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSignatureReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSignatureRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCampaignReq_CampaignModule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCampaignsReq_ByConnectedInbox); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCampaignsReq_ByIds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCampaignsReq_ByProject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCampaignsReq_ByTime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCampaignsReq_ByUnsubscribeLink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCampaignsReq_ByVerifiedEmail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCampaignsReq_BySmsNumber); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManagerListMessagesReq_ByConversationSid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManagerListMessagesReq_ByTaskSid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMessagesReq_ByConversationSid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListConversationsReq_ByTime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListConversationsReq_ByAssignedUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListContactListsReq_ByProject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskReq_ByConversation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTasksReq_ByCampaign); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListConnectedInboxesRes_ListConnectedInbox); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0alpha_omniapi_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOmniAttachmentReq_ByOmniAttachmentSid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_v0alpha_omniapi_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*ListCampaignsReq_ByIds_)(nil),
		(*ListCampaignsReq_ByProject_)(nil),
		(*ListCampaignsReq_ByTime_)(nil),
		(*ListCampaignsReq_ByUnsubscribeLink_)(nil),
		(*ListCampaignsReq_ByConnectedInbox_)(nil),
		(*ListCampaignsReq_ByVerifiedEmail_)(nil),
		(*ListCampaignsReq_BySmsNumber_)(nil),
	}
	file_api_v0alpha_omniapi_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*ManagerListMessagesReq_ByConversationSid_)(nil),
		(*ManagerListMessagesReq_ByTaskSid_)(nil),
	}
	file_api_v0alpha_omniapi_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*ListMessagesReq_ByConversationSid_)(nil),
	}
	file_api_v0alpha_omniapi_proto_msgTypes[16].OneofWrappers = []interface{}{
		(*ListConversationsReq_ByTime_)(nil),
		(*ListConversationsReq_ByAssignedUser_)(nil),
	}
	file_api_v0alpha_omniapi_proto_msgTypes[37].OneofWrappers = []interface{}{
		(*ListContactListsReq_ByProject_)(nil),
	}
	file_api_v0alpha_omniapi_proto_msgTypes[42].OneofWrappers = []interface{}{
		(*GetTaskReq_ByConversation_)(nil),
	}
	file_api_v0alpha_omniapi_proto_msgTypes[43].OneofWrappers = []interface{}{
		(*ListTasksReq_ByCampaign_)(nil),
	}
	file_api_v0alpha_omniapi_proto_msgTypes[68].OneofWrappers = []interface{}{
		(*GetOmniAttachmentReq_ByOmniAttachmentSid_)(nil),
	}
	file_api_v0alpha_omniapi_proto_msgTypes[69].OneofWrappers = []interface{}{
		(*CreateTasksReq_ContactListDataSource)(nil),
	}
	file_api_v0alpha_omniapi_proto_msgTypes[79].OneofWrappers = []interface{}{
		(*CreateCampaignReq_CampaignModule_OmniContactList)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v0alpha_omniapi_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   97,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v0alpha_omniapi_proto_goTypes,
		DependencyIndexes: file_api_v0alpha_omniapi_proto_depIdxs,
		MessageInfos:      file_api_v0alpha_omniapi_proto_msgTypes,
	}.Build()
	File_api_v0alpha_omniapi_proto = out.File
	file_api_v0alpha_omniapi_proto_rawDesc = nil
	file_api_v0alpha_omniapi_proto_goTypes = nil
	file_api_v0alpha_omniapi_proto_depIdxs = nil
}
