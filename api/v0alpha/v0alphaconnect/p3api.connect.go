// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: api/v0alpha/p3api.proto

package v0alphaconnect

import (
	context "context"
	errors "errors"
	connect_go "github.com/bufbuild/connect-go"
	v0alpha "github.com/tcncloud/api-go/api/v0alpha"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect_go.IsAtLeastVersion0_1_0

const (
	// P3ApiName is the fully-qualified name of the P3Api service.
	P3ApiName = "api.v0alpha.P3Api"
)

// These constants are the fully-qualified names of the RPCs defined in this package. They're
// exposed at runtime as Spec.Procedure and as the final two segments of the HTTP route.
//
// Note that these are different from the fully-qualified method names used by
// google.golang.org/protobuf/reflect/protoreflect. To convert from these constants to
// reflection-formatted method names, remove the leading slash and convert the remaining slash to a
// period.
const (
	// P3ApiGetAgentHuntGroupProcedure is the fully-qualified name of the P3Api's GetAgentHuntGroup RPC.
	P3ApiGetAgentHuntGroupProcedure = "/api.v0alpha.P3Api/GetAgentHuntGroup"
	// P3ApiGetAgentSessionProcedure is the fully-qualified name of the P3Api's GetAgentSession RPC.
	P3ApiGetAgentSessionProcedure = "/api.v0alpha.P3Api/GetAgentSession"
	// P3ApiGetAgentSkillsProcedure is the fully-qualified name of the P3Api's GetAgentSkills RPC.
	P3ApiGetAgentSkillsProcedure = "/api.v0alpha.P3Api/GetAgentSkills"
	// P3ApiCreateAgentSkillProcedure is the fully-qualified name of the P3Api's CreateAgentSkill RPC.
	P3ApiCreateAgentSkillProcedure = "/api.v0alpha.P3Api/CreateAgentSkill"
	// P3ApiUpdateAgentSkillProcedure is the fully-qualified name of the P3Api's UpdateAgentSkill RPC.
	P3ApiUpdateAgentSkillProcedure = "/api.v0alpha.P3Api/UpdateAgentSkill"
	// P3ApiDeleteAgentSkillProcedure is the fully-qualified name of the P3Api's DeleteAgentSkill RPC.
	P3ApiDeleteAgentSkillProcedure = "/api.v0alpha.P3Api/DeleteAgentSkill"
	// P3ApiListAgentSkillsProcedure is the fully-qualified name of the P3Api's ListAgentSkills RPC.
	P3ApiListAgentSkillsProcedure = "/api.v0alpha.P3Api/ListAgentSkills"
	// P3ApiListSkillsForCurrentAgentProcedure is the fully-qualified name of the P3Api's
	// ListSkillsForCurrentAgent RPC.
	P3ApiListSkillsForCurrentAgentProcedure = "/api.v0alpha.P3Api/ListSkillsForCurrentAgent"
	// P3ApiListSkillsProcedure is the fully-qualified name of the P3Api's ListSkills RPC.
	P3ApiListSkillsProcedure = "/api.v0alpha.P3Api/ListSkills"
	// P3ApiUpdateAgentSkillsProcedure is the fully-qualified name of the P3Api's UpdateAgentSkills RPC.
	P3ApiUpdateAgentSkillsProcedure = "/api.v0alpha.P3Api/UpdateAgentSkills"
	// P3ApiGetCurrentAgentProcedure is the fully-qualified name of the P3Api's GetCurrentAgent RPC.
	P3ApiGetCurrentAgentProcedure = "/api.v0alpha.P3Api/GetCurrentAgent"
	// P3ApiGetClientInfoDataProcedure is the fully-qualified name of the P3Api's GetClientInfoData RPC.
	P3ApiGetClientInfoDataProcedure = "/api.v0alpha.P3Api/GetClientInfoData"
	// P3ApiGetClientInfoDisplayTemplateProcedure is the fully-qualified name of the P3Api's
	// GetClientInfoDisplayTemplate RPC.
	P3ApiGetClientInfoDisplayTemplateProcedure = "/api.v0alpha.P3Api/GetClientInfoDisplayTemplate"
	// P3ApiListAgentStatisticsDataProcedure is the fully-qualified name of the P3Api's
	// ListAgentStatisticsData RPC.
	P3ApiListAgentStatisticsDataProcedure = "/api.v0alpha.P3Api/ListAgentStatisticsData"
	// P3ApiListPBXExtensionsProcedure is the fully-qualified name of the P3Api's ListPBXExtensions RPC.
	P3ApiListPBXExtensionsProcedure = "/api.v0alpha.P3Api/ListPBXExtensions"
	// P3ApiListAgentExtensionsProcedure is the fully-qualified name of the P3Api's ListAgentExtensions
	// RPC.
	P3ApiListAgentExtensionsProcedure = "/api.v0alpha.P3Api/ListAgentExtensions"
	// P3ApiListHuntGroupExtensionsProcedure is the fully-qualified name of the P3Api's
	// ListHuntGroupExtensions RPC.
	P3ApiListHuntGroupExtensionsProcedure = "/api.v0alpha.P3Api/ListHuntGroupExtensions"
	// P3ApiCreateExtensionProcedure is the fully-qualified name of the P3Api's CreateExtension RPC.
	P3ApiCreateExtensionProcedure = "/api.v0alpha.P3Api/CreateExtension"
	// P3ApiDeleteExtensionProcedure is the fully-qualified name of the P3Api's DeleteExtension RPC.
	P3ApiDeleteExtensionProcedure = "/api.v0alpha.P3Api/DeleteExtension"
	// P3ApiUpdateExtensionProcedure is the fully-qualified name of the P3Api's UpdateExtension RPC.
	P3ApiUpdateExtensionProcedure = "/api.v0alpha.P3Api/UpdateExtension"
	// P3ApiUpdatePBXExtensionProcedure is the fully-qualified name of the P3Api's UpdatePBXExtension
	// RPC.
	P3ApiUpdatePBXExtensionProcedure = "/api.v0alpha.P3Api/UpdatePBXExtension"
	// P3ApiCreateDNCLNumbersProcedure is the fully-qualified name of the P3Api's CreateDNCLNumbers RPC.
	P3ApiCreateDNCLNumbersProcedure = "/api.v0alpha.P3Api/CreateDNCLNumbers"
	// P3ApiGetScriptOrResponsesProcedure is the fully-qualified name of the P3Api's
	// GetScriptOrResponses RPC.
	P3ApiGetScriptOrResponsesProcedure = "/api.v0alpha.P3Api/GetScriptOrResponses"
	// P3ApiGetHuntGroupAgentSettingsProcedure is the fully-qualified name of the P3Api's
	// GetHuntGroupAgentSettings RPC.
	P3ApiGetHuntGroupAgentSettingsProcedure = "/api.v0alpha.P3Api/GetHuntGroupAgentSettings"
	// P3ApiListHuntGroupWebLinksProcedure is the fully-qualified name of the P3Api's
	// ListHuntGroupWebLinks RPC.
	P3ApiListHuntGroupWebLinksProcedure = "/api.v0alpha.P3Api/ListHuntGroupWebLinks"
	// P3ApiGetHuntGroupPauseCodesProcedure is the fully-qualified name of the P3Api's
	// GetHuntGroupPauseCodes RPC.
	P3ApiGetHuntGroupPauseCodesProcedure = "/api.v0alpha.P3Api/GetHuntGroupPauseCodes"
	// P3ApiListAgentCallHistoryProcedure is the fully-qualified name of the P3Api's
	// ListAgentCallHistory RPC.
	P3ApiListAgentCallHistoryProcedure = "/api.v0alpha.P3Api/ListAgentCallHistory"
	// P3ApiListClientPhoneBookEntriesProcedure is the fully-qualified name of the P3Api's
	// ListClientPhoneBookEntries RPC.
	P3ApiListClientPhoneBookEntriesProcedure = "/api.v0alpha.P3Api/ListClientPhoneBookEntries"
	// P3ApiListHuntGroupPhoneBookEntriesProcedure is the fully-qualified name of the P3Api's
	// ListHuntGroupPhoneBookEntries RPC.
	P3ApiListHuntGroupPhoneBookEntriesProcedure = "/api.v0alpha.P3Api/ListHuntGroupPhoneBookEntries"
	// P3ApiCreatePhoneBookEntryProcedure is the fully-qualified name of the P3Api's
	// CreatePhoneBookEntry RPC.
	P3ApiCreatePhoneBookEntryProcedure = "/api.v0alpha.P3Api/CreatePhoneBookEntry"
	// P3ApiUpdatePhoneBookEntryProcedure is the fully-qualified name of the P3Api's
	// UpdatePhoneBookEntry RPC.
	P3ApiUpdatePhoneBookEntryProcedure = "/api.v0alpha.P3Api/UpdatePhoneBookEntry"
	// P3ApiDeletePhoneBookEntryProcedure is the fully-qualified name of the P3Api's
	// DeletePhoneBookEntry RPC.
	P3ApiDeletePhoneBookEntryProcedure = "/api.v0alpha.P3Api/DeletePhoneBookEntry"
	// P3ApiListPhoneBooksProcedure is the fully-qualified name of the P3Api's ListPhoneBooks RPC.
	P3ApiListPhoneBooksProcedure = "/api.v0alpha.P3Api/ListPhoneBooks"
	// P3ApiListAgentTriggersProcedure is the fully-qualified name of the P3Api's ListAgentTriggers RPC.
	P3ApiListAgentTriggersProcedure = "/api.v0alpha.P3Api/ListAgentTriggers"
	// P3ApiGetCampaignCompletionStatusProcedure is the fully-qualified name of the P3Api's
	// GetCampaignCompletionStatus RPC.
	P3ApiGetCampaignCompletionStatusProcedure = "/api.v0alpha.P3Api/GetCampaignCompletionStatus"
	// P3ApiGetLostPeerInfoProcedure is the fully-qualified name of the P3Api's GetLostPeerInfo RPC.
	P3ApiGetLostPeerInfoProcedure = "/api.v0alpha.P3Api/GetLostPeerInfo"
	// P3ApiGetDispositionKeysProcedure is the fully-qualified name of the P3Api's GetDispositionKeys
	// RPC.
	P3ApiGetDispositionKeysProcedure = "/api.v0alpha.P3Api/GetDispositionKeys"
	// P3ApiGetReadyAgentsProcedure is the fully-qualified name of the P3Api's GetReadyAgents RPC.
	P3ApiGetReadyAgentsProcedure = "/api.v0alpha.P3Api/GetReadyAgents"
	// P3ApiListAgentQueueAndOnHoldCallDataProcedure is the fully-qualified name of the P3Api's
	// ListAgentQueueAndOnHoldCallData RPC.
	P3ApiListAgentQueueAndOnHoldCallDataProcedure = "/api.v0alpha.P3Api/ListAgentQueueAndOnHoldCallData"
	// P3ApiSaveAgentCallResponsesProcedure is the fully-qualified name of the P3Api's
	// SaveAgentCallResponses RPC.
	P3ApiSaveAgentCallResponsesProcedure = "/api.v0alpha.P3Api/SaveAgentCallResponses"
	// P3ApiListAgentTransferOptionsProcedure is the fully-qualified name of the P3Api's
	// ListAgentTransferOptions RPC.
	P3ApiListAgentTransferOptionsProcedure = "/api.v0alpha.P3Api/ListAgentTransferOptions"
	// P3ApiUpdateAgentCallResponseValueProcedure is the fully-qualified name of the P3Api's
	// UpdateAgentCallResponseValue RPC.
	P3ApiUpdateAgentCallResponseValueProcedure = "/api.v0alpha.P3Api/UpdateAgentCallResponseValue"
	// P3ApiGetIntercomPeerInfoProcedure is the fully-qualified name of the P3Api's GetIntercomPeerInfo
	// RPC.
	P3ApiGetIntercomPeerInfoProcedure = "/api.v0alpha.P3Api/GetIntercomPeerInfo"
	// P3ApiListOrgResponseEvaluatorsProcedure is the fully-qualified name of the P3Api's
	// ListOrgResponseEvaluators RPC.
	P3ApiListOrgResponseEvaluatorsProcedure = "/api.v0alpha.P3Api/ListOrgResponseEvaluators"
	// P3ApiGetQueueConfigurationOptionsArrayProcedure is the fully-qualified name of the P3Api's
	// GetQueueConfigurationOptionsArray RPC.
	P3ApiGetQueueConfigurationOptionsArrayProcedure = "/api.v0alpha.P3Api/GetQueueConfigurationOptionsArray"
	// P3ApiGetConditionalDNCLRulesProcedure is the fully-qualified name of the P3Api's
	// GetConditionalDNCLRules RPC.
	P3ApiGetConditionalDNCLRulesProcedure = "/api.v0alpha.P3Api/GetConditionalDNCLRules"
	// P3ApiManualDialStartProcedure is the fully-qualified name of the P3Api's ManualDialStart RPC.
	P3ApiManualDialStartProcedure = "/api.v0alpha.P3Api/ManualDialStart"
	// P3ApiListExtendedCallHistoryProcedure is the fully-qualified name of the P3Api's
	// ListExtendedCallHistory RPC.
	P3ApiListExtendedCallHistoryProcedure = "/api.v0alpha.P3Api/ListExtendedCallHistory"
	// P3ApiListWhiteListPhoneBooksProcedure is the fully-qualified name of the P3Api's
	// ListWhiteListPhoneBooks RPC.
	P3ApiListWhiteListPhoneBooksProcedure = "/api.v0alpha.P3Api/ListWhiteListPhoneBooks"
	// P3ApiDownloadCallRecordingProcedure is the fully-qualified name of the P3Api's
	// DownloadCallRecording RPC.
	P3ApiDownloadCallRecordingProcedure = "/api.v0alpha.P3Api/DownloadCallRecording"
	// P3ApiDownloadCallRecordingsProcedure is the fully-qualified name of the P3Api's
	// DownloadCallRecordings RPC.
	P3ApiDownloadCallRecordingsProcedure = "/api.v0alpha.P3Api/DownloadCallRecordings"
	// P3ApiPlacePreviewDialCallProcedure is the fully-qualified name of the P3Api's
	// PlacePreviewDialCall RPC.
	P3ApiPlacePreviewDialCallProcedure = "/api.v0alpha.P3Api/PlacePreviewDialCall"
	// P3ApiCancelPreviewDialCallProcedure is the fully-qualified name of the P3Api's
	// CancelPreviewDialCall RPC.
	P3ApiCancelPreviewDialCallProcedure = "/api.v0alpha.P3Api/CancelPreviewDialCall"
	// P3ApiUpdateTaskStatusProcedure is the fully-qualified name of the P3Api's UpdateTaskStatus RPC.
	P3ApiUpdateTaskStatusProcedure = "/api.v0alpha.P3Api/UpdateTaskStatus"
	// P3ApiListCallbackRoutingAgentsProcedure is the fully-qualified name of the P3Api's
	// ListCallbackRoutingAgents RPC.
	P3ApiListCallbackRoutingAgentsProcedure = "/api.v0alpha.P3Api/ListCallbackRoutingAgents"
	// P3ApiListCallbackRoutingSkillsProcedure is the fully-qualified name of the P3Api's
	// ListCallbackRoutingSkills RPC.
	P3ApiListCallbackRoutingSkillsProcedure = "/api.v0alpha.P3Api/ListCallbackRoutingSkills"
	// P3ApiHandleRecordingDelayProcedure is the fully-qualified name of the P3Api's
	// HandleRecordingDelay RPC.
	P3ApiHandleRecordingDelayProcedure = "/api.v0alpha.P3Api/HandleRecordingDelay"
	// P3ApiUpdateAgentAssignedHuntGroupProcedure is the fully-qualified name of the P3Api's
	// UpdateAgentAssignedHuntGroup RPC.
	P3ApiUpdateAgentAssignedHuntGroupProcedure = "/api.v0alpha.P3Api/UpdateAgentAssignedHuntGroup"
	// P3ApiGetCallDataProcedure is the fully-qualified name of the P3Api's GetCallData RPC.
	P3ApiGetCallDataProcedure = "/api.v0alpha.P3Api/GetCallData"
	// P3ApiListHuntGroupsProcedure is the fully-qualified name of the P3Api's ListHuntGroups RPC.
	P3ApiListHuntGroupsProcedure = "/api.v0alpha.P3Api/ListHuntGroups"
	// P3ApiListReassignmentHuntGroupsProcedure is the fully-qualified name of the P3Api's
	// ListReassignmentHuntGroups RPC.
	P3ApiListReassignmentHuntGroupsProcedure = "/api.v0alpha.P3Api/ListReassignmentHuntGroups"
	// P3ApiGetOrgAgentSettingsProcedure is the fully-qualified name of the P3Api's GetOrgAgentSettings
	// RPC.
	P3ApiGetOrgAgentSettingsProcedure = "/api.v0alpha.P3Api/GetOrgAgentSettings"
	// P3ApiListCallerIdsFromBucketProcedure is the fully-qualified name of the P3Api's
	// ListCallerIdsFromBucket RPC.
	P3ApiListCallerIdsFromBucketProcedure = "/api.v0alpha.P3Api/ListCallerIdsFromBucket"
	// P3ApiSaveLastCallResponseProcedure is the fully-qualified name of the P3Api's
	// SaveLastCallResponse RPC.
	P3ApiSaveLastCallResponseProcedure = "/api.v0alpha.P3Api/SaveLastCallResponse"
	// P3ApiListAgentCallLogsByCallSidAndTypeProcedure is the fully-qualified name of the P3Api's
	// ListAgentCallLogsByCallSidAndType RPC.
	P3ApiListAgentCallLogsByCallSidAndTypeProcedure = "/api.v0alpha.P3Api/ListAgentCallLogsByCallSidAndType"
	// P3ApiListAgentCallResponseValuesProcedure is the fully-qualified name of the P3Api's
	// ListAgentCallResponseValues RPC.
	P3ApiListAgentCallResponseValuesProcedure = "/api.v0alpha.P3Api/ListAgentCallResponseValues"
	// P3ApiGetContactSchemaByContactGroupProcedure is the fully-qualified name of the P3Api's
	// GetContactSchemaByContactGroup RPC.
	P3ApiGetContactSchemaByContactGroupProcedure = "/api.v0alpha.P3Api/GetContactSchemaByContactGroup"
	// P3ApiListContactGroupDetailsByClientSidProcedure is the fully-qualified name of the P3Api's
	// ListContactGroupDetailsByClientSid RPC.
	P3ApiListContactGroupDetailsByClientSidProcedure = "/api.v0alpha.P3Api/ListContactGroupDetailsByClientSid"
	// P3ApiGetContactGroupDetailsProcedure is the fully-qualified name of the P3Api's
	// GetContactGroupDetails RPC.
	P3ApiGetContactGroupDetailsProcedure = "/api.v0alpha.P3Api/GetContactGroupDetails"
	// P3ApiGetContactGroupSizeProcedure is the fully-qualified name of the P3Api's GetContactGroupSize
	// RPC.
	P3ApiGetContactGroupSizeProcedure = "/api.v0alpha.P3Api/GetContactGroupSize"
	// P3ApiCreateContactFieldDescriptionProcedure is the fully-qualified name of the P3Api's
	// CreateContactFieldDescription RPC.
	P3ApiCreateContactFieldDescriptionProcedure = "/api.v0alpha.P3Api/CreateContactFieldDescription"
	// P3ApiDeleteContactFieldDescriptionProcedure is the fully-qualified name of the P3Api's
	// DeleteContactFieldDescription RPC.
	P3ApiDeleteContactFieldDescriptionProcedure = "/api.v0alpha.P3Api/DeleteContactFieldDescription"
	// P3ApiListContactFieldDescriptionsProcedure is the fully-qualified name of the P3Api's
	// ListContactFieldDescriptions RPC.
	P3ApiListContactFieldDescriptionsProcedure = "/api.v0alpha.P3Api/ListContactFieldDescriptions"
	// P3ApiListContactFieldDescriptionsByCGSidProcedure is the fully-qualified name of the P3Api's
	// ListContactFieldDescriptionsByCGSid RPC.
	P3ApiListContactFieldDescriptionsByCGSidProcedure = "/api.v0alpha.P3Api/ListContactFieldDescriptionsByCGSid"
	// P3ApiListContactImportTemplatesProcedure is the fully-qualified name of the P3Api's
	// ListContactImportTemplates RPC.
	P3ApiListContactImportTemplatesProcedure = "/api.v0alpha.P3Api/ListContactImportTemplates"
	// P3ApiUpdatePreviewRecordToFinishedProcedure is the fully-qualified name of the P3Api's
	// UpdatePreviewRecordToFinished RPC.
	P3ApiUpdatePreviewRecordToFinishedProcedure = "/api.v0alpha.P3Api/UpdatePreviewRecordToFinished"
	// P3ApiUpdateAgentHuntGroupProcedure is the fully-qualified name of the P3Api's
	// UpdateAgentHuntGroup RPC.
	P3ApiUpdateAgentHuntGroupProcedure = "/api.v0alpha.P3Api/UpdateAgentHuntGroup"
	// P3ApiMultiAgentHuntGroupAssignmentProcedure is the fully-qualified name of the P3Api's
	// MultiAgentHuntGroupAssignment RPC.
	P3ApiMultiAgentHuntGroupAssignmentProcedure = "/api.v0alpha.P3Api/MultiAgentHuntGroupAssignment"
	// P3ApiGetAgentProfileProcedure is the fully-qualified name of the P3Api's GetAgentProfile RPC.
	P3ApiGetAgentProfileProcedure = "/api.v0alpha.P3Api/GetAgentProfile"
	// P3ApiRecalculateBillingProcedure is the fully-qualified name of the P3Api's RecalculateBilling
	// RPC.
	P3ApiRecalculateBillingProcedure = "/api.v0alpha.P3Api/RecalculateBilling"
	// P3ApiListOutboundBroadcastTemplateDataProcedure is the fully-qualified name of the P3Api's
	// ListOutboundBroadcastTemplateData RPC.
	P3ApiListOutboundBroadcastTemplateDataProcedure = "/api.v0alpha.P3Api/ListOutboundBroadcastTemplateData"
	// P3ApiMultiAgentSkillAssignmentProcedure is the fully-qualified name of the P3Api's
	// MultiAgentSkillAssignment RPC.
	P3ApiMultiAgentSkillAssignmentProcedure = "/api.v0alpha.P3Api/MultiAgentSkillAssignment"
	// P3ApiMultiAgentSkillUnassignmentProcedure is the fully-qualified name of the P3Api's
	// MultiAgentSkillUnassignment RPC.
	P3ApiMultiAgentSkillUnassignmentProcedure = "/api.v0alpha.P3Api/MultiAgentSkillUnassignment"
	// P3ApiListMAMAgentHuntGroupsByClientSidProcedure is the fully-qualified name of the P3Api's
	// ListMAMAgentHuntGroupsByClientSid RPC.
	P3ApiListMAMAgentHuntGroupsByClientSidProcedure = "/api.v0alpha.P3Api/ListMAMAgentHuntGroupsByClientSid"
	// P3ApiListTtsVoicesProcedure is the fully-qualified name of the P3Api's ListTtsVoices RPC.
	P3ApiListTtsVoicesProcedure = "/api.v0alpha.P3Api/ListTtsVoices"
	// P3ApiCreateTtsVoiceProcedure is the fully-qualified name of the P3Api's CreateTtsVoice RPC.
	P3ApiCreateTtsVoiceProcedure = "/api.v0alpha.P3Api/CreateTtsVoice"
	// P3ApiDeleteTtsVoiceProcedure is the fully-qualified name of the P3Api's DeleteTtsVoice RPC.
	P3ApiDeleteTtsVoiceProcedure = "/api.v0alpha.P3Api/DeleteTtsVoice"
	// P3ApiListCustomDataKeysProcedure is the fully-qualified name of the P3Api's ListCustomDataKeys
	// RPC.
	P3ApiListCustomDataKeysProcedure = "/api.v0alpha.P3Api/ListCustomDataKeys"
	// P3ApiCreateCustomDataKeyProcedure is the fully-qualified name of the P3Api's CreateCustomDataKey
	// RPC.
	P3ApiCreateCustomDataKeyProcedure = "/api.v0alpha.P3Api/CreateCustomDataKey"
	// P3ApiDeleteCustomDataKeyProcedure is the fully-qualified name of the P3Api's DeleteCustomDataKey
	// RPC.
	P3ApiDeleteCustomDataKeyProcedure = "/api.v0alpha.P3Api/DeleteCustomDataKey"
	// P3ApiUpdateCustomDataKeyProcedure is the fully-qualified name of the P3Api's UpdateCustomDataKey
	// RPC.
	P3ApiUpdateCustomDataKeyProcedure = "/api.v0alpha.P3Api/UpdateCustomDataKey"
	// P3ApiGetActivityLogHistoryProcedure is the fully-qualified name of the P3Api's
	// GetActivityLogHistory RPC.
	P3ApiGetActivityLogHistoryProcedure = "/api.v0alpha.P3Api/GetActivityLogHistory"
	// P3ApiListTableTemplatePropertiesProcedure is the fully-qualified name of the P3Api's
	// ListTableTemplateProperties RPC.
	P3ApiListTableTemplatePropertiesProcedure = "/api.v0alpha.P3Api/ListTableTemplateProperties"
	// P3ApiListAgentSkillsFiltersProcedure is the fully-qualified name of the P3Api's
	// ListAgentSkillsFilters RPC.
	P3ApiListAgentSkillsFiltersProcedure = "/api.v0alpha.P3Api/ListAgentSkillsFilters"
	// P3ApiListScheduleRulesProcedure is the fully-qualified name of the P3Api's ListScheduleRules RPC.
	P3ApiListScheduleRulesProcedure = "/api.v0alpha.P3Api/ListScheduleRules"
	// P3ApiListCustomReportFiltersProcedure is the fully-qualified name of the P3Api's
	// ListCustomReportFilters RPC.
	P3ApiListCustomReportFiltersProcedure = "/api.v0alpha.P3Api/ListCustomReportFilters"
	// P3ApiListSmsNumbersProcedure is the fully-qualified name of the P3Api's ListSmsNumbers RPC.
	P3ApiListSmsNumbersProcedure = "/api.v0alpha.P3Api/ListSmsNumbers"
)

// P3ApiClient is a client for the api.v0alpha.P3Api service.
type P3ApiClient interface {
	GetAgentHuntGroup(context.Context, *connect_go.Request[v0alpha.GetAgentHuntGroupReq]) (*connect_go.Response[v0alpha.HuntGroup], error)
	GetAgentSession(context.Context, *connect_go.Request[v0alpha.GetAgentSessionReq]) (*connect_go.Response[v0alpha.AgentSession], error)
	// Gets the skills of the requesting agent. This includes agent skills, hunt group skills, and extension skills(PBX).
	// Skills will be returned as a value pair (name, level).
	// For agent skills, the name of each skill will be the agent_skill_sid.
	// All other skills' names (hunt group and PBX) will be given special formats.
	// The requesting agent and hunt_group_sid skills will be defaulted to the max level (1000 and 100 respectively).
	//
	// Required permissions:
	//
	//	NONE
	//
	// Errors:
	//   - grpc.Invalid: the hunt_group_sid in the request in invalid.
	GetAgentSkills(context.Context, *connect_go.Request[v0alpha.GetAgentSkillsReq]) (*connect_go.Response[v0alpha.GetAgentSkillsRes], error)
	// Creates a new agent skill as defined by the request message.
	// Errors:
	//   - grpc.InvalidArgument: the client_sid or name in the request is invalid.
	CreateAgentSkill(context.Context, *connect_go.Request[v0alpha.CreateAgentSkillReq]) (*connect_go.Response[v0alpha.CreateAgentSkillRes], error)
	// Updates an agent skill as defined by the request message.
	// Errors:
	//   - grpc.InvalidArgument: the agent_skill_sid or name in the request is invalid.
	UpdateAgentSkill(context.Context, *connect_go.Request[v0alpha.UpdateAgentSkillReq]) (*connect_go.Response[v0alpha.UpdateAgentSkillRes], error)
	// Deletes the agent skill with the agent_skill_sid given on the request.
	// Errors:
	//   - grpc.InvalidArgument: the agent_skill_sid in the request is invalid.
	DeleteAgentSkill(context.Context, *connect_go.Request[v0alpha.DeleteAgentSkillReq]) (*connect_go.Response[v0alpha.DeleteAgentSkillRes], error)
	// Returns a list of agent skills for the given client sid.
	// DEPRECATED. Use ListSkills
	ListAgentSkills(context.Context, *connect_go.Request[v0alpha.ListAgentSkillsReq]) (*connect_go.Response[v0alpha.ListAgentSkillsRes], error)
	// Returns a list of skills for the current agent.
	ListSkillsForCurrentAgent(context.Context, *connect_go.Request[v0alpha.ListSkillsForCurrentAgentReq]) (*connect_go.Response[v0alpha.ListSkillsForCurrentAgentRes], error)
	// Returns a list of skills filtered by types given on
	// the request message field type_filter. Leaving the type_filter
	// field empty will return all types of skills.
	ListSkills(context.Context, *connect_go.Request[v0alpha.ListSkillsReq]) (*connect_go.Response[v0alpha.ListSkillsRes], error)
	// Updates an agents assigned skills as defined by the skills list on
	// the request message.
	// Errors:
	//   - grpc.InvalidArgument: the user_id on the request is invalid.
	UpdateAgentSkills(context.Context, *connect_go.Request[v0alpha.UpdateAgentSkillsReq]) (*connect_go.Response[v0alpha.UpdateAgentSkillsRes], error)
	GetCurrentAgent(context.Context, *connect_go.Request[v0alpha.GetCurrentAgentReq]) (*connect_go.Response[v0alpha.Agent], error)
	GetClientInfoData(context.Context, *connect_go.Request[v0alpha.GetClientInfoDataReq]) (*connect_go.Response[v0alpha.GetClientInfoDataRes], error)
	GetClientInfoDisplayTemplate(context.Context, *connect_go.Request[v0alpha.GetClientInfoDisplayTemplateReq]) (*connect_go.Response[v0alpha.GetClientInfoDisplayTemplateRes], error)
	ListAgentStatisticsData(context.Context, *connect_go.Request[v0alpha.ListAgentStatisticsDataReq]) (*connect_go.Response[v0alpha.ListAgentStatisticsDataRes], error)
	// Lists all agent and hunt group PBX extensions that the requested agent has.
	ListPBXExtensions(context.Context, *connect_go.Request[v0alpha.ListPBXExtensionsReq]) (*connect_go.Response[v0alpha.ListPBXExtensionsRes], error)
	// Lists every agent extension for the current client
	// Required Permissions:
	//
	//	AGENT_MANAGER
	//
	// Errors:
	//   - grpc.Internal: unexpected error getting pbx_extensions
	ListAgentExtensions(context.Context, *connect_go.Request[v0alpha.ListAgentExtensionsReq]) (*connect_go.Response[v0alpha.ListAgentExtensionsRes], error)
	// Lists every hunt group extension for the current client
	// Required Permissions:
	//
	//	AGENT_MANAGER
	//
	// Errors:
	//   - grpc.Internal: unexpected error getting pbx_extensions
	ListHuntGroupExtensions(context.Context, *connect_go.Request[v0alpha.ListHuntGroupExtensionsReq]) (*connect_go.Response[v0alpha.ListHuntGroupExtensionsRes], error)
	// Creates a new extension as defined by the request message
	// Required Permissions:
	//
	//	AGENT_MANAGER
	//
	// Errors:
	//   - grpc.InvalidArgument: The request has missing or invalid fields.
	//   - grpc.Internal: An unexpected error occurred while saving the extension.
	CreateExtension(context.Context, *connect_go.Request[v0alpha.CreateExtensionReq]) (*connect_go.Response[v0alpha.CreateExtensionRes], error)
	// Deletes a pbx_extension with the given pbx_extension_sid.
	// Required Permissions:
	//
	//	AGENT_MANAGER
	//
	// Errors:
	//   - grpc.InvalidArgument: The request had invalid or missing fields.
	DeleteExtension(context.Context, *connect_go.Request[v0alpha.DeleteExtensionReq]) (*connect_go.Response[v0alpha.DeleteExtensionRes], error)
	// Updates an extension as defined by the request message.
	// Required Permissions:
	//
	//	AGENT_MANAGER
	//
	// Errors:
	//   - grpc.InvalidArgument: The request had invalid or missing fields.
	//   - grpc.Internal: An unexpected error occured updating the extension.
	UpdateExtension(context.Context, *connect_go.Request[v0alpha.UpdateExtensionReq]) (*connect_go.Response[v0alpha.UpdateExtensionRes], error)
	UpdatePBXExtension(context.Context, *connect_go.Request[v0alpha.UpdatePBXExtensionReq]) (*connect_go.Response[v0alpha.UpdatePBXExtensionRes], error)
	CreateDNCLNumbers(context.Context, *connect_go.Request[v0alpha.CreateDNCLNumbersReq]) (*connect_go.Response[v0alpha.CreateDNCLNumbersRes], error)
	// Gets the campaign or huntgroup script for the given agent's current hunt
	// group. If no script is found, it gets the hunt group responses for the
	// agent's current hunt group. It also does a mail merge with the found script
	// or responses (if able).
	GetScriptOrResponses(context.Context, *connect_go.Request[v0alpha.GetScriptOrResponsesReq]) (*connect_go.Response[v0alpha.GetScriptOrResponsesRes], error)
	GetHuntGroupAgentSettings(context.Context, *connect_go.Request[v0alpha.GetHuntGroupAgentSettingsReq]) (*connect_go.Response[v0alpha.HuntGroupAgentSettings], error)
	// Returns a list of weblinks for the hunt group in the request.
	// It replaces any parameters of a given weblink with the call data of the call sid and type from the request message or with the callback details (if a scheduled_callback_id is given).
	ListHuntGroupWebLinks(context.Context, *connect_go.Request[v0alpha.ListHuntGroupWebLinksReq]) (*connect_go.Response[v0alpha.ListHuntGroupWebLinksRes], error)
	GetHuntGroupPauseCodes(context.Context, *connect_go.Request[v0alpha.GetHuntGroupPauseCodesReq]) (*connect_go.Response[v0alpha.GetHuntGroupPauseCodesRes], error)
	// Lists the call history of the requested agent for the past day or
	// session_sid, depending on the filter parameter.
	ListAgentCallHistory(context.Context, *connect_go.Request[v0alpha.ListAgentCallHistoryReq]) (*connect_go.Response[v0alpha.ListAgentCallHistoryRes], error)
	// Lists all client phone book entries.
	// Required Permissions:
	//
	//	AGENT_MANAGER
	ListClientPhoneBookEntries(context.Context, *connect_go.Request[v0alpha.ListClientPhoneBookEntriesReq]) (*connect_go.Response[v0alpha.ListClientPhoneBookEntriesRes], error)
	// Lists all hunt group phone book entries.
	// Required Permissions:
	//
	//	AGENT_MANAGER
	ListHuntGroupPhoneBookEntries(context.Context, *connect_go.Request[v0alpha.ListHuntGroupPhoneBookEntriesReq]) (*connect_go.Response[v0alpha.ListHuntGroupPhoneBookEntriesRes], error)
	// Creates a new phone_book as defined by the request message.
	// Required Permissions:
	//
	//	AGENT_MANAGER
	//
	// Errors:
	//   - grpc.InvalidArgument: the fields on the request are missing or invalid.
	//   - grpc.Internal: unexpected error occurred when saving the phone book.
	CreatePhoneBookEntry(context.Context, *connect_go.Request[v0alpha.CreatePhoneBookEntryReq]) (*connect_go.Response[v0alpha.CreatePhoneBookEntryRes], error)
	// Updates an existing phone_book as defined by the request message.
	// Required Permissions:
	//
	//	AGENT_MANAGER
	//
	// Errors:
	//   - grpc.InvalidArgument: the fields on the request are missing or invalid.
	//   - grpc.Internal: unexpected error occurred when saving the phone book.
	UpdatePhoneBookEntry(context.Context, *connect_go.Request[v0alpha.UpdatePhoneBookEntryReq]) (*connect_go.Response[v0alpha.UpdatePhoneBookEntryRes], error)
	// Deletes the phone_book with the phone_book_sid given on the reques message.
	// Required Permissions:
	//
	//	AGENT_MANAGER
	DeletePhoneBookEntry(context.Context, *connect_go.Request[v0alpha.DeletePhoneBookEntryReq]) (*connect_go.Response[v0alpha.DeletePhoneBookEntryRes], error)
	// Lists caller_id, outbound and transfer phone books for the requesting client and given hunt group sid.
	// Entries will be ordered by entry_name and phone_number.
	//
	// Required permissions:
	//
	//	NONE
	//
	// Errors:
	//   - grpc.Invalid: the client_sid or hunt_group_sid in the request are invalid.
	//   - grpc.Internal: unexpected error occurred when retrieving the phone books.
	ListPhoneBooks(context.Context, *connect_go.Request[v0alpha.ListPhoneBooksReq]) (*connect_go.Response[v0alpha.ListPhoneBooksRes], error)
	ListAgentTriggers(context.Context, *connect_go.Request[v0alpha.ListAgentTriggersReq]) (*connect_go.Response[v0alpha.ListAgentTriggersRes], error)
	// Gets all running broadcasts (task groups) for the requesting agent and hunt_group_sid in the request.
	// Calculates the percentage of completed tasks for each of those task groups.
	// Calculates the overall task completion percentage of all matching task groups.
	// Required permissions:
	//
	//	NONE
	//
	// Errors:
	//   - grpc.Invalid: the hunt_group_sid in the request is invalid.
	GetCampaignCompletionStatus(context.Context, *connect_go.Request[v0alpha.GetCampaignCompletionStatusReq]) (*connect_go.Response[v0alpha.GetCampaignCompletionStatusRes], error)
	// Uses lost peer call sid and call type from the request to get information about lost call
	// gets the name and hunt group of the agent that was connected to that call and all types of skills the call has.
	//
	// Required permissions:
	//
	//	NONE
	//
	// Errors:
	//   - grpc.Invalid: the call_sid in the request in invalid.
	//   - grpc.NotFound: the call sid provided wasn't previously connected to any agent.
	GetLostPeerInfo(context.Context, *connect_go.Request[v0alpha.GetLostPeerInfoReq]) (*connect_go.Response[v0alpha.GetLostPeerInfoRes], error)
	// Gets all the available Disposition Keys
	//
	// Required permissions:
	//
	//	NONE
	GetDispositionKeys(context.Context, *connect_go.Request[v0alpha.GetDispositionKeysReq]) (*connect_go.Response[v0alpha.GetDispositionKeysRes], error)
	GetReadyAgents(context.Context, *connect_go.Request[v0alpha.GetReadyAgentsReq]) (*connect_go.Response[v0alpha.GetReadyAgentsRes], error)
	// Returns lists with call data of calls that were:
	// Placed on multihold by the requesting agent.
	// Queued, are ready to be handled and require a subset of the agent_skills provided.
	// Placed in the Hold Queue Monitor, haven't been picked up yet and require a subset of the agent_skills provided.
	// Required permissions:
	//
	//	NONE
	//
	// Errors:
	//   - grpc.Invalid: the agent_session_sid provided in the request is invalid.
	ListAgentQueueAndOnHoldCallData(context.Context, *connect_go.Request[v0alpha.ListAgentQueueAndOnHoldCallDataReq]) (*connect_go.Response[v0alpha.ListAgentQueueAndOnHoldCallDataRes], error)
	SaveAgentCallResponses(context.Context, *connect_go.Request[v0alpha.SaveAgentCallResponsesReq]) (*connect_go.Response[v0alpha.SaveAgentCallResponsesRes], error)
	ListAgentTransferOptions(context.Context, *connect_go.Request[v0alpha.ListAgentTransferOptionsReq]) (*connect_go.Response[v0alpha.ListAgentTransferOptionsRes], error)
	UpdateAgentCallResponseValue(context.Context, *connect_go.Request[v0alpha.UpdateAgentCallResponseValueReq]) (*connect_go.Response[v0alpha.UpdateAgentCallResponseValueRes], error)
	GetIntercomPeerInfo(context.Context, *connect_go.Request[v0alpha.GetIntercomPeerInfoReq]) (*connect_go.Response[v0alpha.GetIntercomPeerInfoRes], error)
	// Lists the requesting user's org response evaluators.
	ListOrgResponseEvaluators(context.Context, *connect_go.Request[v0alpha.ListOrgResponseEvaluatorsReq]) (*connect_go.Response[v0alpha.ListOrgResponseEvaluatorsRes], error)
	GetQueueConfigurationOptionsArray(context.Context, *connect_go.Request[v0alpha.GetQueueConfigurationOptionsArrayReq]) (*connect_go.Response[v0alpha.GetQueueConfigurationOptionsArrayRes], error)
	// Get the rules for conditionally adding a number to the DNCL depending on
	// responses or scripts
	GetConditionalDNCLRules(context.Context, *connect_go.Request[v0alpha.GetConditionalDNCLRulesReq]) (*connect_go.Response[v0alpha.GetConditionalDNCLRulesRes], error)
	ManualDialStart(context.Context, *connect_go.Request[v0alpha.ManualDialStartReq]) (*connect_go.Response[v0alpha.ManualDialStartRes], error)
	ListExtendedCallHistory(context.Context, *connect_go.Request[v0alpha.ListExtendedCallHistoryReq]) (*connect_go.ServerStreamForClient[v0alpha.ListExtendedCallHistoryRes], error)
	ListWhiteListPhoneBooks(context.Context, *connect_go.Request[v0alpha.ListWhiteListPhoneBooksReq]) (*connect_go.Response[v0alpha.ListWhiteListPhoneBooksRes], error)
	DownloadCallRecording(context.Context, *connect_go.Request[v0alpha.DownloadCallRecordingReq]) (*connect_go.Response[v0alpha.DownloadRecordingRes], error)
	DownloadCallRecordings(context.Context, *connect_go.Request[v0alpha.DownloadCallRecordingsReq]) (*connect_go.Response[v0alpha.DownloadRecordingRes], error)
	PlacePreviewDialCall(context.Context, *connect_go.Request[v0alpha.PlacePreviewDialCallReq]) (*connect_go.Response[v0alpha.PlacePreviewDialCallRes], error)
	CancelPreviewDialCall(context.Context, *connect_go.Request[v0alpha.CancelPreviewDialCallReq]) (*connect_go.Response[v0alpha.CancelPreviewDialCallRes], error)
	UpdateTaskStatus(context.Context, *connect_go.Request[v0alpha.UpdateTaskStatusReq]) (*connect_go.Response[v0alpha.Nil], error)
	// ListCallbackRoutingAgents returns a list of agents that are allowed to make a callback.
	ListCallbackRoutingAgents(context.Context, *connect_go.Request[v0alpha.ListCallbackRoutingAgentsReq]) (*connect_go.Response[v0alpha.ListCallbackRoutingAgentsRes], error)
	ListCallbackRoutingSkills(context.Context, *connect_go.Request[v0alpha.ListCallbackRoutingSkillsReq]) (*connect_go.Response[v0alpha.ListCallbackRoutingSkillsRes], error)
	HandleRecordingDelay(context.Context, *connect_go.Request[v0alpha.HandleRecordingDelayReq]) (*connect_go.Response[v0alpha.HandleRecordingDelayRes], error)
	UpdateAgentAssignedHuntGroup(context.Context, *connect_go.Request[v0alpha.UpdateAgentAssignedHuntGroupReq]) (*connect_go.Response[v0alpha.UpdateAgentAssignedHuntGroupRes], error)
	GetCallData(context.Context, *connect_go.Request[v0alpha.GetCallDataReq]) (*connect_go.Response[v0alpha.GetCallDataRes], error)
	ListHuntGroups(context.Context, *connect_go.Request[v0alpha.ListHuntGroupsReq]) (*connect_go.Response[v0alpha.ListHuntGroupsRes], error)
	// List the hunt groups an agent within a given hunt group can reassign
	// themselves to. The reassignment hunt groups can optionally be limited by a
	// hunt group setting. If a hunt group does not allow reassignment, the
	// returned list will be empty.
	ListReassignmentHuntGroups(context.Context, *connect_go.Request[v0alpha.ListReassignmentHuntGroupsReq]) (*connect_go.Response[v0alpha.ListReassignmentHuntGroupsRes], error)
	GetOrgAgentSettings(context.Context, *connect_go.Request[v0alpha.GetOrgAgentSettingsReq]) (*connect_go.Response[v0alpha.GetOrgAgentSettingsRes], error)
	// Lists caller id numbers with their associated region codes for the given
	// bucket
	ListCallerIdsFromBucket(context.Context, *connect_go.Request[v0alpha.ListCallerIdsFromBucketReq]) (*connect_go.Response[v0alpha.ListCallerIdsFromBucketRes], error)
	SaveLastCallResponse(context.Context, *connect_go.Request[v0alpha.SaveLastCallResponseReq]) (*connect_go.Response[v0alpha.SaveLastCallResponseRes], error)
	ListAgentCallLogsByCallSidAndType(context.Context, *connect_go.Request[v0alpha.ListAgentCallLogsByCallSidAndTypeReq]) (*connect_go.Response[v0alpha.ListAgentCallLogsByCallSidAndTypeRes], error)
	// Lists the keys and values of the latest responses for the given call_sid,
	// call_type and agent_sid
	ListAgentCallResponseValues(context.Context, *connect_go.Request[v0alpha.ListAgentCallResponseValuesReq]) (*connect_go.Response[v0alpha.ListAgentCallResponseValuesRes], error)
	// Get contact schema details based on contact group sid
	GetContactSchemaByContactGroup(context.Context, *connect_go.Request[v0alpha.GetContactSchemaByContactGroupReq]) (*connect_go.Response[v0alpha.ContactSchema], error)
	// List contact group details based on client sid from contact_group table
	ListContactGroupDetailsByClientSid(context.Context, *connect_go.Request[v0alpha.ListContactGroupDetailsByClientSidReq]) (*connect_go.Response[v0alpha.ListContactGroupDetailsByClientSidRes], error)
	// Get contact group details based on contact group sid from contact_group
	// table
	GetContactGroupDetails(context.Context, *connect_go.Request[v0alpha.GetContactGroupReq]) (*connect_go.Response[v0alpha.ContactGroup], error)
	// Get contact group size based on contacts size
	GetContactGroupSize(context.Context, *connect_go.Request[v0alpha.GetContactGroupReq]) (*connect_go.Response[v0alpha.GetContactGroupSizeRes], error)
	// Create contact field description details
	CreateContactFieldDescription(context.Context, *connect_go.Request[v0alpha.CreateContactFieldDescriptionReq]) (*connect_go.Response[v0alpha.CreateContactFieldDescriptionRes], error)
	// Delete contact field description details
	DeleteContactFieldDescription(context.Context, *connect_go.Request[v0alpha.DeleteContactFieldDescriptionReq]) (*connect_go.Response[v0alpha.DeleteContactFieldDescriptionRes], error)
	// List contact field desc details from contact_field_description table
	ListContactFieldDescriptions(context.Context, *connect_go.Request[v0alpha.ListContactFieldDescriptionsReq]) (*connect_go.Response[v0alpha.ListContactFieldDescriptionsRes], error)
	// List contact field description details based on contact group sid
	ListContactFieldDescriptionsByCGSid(context.Context, *connect_go.Request[v0alpha.ListContactFieldDescriptionsByCGSidReq]) (*connect_go.Response[v0alpha.ListContactFieldDescriptionsByCGSidRes], error)
	// List contactImportTemplates based on client_sid from
	// contact_import_template table
	ListContactImportTemplates(context.Context, *connect_go.Request[v0alpha.ListContactImportTemplatesReq]) (*connect_go.Response[v0alpha.ListContactImportTemplatesRes], error)
	// Updates task data for a preview record to finished and logs an agent
	// session event
	UpdatePreviewRecordToFinished(context.Context, *connect_go.Request[v0alpha.UpdatePreviewRecordToFinishedReq]) (*connect_go.Response[v0alpha.UpdatePreviewRecordToFinishedRes], error)
	// Updates the requesting agent's hunt_group_sid.
	UpdateAgentHuntGroup(context.Context, *connect_go.Request[v0alpha.UpdateAgentHuntGroupReq]) (*connect_go.Response[v0alpha.UpdateAgentHuntGroupRes], error)
	// Updates every given user's hunt_group_sid.
	// Required Permissions:
	//
	//	AGENT_MANAGEMENT
	//
	// Errors:
	//   - grpc.Internal: an error occurred while interacting with the database.
	//   - grpc.InvalidArgument: the hunt_group_sid or the user id list is empty or contains an invalid value.
	MultiAgentHuntGroupAssignment(context.Context, *connect_go.Request[v0alpha.MultiAgentHuntGroupAssignmentReq]) (*connect_go.Response[v0alpha.MultiAgentHuntGroupAssignmentRes], error)
	// GetAgentProfile returns an agent profile.
	GetAgentProfile(context.Context, *connect_go.Request[v0alpha.GetAgentProfileReq]) (*connect_go.Response[v0alpha.AgentProfile], error)
	// RecalculateBilling updates statuses for every billing type given on the
	// request message for either the current or previous month.
	// Only data that has already been summed for billing will have it's
	// status updated.
	// Required Permissions:
	//
	//	EDIT_BILLING
	RecalculateBilling(context.Context, *connect_go.Request[v0alpha.RecalculateBillingReq]) (*connect_go.Response[v0alpha.RecalculateBillingRes], error)
	// Gets information of the requesting client's broadcast templates (template_number, name, type, modify_date)
	// It reports if each found template is either STANDARD or LAYERED.
	// Required permissions:
	//
	//	NONE
	//
	// Errors:
	//
	//	NONE
	ListOutboundBroadcastTemplateData(context.Context, *connect_go.Request[v0alpha.ListOutboundBroadcastTemplateDataReq]) (*connect_go.Response[v0alpha.ListOutboundBroadcastTemplateDataRes], error)
	// Assign every skill to every agent with the given aptitude.
	// Errors:
	//   - grpc.Invalid: the aptitude field is invalid.
	MultiAgentSkillAssignment(context.Context, *connect_go.Request[v0alpha.MultiAgentSkillAssignmentReq]) (*connect_go.Response[v0alpha.MultiAgentSkillAssignmentRes], error)
	// Unassigns every given skill from every given user.
	// Errors:
	//   - grpc.InvalidArgument:
	//   - the user_ids list is empty or contains an empty string.
	//   - one or more of the user_ids does not belong to the client.
	//   - grpc.Internal: an error occurred while deleting the skill assignments.
	MultiAgentSkillUnassignment(context.Context, *connect_go.Request[v0alpha.MultiAgentSkillUnassignmentReq]) (*connect_go.Response[v0alpha.MultiAgentSkillUnassignmentRes], error)
	// List of agent hunt groups based on client sid
	// that have manually approved messages enabled
	ListMAMAgentHuntGroupsByClientSid(context.Context, *connect_go.Request[v0alpha.ListMAMAgentHuntGroupsByClientSidReq]) (*connect_go.Response[v0alpha.ListMAMAgentHuntGroupsByClientSidRes], error)
	// List every tts voice
	// Required Permissions:
	//
	//	TCN_ADMIN_SETTINGS
	//
	// Errors:
	//   - grpc.Internal: an error was returned while trying to retrieve the entity
	ListTtsVoices(context.Context, *connect_go.Request[v0alpha.ListTtsVoicesReq]) (*connect_go.Response[v0alpha.ListTtsVoicesRes], error)
	// Create a new tts voice
	// Required Permissions:
	//
	//	TCN_ADMIN_SETTINGS
	//
	// Errors:
	//   - grpc.InvalidArgument: the actual_name or port field on the request is invalid.
	//   - grpc.Internal: an error was returned while trying to insert the new tts voice.
	CreateTtsVoice(context.Context, *connect_go.Request[v0alpha.CreateTtsVoiceReq]) (*connect_go.Response[v0alpha.CreateTtsVoiceRes], error)
	// Delete a tts voice with the given tts_voice_sid.
	// Required Permissions:
	//
	//	TCN_ADMIN_SETTINGS
	//
	// Errors:
	//   - grpc.InvalidArgument: the tts_voice_sid field on the request is invalid.
	//   - grpc.Internal: an error was returned while trying to remove the tts voice.
	DeleteTtsVoice(context.Context, *connect_go.Request[v0alpha.DeleteTtsVoiceReq]) (*connect_go.Response[v0alpha.DeleteTtsVoiceRes], error)
	// List of account custom data keys based on client sid
	// Required Permissions:
	//
	//	ORG_VIEW
	//
	// Errors:
	//   - grpc.Internal: an error was returned while trying to retrieve the entity
	ListCustomDataKeys(context.Context, *connect_go.Request[v0alpha.ListCustomDataKeysReq]) (*connect_go.Response[v0alpha.ListCustomDataKeysRes], error)
	// Creates a new Data Key as defined by the request message
	// the client_properties_sid should not be set, this is assigned on the backend
	// Required Permission:
	//
	//	ORG_EDIT
	//
	// Errors:
	//   - grpc.InvalidArgument: The custom_data_key field was not set
	//   - grpc.Internal: error creating custom data key
	CreateCustomDataKey(context.Context, *connect_go.Request[v0alpha.CreateCustomDataKeyReq]) (*connect_go.Response[v0alpha.CreateCustomDataKeyRes], error)
	// Deletes a Custom Data Key with the sid given on the request message.
	// Required Permission:
	//
	//	ORG_EDIT
	//
	// Errors:
	//   - grpc.InvalidArgument: The client_properties_sid field is invalid.
	//   - grpc.NotFound: no custom data key was deleted for the client_properties_sid.
	//   - grpc.Internal: an error occurred while trying to remove the custom data key.
	DeleteCustomDataKey(context.Context, *connect_go.Request[v0alpha.DeleteCustomDataKeyReq]) (*connect_go.Response[v0alpha.DeleteCustomDataKeyRes], error)
	// Updates a custom data key with the client_properties_sid and data key
	// given on the request
	// Required Permissions;
	//
	//	ORG_EDIT
	//
	// Errors:
	//   - grpc.InvalidArgument: The client_properties_sid was empty or the data key was not set
	//   - grpc.Internal: error updating custom data key, more than 1 custom data key records affected
	//   - grpc.NotFound: no matching custom data key found
	UpdateCustomDataKey(context.Context, *connect_go.Request[v0alpha.UpdateCustomDataKeyReq]) (*connect_go.Response[v0alpha.UpdateCustomDataKeyRes], error)
	// Get Activity logs for given users and by specified time range
	// Required Permissions;
	//
	//	CUSTOMER_SUPPORT
	GetActivityLogHistory(context.Context, *connect_go.Request[v0alpha.GetActivityLogHistoryReq]) (*connect_go.ServerStreamForClient[v0alpha.GetActivityLogHistoryRes], error)
	// List agent and queue table template properties by client sid
	ListTableTemplateProperties(context.Context, *connect_go.Request[v0alpha.ListTableTemplatePropertiesReq]) (*connect_go.Response[v0alpha.ListTableTemplatePropertiesRes], error)
	// List agent skills filters by client sid
	ListAgentSkillsFilters(context.Context, *connect_go.Request[v0alpha.ListAgentSkillsFiltersReq]) (*connect_go.Response[v0alpha.ListAgentSkillsFiltersRes], error)
	// List Schedule Rules
	ListScheduleRules(context.Context, *connect_go.Request[v0alpha.ListScheduleRulesRequest]) (*connect_go.Response[v0alpha.ListScheduleRulesResult], error)
	// List custom report filters by client sid
	ListCustomReportFilters(context.Context, *connect_go.Request[v0alpha.ListCustomReportFiltersReq]) (*connect_go.Response[v0alpha.ListCustomReportFiltersRes], error)
	// List sms numbers by client sid
	ListSmsNumbers(context.Context, *connect_go.Request[v0alpha.ListSmsNumbersReq]) (*connect_go.Response[v0alpha.ListSmsNumbersRes], error)
}

// NewP3ApiClient constructs a client for the api.v0alpha.P3Api service. By default, it uses the
// Connect protocol with the binary Protobuf Codec, asks for gzipped responses, and sends
// uncompressed requests. To use the gRPC or gRPC-Web protocols, supply the connect.WithGRPC() or
// connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewP3ApiClient(httpClient connect_go.HTTPClient, baseURL string, opts ...connect_go.ClientOption) P3ApiClient {
	baseURL = strings.TrimRight(baseURL, "/")
	return &p3ApiClient{
		getAgentHuntGroup: connect_go.NewClient[v0alpha.GetAgentHuntGroupReq, v0alpha.HuntGroup](
			httpClient,
			baseURL+P3ApiGetAgentHuntGroupProcedure,
			opts...,
		),
		getAgentSession: connect_go.NewClient[v0alpha.GetAgentSessionReq, v0alpha.AgentSession](
			httpClient,
			baseURL+P3ApiGetAgentSessionProcedure,
			opts...,
		),
		getAgentSkills: connect_go.NewClient[v0alpha.GetAgentSkillsReq, v0alpha.GetAgentSkillsRes](
			httpClient,
			baseURL+P3ApiGetAgentSkillsProcedure,
			opts...,
		),
		createAgentSkill: connect_go.NewClient[v0alpha.CreateAgentSkillReq, v0alpha.CreateAgentSkillRes](
			httpClient,
			baseURL+P3ApiCreateAgentSkillProcedure,
			opts...,
		),
		updateAgentSkill: connect_go.NewClient[v0alpha.UpdateAgentSkillReq, v0alpha.UpdateAgentSkillRes](
			httpClient,
			baseURL+P3ApiUpdateAgentSkillProcedure,
			opts...,
		),
		deleteAgentSkill: connect_go.NewClient[v0alpha.DeleteAgentSkillReq, v0alpha.DeleteAgentSkillRes](
			httpClient,
			baseURL+P3ApiDeleteAgentSkillProcedure,
			opts...,
		),
		listAgentSkills: connect_go.NewClient[v0alpha.ListAgentSkillsReq, v0alpha.ListAgentSkillsRes](
			httpClient,
			baseURL+P3ApiListAgentSkillsProcedure,
			opts...,
		),
		listSkillsForCurrentAgent: connect_go.NewClient[v0alpha.ListSkillsForCurrentAgentReq, v0alpha.ListSkillsForCurrentAgentRes](
			httpClient,
			baseURL+P3ApiListSkillsForCurrentAgentProcedure,
			opts...,
		),
		listSkills: connect_go.NewClient[v0alpha.ListSkillsReq, v0alpha.ListSkillsRes](
			httpClient,
			baseURL+P3ApiListSkillsProcedure,
			opts...,
		),
		updateAgentSkills: connect_go.NewClient[v0alpha.UpdateAgentSkillsReq, v0alpha.UpdateAgentSkillsRes](
			httpClient,
			baseURL+P3ApiUpdateAgentSkillsProcedure,
			opts...,
		),
		getCurrentAgent: connect_go.NewClient[v0alpha.GetCurrentAgentReq, v0alpha.Agent](
			httpClient,
			baseURL+P3ApiGetCurrentAgentProcedure,
			opts...,
		),
		getClientInfoData: connect_go.NewClient[v0alpha.GetClientInfoDataReq, v0alpha.GetClientInfoDataRes](
			httpClient,
			baseURL+P3ApiGetClientInfoDataProcedure,
			opts...,
		),
		getClientInfoDisplayTemplate: connect_go.NewClient[v0alpha.GetClientInfoDisplayTemplateReq, v0alpha.GetClientInfoDisplayTemplateRes](
			httpClient,
			baseURL+P3ApiGetClientInfoDisplayTemplateProcedure,
			opts...,
		),
		listAgentStatisticsData: connect_go.NewClient[v0alpha.ListAgentStatisticsDataReq, v0alpha.ListAgentStatisticsDataRes](
			httpClient,
			baseURL+P3ApiListAgentStatisticsDataProcedure,
			opts...,
		),
		listPBXExtensions: connect_go.NewClient[v0alpha.ListPBXExtensionsReq, v0alpha.ListPBXExtensionsRes](
			httpClient,
			baseURL+P3ApiListPBXExtensionsProcedure,
			opts...,
		),
		listAgentExtensions: connect_go.NewClient[v0alpha.ListAgentExtensionsReq, v0alpha.ListAgentExtensionsRes](
			httpClient,
			baseURL+P3ApiListAgentExtensionsProcedure,
			opts...,
		),
		listHuntGroupExtensions: connect_go.NewClient[v0alpha.ListHuntGroupExtensionsReq, v0alpha.ListHuntGroupExtensionsRes](
			httpClient,
			baseURL+P3ApiListHuntGroupExtensionsProcedure,
			opts...,
		),
		createExtension: connect_go.NewClient[v0alpha.CreateExtensionReq, v0alpha.CreateExtensionRes](
			httpClient,
			baseURL+P3ApiCreateExtensionProcedure,
			opts...,
		),
		deleteExtension: connect_go.NewClient[v0alpha.DeleteExtensionReq, v0alpha.DeleteExtensionRes](
			httpClient,
			baseURL+P3ApiDeleteExtensionProcedure,
			opts...,
		),
		updateExtension: connect_go.NewClient[v0alpha.UpdateExtensionReq, v0alpha.UpdateExtensionRes](
			httpClient,
			baseURL+P3ApiUpdateExtensionProcedure,
			opts...,
		),
		updatePBXExtension: connect_go.NewClient[v0alpha.UpdatePBXExtensionReq, v0alpha.UpdatePBXExtensionRes](
			httpClient,
			baseURL+P3ApiUpdatePBXExtensionProcedure,
			opts...,
		),
		createDNCLNumbers: connect_go.NewClient[v0alpha.CreateDNCLNumbersReq, v0alpha.CreateDNCLNumbersRes](
			httpClient,
			baseURL+P3ApiCreateDNCLNumbersProcedure,
			opts...,
		),
		getScriptOrResponses: connect_go.NewClient[v0alpha.GetScriptOrResponsesReq, v0alpha.GetScriptOrResponsesRes](
			httpClient,
			baseURL+P3ApiGetScriptOrResponsesProcedure,
			opts...,
		),
		getHuntGroupAgentSettings: connect_go.NewClient[v0alpha.GetHuntGroupAgentSettingsReq, v0alpha.HuntGroupAgentSettings](
			httpClient,
			baseURL+P3ApiGetHuntGroupAgentSettingsProcedure,
			opts...,
		),
		listHuntGroupWebLinks: connect_go.NewClient[v0alpha.ListHuntGroupWebLinksReq, v0alpha.ListHuntGroupWebLinksRes](
			httpClient,
			baseURL+P3ApiListHuntGroupWebLinksProcedure,
			opts...,
		),
		getHuntGroupPauseCodes: connect_go.NewClient[v0alpha.GetHuntGroupPauseCodesReq, v0alpha.GetHuntGroupPauseCodesRes](
			httpClient,
			baseURL+P3ApiGetHuntGroupPauseCodesProcedure,
			opts...,
		),
		listAgentCallHistory: connect_go.NewClient[v0alpha.ListAgentCallHistoryReq, v0alpha.ListAgentCallHistoryRes](
			httpClient,
			baseURL+P3ApiListAgentCallHistoryProcedure,
			opts...,
		),
		listClientPhoneBookEntries: connect_go.NewClient[v0alpha.ListClientPhoneBookEntriesReq, v0alpha.ListClientPhoneBookEntriesRes](
			httpClient,
			baseURL+P3ApiListClientPhoneBookEntriesProcedure,
			opts...,
		),
		listHuntGroupPhoneBookEntries: connect_go.NewClient[v0alpha.ListHuntGroupPhoneBookEntriesReq, v0alpha.ListHuntGroupPhoneBookEntriesRes](
			httpClient,
			baseURL+P3ApiListHuntGroupPhoneBookEntriesProcedure,
			opts...,
		),
		createPhoneBookEntry: connect_go.NewClient[v0alpha.CreatePhoneBookEntryReq, v0alpha.CreatePhoneBookEntryRes](
			httpClient,
			baseURL+P3ApiCreatePhoneBookEntryProcedure,
			opts...,
		),
		updatePhoneBookEntry: connect_go.NewClient[v0alpha.UpdatePhoneBookEntryReq, v0alpha.UpdatePhoneBookEntryRes](
			httpClient,
			baseURL+P3ApiUpdatePhoneBookEntryProcedure,
			opts...,
		),
		deletePhoneBookEntry: connect_go.NewClient[v0alpha.DeletePhoneBookEntryReq, v0alpha.DeletePhoneBookEntryRes](
			httpClient,
			baseURL+P3ApiDeletePhoneBookEntryProcedure,
			opts...,
		),
		listPhoneBooks: connect_go.NewClient[v0alpha.ListPhoneBooksReq, v0alpha.ListPhoneBooksRes](
			httpClient,
			baseURL+P3ApiListPhoneBooksProcedure,
			opts...,
		),
		listAgentTriggers: connect_go.NewClient[v0alpha.ListAgentTriggersReq, v0alpha.ListAgentTriggersRes](
			httpClient,
			baseURL+P3ApiListAgentTriggersProcedure,
			opts...,
		),
		getCampaignCompletionStatus: connect_go.NewClient[v0alpha.GetCampaignCompletionStatusReq, v0alpha.GetCampaignCompletionStatusRes](
			httpClient,
			baseURL+P3ApiGetCampaignCompletionStatusProcedure,
			opts...,
		),
		getLostPeerInfo: connect_go.NewClient[v0alpha.GetLostPeerInfoReq, v0alpha.GetLostPeerInfoRes](
			httpClient,
			baseURL+P3ApiGetLostPeerInfoProcedure,
			opts...,
		),
		getDispositionKeys: connect_go.NewClient[v0alpha.GetDispositionKeysReq, v0alpha.GetDispositionKeysRes](
			httpClient,
			baseURL+P3ApiGetDispositionKeysProcedure,
			opts...,
		),
		getReadyAgents: connect_go.NewClient[v0alpha.GetReadyAgentsReq, v0alpha.GetReadyAgentsRes](
			httpClient,
			baseURL+P3ApiGetReadyAgentsProcedure,
			opts...,
		),
		listAgentQueueAndOnHoldCallData: connect_go.NewClient[v0alpha.ListAgentQueueAndOnHoldCallDataReq, v0alpha.ListAgentQueueAndOnHoldCallDataRes](
			httpClient,
			baseURL+P3ApiListAgentQueueAndOnHoldCallDataProcedure,
			opts...,
		),
		saveAgentCallResponses: connect_go.NewClient[v0alpha.SaveAgentCallResponsesReq, v0alpha.SaveAgentCallResponsesRes](
			httpClient,
			baseURL+P3ApiSaveAgentCallResponsesProcedure,
			opts...,
		),
		listAgentTransferOptions: connect_go.NewClient[v0alpha.ListAgentTransferOptionsReq, v0alpha.ListAgentTransferOptionsRes](
			httpClient,
			baseURL+P3ApiListAgentTransferOptionsProcedure,
			opts...,
		),
		updateAgentCallResponseValue: connect_go.NewClient[v0alpha.UpdateAgentCallResponseValueReq, v0alpha.UpdateAgentCallResponseValueRes](
			httpClient,
			baseURL+P3ApiUpdateAgentCallResponseValueProcedure,
			opts...,
		),
		getIntercomPeerInfo: connect_go.NewClient[v0alpha.GetIntercomPeerInfoReq, v0alpha.GetIntercomPeerInfoRes](
			httpClient,
			baseURL+P3ApiGetIntercomPeerInfoProcedure,
			opts...,
		),
		listOrgResponseEvaluators: connect_go.NewClient[v0alpha.ListOrgResponseEvaluatorsReq, v0alpha.ListOrgResponseEvaluatorsRes](
			httpClient,
			baseURL+P3ApiListOrgResponseEvaluatorsProcedure,
			opts...,
		),
		getQueueConfigurationOptionsArray: connect_go.NewClient[v0alpha.GetQueueConfigurationOptionsArrayReq, v0alpha.GetQueueConfigurationOptionsArrayRes](
			httpClient,
			baseURL+P3ApiGetQueueConfigurationOptionsArrayProcedure,
			opts...,
		),
		getConditionalDNCLRules: connect_go.NewClient[v0alpha.GetConditionalDNCLRulesReq, v0alpha.GetConditionalDNCLRulesRes](
			httpClient,
			baseURL+P3ApiGetConditionalDNCLRulesProcedure,
			opts...,
		),
		manualDialStart: connect_go.NewClient[v0alpha.ManualDialStartReq, v0alpha.ManualDialStartRes](
			httpClient,
			baseURL+P3ApiManualDialStartProcedure,
			opts...,
		),
		listExtendedCallHistory: connect_go.NewClient[v0alpha.ListExtendedCallHistoryReq, v0alpha.ListExtendedCallHistoryRes](
			httpClient,
			baseURL+P3ApiListExtendedCallHistoryProcedure,
			opts...,
		),
		listWhiteListPhoneBooks: connect_go.NewClient[v0alpha.ListWhiteListPhoneBooksReq, v0alpha.ListWhiteListPhoneBooksRes](
			httpClient,
			baseURL+P3ApiListWhiteListPhoneBooksProcedure,
			opts...,
		),
		downloadCallRecording: connect_go.NewClient[v0alpha.DownloadCallRecordingReq, v0alpha.DownloadRecordingRes](
			httpClient,
			baseURL+P3ApiDownloadCallRecordingProcedure,
			opts...,
		),
		downloadCallRecordings: connect_go.NewClient[v0alpha.DownloadCallRecordingsReq, v0alpha.DownloadRecordingRes](
			httpClient,
			baseURL+P3ApiDownloadCallRecordingsProcedure,
			opts...,
		),
		placePreviewDialCall: connect_go.NewClient[v0alpha.PlacePreviewDialCallReq, v0alpha.PlacePreviewDialCallRes](
			httpClient,
			baseURL+P3ApiPlacePreviewDialCallProcedure,
			opts...,
		),
		cancelPreviewDialCall: connect_go.NewClient[v0alpha.CancelPreviewDialCallReq, v0alpha.CancelPreviewDialCallRes](
			httpClient,
			baseURL+P3ApiCancelPreviewDialCallProcedure,
			opts...,
		),
		updateTaskStatus: connect_go.NewClient[v0alpha.UpdateTaskStatusReq, v0alpha.Nil](
			httpClient,
			baseURL+P3ApiUpdateTaskStatusProcedure,
			opts...,
		),
		listCallbackRoutingAgents: connect_go.NewClient[v0alpha.ListCallbackRoutingAgentsReq, v0alpha.ListCallbackRoutingAgentsRes](
			httpClient,
			baseURL+P3ApiListCallbackRoutingAgentsProcedure,
			opts...,
		),
		listCallbackRoutingSkills: connect_go.NewClient[v0alpha.ListCallbackRoutingSkillsReq, v0alpha.ListCallbackRoutingSkillsRes](
			httpClient,
			baseURL+P3ApiListCallbackRoutingSkillsProcedure,
			opts...,
		),
		handleRecordingDelay: connect_go.NewClient[v0alpha.HandleRecordingDelayReq, v0alpha.HandleRecordingDelayRes](
			httpClient,
			baseURL+P3ApiHandleRecordingDelayProcedure,
			opts...,
		),
		updateAgentAssignedHuntGroup: connect_go.NewClient[v0alpha.UpdateAgentAssignedHuntGroupReq, v0alpha.UpdateAgentAssignedHuntGroupRes](
			httpClient,
			baseURL+P3ApiUpdateAgentAssignedHuntGroupProcedure,
			opts...,
		),
		getCallData: connect_go.NewClient[v0alpha.GetCallDataReq, v0alpha.GetCallDataRes](
			httpClient,
			baseURL+P3ApiGetCallDataProcedure,
			opts...,
		),
		listHuntGroups: connect_go.NewClient[v0alpha.ListHuntGroupsReq, v0alpha.ListHuntGroupsRes](
			httpClient,
			baseURL+P3ApiListHuntGroupsProcedure,
			opts...,
		),
		listReassignmentHuntGroups: connect_go.NewClient[v0alpha.ListReassignmentHuntGroupsReq, v0alpha.ListReassignmentHuntGroupsRes](
			httpClient,
			baseURL+P3ApiListReassignmentHuntGroupsProcedure,
			opts...,
		),
		getOrgAgentSettings: connect_go.NewClient[v0alpha.GetOrgAgentSettingsReq, v0alpha.GetOrgAgentSettingsRes](
			httpClient,
			baseURL+P3ApiGetOrgAgentSettingsProcedure,
			opts...,
		),
		listCallerIdsFromBucket: connect_go.NewClient[v0alpha.ListCallerIdsFromBucketReq, v0alpha.ListCallerIdsFromBucketRes](
			httpClient,
			baseURL+P3ApiListCallerIdsFromBucketProcedure,
			opts...,
		),
		saveLastCallResponse: connect_go.NewClient[v0alpha.SaveLastCallResponseReq, v0alpha.SaveLastCallResponseRes](
			httpClient,
			baseURL+P3ApiSaveLastCallResponseProcedure,
			opts...,
		),
		listAgentCallLogsByCallSidAndType: connect_go.NewClient[v0alpha.ListAgentCallLogsByCallSidAndTypeReq, v0alpha.ListAgentCallLogsByCallSidAndTypeRes](
			httpClient,
			baseURL+P3ApiListAgentCallLogsByCallSidAndTypeProcedure,
			opts...,
		),
		listAgentCallResponseValues: connect_go.NewClient[v0alpha.ListAgentCallResponseValuesReq, v0alpha.ListAgentCallResponseValuesRes](
			httpClient,
			baseURL+P3ApiListAgentCallResponseValuesProcedure,
			opts...,
		),
		getContactSchemaByContactGroup: connect_go.NewClient[v0alpha.GetContactSchemaByContactGroupReq, v0alpha.ContactSchema](
			httpClient,
			baseURL+P3ApiGetContactSchemaByContactGroupProcedure,
			opts...,
		),
		listContactGroupDetailsByClientSid: connect_go.NewClient[v0alpha.ListContactGroupDetailsByClientSidReq, v0alpha.ListContactGroupDetailsByClientSidRes](
			httpClient,
			baseURL+P3ApiListContactGroupDetailsByClientSidProcedure,
			opts...,
		),
		getContactGroupDetails: connect_go.NewClient[v0alpha.GetContactGroupReq, v0alpha.ContactGroup](
			httpClient,
			baseURL+P3ApiGetContactGroupDetailsProcedure,
			opts...,
		),
		getContactGroupSize: connect_go.NewClient[v0alpha.GetContactGroupReq, v0alpha.GetContactGroupSizeRes](
			httpClient,
			baseURL+P3ApiGetContactGroupSizeProcedure,
			opts...,
		),
		createContactFieldDescription: connect_go.NewClient[v0alpha.CreateContactFieldDescriptionReq, v0alpha.CreateContactFieldDescriptionRes](
			httpClient,
			baseURL+P3ApiCreateContactFieldDescriptionProcedure,
			opts...,
		),
		deleteContactFieldDescription: connect_go.NewClient[v0alpha.DeleteContactFieldDescriptionReq, v0alpha.DeleteContactFieldDescriptionRes](
			httpClient,
			baseURL+P3ApiDeleteContactFieldDescriptionProcedure,
			opts...,
		),
		listContactFieldDescriptions: connect_go.NewClient[v0alpha.ListContactFieldDescriptionsReq, v0alpha.ListContactFieldDescriptionsRes](
			httpClient,
			baseURL+P3ApiListContactFieldDescriptionsProcedure,
			opts...,
		),
		listContactFieldDescriptionsByCGSid: connect_go.NewClient[v0alpha.ListContactFieldDescriptionsByCGSidReq, v0alpha.ListContactFieldDescriptionsByCGSidRes](
			httpClient,
			baseURL+P3ApiListContactFieldDescriptionsByCGSidProcedure,
			opts...,
		),
		listContactImportTemplates: connect_go.NewClient[v0alpha.ListContactImportTemplatesReq, v0alpha.ListContactImportTemplatesRes](
			httpClient,
			baseURL+P3ApiListContactImportTemplatesProcedure,
			opts...,
		),
		updatePreviewRecordToFinished: connect_go.NewClient[v0alpha.UpdatePreviewRecordToFinishedReq, v0alpha.UpdatePreviewRecordToFinishedRes](
			httpClient,
			baseURL+P3ApiUpdatePreviewRecordToFinishedProcedure,
			opts...,
		),
		updateAgentHuntGroup: connect_go.NewClient[v0alpha.UpdateAgentHuntGroupReq, v0alpha.UpdateAgentHuntGroupRes](
			httpClient,
			baseURL+P3ApiUpdateAgentHuntGroupProcedure,
			opts...,
		),
		multiAgentHuntGroupAssignment: connect_go.NewClient[v0alpha.MultiAgentHuntGroupAssignmentReq, v0alpha.MultiAgentHuntGroupAssignmentRes](
			httpClient,
			baseURL+P3ApiMultiAgentHuntGroupAssignmentProcedure,
			opts...,
		),
		getAgentProfile: connect_go.NewClient[v0alpha.GetAgentProfileReq, v0alpha.AgentProfile](
			httpClient,
			baseURL+P3ApiGetAgentProfileProcedure,
			opts...,
		),
		recalculateBilling: connect_go.NewClient[v0alpha.RecalculateBillingReq, v0alpha.RecalculateBillingRes](
			httpClient,
			baseURL+P3ApiRecalculateBillingProcedure,
			opts...,
		),
		listOutboundBroadcastTemplateData: connect_go.NewClient[v0alpha.ListOutboundBroadcastTemplateDataReq, v0alpha.ListOutboundBroadcastTemplateDataRes](
			httpClient,
			baseURL+P3ApiListOutboundBroadcastTemplateDataProcedure,
			opts...,
		),
		multiAgentSkillAssignment: connect_go.NewClient[v0alpha.MultiAgentSkillAssignmentReq, v0alpha.MultiAgentSkillAssignmentRes](
			httpClient,
			baseURL+P3ApiMultiAgentSkillAssignmentProcedure,
			opts...,
		),
		multiAgentSkillUnassignment: connect_go.NewClient[v0alpha.MultiAgentSkillUnassignmentReq, v0alpha.MultiAgentSkillUnassignmentRes](
			httpClient,
			baseURL+P3ApiMultiAgentSkillUnassignmentProcedure,
			opts...,
		),
		listMAMAgentHuntGroupsByClientSid: connect_go.NewClient[v0alpha.ListMAMAgentHuntGroupsByClientSidReq, v0alpha.ListMAMAgentHuntGroupsByClientSidRes](
			httpClient,
			baseURL+P3ApiListMAMAgentHuntGroupsByClientSidProcedure,
			opts...,
		),
		listTtsVoices: connect_go.NewClient[v0alpha.ListTtsVoicesReq, v0alpha.ListTtsVoicesRes](
			httpClient,
			baseURL+P3ApiListTtsVoicesProcedure,
			opts...,
		),
		createTtsVoice: connect_go.NewClient[v0alpha.CreateTtsVoiceReq, v0alpha.CreateTtsVoiceRes](
			httpClient,
			baseURL+P3ApiCreateTtsVoiceProcedure,
			opts...,
		),
		deleteTtsVoice: connect_go.NewClient[v0alpha.DeleteTtsVoiceReq, v0alpha.DeleteTtsVoiceRes](
			httpClient,
			baseURL+P3ApiDeleteTtsVoiceProcedure,
			opts...,
		),
		listCustomDataKeys: connect_go.NewClient[v0alpha.ListCustomDataKeysReq, v0alpha.ListCustomDataKeysRes](
			httpClient,
			baseURL+P3ApiListCustomDataKeysProcedure,
			opts...,
		),
		createCustomDataKey: connect_go.NewClient[v0alpha.CreateCustomDataKeyReq, v0alpha.CreateCustomDataKeyRes](
			httpClient,
			baseURL+P3ApiCreateCustomDataKeyProcedure,
			opts...,
		),
		deleteCustomDataKey: connect_go.NewClient[v0alpha.DeleteCustomDataKeyReq, v0alpha.DeleteCustomDataKeyRes](
			httpClient,
			baseURL+P3ApiDeleteCustomDataKeyProcedure,
			opts...,
		),
		updateCustomDataKey: connect_go.NewClient[v0alpha.UpdateCustomDataKeyReq, v0alpha.UpdateCustomDataKeyRes](
			httpClient,
			baseURL+P3ApiUpdateCustomDataKeyProcedure,
			opts...,
		),
		getActivityLogHistory: connect_go.NewClient[v0alpha.GetActivityLogHistoryReq, v0alpha.GetActivityLogHistoryRes](
			httpClient,
			baseURL+P3ApiGetActivityLogHistoryProcedure,
			opts...,
		),
		listTableTemplateProperties: connect_go.NewClient[v0alpha.ListTableTemplatePropertiesReq, v0alpha.ListTableTemplatePropertiesRes](
			httpClient,
			baseURL+P3ApiListTableTemplatePropertiesProcedure,
			opts...,
		),
		listAgentSkillsFilters: connect_go.NewClient[v0alpha.ListAgentSkillsFiltersReq, v0alpha.ListAgentSkillsFiltersRes](
			httpClient,
			baseURL+P3ApiListAgentSkillsFiltersProcedure,
			opts...,
		),
		listScheduleRules: connect_go.NewClient[v0alpha.ListScheduleRulesRequest, v0alpha.ListScheduleRulesResult](
			httpClient,
			baseURL+P3ApiListScheduleRulesProcedure,
			opts...,
		),
		listCustomReportFilters: connect_go.NewClient[v0alpha.ListCustomReportFiltersReq, v0alpha.ListCustomReportFiltersRes](
			httpClient,
			baseURL+P3ApiListCustomReportFiltersProcedure,
			opts...,
		),
		listSmsNumbers: connect_go.NewClient[v0alpha.ListSmsNumbersReq, v0alpha.ListSmsNumbersRes](
			httpClient,
			baseURL+P3ApiListSmsNumbersProcedure,
			opts...,
		),
	}
}

// p3ApiClient implements P3ApiClient.
type p3ApiClient struct {
	getAgentHuntGroup                   *connect_go.Client[v0alpha.GetAgentHuntGroupReq, v0alpha.HuntGroup]
	getAgentSession                     *connect_go.Client[v0alpha.GetAgentSessionReq, v0alpha.AgentSession]
	getAgentSkills                      *connect_go.Client[v0alpha.GetAgentSkillsReq, v0alpha.GetAgentSkillsRes]
	createAgentSkill                    *connect_go.Client[v0alpha.CreateAgentSkillReq, v0alpha.CreateAgentSkillRes]
	updateAgentSkill                    *connect_go.Client[v0alpha.UpdateAgentSkillReq, v0alpha.UpdateAgentSkillRes]
	deleteAgentSkill                    *connect_go.Client[v0alpha.DeleteAgentSkillReq, v0alpha.DeleteAgentSkillRes]
	listAgentSkills                     *connect_go.Client[v0alpha.ListAgentSkillsReq, v0alpha.ListAgentSkillsRes]
	listSkillsForCurrentAgent           *connect_go.Client[v0alpha.ListSkillsForCurrentAgentReq, v0alpha.ListSkillsForCurrentAgentRes]
	listSkills                          *connect_go.Client[v0alpha.ListSkillsReq, v0alpha.ListSkillsRes]
	updateAgentSkills                   *connect_go.Client[v0alpha.UpdateAgentSkillsReq, v0alpha.UpdateAgentSkillsRes]
	getCurrentAgent                     *connect_go.Client[v0alpha.GetCurrentAgentReq, v0alpha.Agent]
	getClientInfoData                   *connect_go.Client[v0alpha.GetClientInfoDataReq, v0alpha.GetClientInfoDataRes]
	getClientInfoDisplayTemplate        *connect_go.Client[v0alpha.GetClientInfoDisplayTemplateReq, v0alpha.GetClientInfoDisplayTemplateRes]
	listAgentStatisticsData             *connect_go.Client[v0alpha.ListAgentStatisticsDataReq, v0alpha.ListAgentStatisticsDataRes]
	listPBXExtensions                   *connect_go.Client[v0alpha.ListPBXExtensionsReq, v0alpha.ListPBXExtensionsRes]
	listAgentExtensions                 *connect_go.Client[v0alpha.ListAgentExtensionsReq, v0alpha.ListAgentExtensionsRes]
	listHuntGroupExtensions             *connect_go.Client[v0alpha.ListHuntGroupExtensionsReq, v0alpha.ListHuntGroupExtensionsRes]
	createExtension                     *connect_go.Client[v0alpha.CreateExtensionReq, v0alpha.CreateExtensionRes]
	deleteExtension                     *connect_go.Client[v0alpha.DeleteExtensionReq, v0alpha.DeleteExtensionRes]
	updateExtension                     *connect_go.Client[v0alpha.UpdateExtensionReq, v0alpha.UpdateExtensionRes]
	updatePBXExtension                  *connect_go.Client[v0alpha.UpdatePBXExtensionReq, v0alpha.UpdatePBXExtensionRes]
	createDNCLNumbers                   *connect_go.Client[v0alpha.CreateDNCLNumbersReq, v0alpha.CreateDNCLNumbersRes]
	getScriptOrResponses                *connect_go.Client[v0alpha.GetScriptOrResponsesReq, v0alpha.GetScriptOrResponsesRes]
	getHuntGroupAgentSettings           *connect_go.Client[v0alpha.GetHuntGroupAgentSettingsReq, v0alpha.HuntGroupAgentSettings]
	listHuntGroupWebLinks               *connect_go.Client[v0alpha.ListHuntGroupWebLinksReq, v0alpha.ListHuntGroupWebLinksRes]
	getHuntGroupPauseCodes              *connect_go.Client[v0alpha.GetHuntGroupPauseCodesReq, v0alpha.GetHuntGroupPauseCodesRes]
	listAgentCallHistory                *connect_go.Client[v0alpha.ListAgentCallHistoryReq, v0alpha.ListAgentCallHistoryRes]
	listClientPhoneBookEntries          *connect_go.Client[v0alpha.ListClientPhoneBookEntriesReq, v0alpha.ListClientPhoneBookEntriesRes]
	listHuntGroupPhoneBookEntries       *connect_go.Client[v0alpha.ListHuntGroupPhoneBookEntriesReq, v0alpha.ListHuntGroupPhoneBookEntriesRes]
	createPhoneBookEntry                *connect_go.Client[v0alpha.CreatePhoneBookEntryReq, v0alpha.CreatePhoneBookEntryRes]
	updatePhoneBookEntry                *connect_go.Client[v0alpha.UpdatePhoneBookEntryReq, v0alpha.UpdatePhoneBookEntryRes]
	deletePhoneBookEntry                *connect_go.Client[v0alpha.DeletePhoneBookEntryReq, v0alpha.DeletePhoneBookEntryRes]
	listPhoneBooks                      *connect_go.Client[v0alpha.ListPhoneBooksReq, v0alpha.ListPhoneBooksRes]
	listAgentTriggers                   *connect_go.Client[v0alpha.ListAgentTriggersReq, v0alpha.ListAgentTriggersRes]
	getCampaignCompletionStatus         *connect_go.Client[v0alpha.GetCampaignCompletionStatusReq, v0alpha.GetCampaignCompletionStatusRes]
	getLostPeerInfo                     *connect_go.Client[v0alpha.GetLostPeerInfoReq, v0alpha.GetLostPeerInfoRes]
	getDispositionKeys                  *connect_go.Client[v0alpha.GetDispositionKeysReq, v0alpha.GetDispositionKeysRes]
	getReadyAgents                      *connect_go.Client[v0alpha.GetReadyAgentsReq, v0alpha.GetReadyAgentsRes]
	listAgentQueueAndOnHoldCallData     *connect_go.Client[v0alpha.ListAgentQueueAndOnHoldCallDataReq, v0alpha.ListAgentQueueAndOnHoldCallDataRes]
	saveAgentCallResponses              *connect_go.Client[v0alpha.SaveAgentCallResponsesReq, v0alpha.SaveAgentCallResponsesRes]
	listAgentTransferOptions            *connect_go.Client[v0alpha.ListAgentTransferOptionsReq, v0alpha.ListAgentTransferOptionsRes]
	updateAgentCallResponseValue        *connect_go.Client[v0alpha.UpdateAgentCallResponseValueReq, v0alpha.UpdateAgentCallResponseValueRes]
	getIntercomPeerInfo                 *connect_go.Client[v0alpha.GetIntercomPeerInfoReq, v0alpha.GetIntercomPeerInfoRes]
	listOrgResponseEvaluators           *connect_go.Client[v0alpha.ListOrgResponseEvaluatorsReq, v0alpha.ListOrgResponseEvaluatorsRes]
	getQueueConfigurationOptionsArray   *connect_go.Client[v0alpha.GetQueueConfigurationOptionsArrayReq, v0alpha.GetQueueConfigurationOptionsArrayRes]
	getConditionalDNCLRules             *connect_go.Client[v0alpha.GetConditionalDNCLRulesReq, v0alpha.GetConditionalDNCLRulesRes]
	manualDialStart                     *connect_go.Client[v0alpha.ManualDialStartReq, v0alpha.ManualDialStartRes]
	listExtendedCallHistory             *connect_go.Client[v0alpha.ListExtendedCallHistoryReq, v0alpha.ListExtendedCallHistoryRes]
	listWhiteListPhoneBooks             *connect_go.Client[v0alpha.ListWhiteListPhoneBooksReq, v0alpha.ListWhiteListPhoneBooksRes]
	downloadCallRecording               *connect_go.Client[v0alpha.DownloadCallRecordingReq, v0alpha.DownloadRecordingRes]
	downloadCallRecordings              *connect_go.Client[v0alpha.DownloadCallRecordingsReq, v0alpha.DownloadRecordingRes]
	placePreviewDialCall                *connect_go.Client[v0alpha.PlacePreviewDialCallReq, v0alpha.PlacePreviewDialCallRes]
	cancelPreviewDialCall               *connect_go.Client[v0alpha.CancelPreviewDialCallReq, v0alpha.CancelPreviewDialCallRes]
	updateTaskStatus                    *connect_go.Client[v0alpha.UpdateTaskStatusReq, v0alpha.Nil]
	listCallbackRoutingAgents           *connect_go.Client[v0alpha.ListCallbackRoutingAgentsReq, v0alpha.ListCallbackRoutingAgentsRes]
	listCallbackRoutingSkills           *connect_go.Client[v0alpha.ListCallbackRoutingSkillsReq, v0alpha.ListCallbackRoutingSkillsRes]
	handleRecordingDelay                *connect_go.Client[v0alpha.HandleRecordingDelayReq, v0alpha.HandleRecordingDelayRes]
	updateAgentAssignedHuntGroup        *connect_go.Client[v0alpha.UpdateAgentAssignedHuntGroupReq, v0alpha.UpdateAgentAssignedHuntGroupRes]
	getCallData                         *connect_go.Client[v0alpha.GetCallDataReq, v0alpha.GetCallDataRes]
	listHuntGroups                      *connect_go.Client[v0alpha.ListHuntGroupsReq, v0alpha.ListHuntGroupsRes]
	listReassignmentHuntGroups          *connect_go.Client[v0alpha.ListReassignmentHuntGroupsReq, v0alpha.ListReassignmentHuntGroupsRes]
	getOrgAgentSettings                 *connect_go.Client[v0alpha.GetOrgAgentSettingsReq, v0alpha.GetOrgAgentSettingsRes]
	listCallerIdsFromBucket             *connect_go.Client[v0alpha.ListCallerIdsFromBucketReq, v0alpha.ListCallerIdsFromBucketRes]
	saveLastCallResponse                *connect_go.Client[v0alpha.SaveLastCallResponseReq, v0alpha.SaveLastCallResponseRes]
	listAgentCallLogsByCallSidAndType   *connect_go.Client[v0alpha.ListAgentCallLogsByCallSidAndTypeReq, v0alpha.ListAgentCallLogsByCallSidAndTypeRes]
	listAgentCallResponseValues         *connect_go.Client[v0alpha.ListAgentCallResponseValuesReq, v0alpha.ListAgentCallResponseValuesRes]
	getContactSchemaByContactGroup      *connect_go.Client[v0alpha.GetContactSchemaByContactGroupReq, v0alpha.ContactSchema]
	listContactGroupDetailsByClientSid  *connect_go.Client[v0alpha.ListContactGroupDetailsByClientSidReq, v0alpha.ListContactGroupDetailsByClientSidRes]
	getContactGroupDetails              *connect_go.Client[v0alpha.GetContactGroupReq, v0alpha.ContactGroup]
	getContactGroupSize                 *connect_go.Client[v0alpha.GetContactGroupReq, v0alpha.GetContactGroupSizeRes]
	createContactFieldDescription       *connect_go.Client[v0alpha.CreateContactFieldDescriptionReq, v0alpha.CreateContactFieldDescriptionRes]
	deleteContactFieldDescription       *connect_go.Client[v0alpha.DeleteContactFieldDescriptionReq, v0alpha.DeleteContactFieldDescriptionRes]
	listContactFieldDescriptions        *connect_go.Client[v0alpha.ListContactFieldDescriptionsReq, v0alpha.ListContactFieldDescriptionsRes]
	listContactFieldDescriptionsByCGSid *connect_go.Client[v0alpha.ListContactFieldDescriptionsByCGSidReq, v0alpha.ListContactFieldDescriptionsByCGSidRes]
	listContactImportTemplates          *connect_go.Client[v0alpha.ListContactImportTemplatesReq, v0alpha.ListContactImportTemplatesRes]
	updatePreviewRecordToFinished       *connect_go.Client[v0alpha.UpdatePreviewRecordToFinishedReq, v0alpha.UpdatePreviewRecordToFinishedRes]
	updateAgentHuntGroup                *connect_go.Client[v0alpha.UpdateAgentHuntGroupReq, v0alpha.UpdateAgentHuntGroupRes]
	multiAgentHuntGroupAssignment       *connect_go.Client[v0alpha.MultiAgentHuntGroupAssignmentReq, v0alpha.MultiAgentHuntGroupAssignmentRes]
	getAgentProfile                     *connect_go.Client[v0alpha.GetAgentProfileReq, v0alpha.AgentProfile]
	recalculateBilling                  *connect_go.Client[v0alpha.RecalculateBillingReq, v0alpha.RecalculateBillingRes]
	listOutboundBroadcastTemplateData   *connect_go.Client[v0alpha.ListOutboundBroadcastTemplateDataReq, v0alpha.ListOutboundBroadcastTemplateDataRes]
	multiAgentSkillAssignment           *connect_go.Client[v0alpha.MultiAgentSkillAssignmentReq, v0alpha.MultiAgentSkillAssignmentRes]
	multiAgentSkillUnassignment         *connect_go.Client[v0alpha.MultiAgentSkillUnassignmentReq, v0alpha.MultiAgentSkillUnassignmentRes]
	listMAMAgentHuntGroupsByClientSid   *connect_go.Client[v0alpha.ListMAMAgentHuntGroupsByClientSidReq, v0alpha.ListMAMAgentHuntGroupsByClientSidRes]
	listTtsVoices                       *connect_go.Client[v0alpha.ListTtsVoicesReq, v0alpha.ListTtsVoicesRes]
	createTtsVoice                      *connect_go.Client[v0alpha.CreateTtsVoiceReq, v0alpha.CreateTtsVoiceRes]
	deleteTtsVoice                      *connect_go.Client[v0alpha.DeleteTtsVoiceReq, v0alpha.DeleteTtsVoiceRes]
	listCustomDataKeys                  *connect_go.Client[v0alpha.ListCustomDataKeysReq, v0alpha.ListCustomDataKeysRes]
	createCustomDataKey                 *connect_go.Client[v0alpha.CreateCustomDataKeyReq, v0alpha.CreateCustomDataKeyRes]
	deleteCustomDataKey                 *connect_go.Client[v0alpha.DeleteCustomDataKeyReq, v0alpha.DeleteCustomDataKeyRes]
	updateCustomDataKey                 *connect_go.Client[v0alpha.UpdateCustomDataKeyReq, v0alpha.UpdateCustomDataKeyRes]
	getActivityLogHistory               *connect_go.Client[v0alpha.GetActivityLogHistoryReq, v0alpha.GetActivityLogHistoryRes]
	listTableTemplateProperties         *connect_go.Client[v0alpha.ListTableTemplatePropertiesReq, v0alpha.ListTableTemplatePropertiesRes]
	listAgentSkillsFilters              *connect_go.Client[v0alpha.ListAgentSkillsFiltersReq, v0alpha.ListAgentSkillsFiltersRes]
	listScheduleRules                   *connect_go.Client[v0alpha.ListScheduleRulesRequest, v0alpha.ListScheduleRulesResult]
	listCustomReportFilters             *connect_go.Client[v0alpha.ListCustomReportFiltersReq, v0alpha.ListCustomReportFiltersRes]
	listSmsNumbers                      *connect_go.Client[v0alpha.ListSmsNumbersReq, v0alpha.ListSmsNumbersRes]
}

// GetAgentHuntGroup calls api.v0alpha.P3Api.GetAgentHuntGroup.
func (c *p3ApiClient) GetAgentHuntGroup(ctx context.Context, req *connect_go.Request[v0alpha.GetAgentHuntGroupReq]) (*connect_go.Response[v0alpha.HuntGroup], error) {
	return c.getAgentHuntGroup.CallUnary(ctx, req)
}

// GetAgentSession calls api.v0alpha.P3Api.GetAgentSession.
func (c *p3ApiClient) GetAgentSession(ctx context.Context, req *connect_go.Request[v0alpha.GetAgentSessionReq]) (*connect_go.Response[v0alpha.AgentSession], error) {
	return c.getAgentSession.CallUnary(ctx, req)
}

// GetAgentSkills calls api.v0alpha.P3Api.GetAgentSkills.
func (c *p3ApiClient) GetAgentSkills(ctx context.Context, req *connect_go.Request[v0alpha.GetAgentSkillsReq]) (*connect_go.Response[v0alpha.GetAgentSkillsRes], error) {
	return c.getAgentSkills.CallUnary(ctx, req)
}

// CreateAgentSkill calls api.v0alpha.P3Api.CreateAgentSkill.
func (c *p3ApiClient) CreateAgentSkill(ctx context.Context, req *connect_go.Request[v0alpha.CreateAgentSkillReq]) (*connect_go.Response[v0alpha.CreateAgentSkillRes], error) {
	return c.createAgentSkill.CallUnary(ctx, req)
}

// UpdateAgentSkill calls api.v0alpha.P3Api.UpdateAgentSkill.
func (c *p3ApiClient) UpdateAgentSkill(ctx context.Context, req *connect_go.Request[v0alpha.UpdateAgentSkillReq]) (*connect_go.Response[v0alpha.UpdateAgentSkillRes], error) {
	return c.updateAgentSkill.CallUnary(ctx, req)
}

// DeleteAgentSkill calls api.v0alpha.P3Api.DeleteAgentSkill.
func (c *p3ApiClient) DeleteAgentSkill(ctx context.Context, req *connect_go.Request[v0alpha.DeleteAgentSkillReq]) (*connect_go.Response[v0alpha.DeleteAgentSkillRes], error) {
	return c.deleteAgentSkill.CallUnary(ctx, req)
}

// ListAgentSkills calls api.v0alpha.P3Api.ListAgentSkills.
func (c *p3ApiClient) ListAgentSkills(ctx context.Context, req *connect_go.Request[v0alpha.ListAgentSkillsReq]) (*connect_go.Response[v0alpha.ListAgentSkillsRes], error) {
	return c.listAgentSkills.CallUnary(ctx, req)
}

// ListSkillsForCurrentAgent calls api.v0alpha.P3Api.ListSkillsForCurrentAgent.
func (c *p3ApiClient) ListSkillsForCurrentAgent(ctx context.Context, req *connect_go.Request[v0alpha.ListSkillsForCurrentAgentReq]) (*connect_go.Response[v0alpha.ListSkillsForCurrentAgentRes], error) {
	return c.listSkillsForCurrentAgent.CallUnary(ctx, req)
}

// ListSkills calls api.v0alpha.P3Api.ListSkills.
func (c *p3ApiClient) ListSkills(ctx context.Context, req *connect_go.Request[v0alpha.ListSkillsReq]) (*connect_go.Response[v0alpha.ListSkillsRes], error) {
	return c.listSkills.CallUnary(ctx, req)
}

// UpdateAgentSkills calls api.v0alpha.P3Api.UpdateAgentSkills.
func (c *p3ApiClient) UpdateAgentSkills(ctx context.Context, req *connect_go.Request[v0alpha.UpdateAgentSkillsReq]) (*connect_go.Response[v0alpha.UpdateAgentSkillsRes], error) {
	return c.updateAgentSkills.CallUnary(ctx, req)
}

// GetCurrentAgent calls api.v0alpha.P3Api.GetCurrentAgent.
func (c *p3ApiClient) GetCurrentAgent(ctx context.Context, req *connect_go.Request[v0alpha.GetCurrentAgentReq]) (*connect_go.Response[v0alpha.Agent], error) {
	return c.getCurrentAgent.CallUnary(ctx, req)
}

// GetClientInfoData calls api.v0alpha.P3Api.GetClientInfoData.
func (c *p3ApiClient) GetClientInfoData(ctx context.Context, req *connect_go.Request[v0alpha.GetClientInfoDataReq]) (*connect_go.Response[v0alpha.GetClientInfoDataRes], error) {
	return c.getClientInfoData.CallUnary(ctx, req)
}

// GetClientInfoDisplayTemplate calls api.v0alpha.P3Api.GetClientInfoDisplayTemplate.
func (c *p3ApiClient) GetClientInfoDisplayTemplate(ctx context.Context, req *connect_go.Request[v0alpha.GetClientInfoDisplayTemplateReq]) (*connect_go.Response[v0alpha.GetClientInfoDisplayTemplateRes], error) {
	return c.getClientInfoDisplayTemplate.CallUnary(ctx, req)
}

// ListAgentStatisticsData calls api.v0alpha.P3Api.ListAgentStatisticsData.
func (c *p3ApiClient) ListAgentStatisticsData(ctx context.Context, req *connect_go.Request[v0alpha.ListAgentStatisticsDataReq]) (*connect_go.Response[v0alpha.ListAgentStatisticsDataRes], error) {
	return c.listAgentStatisticsData.CallUnary(ctx, req)
}

// ListPBXExtensions calls api.v0alpha.P3Api.ListPBXExtensions.
func (c *p3ApiClient) ListPBXExtensions(ctx context.Context, req *connect_go.Request[v0alpha.ListPBXExtensionsReq]) (*connect_go.Response[v0alpha.ListPBXExtensionsRes], error) {
	return c.listPBXExtensions.CallUnary(ctx, req)
}

// ListAgentExtensions calls api.v0alpha.P3Api.ListAgentExtensions.
func (c *p3ApiClient) ListAgentExtensions(ctx context.Context, req *connect_go.Request[v0alpha.ListAgentExtensionsReq]) (*connect_go.Response[v0alpha.ListAgentExtensionsRes], error) {
	return c.listAgentExtensions.CallUnary(ctx, req)
}

// ListHuntGroupExtensions calls api.v0alpha.P3Api.ListHuntGroupExtensions.
func (c *p3ApiClient) ListHuntGroupExtensions(ctx context.Context, req *connect_go.Request[v0alpha.ListHuntGroupExtensionsReq]) (*connect_go.Response[v0alpha.ListHuntGroupExtensionsRes], error) {
	return c.listHuntGroupExtensions.CallUnary(ctx, req)
}

// CreateExtension calls api.v0alpha.P3Api.CreateExtension.
func (c *p3ApiClient) CreateExtension(ctx context.Context, req *connect_go.Request[v0alpha.CreateExtensionReq]) (*connect_go.Response[v0alpha.CreateExtensionRes], error) {
	return c.createExtension.CallUnary(ctx, req)
}

// DeleteExtension calls api.v0alpha.P3Api.DeleteExtension.
func (c *p3ApiClient) DeleteExtension(ctx context.Context, req *connect_go.Request[v0alpha.DeleteExtensionReq]) (*connect_go.Response[v0alpha.DeleteExtensionRes], error) {
	return c.deleteExtension.CallUnary(ctx, req)
}

// UpdateExtension calls api.v0alpha.P3Api.UpdateExtension.
func (c *p3ApiClient) UpdateExtension(ctx context.Context, req *connect_go.Request[v0alpha.UpdateExtensionReq]) (*connect_go.Response[v0alpha.UpdateExtensionRes], error) {
	return c.updateExtension.CallUnary(ctx, req)
}

// UpdatePBXExtension calls api.v0alpha.P3Api.UpdatePBXExtension.
func (c *p3ApiClient) UpdatePBXExtension(ctx context.Context, req *connect_go.Request[v0alpha.UpdatePBXExtensionReq]) (*connect_go.Response[v0alpha.UpdatePBXExtensionRes], error) {
	return c.updatePBXExtension.CallUnary(ctx, req)
}

// CreateDNCLNumbers calls api.v0alpha.P3Api.CreateDNCLNumbers.
func (c *p3ApiClient) CreateDNCLNumbers(ctx context.Context, req *connect_go.Request[v0alpha.CreateDNCLNumbersReq]) (*connect_go.Response[v0alpha.CreateDNCLNumbersRes], error) {
	return c.createDNCLNumbers.CallUnary(ctx, req)
}

// GetScriptOrResponses calls api.v0alpha.P3Api.GetScriptOrResponses.
func (c *p3ApiClient) GetScriptOrResponses(ctx context.Context, req *connect_go.Request[v0alpha.GetScriptOrResponsesReq]) (*connect_go.Response[v0alpha.GetScriptOrResponsesRes], error) {
	return c.getScriptOrResponses.CallUnary(ctx, req)
}

// GetHuntGroupAgentSettings calls api.v0alpha.P3Api.GetHuntGroupAgentSettings.
func (c *p3ApiClient) GetHuntGroupAgentSettings(ctx context.Context, req *connect_go.Request[v0alpha.GetHuntGroupAgentSettingsReq]) (*connect_go.Response[v0alpha.HuntGroupAgentSettings], error) {
	return c.getHuntGroupAgentSettings.CallUnary(ctx, req)
}

// ListHuntGroupWebLinks calls api.v0alpha.P3Api.ListHuntGroupWebLinks.
func (c *p3ApiClient) ListHuntGroupWebLinks(ctx context.Context, req *connect_go.Request[v0alpha.ListHuntGroupWebLinksReq]) (*connect_go.Response[v0alpha.ListHuntGroupWebLinksRes], error) {
	return c.listHuntGroupWebLinks.CallUnary(ctx, req)
}

// GetHuntGroupPauseCodes calls api.v0alpha.P3Api.GetHuntGroupPauseCodes.
func (c *p3ApiClient) GetHuntGroupPauseCodes(ctx context.Context, req *connect_go.Request[v0alpha.GetHuntGroupPauseCodesReq]) (*connect_go.Response[v0alpha.GetHuntGroupPauseCodesRes], error) {
	return c.getHuntGroupPauseCodes.CallUnary(ctx, req)
}

// ListAgentCallHistory calls api.v0alpha.P3Api.ListAgentCallHistory.
func (c *p3ApiClient) ListAgentCallHistory(ctx context.Context, req *connect_go.Request[v0alpha.ListAgentCallHistoryReq]) (*connect_go.Response[v0alpha.ListAgentCallHistoryRes], error) {
	return c.listAgentCallHistory.CallUnary(ctx, req)
}

// ListClientPhoneBookEntries calls api.v0alpha.P3Api.ListClientPhoneBookEntries.
func (c *p3ApiClient) ListClientPhoneBookEntries(ctx context.Context, req *connect_go.Request[v0alpha.ListClientPhoneBookEntriesReq]) (*connect_go.Response[v0alpha.ListClientPhoneBookEntriesRes], error) {
	return c.listClientPhoneBookEntries.CallUnary(ctx, req)
}

// ListHuntGroupPhoneBookEntries calls api.v0alpha.P3Api.ListHuntGroupPhoneBookEntries.
func (c *p3ApiClient) ListHuntGroupPhoneBookEntries(ctx context.Context, req *connect_go.Request[v0alpha.ListHuntGroupPhoneBookEntriesReq]) (*connect_go.Response[v0alpha.ListHuntGroupPhoneBookEntriesRes], error) {
	return c.listHuntGroupPhoneBookEntries.CallUnary(ctx, req)
}

// CreatePhoneBookEntry calls api.v0alpha.P3Api.CreatePhoneBookEntry.
func (c *p3ApiClient) CreatePhoneBookEntry(ctx context.Context, req *connect_go.Request[v0alpha.CreatePhoneBookEntryReq]) (*connect_go.Response[v0alpha.CreatePhoneBookEntryRes], error) {
	return c.createPhoneBookEntry.CallUnary(ctx, req)
}

// UpdatePhoneBookEntry calls api.v0alpha.P3Api.UpdatePhoneBookEntry.
func (c *p3ApiClient) UpdatePhoneBookEntry(ctx context.Context, req *connect_go.Request[v0alpha.UpdatePhoneBookEntryReq]) (*connect_go.Response[v0alpha.UpdatePhoneBookEntryRes], error) {
	return c.updatePhoneBookEntry.CallUnary(ctx, req)
}

// DeletePhoneBookEntry calls api.v0alpha.P3Api.DeletePhoneBookEntry.
func (c *p3ApiClient) DeletePhoneBookEntry(ctx context.Context, req *connect_go.Request[v0alpha.DeletePhoneBookEntryReq]) (*connect_go.Response[v0alpha.DeletePhoneBookEntryRes], error) {
	return c.deletePhoneBookEntry.CallUnary(ctx, req)
}

// ListPhoneBooks calls api.v0alpha.P3Api.ListPhoneBooks.
func (c *p3ApiClient) ListPhoneBooks(ctx context.Context, req *connect_go.Request[v0alpha.ListPhoneBooksReq]) (*connect_go.Response[v0alpha.ListPhoneBooksRes], error) {
	return c.listPhoneBooks.CallUnary(ctx, req)
}

// ListAgentTriggers calls api.v0alpha.P3Api.ListAgentTriggers.
func (c *p3ApiClient) ListAgentTriggers(ctx context.Context, req *connect_go.Request[v0alpha.ListAgentTriggersReq]) (*connect_go.Response[v0alpha.ListAgentTriggersRes], error) {
	return c.listAgentTriggers.CallUnary(ctx, req)
}

// GetCampaignCompletionStatus calls api.v0alpha.P3Api.GetCampaignCompletionStatus.
func (c *p3ApiClient) GetCampaignCompletionStatus(ctx context.Context, req *connect_go.Request[v0alpha.GetCampaignCompletionStatusReq]) (*connect_go.Response[v0alpha.GetCampaignCompletionStatusRes], error) {
	return c.getCampaignCompletionStatus.CallUnary(ctx, req)
}

// GetLostPeerInfo calls api.v0alpha.P3Api.GetLostPeerInfo.
func (c *p3ApiClient) GetLostPeerInfo(ctx context.Context, req *connect_go.Request[v0alpha.GetLostPeerInfoReq]) (*connect_go.Response[v0alpha.GetLostPeerInfoRes], error) {
	return c.getLostPeerInfo.CallUnary(ctx, req)
}

// GetDispositionKeys calls api.v0alpha.P3Api.GetDispositionKeys.
func (c *p3ApiClient) GetDispositionKeys(ctx context.Context, req *connect_go.Request[v0alpha.GetDispositionKeysReq]) (*connect_go.Response[v0alpha.GetDispositionKeysRes], error) {
	return c.getDispositionKeys.CallUnary(ctx, req)
}

// GetReadyAgents calls api.v0alpha.P3Api.GetReadyAgents.
func (c *p3ApiClient) GetReadyAgents(ctx context.Context, req *connect_go.Request[v0alpha.GetReadyAgentsReq]) (*connect_go.Response[v0alpha.GetReadyAgentsRes], error) {
	return c.getReadyAgents.CallUnary(ctx, req)
}

// ListAgentQueueAndOnHoldCallData calls api.v0alpha.P3Api.ListAgentQueueAndOnHoldCallData.
func (c *p3ApiClient) ListAgentQueueAndOnHoldCallData(ctx context.Context, req *connect_go.Request[v0alpha.ListAgentQueueAndOnHoldCallDataReq]) (*connect_go.Response[v0alpha.ListAgentQueueAndOnHoldCallDataRes], error) {
	return c.listAgentQueueAndOnHoldCallData.CallUnary(ctx, req)
}

// SaveAgentCallResponses calls api.v0alpha.P3Api.SaveAgentCallResponses.
func (c *p3ApiClient) SaveAgentCallResponses(ctx context.Context, req *connect_go.Request[v0alpha.SaveAgentCallResponsesReq]) (*connect_go.Response[v0alpha.SaveAgentCallResponsesRes], error) {
	return c.saveAgentCallResponses.CallUnary(ctx, req)
}

// ListAgentTransferOptions calls api.v0alpha.P3Api.ListAgentTransferOptions.
func (c *p3ApiClient) ListAgentTransferOptions(ctx context.Context, req *connect_go.Request[v0alpha.ListAgentTransferOptionsReq]) (*connect_go.Response[v0alpha.ListAgentTransferOptionsRes], error) {
	return c.listAgentTransferOptions.CallUnary(ctx, req)
}

// UpdateAgentCallResponseValue calls api.v0alpha.P3Api.UpdateAgentCallResponseValue.
func (c *p3ApiClient) UpdateAgentCallResponseValue(ctx context.Context, req *connect_go.Request[v0alpha.UpdateAgentCallResponseValueReq]) (*connect_go.Response[v0alpha.UpdateAgentCallResponseValueRes], error) {
	return c.updateAgentCallResponseValue.CallUnary(ctx, req)
}

// GetIntercomPeerInfo calls api.v0alpha.P3Api.GetIntercomPeerInfo.
func (c *p3ApiClient) GetIntercomPeerInfo(ctx context.Context, req *connect_go.Request[v0alpha.GetIntercomPeerInfoReq]) (*connect_go.Response[v0alpha.GetIntercomPeerInfoRes], error) {
	return c.getIntercomPeerInfo.CallUnary(ctx, req)
}

// ListOrgResponseEvaluators calls api.v0alpha.P3Api.ListOrgResponseEvaluators.
func (c *p3ApiClient) ListOrgResponseEvaluators(ctx context.Context, req *connect_go.Request[v0alpha.ListOrgResponseEvaluatorsReq]) (*connect_go.Response[v0alpha.ListOrgResponseEvaluatorsRes], error) {
	return c.listOrgResponseEvaluators.CallUnary(ctx, req)
}

// GetQueueConfigurationOptionsArray calls api.v0alpha.P3Api.GetQueueConfigurationOptionsArray.
func (c *p3ApiClient) GetQueueConfigurationOptionsArray(ctx context.Context, req *connect_go.Request[v0alpha.GetQueueConfigurationOptionsArrayReq]) (*connect_go.Response[v0alpha.GetQueueConfigurationOptionsArrayRes], error) {
	return c.getQueueConfigurationOptionsArray.CallUnary(ctx, req)
}

// GetConditionalDNCLRules calls api.v0alpha.P3Api.GetConditionalDNCLRules.
func (c *p3ApiClient) GetConditionalDNCLRules(ctx context.Context, req *connect_go.Request[v0alpha.GetConditionalDNCLRulesReq]) (*connect_go.Response[v0alpha.GetConditionalDNCLRulesRes], error) {
	return c.getConditionalDNCLRules.CallUnary(ctx, req)
}

// ManualDialStart calls api.v0alpha.P3Api.ManualDialStart.
func (c *p3ApiClient) ManualDialStart(ctx context.Context, req *connect_go.Request[v0alpha.ManualDialStartReq]) (*connect_go.Response[v0alpha.ManualDialStartRes], error) {
	return c.manualDialStart.CallUnary(ctx, req)
}

// ListExtendedCallHistory calls api.v0alpha.P3Api.ListExtendedCallHistory.
func (c *p3ApiClient) ListExtendedCallHistory(ctx context.Context, req *connect_go.Request[v0alpha.ListExtendedCallHistoryReq]) (*connect_go.ServerStreamForClient[v0alpha.ListExtendedCallHistoryRes], error) {
	return c.listExtendedCallHistory.CallServerStream(ctx, req)
}

// ListWhiteListPhoneBooks calls api.v0alpha.P3Api.ListWhiteListPhoneBooks.
func (c *p3ApiClient) ListWhiteListPhoneBooks(ctx context.Context, req *connect_go.Request[v0alpha.ListWhiteListPhoneBooksReq]) (*connect_go.Response[v0alpha.ListWhiteListPhoneBooksRes], error) {
	return c.listWhiteListPhoneBooks.CallUnary(ctx, req)
}

// DownloadCallRecording calls api.v0alpha.P3Api.DownloadCallRecording.
func (c *p3ApiClient) DownloadCallRecording(ctx context.Context, req *connect_go.Request[v0alpha.DownloadCallRecordingReq]) (*connect_go.Response[v0alpha.DownloadRecordingRes], error) {
	return c.downloadCallRecording.CallUnary(ctx, req)
}

// DownloadCallRecordings calls api.v0alpha.P3Api.DownloadCallRecordings.
func (c *p3ApiClient) DownloadCallRecordings(ctx context.Context, req *connect_go.Request[v0alpha.DownloadCallRecordingsReq]) (*connect_go.Response[v0alpha.DownloadRecordingRes], error) {
	return c.downloadCallRecordings.CallUnary(ctx, req)
}

// PlacePreviewDialCall calls api.v0alpha.P3Api.PlacePreviewDialCall.
func (c *p3ApiClient) PlacePreviewDialCall(ctx context.Context, req *connect_go.Request[v0alpha.PlacePreviewDialCallReq]) (*connect_go.Response[v0alpha.PlacePreviewDialCallRes], error) {
	return c.placePreviewDialCall.CallUnary(ctx, req)
}

// CancelPreviewDialCall calls api.v0alpha.P3Api.CancelPreviewDialCall.
func (c *p3ApiClient) CancelPreviewDialCall(ctx context.Context, req *connect_go.Request[v0alpha.CancelPreviewDialCallReq]) (*connect_go.Response[v0alpha.CancelPreviewDialCallRes], error) {
	return c.cancelPreviewDialCall.CallUnary(ctx, req)
}

// UpdateTaskStatus calls api.v0alpha.P3Api.UpdateTaskStatus.
func (c *p3ApiClient) UpdateTaskStatus(ctx context.Context, req *connect_go.Request[v0alpha.UpdateTaskStatusReq]) (*connect_go.Response[v0alpha.Nil], error) {
	return c.updateTaskStatus.CallUnary(ctx, req)
}

// ListCallbackRoutingAgents calls api.v0alpha.P3Api.ListCallbackRoutingAgents.
func (c *p3ApiClient) ListCallbackRoutingAgents(ctx context.Context, req *connect_go.Request[v0alpha.ListCallbackRoutingAgentsReq]) (*connect_go.Response[v0alpha.ListCallbackRoutingAgentsRes], error) {
	return c.listCallbackRoutingAgents.CallUnary(ctx, req)
}

// ListCallbackRoutingSkills calls api.v0alpha.P3Api.ListCallbackRoutingSkills.
func (c *p3ApiClient) ListCallbackRoutingSkills(ctx context.Context, req *connect_go.Request[v0alpha.ListCallbackRoutingSkillsReq]) (*connect_go.Response[v0alpha.ListCallbackRoutingSkillsRes], error) {
	return c.listCallbackRoutingSkills.CallUnary(ctx, req)
}

// HandleRecordingDelay calls api.v0alpha.P3Api.HandleRecordingDelay.
func (c *p3ApiClient) HandleRecordingDelay(ctx context.Context, req *connect_go.Request[v0alpha.HandleRecordingDelayReq]) (*connect_go.Response[v0alpha.HandleRecordingDelayRes], error) {
	return c.handleRecordingDelay.CallUnary(ctx, req)
}

// UpdateAgentAssignedHuntGroup calls api.v0alpha.P3Api.UpdateAgentAssignedHuntGroup.
func (c *p3ApiClient) UpdateAgentAssignedHuntGroup(ctx context.Context, req *connect_go.Request[v0alpha.UpdateAgentAssignedHuntGroupReq]) (*connect_go.Response[v0alpha.UpdateAgentAssignedHuntGroupRes], error) {
	return c.updateAgentAssignedHuntGroup.CallUnary(ctx, req)
}

// GetCallData calls api.v0alpha.P3Api.GetCallData.
func (c *p3ApiClient) GetCallData(ctx context.Context, req *connect_go.Request[v0alpha.GetCallDataReq]) (*connect_go.Response[v0alpha.GetCallDataRes], error) {
	return c.getCallData.CallUnary(ctx, req)
}

// ListHuntGroups calls api.v0alpha.P3Api.ListHuntGroups.
func (c *p3ApiClient) ListHuntGroups(ctx context.Context, req *connect_go.Request[v0alpha.ListHuntGroupsReq]) (*connect_go.Response[v0alpha.ListHuntGroupsRes], error) {
	return c.listHuntGroups.CallUnary(ctx, req)
}

// ListReassignmentHuntGroups calls api.v0alpha.P3Api.ListReassignmentHuntGroups.
func (c *p3ApiClient) ListReassignmentHuntGroups(ctx context.Context, req *connect_go.Request[v0alpha.ListReassignmentHuntGroupsReq]) (*connect_go.Response[v0alpha.ListReassignmentHuntGroupsRes], error) {
	return c.listReassignmentHuntGroups.CallUnary(ctx, req)
}

// GetOrgAgentSettings calls api.v0alpha.P3Api.GetOrgAgentSettings.
func (c *p3ApiClient) GetOrgAgentSettings(ctx context.Context, req *connect_go.Request[v0alpha.GetOrgAgentSettingsReq]) (*connect_go.Response[v0alpha.GetOrgAgentSettingsRes], error) {
	return c.getOrgAgentSettings.CallUnary(ctx, req)
}

// ListCallerIdsFromBucket calls api.v0alpha.P3Api.ListCallerIdsFromBucket.
func (c *p3ApiClient) ListCallerIdsFromBucket(ctx context.Context, req *connect_go.Request[v0alpha.ListCallerIdsFromBucketReq]) (*connect_go.Response[v0alpha.ListCallerIdsFromBucketRes], error) {
	return c.listCallerIdsFromBucket.CallUnary(ctx, req)
}

// SaveLastCallResponse calls api.v0alpha.P3Api.SaveLastCallResponse.
func (c *p3ApiClient) SaveLastCallResponse(ctx context.Context, req *connect_go.Request[v0alpha.SaveLastCallResponseReq]) (*connect_go.Response[v0alpha.SaveLastCallResponseRes], error) {
	return c.saveLastCallResponse.CallUnary(ctx, req)
}

// ListAgentCallLogsByCallSidAndType calls api.v0alpha.P3Api.ListAgentCallLogsByCallSidAndType.
func (c *p3ApiClient) ListAgentCallLogsByCallSidAndType(ctx context.Context, req *connect_go.Request[v0alpha.ListAgentCallLogsByCallSidAndTypeReq]) (*connect_go.Response[v0alpha.ListAgentCallLogsByCallSidAndTypeRes], error) {
	return c.listAgentCallLogsByCallSidAndType.CallUnary(ctx, req)
}

// ListAgentCallResponseValues calls api.v0alpha.P3Api.ListAgentCallResponseValues.
func (c *p3ApiClient) ListAgentCallResponseValues(ctx context.Context, req *connect_go.Request[v0alpha.ListAgentCallResponseValuesReq]) (*connect_go.Response[v0alpha.ListAgentCallResponseValuesRes], error) {
	return c.listAgentCallResponseValues.CallUnary(ctx, req)
}

// GetContactSchemaByContactGroup calls api.v0alpha.P3Api.GetContactSchemaByContactGroup.
func (c *p3ApiClient) GetContactSchemaByContactGroup(ctx context.Context, req *connect_go.Request[v0alpha.GetContactSchemaByContactGroupReq]) (*connect_go.Response[v0alpha.ContactSchema], error) {
	return c.getContactSchemaByContactGroup.CallUnary(ctx, req)
}

// ListContactGroupDetailsByClientSid calls api.v0alpha.P3Api.ListContactGroupDetailsByClientSid.
func (c *p3ApiClient) ListContactGroupDetailsByClientSid(ctx context.Context, req *connect_go.Request[v0alpha.ListContactGroupDetailsByClientSidReq]) (*connect_go.Response[v0alpha.ListContactGroupDetailsByClientSidRes], error) {
	return c.listContactGroupDetailsByClientSid.CallUnary(ctx, req)
}

// GetContactGroupDetails calls api.v0alpha.P3Api.GetContactGroupDetails.
func (c *p3ApiClient) GetContactGroupDetails(ctx context.Context, req *connect_go.Request[v0alpha.GetContactGroupReq]) (*connect_go.Response[v0alpha.ContactGroup], error) {
	return c.getContactGroupDetails.CallUnary(ctx, req)
}

// GetContactGroupSize calls api.v0alpha.P3Api.GetContactGroupSize.
func (c *p3ApiClient) GetContactGroupSize(ctx context.Context, req *connect_go.Request[v0alpha.GetContactGroupReq]) (*connect_go.Response[v0alpha.GetContactGroupSizeRes], error) {
	return c.getContactGroupSize.CallUnary(ctx, req)
}

// CreateContactFieldDescription calls api.v0alpha.P3Api.CreateContactFieldDescription.
func (c *p3ApiClient) CreateContactFieldDescription(ctx context.Context, req *connect_go.Request[v0alpha.CreateContactFieldDescriptionReq]) (*connect_go.Response[v0alpha.CreateContactFieldDescriptionRes], error) {
	return c.createContactFieldDescription.CallUnary(ctx, req)
}

// DeleteContactFieldDescription calls api.v0alpha.P3Api.DeleteContactFieldDescription.
func (c *p3ApiClient) DeleteContactFieldDescription(ctx context.Context, req *connect_go.Request[v0alpha.DeleteContactFieldDescriptionReq]) (*connect_go.Response[v0alpha.DeleteContactFieldDescriptionRes], error) {
	return c.deleteContactFieldDescription.CallUnary(ctx, req)
}

// ListContactFieldDescriptions calls api.v0alpha.P3Api.ListContactFieldDescriptions.
func (c *p3ApiClient) ListContactFieldDescriptions(ctx context.Context, req *connect_go.Request[v0alpha.ListContactFieldDescriptionsReq]) (*connect_go.Response[v0alpha.ListContactFieldDescriptionsRes], error) {
	return c.listContactFieldDescriptions.CallUnary(ctx, req)
}

// ListContactFieldDescriptionsByCGSid calls api.v0alpha.P3Api.ListContactFieldDescriptionsByCGSid.
func (c *p3ApiClient) ListContactFieldDescriptionsByCGSid(ctx context.Context, req *connect_go.Request[v0alpha.ListContactFieldDescriptionsByCGSidReq]) (*connect_go.Response[v0alpha.ListContactFieldDescriptionsByCGSidRes], error) {
	return c.listContactFieldDescriptionsByCGSid.CallUnary(ctx, req)
}

// ListContactImportTemplates calls api.v0alpha.P3Api.ListContactImportTemplates.
func (c *p3ApiClient) ListContactImportTemplates(ctx context.Context, req *connect_go.Request[v0alpha.ListContactImportTemplatesReq]) (*connect_go.Response[v0alpha.ListContactImportTemplatesRes], error) {
	return c.listContactImportTemplates.CallUnary(ctx, req)
}

// UpdatePreviewRecordToFinished calls api.v0alpha.P3Api.UpdatePreviewRecordToFinished.
func (c *p3ApiClient) UpdatePreviewRecordToFinished(ctx context.Context, req *connect_go.Request[v0alpha.UpdatePreviewRecordToFinishedReq]) (*connect_go.Response[v0alpha.UpdatePreviewRecordToFinishedRes], error) {
	return c.updatePreviewRecordToFinished.CallUnary(ctx, req)
}

// UpdateAgentHuntGroup calls api.v0alpha.P3Api.UpdateAgentHuntGroup.
func (c *p3ApiClient) UpdateAgentHuntGroup(ctx context.Context, req *connect_go.Request[v0alpha.UpdateAgentHuntGroupReq]) (*connect_go.Response[v0alpha.UpdateAgentHuntGroupRes], error) {
	return c.updateAgentHuntGroup.CallUnary(ctx, req)
}

// MultiAgentHuntGroupAssignment calls api.v0alpha.P3Api.MultiAgentHuntGroupAssignment.
func (c *p3ApiClient) MultiAgentHuntGroupAssignment(ctx context.Context, req *connect_go.Request[v0alpha.MultiAgentHuntGroupAssignmentReq]) (*connect_go.Response[v0alpha.MultiAgentHuntGroupAssignmentRes], error) {
	return c.multiAgentHuntGroupAssignment.CallUnary(ctx, req)
}

// GetAgentProfile calls api.v0alpha.P3Api.GetAgentProfile.
func (c *p3ApiClient) GetAgentProfile(ctx context.Context, req *connect_go.Request[v0alpha.GetAgentProfileReq]) (*connect_go.Response[v0alpha.AgentProfile], error) {
	return c.getAgentProfile.CallUnary(ctx, req)
}

// RecalculateBilling calls api.v0alpha.P3Api.RecalculateBilling.
func (c *p3ApiClient) RecalculateBilling(ctx context.Context, req *connect_go.Request[v0alpha.RecalculateBillingReq]) (*connect_go.Response[v0alpha.RecalculateBillingRes], error) {
	return c.recalculateBilling.CallUnary(ctx, req)
}

// ListOutboundBroadcastTemplateData calls api.v0alpha.P3Api.ListOutboundBroadcastTemplateData.
func (c *p3ApiClient) ListOutboundBroadcastTemplateData(ctx context.Context, req *connect_go.Request[v0alpha.ListOutboundBroadcastTemplateDataReq]) (*connect_go.Response[v0alpha.ListOutboundBroadcastTemplateDataRes], error) {
	return c.listOutboundBroadcastTemplateData.CallUnary(ctx, req)
}

// MultiAgentSkillAssignment calls api.v0alpha.P3Api.MultiAgentSkillAssignment.
func (c *p3ApiClient) MultiAgentSkillAssignment(ctx context.Context, req *connect_go.Request[v0alpha.MultiAgentSkillAssignmentReq]) (*connect_go.Response[v0alpha.MultiAgentSkillAssignmentRes], error) {
	return c.multiAgentSkillAssignment.CallUnary(ctx, req)
}

// MultiAgentSkillUnassignment calls api.v0alpha.P3Api.MultiAgentSkillUnassignment.
func (c *p3ApiClient) MultiAgentSkillUnassignment(ctx context.Context, req *connect_go.Request[v0alpha.MultiAgentSkillUnassignmentReq]) (*connect_go.Response[v0alpha.MultiAgentSkillUnassignmentRes], error) {
	return c.multiAgentSkillUnassignment.CallUnary(ctx, req)
}

// ListMAMAgentHuntGroupsByClientSid calls api.v0alpha.P3Api.ListMAMAgentHuntGroupsByClientSid.
func (c *p3ApiClient) ListMAMAgentHuntGroupsByClientSid(ctx context.Context, req *connect_go.Request[v0alpha.ListMAMAgentHuntGroupsByClientSidReq]) (*connect_go.Response[v0alpha.ListMAMAgentHuntGroupsByClientSidRes], error) {
	return c.listMAMAgentHuntGroupsByClientSid.CallUnary(ctx, req)
}

// ListTtsVoices calls api.v0alpha.P3Api.ListTtsVoices.
func (c *p3ApiClient) ListTtsVoices(ctx context.Context, req *connect_go.Request[v0alpha.ListTtsVoicesReq]) (*connect_go.Response[v0alpha.ListTtsVoicesRes], error) {
	return c.listTtsVoices.CallUnary(ctx, req)
}

// CreateTtsVoice calls api.v0alpha.P3Api.CreateTtsVoice.
func (c *p3ApiClient) CreateTtsVoice(ctx context.Context, req *connect_go.Request[v0alpha.CreateTtsVoiceReq]) (*connect_go.Response[v0alpha.CreateTtsVoiceRes], error) {
	return c.createTtsVoice.CallUnary(ctx, req)
}

// DeleteTtsVoice calls api.v0alpha.P3Api.DeleteTtsVoice.
func (c *p3ApiClient) DeleteTtsVoice(ctx context.Context, req *connect_go.Request[v0alpha.DeleteTtsVoiceReq]) (*connect_go.Response[v0alpha.DeleteTtsVoiceRes], error) {
	return c.deleteTtsVoice.CallUnary(ctx, req)
}

// ListCustomDataKeys calls api.v0alpha.P3Api.ListCustomDataKeys.
func (c *p3ApiClient) ListCustomDataKeys(ctx context.Context, req *connect_go.Request[v0alpha.ListCustomDataKeysReq]) (*connect_go.Response[v0alpha.ListCustomDataKeysRes], error) {
	return c.listCustomDataKeys.CallUnary(ctx, req)
}

// CreateCustomDataKey calls api.v0alpha.P3Api.CreateCustomDataKey.
func (c *p3ApiClient) CreateCustomDataKey(ctx context.Context, req *connect_go.Request[v0alpha.CreateCustomDataKeyReq]) (*connect_go.Response[v0alpha.CreateCustomDataKeyRes], error) {
	return c.createCustomDataKey.CallUnary(ctx, req)
}

// DeleteCustomDataKey calls api.v0alpha.P3Api.DeleteCustomDataKey.
func (c *p3ApiClient) DeleteCustomDataKey(ctx context.Context, req *connect_go.Request[v0alpha.DeleteCustomDataKeyReq]) (*connect_go.Response[v0alpha.DeleteCustomDataKeyRes], error) {
	return c.deleteCustomDataKey.CallUnary(ctx, req)
}

// UpdateCustomDataKey calls api.v0alpha.P3Api.UpdateCustomDataKey.
func (c *p3ApiClient) UpdateCustomDataKey(ctx context.Context, req *connect_go.Request[v0alpha.UpdateCustomDataKeyReq]) (*connect_go.Response[v0alpha.UpdateCustomDataKeyRes], error) {
	return c.updateCustomDataKey.CallUnary(ctx, req)
}

// GetActivityLogHistory calls api.v0alpha.P3Api.GetActivityLogHistory.
func (c *p3ApiClient) GetActivityLogHistory(ctx context.Context, req *connect_go.Request[v0alpha.GetActivityLogHistoryReq]) (*connect_go.ServerStreamForClient[v0alpha.GetActivityLogHistoryRes], error) {
	return c.getActivityLogHistory.CallServerStream(ctx, req)
}

// ListTableTemplateProperties calls api.v0alpha.P3Api.ListTableTemplateProperties.
func (c *p3ApiClient) ListTableTemplateProperties(ctx context.Context, req *connect_go.Request[v0alpha.ListTableTemplatePropertiesReq]) (*connect_go.Response[v0alpha.ListTableTemplatePropertiesRes], error) {
	return c.listTableTemplateProperties.CallUnary(ctx, req)
}

// ListAgentSkillsFilters calls api.v0alpha.P3Api.ListAgentSkillsFilters.
func (c *p3ApiClient) ListAgentSkillsFilters(ctx context.Context, req *connect_go.Request[v0alpha.ListAgentSkillsFiltersReq]) (*connect_go.Response[v0alpha.ListAgentSkillsFiltersRes], error) {
	return c.listAgentSkillsFilters.CallUnary(ctx, req)
}

// ListScheduleRules calls api.v0alpha.P3Api.ListScheduleRules.
func (c *p3ApiClient) ListScheduleRules(ctx context.Context, req *connect_go.Request[v0alpha.ListScheduleRulesRequest]) (*connect_go.Response[v0alpha.ListScheduleRulesResult], error) {
	return c.listScheduleRules.CallUnary(ctx, req)
}

// ListCustomReportFilters calls api.v0alpha.P3Api.ListCustomReportFilters.
func (c *p3ApiClient) ListCustomReportFilters(ctx context.Context, req *connect_go.Request[v0alpha.ListCustomReportFiltersReq]) (*connect_go.Response[v0alpha.ListCustomReportFiltersRes], error) {
	return c.listCustomReportFilters.CallUnary(ctx, req)
}

// ListSmsNumbers calls api.v0alpha.P3Api.ListSmsNumbers.
func (c *p3ApiClient) ListSmsNumbers(ctx context.Context, req *connect_go.Request[v0alpha.ListSmsNumbersReq]) (*connect_go.Response[v0alpha.ListSmsNumbersRes], error) {
	return c.listSmsNumbers.CallUnary(ctx, req)
}

// P3ApiHandler is an implementation of the api.v0alpha.P3Api service.
type P3ApiHandler interface {
	GetAgentHuntGroup(context.Context, *connect_go.Request[v0alpha.GetAgentHuntGroupReq]) (*connect_go.Response[v0alpha.HuntGroup], error)
	GetAgentSession(context.Context, *connect_go.Request[v0alpha.GetAgentSessionReq]) (*connect_go.Response[v0alpha.AgentSession], error)
	// Gets the skills of the requesting agent. This includes agent skills, hunt group skills, and extension skills(PBX).
	// Skills will be returned as a value pair (name, level).
	// For agent skills, the name of each skill will be the agent_skill_sid.
	// All other skills' names (hunt group and PBX) will be given special formats.
	// The requesting agent and hunt_group_sid skills will be defaulted to the max level (1000 and 100 respectively).
	//
	// Required permissions:
	//
	//	NONE
	//
	// Errors:
	//   - grpc.Invalid: the hunt_group_sid in the request in invalid.
	GetAgentSkills(context.Context, *connect_go.Request[v0alpha.GetAgentSkillsReq]) (*connect_go.Response[v0alpha.GetAgentSkillsRes], error)
	// Creates a new agent skill as defined by the request message.
	// Errors:
	//   - grpc.InvalidArgument: the client_sid or name in the request is invalid.
	CreateAgentSkill(context.Context, *connect_go.Request[v0alpha.CreateAgentSkillReq]) (*connect_go.Response[v0alpha.CreateAgentSkillRes], error)
	// Updates an agent skill as defined by the request message.
	// Errors:
	//   - grpc.InvalidArgument: the agent_skill_sid or name in the request is invalid.
	UpdateAgentSkill(context.Context, *connect_go.Request[v0alpha.UpdateAgentSkillReq]) (*connect_go.Response[v0alpha.UpdateAgentSkillRes], error)
	// Deletes the agent skill with the agent_skill_sid given on the request.
	// Errors:
	//   - grpc.InvalidArgument: the agent_skill_sid in the request is invalid.
	DeleteAgentSkill(context.Context, *connect_go.Request[v0alpha.DeleteAgentSkillReq]) (*connect_go.Response[v0alpha.DeleteAgentSkillRes], error)
	// Returns a list of agent skills for the given client sid.
	// DEPRECATED. Use ListSkills
	ListAgentSkills(context.Context, *connect_go.Request[v0alpha.ListAgentSkillsReq]) (*connect_go.Response[v0alpha.ListAgentSkillsRes], error)
	// Returns a list of skills for the current agent.
	ListSkillsForCurrentAgent(context.Context, *connect_go.Request[v0alpha.ListSkillsForCurrentAgentReq]) (*connect_go.Response[v0alpha.ListSkillsForCurrentAgentRes], error)
	// Returns a list of skills filtered by types given on
	// the request message field type_filter. Leaving the type_filter
	// field empty will return all types of skills.
	ListSkills(context.Context, *connect_go.Request[v0alpha.ListSkillsReq]) (*connect_go.Response[v0alpha.ListSkillsRes], error)
	// Updates an agents assigned skills as defined by the skills list on
	// the request message.
	// Errors:
	//   - grpc.InvalidArgument: the user_id on the request is invalid.
	UpdateAgentSkills(context.Context, *connect_go.Request[v0alpha.UpdateAgentSkillsReq]) (*connect_go.Response[v0alpha.UpdateAgentSkillsRes], error)
	GetCurrentAgent(context.Context, *connect_go.Request[v0alpha.GetCurrentAgentReq]) (*connect_go.Response[v0alpha.Agent], error)
	GetClientInfoData(context.Context, *connect_go.Request[v0alpha.GetClientInfoDataReq]) (*connect_go.Response[v0alpha.GetClientInfoDataRes], error)
	GetClientInfoDisplayTemplate(context.Context, *connect_go.Request[v0alpha.GetClientInfoDisplayTemplateReq]) (*connect_go.Response[v0alpha.GetClientInfoDisplayTemplateRes], error)
	ListAgentStatisticsData(context.Context, *connect_go.Request[v0alpha.ListAgentStatisticsDataReq]) (*connect_go.Response[v0alpha.ListAgentStatisticsDataRes], error)
	// Lists all agent and hunt group PBX extensions that the requested agent has.
	ListPBXExtensions(context.Context, *connect_go.Request[v0alpha.ListPBXExtensionsReq]) (*connect_go.Response[v0alpha.ListPBXExtensionsRes], error)
	// Lists every agent extension for the current client
	// Required Permissions:
	//
	//	AGENT_MANAGER
	//
	// Errors:
	//   - grpc.Internal: unexpected error getting pbx_extensions
	ListAgentExtensions(context.Context, *connect_go.Request[v0alpha.ListAgentExtensionsReq]) (*connect_go.Response[v0alpha.ListAgentExtensionsRes], error)
	// Lists every hunt group extension for the current client
	// Required Permissions:
	//
	//	AGENT_MANAGER
	//
	// Errors:
	//   - grpc.Internal: unexpected error getting pbx_extensions
	ListHuntGroupExtensions(context.Context, *connect_go.Request[v0alpha.ListHuntGroupExtensionsReq]) (*connect_go.Response[v0alpha.ListHuntGroupExtensionsRes], error)
	// Creates a new extension as defined by the request message
	// Required Permissions:
	//
	//	AGENT_MANAGER
	//
	// Errors:
	//   - grpc.InvalidArgument: The request has missing or invalid fields.
	//   - grpc.Internal: An unexpected error occurred while saving the extension.
	CreateExtension(context.Context, *connect_go.Request[v0alpha.CreateExtensionReq]) (*connect_go.Response[v0alpha.CreateExtensionRes], error)
	// Deletes a pbx_extension with the given pbx_extension_sid.
	// Required Permissions:
	//
	//	AGENT_MANAGER
	//
	// Errors:
	//   - grpc.InvalidArgument: The request had invalid or missing fields.
	DeleteExtension(context.Context, *connect_go.Request[v0alpha.DeleteExtensionReq]) (*connect_go.Response[v0alpha.DeleteExtensionRes], error)
	// Updates an extension as defined by the request message.
	// Required Permissions:
	//
	//	AGENT_MANAGER
	//
	// Errors:
	//   - grpc.InvalidArgument: The request had invalid or missing fields.
	//   - grpc.Internal: An unexpected error occured updating the extension.
	UpdateExtension(context.Context, *connect_go.Request[v0alpha.UpdateExtensionReq]) (*connect_go.Response[v0alpha.UpdateExtensionRes], error)
	UpdatePBXExtension(context.Context, *connect_go.Request[v0alpha.UpdatePBXExtensionReq]) (*connect_go.Response[v0alpha.UpdatePBXExtensionRes], error)
	CreateDNCLNumbers(context.Context, *connect_go.Request[v0alpha.CreateDNCLNumbersReq]) (*connect_go.Response[v0alpha.CreateDNCLNumbersRes], error)
	// Gets the campaign or huntgroup script for the given agent's current hunt
	// group. If no script is found, it gets the hunt group responses for the
	// agent's current hunt group. It also does a mail merge with the found script
	// or responses (if able).
	GetScriptOrResponses(context.Context, *connect_go.Request[v0alpha.GetScriptOrResponsesReq]) (*connect_go.Response[v0alpha.GetScriptOrResponsesRes], error)
	GetHuntGroupAgentSettings(context.Context, *connect_go.Request[v0alpha.GetHuntGroupAgentSettingsReq]) (*connect_go.Response[v0alpha.HuntGroupAgentSettings], error)
	// Returns a list of weblinks for the hunt group in the request.
	// It replaces any parameters of a given weblink with the call data of the call sid and type from the request message or with the callback details (if a scheduled_callback_id is given).
	ListHuntGroupWebLinks(context.Context, *connect_go.Request[v0alpha.ListHuntGroupWebLinksReq]) (*connect_go.Response[v0alpha.ListHuntGroupWebLinksRes], error)
	GetHuntGroupPauseCodes(context.Context, *connect_go.Request[v0alpha.GetHuntGroupPauseCodesReq]) (*connect_go.Response[v0alpha.GetHuntGroupPauseCodesRes], error)
	// Lists the call history of the requested agent for the past day or
	// session_sid, depending on the filter parameter.
	ListAgentCallHistory(context.Context, *connect_go.Request[v0alpha.ListAgentCallHistoryReq]) (*connect_go.Response[v0alpha.ListAgentCallHistoryRes], error)
	// Lists all client phone book entries.
	// Required Permissions:
	//
	//	AGENT_MANAGER
	ListClientPhoneBookEntries(context.Context, *connect_go.Request[v0alpha.ListClientPhoneBookEntriesReq]) (*connect_go.Response[v0alpha.ListClientPhoneBookEntriesRes], error)
	// Lists all hunt group phone book entries.
	// Required Permissions:
	//
	//	AGENT_MANAGER
	ListHuntGroupPhoneBookEntries(context.Context, *connect_go.Request[v0alpha.ListHuntGroupPhoneBookEntriesReq]) (*connect_go.Response[v0alpha.ListHuntGroupPhoneBookEntriesRes], error)
	// Creates a new phone_book as defined by the request message.
	// Required Permissions:
	//
	//	AGENT_MANAGER
	//
	// Errors:
	//   - grpc.InvalidArgument: the fields on the request are missing or invalid.
	//   - grpc.Internal: unexpected error occurred when saving the phone book.
	CreatePhoneBookEntry(context.Context, *connect_go.Request[v0alpha.CreatePhoneBookEntryReq]) (*connect_go.Response[v0alpha.CreatePhoneBookEntryRes], error)
	// Updates an existing phone_book as defined by the request message.
	// Required Permissions:
	//
	//	AGENT_MANAGER
	//
	// Errors:
	//   - grpc.InvalidArgument: the fields on the request are missing or invalid.
	//   - grpc.Internal: unexpected error occurred when saving the phone book.
	UpdatePhoneBookEntry(context.Context, *connect_go.Request[v0alpha.UpdatePhoneBookEntryReq]) (*connect_go.Response[v0alpha.UpdatePhoneBookEntryRes], error)
	// Deletes the phone_book with the phone_book_sid given on the reques message.
	// Required Permissions:
	//
	//	AGENT_MANAGER
	DeletePhoneBookEntry(context.Context, *connect_go.Request[v0alpha.DeletePhoneBookEntryReq]) (*connect_go.Response[v0alpha.DeletePhoneBookEntryRes], error)
	// Lists caller_id, outbound and transfer phone books for the requesting client and given hunt group sid.
	// Entries will be ordered by entry_name and phone_number.
	//
	// Required permissions:
	//
	//	NONE
	//
	// Errors:
	//   - grpc.Invalid: the client_sid or hunt_group_sid in the request are invalid.
	//   - grpc.Internal: unexpected error occurred when retrieving the phone books.
	ListPhoneBooks(context.Context, *connect_go.Request[v0alpha.ListPhoneBooksReq]) (*connect_go.Response[v0alpha.ListPhoneBooksRes], error)
	ListAgentTriggers(context.Context, *connect_go.Request[v0alpha.ListAgentTriggersReq]) (*connect_go.Response[v0alpha.ListAgentTriggersRes], error)
	// Gets all running broadcasts (task groups) for the requesting agent and hunt_group_sid in the request.
	// Calculates the percentage of completed tasks for each of those task groups.
	// Calculates the overall task completion percentage of all matching task groups.
	// Required permissions:
	//
	//	NONE
	//
	// Errors:
	//   - grpc.Invalid: the hunt_group_sid in the request is invalid.
	GetCampaignCompletionStatus(context.Context, *connect_go.Request[v0alpha.GetCampaignCompletionStatusReq]) (*connect_go.Response[v0alpha.GetCampaignCompletionStatusRes], error)
	// Uses lost peer call sid and call type from the request to get information about lost call
	// gets the name and hunt group of the agent that was connected to that call and all types of skills the call has.
	//
	// Required permissions:
	//
	//	NONE
	//
	// Errors:
	//   - grpc.Invalid: the call_sid in the request in invalid.
	//   - grpc.NotFound: the call sid provided wasn't previously connected to any agent.
	GetLostPeerInfo(context.Context, *connect_go.Request[v0alpha.GetLostPeerInfoReq]) (*connect_go.Response[v0alpha.GetLostPeerInfoRes], error)
	// Gets all the available Disposition Keys
	//
	// Required permissions:
	//
	//	NONE
	GetDispositionKeys(context.Context, *connect_go.Request[v0alpha.GetDispositionKeysReq]) (*connect_go.Response[v0alpha.GetDispositionKeysRes], error)
	GetReadyAgents(context.Context, *connect_go.Request[v0alpha.GetReadyAgentsReq]) (*connect_go.Response[v0alpha.GetReadyAgentsRes], error)
	// Returns lists with call data of calls that were:
	// Placed on multihold by the requesting agent.
	// Queued, are ready to be handled and require a subset of the agent_skills provided.
	// Placed in the Hold Queue Monitor, haven't been picked up yet and require a subset of the agent_skills provided.
	// Required permissions:
	//
	//	NONE
	//
	// Errors:
	//   - grpc.Invalid: the agent_session_sid provided in the request is invalid.
	ListAgentQueueAndOnHoldCallData(context.Context, *connect_go.Request[v0alpha.ListAgentQueueAndOnHoldCallDataReq]) (*connect_go.Response[v0alpha.ListAgentQueueAndOnHoldCallDataRes], error)
	SaveAgentCallResponses(context.Context, *connect_go.Request[v0alpha.SaveAgentCallResponsesReq]) (*connect_go.Response[v0alpha.SaveAgentCallResponsesRes], error)
	ListAgentTransferOptions(context.Context, *connect_go.Request[v0alpha.ListAgentTransferOptionsReq]) (*connect_go.Response[v0alpha.ListAgentTransferOptionsRes], error)
	UpdateAgentCallResponseValue(context.Context, *connect_go.Request[v0alpha.UpdateAgentCallResponseValueReq]) (*connect_go.Response[v0alpha.UpdateAgentCallResponseValueRes], error)
	GetIntercomPeerInfo(context.Context, *connect_go.Request[v0alpha.GetIntercomPeerInfoReq]) (*connect_go.Response[v0alpha.GetIntercomPeerInfoRes], error)
	// Lists the requesting user's org response evaluators.
	ListOrgResponseEvaluators(context.Context, *connect_go.Request[v0alpha.ListOrgResponseEvaluatorsReq]) (*connect_go.Response[v0alpha.ListOrgResponseEvaluatorsRes], error)
	GetQueueConfigurationOptionsArray(context.Context, *connect_go.Request[v0alpha.GetQueueConfigurationOptionsArrayReq]) (*connect_go.Response[v0alpha.GetQueueConfigurationOptionsArrayRes], error)
	// Get the rules for conditionally adding a number to the DNCL depending on
	// responses or scripts
	GetConditionalDNCLRules(context.Context, *connect_go.Request[v0alpha.GetConditionalDNCLRulesReq]) (*connect_go.Response[v0alpha.GetConditionalDNCLRulesRes], error)
	ManualDialStart(context.Context, *connect_go.Request[v0alpha.ManualDialStartReq]) (*connect_go.Response[v0alpha.ManualDialStartRes], error)
	ListExtendedCallHistory(context.Context, *connect_go.Request[v0alpha.ListExtendedCallHistoryReq], *connect_go.ServerStream[v0alpha.ListExtendedCallHistoryRes]) error
	ListWhiteListPhoneBooks(context.Context, *connect_go.Request[v0alpha.ListWhiteListPhoneBooksReq]) (*connect_go.Response[v0alpha.ListWhiteListPhoneBooksRes], error)
	DownloadCallRecording(context.Context, *connect_go.Request[v0alpha.DownloadCallRecordingReq]) (*connect_go.Response[v0alpha.DownloadRecordingRes], error)
	DownloadCallRecordings(context.Context, *connect_go.Request[v0alpha.DownloadCallRecordingsReq]) (*connect_go.Response[v0alpha.DownloadRecordingRes], error)
	PlacePreviewDialCall(context.Context, *connect_go.Request[v0alpha.PlacePreviewDialCallReq]) (*connect_go.Response[v0alpha.PlacePreviewDialCallRes], error)
	CancelPreviewDialCall(context.Context, *connect_go.Request[v0alpha.CancelPreviewDialCallReq]) (*connect_go.Response[v0alpha.CancelPreviewDialCallRes], error)
	UpdateTaskStatus(context.Context, *connect_go.Request[v0alpha.UpdateTaskStatusReq]) (*connect_go.Response[v0alpha.Nil], error)
	// ListCallbackRoutingAgents returns a list of agents that are allowed to make a callback.
	ListCallbackRoutingAgents(context.Context, *connect_go.Request[v0alpha.ListCallbackRoutingAgentsReq]) (*connect_go.Response[v0alpha.ListCallbackRoutingAgentsRes], error)
	ListCallbackRoutingSkills(context.Context, *connect_go.Request[v0alpha.ListCallbackRoutingSkillsReq]) (*connect_go.Response[v0alpha.ListCallbackRoutingSkillsRes], error)
	HandleRecordingDelay(context.Context, *connect_go.Request[v0alpha.HandleRecordingDelayReq]) (*connect_go.Response[v0alpha.HandleRecordingDelayRes], error)
	UpdateAgentAssignedHuntGroup(context.Context, *connect_go.Request[v0alpha.UpdateAgentAssignedHuntGroupReq]) (*connect_go.Response[v0alpha.UpdateAgentAssignedHuntGroupRes], error)
	GetCallData(context.Context, *connect_go.Request[v0alpha.GetCallDataReq]) (*connect_go.Response[v0alpha.GetCallDataRes], error)
	ListHuntGroups(context.Context, *connect_go.Request[v0alpha.ListHuntGroupsReq]) (*connect_go.Response[v0alpha.ListHuntGroupsRes], error)
	// List the hunt groups an agent within a given hunt group can reassign
	// themselves to. The reassignment hunt groups can optionally be limited by a
	// hunt group setting. If a hunt group does not allow reassignment, the
	// returned list will be empty.
	ListReassignmentHuntGroups(context.Context, *connect_go.Request[v0alpha.ListReassignmentHuntGroupsReq]) (*connect_go.Response[v0alpha.ListReassignmentHuntGroupsRes], error)
	GetOrgAgentSettings(context.Context, *connect_go.Request[v0alpha.GetOrgAgentSettingsReq]) (*connect_go.Response[v0alpha.GetOrgAgentSettingsRes], error)
	// Lists caller id numbers with their associated region codes for the given
	// bucket
	ListCallerIdsFromBucket(context.Context, *connect_go.Request[v0alpha.ListCallerIdsFromBucketReq]) (*connect_go.Response[v0alpha.ListCallerIdsFromBucketRes], error)
	SaveLastCallResponse(context.Context, *connect_go.Request[v0alpha.SaveLastCallResponseReq]) (*connect_go.Response[v0alpha.SaveLastCallResponseRes], error)
	ListAgentCallLogsByCallSidAndType(context.Context, *connect_go.Request[v0alpha.ListAgentCallLogsByCallSidAndTypeReq]) (*connect_go.Response[v0alpha.ListAgentCallLogsByCallSidAndTypeRes], error)
	// Lists the keys and values of the latest responses for the given call_sid,
	// call_type and agent_sid
	ListAgentCallResponseValues(context.Context, *connect_go.Request[v0alpha.ListAgentCallResponseValuesReq]) (*connect_go.Response[v0alpha.ListAgentCallResponseValuesRes], error)
	// Get contact schema details based on contact group sid
	GetContactSchemaByContactGroup(context.Context, *connect_go.Request[v0alpha.GetContactSchemaByContactGroupReq]) (*connect_go.Response[v0alpha.ContactSchema], error)
	// List contact group details based on client sid from contact_group table
	ListContactGroupDetailsByClientSid(context.Context, *connect_go.Request[v0alpha.ListContactGroupDetailsByClientSidReq]) (*connect_go.Response[v0alpha.ListContactGroupDetailsByClientSidRes], error)
	// Get contact group details based on contact group sid from contact_group
	// table
	GetContactGroupDetails(context.Context, *connect_go.Request[v0alpha.GetContactGroupReq]) (*connect_go.Response[v0alpha.ContactGroup], error)
	// Get contact group size based on contacts size
	GetContactGroupSize(context.Context, *connect_go.Request[v0alpha.GetContactGroupReq]) (*connect_go.Response[v0alpha.GetContactGroupSizeRes], error)
	// Create contact field description details
	CreateContactFieldDescription(context.Context, *connect_go.Request[v0alpha.CreateContactFieldDescriptionReq]) (*connect_go.Response[v0alpha.CreateContactFieldDescriptionRes], error)
	// Delete contact field description details
	DeleteContactFieldDescription(context.Context, *connect_go.Request[v0alpha.DeleteContactFieldDescriptionReq]) (*connect_go.Response[v0alpha.DeleteContactFieldDescriptionRes], error)
	// List contact field desc details from contact_field_description table
	ListContactFieldDescriptions(context.Context, *connect_go.Request[v0alpha.ListContactFieldDescriptionsReq]) (*connect_go.Response[v0alpha.ListContactFieldDescriptionsRes], error)
	// List contact field description details based on contact group sid
	ListContactFieldDescriptionsByCGSid(context.Context, *connect_go.Request[v0alpha.ListContactFieldDescriptionsByCGSidReq]) (*connect_go.Response[v0alpha.ListContactFieldDescriptionsByCGSidRes], error)
	// List contactImportTemplates based on client_sid from
	// contact_import_template table
	ListContactImportTemplates(context.Context, *connect_go.Request[v0alpha.ListContactImportTemplatesReq]) (*connect_go.Response[v0alpha.ListContactImportTemplatesRes], error)
	// Updates task data for a preview record to finished and logs an agent
	// session event
	UpdatePreviewRecordToFinished(context.Context, *connect_go.Request[v0alpha.UpdatePreviewRecordToFinishedReq]) (*connect_go.Response[v0alpha.UpdatePreviewRecordToFinishedRes], error)
	// Updates the requesting agent's hunt_group_sid.
	UpdateAgentHuntGroup(context.Context, *connect_go.Request[v0alpha.UpdateAgentHuntGroupReq]) (*connect_go.Response[v0alpha.UpdateAgentHuntGroupRes], error)
	// Updates every given user's hunt_group_sid.
	// Required Permissions:
	//
	//	AGENT_MANAGEMENT
	//
	// Errors:
	//   - grpc.Internal: an error occurred while interacting with the database.
	//   - grpc.InvalidArgument: the hunt_group_sid or the user id list is empty or contains an invalid value.
	MultiAgentHuntGroupAssignment(context.Context, *connect_go.Request[v0alpha.MultiAgentHuntGroupAssignmentReq]) (*connect_go.Response[v0alpha.MultiAgentHuntGroupAssignmentRes], error)
	// GetAgentProfile returns an agent profile.
	GetAgentProfile(context.Context, *connect_go.Request[v0alpha.GetAgentProfileReq]) (*connect_go.Response[v0alpha.AgentProfile], error)
	// RecalculateBilling updates statuses for every billing type given on the
	// request message for either the current or previous month.
	// Only data that has already been summed for billing will have it's
	// status updated.
	// Required Permissions:
	//
	//	EDIT_BILLING
	RecalculateBilling(context.Context, *connect_go.Request[v0alpha.RecalculateBillingReq]) (*connect_go.Response[v0alpha.RecalculateBillingRes], error)
	// Gets information of the requesting client's broadcast templates (template_number, name, type, modify_date)
	// It reports if each found template is either STANDARD or LAYERED.
	// Required permissions:
	//
	//	NONE
	//
	// Errors:
	//
	//	NONE
	ListOutboundBroadcastTemplateData(context.Context, *connect_go.Request[v0alpha.ListOutboundBroadcastTemplateDataReq]) (*connect_go.Response[v0alpha.ListOutboundBroadcastTemplateDataRes], error)
	// Assign every skill to every agent with the given aptitude.
	// Errors:
	//   - grpc.Invalid: the aptitude field is invalid.
	MultiAgentSkillAssignment(context.Context, *connect_go.Request[v0alpha.MultiAgentSkillAssignmentReq]) (*connect_go.Response[v0alpha.MultiAgentSkillAssignmentRes], error)
	// Unassigns every given skill from every given user.
	// Errors:
	//   - grpc.InvalidArgument:
	//   - the user_ids list is empty or contains an empty string.
	//   - one or more of the user_ids does not belong to the client.
	//   - grpc.Internal: an error occurred while deleting the skill assignments.
	MultiAgentSkillUnassignment(context.Context, *connect_go.Request[v0alpha.MultiAgentSkillUnassignmentReq]) (*connect_go.Response[v0alpha.MultiAgentSkillUnassignmentRes], error)
	// List of agent hunt groups based on client sid
	// that have manually approved messages enabled
	ListMAMAgentHuntGroupsByClientSid(context.Context, *connect_go.Request[v0alpha.ListMAMAgentHuntGroupsByClientSidReq]) (*connect_go.Response[v0alpha.ListMAMAgentHuntGroupsByClientSidRes], error)
	// List every tts voice
	// Required Permissions:
	//
	//	TCN_ADMIN_SETTINGS
	//
	// Errors:
	//   - grpc.Internal: an error was returned while trying to retrieve the entity
	ListTtsVoices(context.Context, *connect_go.Request[v0alpha.ListTtsVoicesReq]) (*connect_go.Response[v0alpha.ListTtsVoicesRes], error)
	// Create a new tts voice
	// Required Permissions:
	//
	//	TCN_ADMIN_SETTINGS
	//
	// Errors:
	//   - grpc.InvalidArgument: the actual_name or port field on the request is invalid.
	//   - grpc.Internal: an error was returned while trying to insert the new tts voice.
	CreateTtsVoice(context.Context, *connect_go.Request[v0alpha.CreateTtsVoiceReq]) (*connect_go.Response[v0alpha.CreateTtsVoiceRes], error)
	// Delete a tts voice with the given tts_voice_sid.
	// Required Permissions:
	//
	//	TCN_ADMIN_SETTINGS
	//
	// Errors:
	//   - grpc.InvalidArgument: the tts_voice_sid field on the request is invalid.
	//   - grpc.Internal: an error was returned while trying to remove the tts voice.
	DeleteTtsVoice(context.Context, *connect_go.Request[v0alpha.DeleteTtsVoiceReq]) (*connect_go.Response[v0alpha.DeleteTtsVoiceRes], error)
	// List of account custom data keys based on client sid
	// Required Permissions:
	//
	//	ORG_VIEW
	//
	// Errors:
	//   - grpc.Internal: an error was returned while trying to retrieve the entity
	ListCustomDataKeys(context.Context, *connect_go.Request[v0alpha.ListCustomDataKeysReq]) (*connect_go.Response[v0alpha.ListCustomDataKeysRes], error)
	// Creates a new Data Key as defined by the request message
	// the client_properties_sid should not be set, this is assigned on the backend
	// Required Permission:
	//
	//	ORG_EDIT
	//
	// Errors:
	//   - grpc.InvalidArgument: The custom_data_key field was not set
	//   - grpc.Internal: error creating custom data key
	CreateCustomDataKey(context.Context, *connect_go.Request[v0alpha.CreateCustomDataKeyReq]) (*connect_go.Response[v0alpha.CreateCustomDataKeyRes], error)
	// Deletes a Custom Data Key with the sid given on the request message.
	// Required Permission:
	//
	//	ORG_EDIT
	//
	// Errors:
	//   - grpc.InvalidArgument: The client_properties_sid field is invalid.
	//   - grpc.NotFound: no custom data key was deleted for the client_properties_sid.
	//   - grpc.Internal: an error occurred while trying to remove the custom data key.
	DeleteCustomDataKey(context.Context, *connect_go.Request[v0alpha.DeleteCustomDataKeyReq]) (*connect_go.Response[v0alpha.DeleteCustomDataKeyRes], error)
	// Updates a custom data key with the client_properties_sid and data key
	// given on the request
	// Required Permissions;
	//
	//	ORG_EDIT
	//
	// Errors:
	//   - grpc.InvalidArgument: The client_properties_sid was empty or the data key was not set
	//   - grpc.Internal: error updating custom data key, more than 1 custom data key records affected
	//   - grpc.NotFound: no matching custom data key found
	UpdateCustomDataKey(context.Context, *connect_go.Request[v0alpha.UpdateCustomDataKeyReq]) (*connect_go.Response[v0alpha.UpdateCustomDataKeyRes], error)
	// Get Activity logs for given users and by specified time range
	// Required Permissions;
	//
	//	CUSTOMER_SUPPORT
	GetActivityLogHistory(context.Context, *connect_go.Request[v0alpha.GetActivityLogHistoryReq], *connect_go.ServerStream[v0alpha.GetActivityLogHistoryRes]) error
	// List agent and queue table template properties by client sid
	ListTableTemplateProperties(context.Context, *connect_go.Request[v0alpha.ListTableTemplatePropertiesReq]) (*connect_go.Response[v0alpha.ListTableTemplatePropertiesRes], error)
	// List agent skills filters by client sid
	ListAgentSkillsFilters(context.Context, *connect_go.Request[v0alpha.ListAgentSkillsFiltersReq]) (*connect_go.Response[v0alpha.ListAgentSkillsFiltersRes], error)
	// List Schedule Rules
	ListScheduleRules(context.Context, *connect_go.Request[v0alpha.ListScheduleRulesRequest]) (*connect_go.Response[v0alpha.ListScheduleRulesResult], error)
	// List custom report filters by client sid
	ListCustomReportFilters(context.Context, *connect_go.Request[v0alpha.ListCustomReportFiltersReq]) (*connect_go.Response[v0alpha.ListCustomReportFiltersRes], error)
	// List sms numbers by client sid
	ListSmsNumbers(context.Context, *connect_go.Request[v0alpha.ListSmsNumbersReq]) (*connect_go.Response[v0alpha.ListSmsNumbersRes], error)
}

// NewP3ApiHandler builds an HTTP handler from the service implementation. It returns the path on
// which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewP3ApiHandler(svc P3ApiHandler, opts ...connect_go.HandlerOption) (string, http.Handler) {
	p3ApiGetAgentHuntGroupHandler := connect_go.NewUnaryHandler(
		P3ApiGetAgentHuntGroupProcedure,
		svc.GetAgentHuntGroup,
		opts...,
	)
	p3ApiGetAgentSessionHandler := connect_go.NewUnaryHandler(
		P3ApiGetAgentSessionProcedure,
		svc.GetAgentSession,
		opts...,
	)
	p3ApiGetAgentSkillsHandler := connect_go.NewUnaryHandler(
		P3ApiGetAgentSkillsProcedure,
		svc.GetAgentSkills,
		opts...,
	)
	p3ApiCreateAgentSkillHandler := connect_go.NewUnaryHandler(
		P3ApiCreateAgentSkillProcedure,
		svc.CreateAgentSkill,
		opts...,
	)
	p3ApiUpdateAgentSkillHandler := connect_go.NewUnaryHandler(
		P3ApiUpdateAgentSkillProcedure,
		svc.UpdateAgentSkill,
		opts...,
	)
	p3ApiDeleteAgentSkillHandler := connect_go.NewUnaryHandler(
		P3ApiDeleteAgentSkillProcedure,
		svc.DeleteAgentSkill,
		opts...,
	)
	p3ApiListAgentSkillsHandler := connect_go.NewUnaryHandler(
		P3ApiListAgentSkillsProcedure,
		svc.ListAgentSkills,
		opts...,
	)
	p3ApiListSkillsForCurrentAgentHandler := connect_go.NewUnaryHandler(
		P3ApiListSkillsForCurrentAgentProcedure,
		svc.ListSkillsForCurrentAgent,
		opts...,
	)
	p3ApiListSkillsHandler := connect_go.NewUnaryHandler(
		P3ApiListSkillsProcedure,
		svc.ListSkills,
		opts...,
	)
	p3ApiUpdateAgentSkillsHandler := connect_go.NewUnaryHandler(
		P3ApiUpdateAgentSkillsProcedure,
		svc.UpdateAgentSkills,
		opts...,
	)
	p3ApiGetCurrentAgentHandler := connect_go.NewUnaryHandler(
		P3ApiGetCurrentAgentProcedure,
		svc.GetCurrentAgent,
		opts...,
	)
	p3ApiGetClientInfoDataHandler := connect_go.NewUnaryHandler(
		P3ApiGetClientInfoDataProcedure,
		svc.GetClientInfoData,
		opts...,
	)
	p3ApiGetClientInfoDisplayTemplateHandler := connect_go.NewUnaryHandler(
		P3ApiGetClientInfoDisplayTemplateProcedure,
		svc.GetClientInfoDisplayTemplate,
		opts...,
	)
	p3ApiListAgentStatisticsDataHandler := connect_go.NewUnaryHandler(
		P3ApiListAgentStatisticsDataProcedure,
		svc.ListAgentStatisticsData,
		opts...,
	)
	p3ApiListPBXExtensionsHandler := connect_go.NewUnaryHandler(
		P3ApiListPBXExtensionsProcedure,
		svc.ListPBXExtensions,
		opts...,
	)
	p3ApiListAgentExtensionsHandler := connect_go.NewUnaryHandler(
		P3ApiListAgentExtensionsProcedure,
		svc.ListAgentExtensions,
		opts...,
	)
	p3ApiListHuntGroupExtensionsHandler := connect_go.NewUnaryHandler(
		P3ApiListHuntGroupExtensionsProcedure,
		svc.ListHuntGroupExtensions,
		opts...,
	)
	p3ApiCreateExtensionHandler := connect_go.NewUnaryHandler(
		P3ApiCreateExtensionProcedure,
		svc.CreateExtension,
		opts...,
	)
	p3ApiDeleteExtensionHandler := connect_go.NewUnaryHandler(
		P3ApiDeleteExtensionProcedure,
		svc.DeleteExtension,
		opts...,
	)
	p3ApiUpdateExtensionHandler := connect_go.NewUnaryHandler(
		P3ApiUpdateExtensionProcedure,
		svc.UpdateExtension,
		opts...,
	)
	p3ApiUpdatePBXExtensionHandler := connect_go.NewUnaryHandler(
		P3ApiUpdatePBXExtensionProcedure,
		svc.UpdatePBXExtension,
		opts...,
	)
	p3ApiCreateDNCLNumbersHandler := connect_go.NewUnaryHandler(
		P3ApiCreateDNCLNumbersProcedure,
		svc.CreateDNCLNumbers,
		opts...,
	)
	p3ApiGetScriptOrResponsesHandler := connect_go.NewUnaryHandler(
		P3ApiGetScriptOrResponsesProcedure,
		svc.GetScriptOrResponses,
		opts...,
	)
	p3ApiGetHuntGroupAgentSettingsHandler := connect_go.NewUnaryHandler(
		P3ApiGetHuntGroupAgentSettingsProcedure,
		svc.GetHuntGroupAgentSettings,
		opts...,
	)
	p3ApiListHuntGroupWebLinksHandler := connect_go.NewUnaryHandler(
		P3ApiListHuntGroupWebLinksProcedure,
		svc.ListHuntGroupWebLinks,
		opts...,
	)
	p3ApiGetHuntGroupPauseCodesHandler := connect_go.NewUnaryHandler(
		P3ApiGetHuntGroupPauseCodesProcedure,
		svc.GetHuntGroupPauseCodes,
		opts...,
	)
	p3ApiListAgentCallHistoryHandler := connect_go.NewUnaryHandler(
		P3ApiListAgentCallHistoryProcedure,
		svc.ListAgentCallHistory,
		opts...,
	)
	p3ApiListClientPhoneBookEntriesHandler := connect_go.NewUnaryHandler(
		P3ApiListClientPhoneBookEntriesProcedure,
		svc.ListClientPhoneBookEntries,
		opts...,
	)
	p3ApiListHuntGroupPhoneBookEntriesHandler := connect_go.NewUnaryHandler(
		P3ApiListHuntGroupPhoneBookEntriesProcedure,
		svc.ListHuntGroupPhoneBookEntries,
		opts...,
	)
	p3ApiCreatePhoneBookEntryHandler := connect_go.NewUnaryHandler(
		P3ApiCreatePhoneBookEntryProcedure,
		svc.CreatePhoneBookEntry,
		opts...,
	)
	p3ApiUpdatePhoneBookEntryHandler := connect_go.NewUnaryHandler(
		P3ApiUpdatePhoneBookEntryProcedure,
		svc.UpdatePhoneBookEntry,
		opts...,
	)
	p3ApiDeletePhoneBookEntryHandler := connect_go.NewUnaryHandler(
		P3ApiDeletePhoneBookEntryProcedure,
		svc.DeletePhoneBookEntry,
		opts...,
	)
	p3ApiListPhoneBooksHandler := connect_go.NewUnaryHandler(
		P3ApiListPhoneBooksProcedure,
		svc.ListPhoneBooks,
		opts...,
	)
	p3ApiListAgentTriggersHandler := connect_go.NewUnaryHandler(
		P3ApiListAgentTriggersProcedure,
		svc.ListAgentTriggers,
		opts...,
	)
	p3ApiGetCampaignCompletionStatusHandler := connect_go.NewUnaryHandler(
		P3ApiGetCampaignCompletionStatusProcedure,
		svc.GetCampaignCompletionStatus,
		opts...,
	)
	p3ApiGetLostPeerInfoHandler := connect_go.NewUnaryHandler(
		P3ApiGetLostPeerInfoProcedure,
		svc.GetLostPeerInfo,
		opts...,
	)
	p3ApiGetDispositionKeysHandler := connect_go.NewUnaryHandler(
		P3ApiGetDispositionKeysProcedure,
		svc.GetDispositionKeys,
		opts...,
	)
	p3ApiGetReadyAgentsHandler := connect_go.NewUnaryHandler(
		P3ApiGetReadyAgentsProcedure,
		svc.GetReadyAgents,
		opts...,
	)
	p3ApiListAgentQueueAndOnHoldCallDataHandler := connect_go.NewUnaryHandler(
		P3ApiListAgentQueueAndOnHoldCallDataProcedure,
		svc.ListAgentQueueAndOnHoldCallData,
		opts...,
	)
	p3ApiSaveAgentCallResponsesHandler := connect_go.NewUnaryHandler(
		P3ApiSaveAgentCallResponsesProcedure,
		svc.SaveAgentCallResponses,
		opts...,
	)
	p3ApiListAgentTransferOptionsHandler := connect_go.NewUnaryHandler(
		P3ApiListAgentTransferOptionsProcedure,
		svc.ListAgentTransferOptions,
		opts...,
	)
	p3ApiUpdateAgentCallResponseValueHandler := connect_go.NewUnaryHandler(
		P3ApiUpdateAgentCallResponseValueProcedure,
		svc.UpdateAgentCallResponseValue,
		opts...,
	)
	p3ApiGetIntercomPeerInfoHandler := connect_go.NewUnaryHandler(
		P3ApiGetIntercomPeerInfoProcedure,
		svc.GetIntercomPeerInfo,
		opts...,
	)
	p3ApiListOrgResponseEvaluatorsHandler := connect_go.NewUnaryHandler(
		P3ApiListOrgResponseEvaluatorsProcedure,
		svc.ListOrgResponseEvaluators,
		opts...,
	)
	p3ApiGetQueueConfigurationOptionsArrayHandler := connect_go.NewUnaryHandler(
		P3ApiGetQueueConfigurationOptionsArrayProcedure,
		svc.GetQueueConfigurationOptionsArray,
		opts...,
	)
	p3ApiGetConditionalDNCLRulesHandler := connect_go.NewUnaryHandler(
		P3ApiGetConditionalDNCLRulesProcedure,
		svc.GetConditionalDNCLRules,
		opts...,
	)
	p3ApiManualDialStartHandler := connect_go.NewUnaryHandler(
		P3ApiManualDialStartProcedure,
		svc.ManualDialStart,
		opts...,
	)
	p3ApiListExtendedCallHistoryHandler := connect_go.NewServerStreamHandler(
		P3ApiListExtendedCallHistoryProcedure,
		svc.ListExtendedCallHistory,
		opts...,
	)
	p3ApiListWhiteListPhoneBooksHandler := connect_go.NewUnaryHandler(
		P3ApiListWhiteListPhoneBooksProcedure,
		svc.ListWhiteListPhoneBooks,
		opts...,
	)
	p3ApiDownloadCallRecordingHandler := connect_go.NewUnaryHandler(
		P3ApiDownloadCallRecordingProcedure,
		svc.DownloadCallRecording,
		opts...,
	)
	p3ApiDownloadCallRecordingsHandler := connect_go.NewUnaryHandler(
		P3ApiDownloadCallRecordingsProcedure,
		svc.DownloadCallRecordings,
		opts...,
	)
	p3ApiPlacePreviewDialCallHandler := connect_go.NewUnaryHandler(
		P3ApiPlacePreviewDialCallProcedure,
		svc.PlacePreviewDialCall,
		opts...,
	)
	p3ApiCancelPreviewDialCallHandler := connect_go.NewUnaryHandler(
		P3ApiCancelPreviewDialCallProcedure,
		svc.CancelPreviewDialCall,
		opts...,
	)
	p3ApiUpdateTaskStatusHandler := connect_go.NewUnaryHandler(
		P3ApiUpdateTaskStatusProcedure,
		svc.UpdateTaskStatus,
		opts...,
	)
	p3ApiListCallbackRoutingAgentsHandler := connect_go.NewUnaryHandler(
		P3ApiListCallbackRoutingAgentsProcedure,
		svc.ListCallbackRoutingAgents,
		opts...,
	)
	p3ApiListCallbackRoutingSkillsHandler := connect_go.NewUnaryHandler(
		P3ApiListCallbackRoutingSkillsProcedure,
		svc.ListCallbackRoutingSkills,
		opts...,
	)
	p3ApiHandleRecordingDelayHandler := connect_go.NewUnaryHandler(
		P3ApiHandleRecordingDelayProcedure,
		svc.HandleRecordingDelay,
		opts...,
	)
	p3ApiUpdateAgentAssignedHuntGroupHandler := connect_go.NewUnaryHandler(
		P3ApiUpdateAgentAssignedHuntGroupProcedure,
		svc.UpdateAgentAssignedHuntGroup,
		opts...,
	)
	p3ApiGetCallDataHandler := connect_go.NewUnaryHandler(
		P3ApiGetCallDataProcedure,
		svc.GetCallData,
		opts...,
	)
	p3ApiListHuntGroupsHandler := connect_go.NewUnaryHandler(
		P3ApiListHuntGroupsProcedure,
		svc.ListHuntGroups,
		opts...,
	)
	p3ApiListReassignmentHuntGroupsHandler := connect_go.NewUnaryHandler(
		P3ApiListReassignmentHuntGroupsProcedure,
		svc.ListReassignmentHuntGroups,
		opts...,
	)
	p3ApiGetOrgAgentSettingsHandler := connect_go.NewUnaryHandler(
		P3ApiGetOrgAgentSettingsProcedure,
		svc.GetOrgAgentSettings,
		opts...,
	)
	p3ApiListCallerIdsFromBucketHandler := connect_go.NewUnaryHandler(
		P3ApiListCallerIdsFromBucketProcedure,
		svc.ListCallerIdsFromBucket,
		opts...,
	)
	p3ApiSaveLastCallResponseHandler := connect_go.NewUnaryHandler(
		P3ApiSaveLastCallResponseProcedure,
		svc.SaveLastCallResponse,
		opts...,
	)
	p3ApiListAgentCallLogsByCallSidAndTypeHandler := connect_go.NewUnaryHandler(
		P3ApiListAgentCallLogsByCallSidAndTypeProcedure,
		svc.ListAgentCallLogsByCallSidAndType,
		opts...,
	)
	p3ApiListAgentCallResponseValuesHandler := connect_go.NewUnaryHandler(
		P3ApiListAgentCallResponseValuesProcedure,
		svc.ListAgentCallResponseValues,
		opts...,
	)
	p3ApiGetContactSchemaByContactGroupHandler := connect_go.NewUnaryHandler(
		P3ApiGetContactSchemaByContactGroupProcedure,
		svc.GetContactSchemaByContactGroup,
		opts...,
	)
	p3ApiListContactGroupDetailsByClientSidHandler := connect_go.NewUnaryHandler(
		P3ApiListContactGroupDetailsByClientSidProcedure,
		svc.ListContactGroupDetailsByClientSid,
		opts...,
	)
	p3ApiGetContactGroupDetailsHandler := connect_go.NewUnaryHandler(
		P3ApiGetContactGroupDetailsProcedure,
		svc.GetContactGroupDetails,
		opts...,
	)
	p3ApiGetContactGroupSizeHandler := connect_go.NewUnaryHandler(
		P3ApiGetContactGroupSizeProcedure,
		svc.GetContactGroupSize,
		opts...,
	)
	p3ApiCreateContactFieldDescriptionHandler := connect_go.NewUnaryHandler(
		P3ApiCreateContactFieldDescriptionProcedure,
		svc.CreateContactFieldDescription,
		opts...,
	)
	p3ApiDeleteContactFieldDescriptionHandler := connect_go.NewUnaryHandler(
		P3ApiDeleteContactFieldDescriptionProcedure,
		svc.DeleteContactFieldDescription,
		opts...,
	)
	p3ApiListContactFieldDescriptionsHandler := connect_go.NewUnaryHandler(
		P3ApiListContactFieldDescriptionsProcedure,
		svc.ListContactFieldDescriptions,
		opts...,
	)
	p3ApiListContactFieldDescriptionsByCGSidHandler := connect_go.NewUnaryHandler(
		P3ApiListContactFieldDescriptionsByCGSidProcedure,
		svc.ListContactFieldDescriptionsByCGSid,
		opts...,
	)
	p3ApiListContactImportTemplatesHandler := connect_go.NewUnaryHandler(
		P3ApiListContactImportTemplatesProcedure,
		svc.ListContactImportTemplates,
		opts...,
	)
	p3ApiUpdatePreviewRecordToFinishedHandler := connect_go.NewUnaryHandler(
		P3ApiUpdatePreviewRecordToFinishedProcedure,
		svc.UpdatePreviewRecordToFinished,
		opts...,
	)
	p3ApiUpdateAgentHuntGroupHandler := connect_go.NewUnaryHandler(
		P3ApiUpdateAgentHuntGroupProcedure,
		svc.UpdateAgentHuntGroup,
		opts...,
	)
	p3ApiMultiAgentHuntGroupAssignmentHandler := connect_go.NewUnaryHandler(
		P3ApiMultiAgentHuntGroupAssignmentProcedure,
		svc.MultiAgentHuntGroupAssignment,
		opts...,
	)
	p3ApiGetAgentProfileHandler := connect_go.NewUnaryHandler(
		P3ApiGetAgentProfileProcedure,
		svc.GetAgentProfile,
		opts...,
	)
	p3ApiRecalculateBillingHandler := connect_go.NewUnaryHandler(
		P3ApiRecalculateBillingProcedure,
		svc.RecalculateBilling,
		opts...,
	)
	p3ApiListOutboundBroadcastTemplateDataHandler := connect_go.NewUnaryHandler(
		P3ApiListOutboundBroadcastTemplateDataProcedure,
		svc.ListOutboundBroadcastTemplateData,
		opts...,
	)
	p3ApiMultiAgentSkillAssignmentHandler := connect_go.NewUnaryHandler(
		P3ApiMultiAgentSkillAssignmentProcedure,
		svc.MultiAgentSkillAssignment,
		opts...,
	)
	p3ApiMultiAgentSkillUnassignmentHandler := connect_go.NewUnaryHandler(
		P3ApiMultiAgentSkillUnassignmentProcedure,
		svc.MultiAgentSkillUnassignment,
		opts...,
	)
	p3ApiListMAMAgentHuntGroupsByClientSidHandler := connect_go.NewUnaryHandler(
		P3ApiListMAMAgentHuntGroupsByClientSidProcedure,
		svc.ListMAMAgentHuntGroupsByClientSid,
		opts...,
	)
	p3ApiListTtsVoicesHandler := connect_go.NewUnaryHandler(
		P3ApiListTtsVoicesProcedure,
		svc.ListTtsVoices,
		opts...,
	)
	p3ApiCreateTtsVoiceHandler := connect_go.NewUnaryHandler(
		P3ApiCreateTtsVoiceProcedure,
		svc.CreateTtsVoice,
		opts...,
	)
	p3ApiDeleteTtsVoiceHandler := connect_go.NewUnaryHandler(
		P3ApiDeleteTtsVoiceProcedure,
		svc.DeleteTtsVoice,
		opts...,
	)
	p3ApiListCustomDataKeysHandler := connect_go.NewUnaryHandler(
		P3ApiListCustomDataKeysProcedure,
		svc.ListCustomDataKeys,
		opts...,
	)
	p3ApiCreateCustomDataKeyHandler := connect_go.NewUnaryHandler(
		P3ApiCreateCustomDataKeyProcedure,
		svc.CreateCustomDataKey,
		opts...,
	)
	p3ApiDeleteCustomDataKeyHandler := connect_go.NewUnaryHandler(
		P3ApiDeleteCustomDataKeyProcedure,
		svc.DeleteCustomDataKey,
		opts...,
	)
	p3ApiUpdateCustomDataKeyHandler := connect_go.NewUnaryHandler(
		P3ApiUpdateCustomDataKeyProcedure,
		svc.UpdateCustomDataKey,
		opts...,
	)
	p3ApiGetActivityLogHistoryHandler := connect_go.NewServerStreamHandler(
		P3ApiGetActivityLogHistoryProcedure,
		svc.GetActivityLogHistory,
		opts...,
	)
	p3ApiListTableTemplatePropertiesHandler := connect_go.NewUnaryHandler(
		P3ApiListTableTemplatePropertiesProcedure,
		svc.ListTableTemplateProperties,
		opts...,
	)
	p3ApiListAgentSkillsFiltersHandler := connect_go.NewUnaryHandler(
		P3ApiListAgentSkillsFiltersProcedure,
		svc.ListAgentSkillsFilters,
		opts...,
	)
	p3ApiListScheduleRulesHandler := connect_go.NewUnaryHandler(
		P3ApiListScheduleRulesProcedure,
		svc.ListScheduleRules,
		opts...,
	)
	p3ApiListCustomReportFiltersHandler := connect_go.NewUnaryHandler(
		P3ApiListCustomReportFiltersProcedure,
		svc.ListCustomReportFilters,
		opts...,
	)
	p3ApiListSmsNumbersHandler := connect_go.NewUnaryHandler(
		P3ApiListSmsNumbersProcedure,
		svc.ListSmsNumbers,
		opts...,
	)
	return "/api.v0alpha.P3Api/", http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		switch r.URL.Path {
		case P3ApiGetAgentHuntGroupProcedure:
			p3ApiGetAgentHuntGroupHandler.ServeHTTP(w, r)
		case P3ApiGetAgentSessionProcedure:
			p3ApiGetAgentSessionHandler.ServeHTTP(w, r)
		case P3ApiGetAgentSkillsProcedure:
			p3ApiGetAgentSkillsHandler.ServeHTTP(w, r)
		case P3ApiCreateAgentSkillProcedure:
			p3ApiCreateAgentSkillHandler.ServeHTTP(w, r)
		case P3ApiUpdateAgentSkillProcedure:
			p3ApiUpdateAgentSkillHandler.ServeHTTP(w, r)
		case P3ApiDeleteAgentSkillProcedure:
			p3ApiDeleteAgentSkillHandler.ServeHTTP(w, r)
		case P3ApiListAgentSkillsProcedure:
			p3ApiListAgentSkillsHandler.ServeHTTP(w, r)
		case P3ApiListSkillsForCurrentAgentProcedure:
			p3ApiListSkillsForCurrentAgentHandler.ServeHTTP(w, r)
		case P3ApiListSkillsProcedure:
			p3ApiListSkillsHandler.ServeHTTP(w, r)
		case P3ApiUpdateAgentSkillsProcedure:
			p3ApiUpdateAgentSkillsHandler.ServeHTTP(w, r)
		case P3ApiGetCurrentAgentProcedure:
			p3ApiGetCurrentAgentHandler.ServeHTTP(w, r)
		case P3ApiGetClientInfoDataProcedure:
			p3ApiGetClientInfoDataHandler.ServeHTTP(w, r)
		case P3ApiGetClientInfoDisplayTemplateProcedure:
			p3ApiGetClientInfoDisplayTemplateHandler.ServeHTTP(w, r)
		case P3ApiListAgentStatisticsDataProcedure:
			p3ApiListAgentStatisticsDataHandler.ServeHTTP(w, r)
		case P3ApiListPBXExtensionsProcedure:
			p3ApiListPBXExtensionsHandler.ServeHTTP(w, r)
		case P3ApiListAgentExtensionsProcedure:
			p3ApiListAgentExtensionsHandler.ServeHTTP(w, r)
		case P3ApiListHuntGroupExtensionsProcedure:
			p3ApiListHuntGroupExtensionsHandler.ServeHTTP(w, r)
		case P3ApiCreateExtensionProcedure:
			p3ApiCreateExtensionHandler.ServeHTTP(w, r)
		case P3ApiDeleteExtensionProcedure:
			p3ApiDeleteExtensionHandler.ServeHTTP(w, r)
		case P3ApiUpdateExtensionProcedure:
			p3ApiUpdateExtensionHandler.ServeHTTP(w, r)
		case P3ApiUpdatePBXExtensionProcedure:
			p3ApiUpdatePBXExtensionHandler.ServeHTTP(w, r)
		case P3ApiCreateDNCLNumbersProcedure:
			p3ApiCreateDNCLNumbersHandler.ServeHTTP(w, r)
		case P3ApiGetScriptOrResponsesProcedure:
			p3ApiGetScriptOrResponsesHandler.ServeHTTP(w, r)
		case P3ApiGetHuntGroupAgentSettingsProcedure:
			p3ApiGetHuntGroupAgentSettingsHandler.ServeHTTP(w, r)
		case P3ApiListHuntGroupWebLinksProcedure:
			p3ApiListHuntGroupWebLinksHandler.ServeHTTP(w, r)
		case P3ApiGetHuntGroupPauseCodesProcedure:
			p3ApiGetHuntGroupPauseCodesHandler.ServeHTTP(w, r)
		case P3ApiListAgentCallHistoryProcedure:
			p3ApiListAgentCallHistoryHandler.ServeHTTP(w, r)
		case P3ApiListClientPhoneBookEntriesProcedure:
			p3ApiListClientPhoneBookEntriesHandler.ServeHTTP(w, r)
		case P3ApiListHuntGroupPhoneBookEntriesProcedure:
			p3ApiListHuntGroupPhoneBookEntriesHandler.ServeHTTP(w, r)
		case P3ApiCreatePhoneBookEntryProcedure:
			p3ApiCreatePhoneBookEntryHandler.ServeHTTP(w, r)
		case P3ApiUpdatePhoneBookEntryProcedure:
			p3ApiUpdatePhoneBookEntryHandler.ServeHTTP(w, r)
		case P3ApiDeletePhoneBookEntryProcedure:
			p3ApiDeletePhoneBookEntryHandler.ServeHTTP(w, r)
		case P3ApiListPhoneBooksProcedure:
			p3ApiListPhoneBooksHandler.ServeHTTP(w, r)
		case P3ApiListAgentTriggersProcedure:
			p3ApiListAgentTriggersHandler.ServeHTTP(w, r)
		case P3ApiGetCampaignCompletionStatusProcedure:
			p3ApiGetCampaignCompletionStatusHandler.ServeHTTP(w, r)
		case P3ApiGetLostPeerInfoProcedure:
			p3ApiGetLostPeerInfoHandler.ServeHTTP(w, r)
		case P3ApiGetDispositionKeysProcedure:
			p3ApiGetDispositionKeysHandler.ServeHTTP(w, r)
		case P3ApiGetReadyAgentsProcedure:
			p3ApiGetReadyAgentsHandler.ServeHTTP(w, r)
		case P3ApiListAgentQueueAndOnHoldCallDataProcedure:
			p3ApiListAgentQueueAndOnHoldCallDataHandler.ServeHTTP(w, r)
		case P3ApiSaveAgentCallResponsesProcedure:
			p3ApiSaveAgentCallResponsesHandler.ServeHTTP(w, r)
		case P3ApiListAgentTransferOptionsProcedure:
			p3ApiListAgentTransferOptionsHandler.ServeHTTP(w, r)
		case P3ApiUpdateAgentCallResponseValueProcedure:
			p3ApiUpdateAgentCallResponseValueHandler.ServeHTTP(w, r)
		case P3ApiGetIntercomPeerInfoProcedure:
			p3ApiGetIntercomPeerInfoHandler.ServeHTTP(w, r)
		case P3ApiListOrgResponseEvaluatorsProcedure:
			p3ApiListOrgResponseEvaluatorsHandler.ServeHTTP(w, r)
		case P3ApiGetQueueConfigurationOptionsArrayProcedure:
			p3ApiGetQueueConfigurationOptionsArrayHandler.ServeHTTP(w, r)
		case P3ApiGetConditionalDNCLRulesProcedure:
			p3ApiGetConditionalDNCLRulesHandler.ServeHTTP(w, r)
		case P3ApiManualDialStartProcedure:
			p3ApiManualDialStartHandler.ServeHTTP(w, r)
		case P3ApiListExtendedCallHistoryProcedure:
			p3ApiListExtendedCallHistoryHandler.ServeHTTP(w, r)
		case P3ApiListWhiteListPhoneBooksProcedure:
			p3ApiListWhiteListPhoneBooksHandler.ServeHTTP(w, r)
		case P3ApiDownloadCallRecordingProcedure:
			p3ApiDownloadCallRecordingHandler.ServeHTTP(w, r)
		case P3ApiDownloadCallRecordingsProcedure:
			p3ApiDownloadCallRecordingsHandler.ServeHTTP(w, r)
		case P3ApiPlacePreviewDialCallProcedure:
			p3ApiPlacePreviewDialCallHandler.ServeHTTP(w, r)
		case P3ApiCancelPreviewDialCallProcedure:
			p3ApiCancelPreviewDialCallHandler.ServeHTTP(w, r)
		case P3ApiUpdateTaskStatusProcedure:
			p3ApiUpdateTaskStatusHandler.ServeHTTP(w, r)
		case P3ApiListCallbackRoutingAgentsProcedure:
			p3ApiListCallbackRoutingAgentsHandler.ServeHTTP(w, r)
		case P3ApiListCallbackRoutingSkillsProcedure:
			p3ApiListCallbackRoutingSkillsHandler.ServeHTTP(w, r)
		case P3ApiHandleRecordingDelayProcedure:
			p3ApiHandleRecordingDelayHandler.ServeHTTP(w, r)
		case P3ApiUpdateAgentAssignedHuntGroupProcedure:
			p3ApiUpdateAgentAssignedHuntGroupHandler.ServeHTTP(w, r)
		case P3ApiGetCallDataProcedure:
			p3ApiGetCallDataHandler.ServeHTTP(w, r)
		case P3ApiListHuntGroupsProcedure:
			p3ApiListHuntGroupsHandler.ServeHTTP(w, r)
		case P3ApiListReassignmentHuntGroupsProcedure:
			p3ApiListReassignmentHuntGroupsHandler.ServeHTTP(w, r)
		case P3ApiGetOrgAgentSettingsProcedure:
			p3ApiGetOrgAgentSettingsHandler.ServeHTTP(w, r)
		case P3ApiListCallerIdsFromBucketProcedure:
			p3ApiListCallerIdsFromBucketHandler.ServeHTTP(w, r)
		case P3ApiSaveLastCallResponseProcedure:
			p3ApiSaveLastCallResponseHandler.ServeHTTP(w, r)
		case P3ApiListAgentCallLogsByCallSidAndTypeProcedure:
			p3ApiListAgentCallLogsByCallSidAndTypeHandler.ServeHTTP(w, r)
		case P3ApiListAgentCallResponseValuesProcedure:
			p3ApiListAgentCallResponseValuesHandler.ServeHTTP(w, r)
		case P3ApiGetContactSchemaByContactGroupProcedure:
			p3ApiGetContactSchemaByContactGroupHandler.ServeHTTP(w, r)
		case P3ApiListContactGroupDetailsByClientSidProcedure:
			p3ApiListContactGroupDetailsByClientSidHandler.ServeHTTP(w, r)
		case P3ApiGetContactGroupDetailsProcedure:
			p3ApiGetContactGroupDetailsHandler.ServeHTTP(w, r)
		case P3ApiGetContactGroupSizeProcedure:
			p3ApiGetContactGroupSizeHandler.ServeHTTP(w, r)
		case P3ApiCreateContactFieldDescriptionProcedure:
			p3ApiCreateContactFieldDescriptionHandler.ServeHTTP(w, r)
		case P3ApiDeleteContactFieldDescriptionProcedure:
			p3ApiDeleteContactFieldDescriptionHandler.ServeHTTP(w, r)
		case P3ApiListContactFieldDescriptionsProcedure:
			p3ApiListContactFieldDescriptionsHandler.ServeHTTP(w, r)
		case P3ApiListContactFieldDescriptionsByCGSidProcedure:
			p3ApiListContactFieldDescriptionsByCGSidHandler.ServeHTTP(w, r)
		case P3ApiListContactImportTemplatesProcedure:
			p3ApiListContactImportTemplatesHandler.ServeHTTP(w, r)
		case P3ApiUpdatePreviewRecordToFinishedProcedure:
			p3ApiUpdatePreviewRecordToFinishedHandler.ServeHTTP(w, r)
		case P3ApiUpdateAgentHuntGroupProcedure:
			p3ApiUpdateAgentHuntGroupHandler.ServeHTTP(w, r)
		case P3ApiMultiAgentHuntGroupAssignmentProcedure:
			p3ApiMultiAgentHuntGroupAssignmentHandler.ServeHTTP(w, r)
		case P3ApiGetAgentProfileProcedure:
			p3ApiGetAgentProfileHandler.ServeHTTP(w, r)
		case P3ApiRecalculateBillingProcedure:
			p3ApiRecalculateBillingHandler.ServeHTTP(w, r)
		case P3ApiListOutboundBroadcastTemplateDataProcedure:
			p3ApiListOutboundBroadcastTemplateDataHandler.ServeHTTP(w, r)
		case P3ApiMultiAgentSkillAssignmentProcedure:
			p3ApiMultiAgentSkillAssignmentHandler.ServeHTTP(w, r)
		case P3ApiMultiAgentSkillUnassignmentProcedure:
			p3ApiMultiAgentSkillUnassignmentHandler.ServeHTTP(w, r)
		case P3ApiListMAMAgentHuntGroupsByClientSidProcedure:
			p3ApiListMAMAgentHuntGroupsByClientSidHandler.ServeHTTP(w, r)
		case P3ApiListTtsVoicesProcedure:
			p3ApiListTtsVoicesHandler.ServeHTTP(w, r)
		case P3ApiCreateTtsVoiceProcedure:
			p3ApiCreateTtsVoiceHandler.ServeHTTP(w, r)
		case P3ApiDeleteTtsVoiceProcedure:
			p3ApiDeleteTtsVoiceHandler.ServeHTTP(w, r)
		case P3ApiListCustomDataKeysProcedure:
			p3ApiListCustomDataKeysHandler.ServeHTTP(w, r)
		case P3ApiCreateCustomDataKeyProcedure:
			p3ApiCreateCustomDataKeyHandler.ServeHTTP(w, r)
		case P3ApiDeleteCustomDataKeyProcedure:
			p3ApiDeleteCustomDataKeyHandler.ServeHTTP(w, r)
		case P3ApiUpdateCustomDataKeyProcedure:
			p3ApiUpdateCustomDataKeyHandler.ServeHTTP(w, r)
		case P3ApiGetActivityLogHistoryProcedure:
			p3ApiGetActivityLogHistoryHandler.ServeHTTP(w, r)
		case P3ApiListTableTemplatePropertiesProcedure:
			p3ApiListTableTemplatePropertiesHandler.ServeHTTP(w, r)
		case P3ApiListAgentSkillsFiltersProcedure:
			p3ApiListAgentSkillsFiltersHandler.ServeHTTP(w, r)
		case P3ApiListScheduleRulesProcedure:
			p3ApiListScheduleRulesHandler.ServeHTTP(w, r)
		case P3ApiListCustomReportFiltersProcedure:
			p3ApiListCustomReportFiltersHandler.ServeHTTP(w, r)
		case P3ApiListSmsNumbersProcedure:
			p3ApiListSmsNumbersHandler.ServeHTTP(w, r)
		default:
			http.NotFound(w, r)
		}
	})
}

// UnimplementedP3ApiHandler returns CodeUnimplemented from all methods.
type UnimplementedP3ApiHandler struct{}

func (UnimplementedP3ApiHandler) GetAgentHuntGroup(context.Context, *connect_go.Request[v0alpha.GetAgentHuntGroupReq]) (*connect_go.Response[v0alpha.HuntGroup], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.GetAgentHuntGroup is not implemented"))
}

func (UnimplementedP3ApiHandler) GetAgentSession(context.Context, *connect_go.Request[v0alpha.GetAgentSessionReq]) (*connect_go.Response[v0alpha.AgentSession], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.GetAgentSession is not implemented"))
}

func (UnimplementedP3ApiHandler) GetAgentSkills(context.Context, *connect_go.Request[v0alpha.GetAgentSkillsReq]) (*connect_go.Response[v0alpha.GetAgentSkillsRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.GetAgentSkills is not implemented"))
}

func (UnimplementedP3ApiHandler) CreateAgentSkill(context.Context, *connect_go.Request[v0alpha.CreateAgentSkillReq]) (*connect_go.Response[v0alpha.CreateAgentSkillRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.CreateAgentSkill is not implemented"))
}

func (UnimplementedP3ApiHandler) UpdateAgentSkill(context.Context, *connect_go.Request[v0alpha.UpdateAgentSkillReq]) (*connect_go.Response[v0alpha.UpdateAgentSkillRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.UpdateAgentSkill is not implemented"))
}

func (UnimplementedP3ApiHandler) DeleteAgentSkill(context.Context, *connect_go.Request[v0alpha.DeleteAgentSkillReq]) (*connect_go.Response[v0alpha.DeleteAgentSkillRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.DeleteAgentSkill is not implemented"))
}

func (UnimplementedP3ApiHandler) ListAgentSkills(context.Context, *connect_go.Request[v0alpha.ListAgentSkillsReq]) (*connect_go.Response[v0alpha.ListAgentSkillsRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.ListAgentSkills is not implemented"))
}

func (UnimplementedP3ApiHandler) ListSkillsForCurrentAgent(context.Context, *connect_go.Request[v0alpha.ListSkillsForCurrentAgentReq]) (*connect_go.Response[v0alpha.ListSkillsForCurrentAgentRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.ListSkillsForCurrentAgent is not implemented"))
}

func (UnimplementedP3ApiHandler) ListSkills(context.Context, *connect_go.Request[v0alpha.ListSkillsReq]) (*connect_go.Response[v0alpha.ListSkillsRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.ListSkills is not implemented"))
}

func (UnimplementedP3ApiHandler) UpdateAgentSkills(context.Context, *connect_go.Request[v0alpha.UpdateAgentSkillsReq]) (*connect_go.Response[v0alpha.UpdateAgentSkillsRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.UpdateAgentSkills is not implemented"))
}

func (UnimplementedP3ApiHandler) GetCurrentAgent(context.Context, *connect_go.Request[v0alpha.GetCurrentAgentReq]) (*connect_go.Response[v0alpha.Agent], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.GetCurrentAgent is not implemented"))
}

func (UnimplementedP3ApiHandler) GetClientInfoData(context.Context, *connect_go.Request[v0alpha.GetClientInfoDataReq]) (*connect_go.Response[v0alpha.GetClientInfoDataRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.GetClientInfoData is not implemented"))
}

func (UnimplementedP3ApiHandler) GetClientInfoDisplayTemplate(context.Context, *connect_go.Request[v0alpha.GetClientInfoDisplayTemplateReq]) (*connect_go.Response[v0alpha.GetClientInfoDisplayTemplateRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.GetClientInfoDisplayTemplate is not implemented"))
}

func (UnimplementedP3ApiHandler) ListAgentStatisticsData(context.Context, *connect_go.Request[v0alpha.ListAgentStatisticsDataReq]) (*connect_go.Response[v0alpha.ListAgentStatisticsDataRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.ListAgentStatisticsData is not implemented"))
}

func (UnimplementedP3ApiHandler) ListPBXExtensions(context.Context, *connect_go.Request[v0alpha.ListPBXExtensionsReq]) (*connect_go.Response[v0alpha.ListPBXExtensionsRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.ListPBXExtensions is not implemented"))
}

func (UnimplementedP3ApiHandler) ListAgentExtensions(context.Context, *connect_go.Request[v0alpha.ListAgentExtensionsReq]) (*connect_go.Response[v0alpha.ListAgentExtensionsRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.ListAgentExtensions is not implemented"))
}

func (UnimplementedP3ApiHandler) ListHuntGroupExtensions(context.Context, *connect_go.Request[v0alpha.ListHuntGroupExtensionsReq]) (*connect_go.Response[v0alpha.ListHuntGroupExtensionsRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.ListHuntGroupExtensions is not implemented"))
}

func (UnimplementedP3ApiHandler) CreateExtension(context.Context, *connect_go.Request[v0alpha.CreateExtensionReq]) (*connect_go.Response[v0alpha.CreateExtensionRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.CreateExtension is not implemented"))
}

func (UnimplementedP3ApiHandler) DeleteExtension(context.Context, *connect_go.Request[v0alpha.DeleteExtensionReq]) (*connect_go.Response[v0alpha.DeleteExtensionRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.DeleteExtension is not implemented"))
}

func (UnimplementedP3ApiHandler) UpdateExtension(context.Context, *connect_go.Request[v0alpha.UpdateExtensionReq]) (*connect_go.Response[v0alpha.UpdateExtensionRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.UpdateExtension is not implemented"))
}

func (UnimplementedP3ApiHandler) UpdatePBXExtension(context.Context, *connect_go.Request[v0alpha.UpdatePBXExtensionReq]) (*connect_go.Response[v0alpha.UpdatePBXExtensionRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.UpdatePBXExtension is not implemented"))
}

func (UnimplementedP3ApiHandler) CreateDNCLNumbers(context.Context, *connect_go.Request[v0alpha.CreateDNCLNumbersReq]) (*connect_go.Response[v0alpha.CreateDNCLNumbersRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.CreateDNCLNumbers is not implemented"))
}

func (UnimplementedP3ApiHandler) GetScriptOrResponses(context.Context, *connect_go.Request[v0alpha.GetScriptOrResponsesReq]) (*connect_go.Response[v0alpha.GetScriptOrResponsesRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.GetScriptOrResponses is not implemented"))
}

func (UnimplementedP3ApiHandler) GetHuntGroupAgentSettings(context.Context, *connect_go.Request[v0alpha.GetHuntGroupAgentSettingsReq]) (*connect_go.Response[v0alpha.HuntGroupAgentSettings], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.GetHuntGroupAgentSettings is not implemented"))
}

func (UnimplementedP3ApiHandler) ListHuntGroupWebLinks(context.Context, *connect_go.Request[v0alpha.ListHuntGroupWebLinksReq]) (*connect_go.Response[v0alpha.ListHuntGroupWebLinksRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.ListHuntGroupWebLinks is not implemented"))
}

func (UnimplementedP3ApiHandler) GetHuntGroupPauseCodes(context.Context, *connect_go.Request[v0alpha.GetHuntGroupPauseCodesReq]) (*connect_go.Response[v0alpha.GetHuntGroupPauseCodesRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.GetHuntGroupPauseCodes is not implemented"))
}

func (UnimplementedP3ApiHandler) ListAgentCallHistory(context.Context, *connect_go.Request[v0alpha.ListAgentCallHistoryReq]) (*connect_go.Response[v0alpha.ListAgentCallHistoryRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.ListAgentCallHistory is not implemented"))
}

func (UnimplementedP3ApiHandler) ListClientPhoneBookEntries(context.Context, *connect_go.Request[v0alpha.ListClientPhoneBookEntriesReq]) (*connect_go.Response[v0alpha.ListClientPhoneBookEntriesRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.ListClientPhoneBookEntries is not implemented"))
}

func (UnimplementedP3ApiHandler) ListHuntGroupPhoneBookEntries(context.Context, *connect_go.Request[v0alpha.ListHuntGroupPhoneBookEntriesReq]) (*connect_go.Response[v0alpha.ListHuntGroupPhoneBookEntriesRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.ListHuntGroupPhoneBookEntries is not implemented"))
}

func (UnimplementedP3ApiHandler) CreatePhoneBookEntry(context.Context, *connect_go.Request[v0alpha.CreatePhoneBookEntryReq]) (*connect_go.Response[v0alpha.CreatePhoneBookEntryRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.CreatePhoneBookEntry is not implemented"))
}

func (UnimplementedP3ApiHandler) UpdatePhoneBookEntry(context.Context, *connect_go.Request[v0alpha.UpdatePhoneBookEntryReq]) (*connect_go.Response[v0alpha.UpdatePhoneBookEntryRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.UpdatePhoneBookEntry is not implemented"))
}

func (UnimplementedP3ApiHandler) DeletePhoneBookEntry(context.Context, *connect_go.Request[v0alpha.DeletePhoneBookEntryReq]) (*connect_go.Response[v0alpha.DeletePhoneBookEntryRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.DeletePhoneBookEntry is not implemented"))
}

func (UnimplementedP3ApiHandler) ListPhoneBooks(context.Context, *connect_go.Request[v0alpha.ListPhoneBooksReq]) (*connect_go.Response[v0alpha.ListPhoneBooksRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.ListPhoneBooks is not implemented"))
}

func (UnimplementedP3ApiHandler) ListAgentTriggers(context.Context, *connect_go.Request[v0alpha.ListAgentTriggersReq]) (*connect_go.Response[v0alpha.ListAgentTriggersRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.ListAgentTriggers is not implemented"))
}

func (UnimplementedP3ApiHandler) GetCampaignCompletionStatus(context.Context, *connect_go.Request[v0alpha.GetCampaignCompletionStatusReq]) (*connect_go.Response[v0alpha.GetCampaignCompletionStatusRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.GetCampaignCompletionStatus is not implemented"))
}

func (UnimplementedP3ApiHandler) GetLostPeerInfo(context.Context, *connect_go.Request[v0alpha.GetLostPeerInfoReq]) (*connect_go.Response[v0alpha.GetLostPeerInfoRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.GetLostPeerInfo is not implemented"))
}

func (UnimplementedP3ApiHandler) GetDispositionKeys(context.Context, *connect_go.Request[v0alpha.GetDispositionKeysReq]) (*connect_go.Response[v0alpha.GetDispositionKeysRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.GetDispositionKeys is not implemented"))
}

func (UnimplementedP3ApiHandler) GetReadyAgents(context.Context, *connect_go.Request[v0alpha.GetReadyAgentsReq]) (*connect_go.Response[v0alpha.GetReadyAgentsRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.GetReadyAgents is not implemented"))
}

func (UnimplementedP3ApiHandler) ListAgentQueueAndOnHoldCallData(context.Context, *connect_go.Request[v0alpha.ListAgentQueueAndOnHoldCallDataReq]) (*connect_go.Response[v0alpha.ListAgentQueueAndOnHoldCallDataRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.ListAgentQueueAndOnHoldCallData is not implemented"))
}

func (UnimplementedP3ApiHandler) SaveAgentCallResponses(context.Context, *connect_go.Request[v0alpha.SaveAgentCallResponsesReq]) (*connect_go.Response[v0alpha.SaveAgentCallResponsesRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.SaveAgentCallResponses is not implemented"))
}

func (UnimplementedP3ApiHandler) ListAgentTransferOptions(context.Context, *connect_go.Request[v0alpha.ListAgentTransferOptionsReq]) (*connect_go.Response[v0alpha.ListAgentTransferOptionsRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.ListAgentTransferOptions is not implemented"))
}

func (UnimplementedP3ApiHandler) UpdateAgentCallResponseValue(context.Context, *connect_go.Request[v0alpha.UpdateAgentCallResponseValueReq]) (*connect_go.Response[v0alpha.UpdateAgentCallResponseValueRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.UpdateAgentCallResponseValue is not implemented"))
}

func (UnimplementedP3ApiHandler) GetIntercomPeerInfo(context.Context, *connect_go.Request[v0alpha.GetIntercomPeerInfoReq]) (*connect_go.Response[v0alpha.GetIntercomPeerInfoRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.GetIntercomPeerInfo is not implemented"))
}

func (UnimplementedP3ApiHandler) ListOrgResponseEvaluators(context.Context, *connect_go.Request[v0alpha.ListOrgResponseEvaluatorsReq]) (*connect_go.Response[v0alpha.ListOrgResponseEvaluatorsRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.ListOrgResponseEvaluators is not implemented"))
}

func (UnimplementedP3ApiHandler) GetQueueConfigurationOptionsArray(context.Context, *connect_go.Request[v0alpha.GetQueueConfigurationOptionsArrayReq]) (*connect_go.Response[v0alpha.GetQueueConfigurationOptionsArrayRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.GetQueueConfigurationOptionsArray is not implemented"))
}

func (UnimplementedP3ApiHandler) GetConditionalDNCLRules(context.Context, *connect_go.Request[v0alpha.GetConditionalDNCLRulesReq]) (*connect_go.Response[v0alpha.GetConditionalDNCLRulesRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.GetConditionalDNCLRules is not implemented"))
}

func (UnimplementedP3ApiHandler) ManualDialStart(context.Context, *connect_go.Request[v0alpha.ManualDialStartReq]) (*connect_go.Response[v0alpha.ManualDialStartRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.ManualDialStart is not implemented"))
}

func (UnimplementedP3ApiHandler) ListExtendedCallHistory(context.Context, *connect_go.Request[v0alpha.ListExtendedCallHistoryReq], *connect_go.ServerStream[v0alpha.ListExtendedCallHistoryRes]) error {
	return connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.ListExtendedCallHistory is not implemented"))
}

func (UnimplementedP3ApiHandler) ListWhiteListPhoneBooks(context.Context, *connect_go.Request[v0alpha.ListWhiteListPhoneBooksReq]) (*connect_go.Response[v0alpha.ListWhiteListPhoneBooksRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.ListWhiteListPhoneBooks is not implemented"))
}

func (UnimplementedP3ApiHandler) DownloadCallRecording(context.Context, *connect_go.Request[v0alpha.DownloadCallRecordingReq]) (*connect_go.Response[v0alpha.DownloadRecordingRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.DownloadCallRecording is not implemented"))
}

func (UnimplementedP3ApiHandler) DownloadCallRecordings(context.Context, *connect_go.Request[v0alpha.DownloadCallRecordingsReq]) (*connect_go.Response[v0alpha.DownloadRecordingRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.DownloadCallRecordings is not implemented"))
}

func (UnimplementedP3ApiHandler) PlacePreviewDialCall(context.Context, *connect_go.Request[v0alpha.PlacePreviewDialCallReq]) (*connect_go.Response[v0alpha.PlacePreviewDialCallRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.PlacePreviewDialCall is not implemented"))
}

func (UnimplementedP3ApiHandler) CancelPreviewDialCall(context.Context, *connect_go.Request[v0alpha.CancelPreviewDialCallReq]) (*connect_go.Response[v0alpha.CancelPreviewDialCallRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.CancelPreviewDialCall is not implemented"))
}

func (UnimplementedP3ApiHandler) UpdateTaskStatus(context.Context, *connect_go.Request[v0alpha.UpdateTaskStatusReq]) (*connect_go.Response[v0alpha.Nil], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.UpdateTaskStatus is not implemented"))
}

func (UnimplementedP3ApiHandler) ListCallbackRoutingAgents(context.Context, *connect_go.Request[v0alpha.ListCallbackRoutingAgentsReq]) (*connect_go.Response[v0alpha.ListCallbackRoutingAgentsRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.ListCallbackRoutingAgents is not implemented"))
}

func (UnimplementedP3ApiHandler) ListCallbackRoutingSkills(context.Context, *connect_go.Request[v0alpha.ListCallbackRoutingSkillsReq]) (*connect_go.Response[v0alpha.ListCallbackRoutingSkillsRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.ListCallbackRoutingSkills is not implemented"))
}

func (UnimplementedP3ApiHandler) HandleRecordingDelay(context.Context, *connect_go.Request[v0alpha.HandleRecordingDelayReq]) (*connect_go.Response[v0alpha.HandleRecordingDelayRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.HandleRecordingDelay is not implemented"))
}

func (UnimplementedP3ApiHandler) UpdateAgentAssignedHuntGroup(context.Context, *connect_go.Request[v0alpha.UpdateAgentAssignedHuntGroupReq]) (*connect_go.Response[v0alpha.UpdateAgentAssignedHuntGroupRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.UpdateAgentAssignedHuntGroup is not implemented"))
}

func (UnimplementedP3ApiHandler) GetCallData(context.Context, *connect_go.Request[v0alpha.GetCallDataReq]) (*connect_go.Response[v0alpha.GetCallDataRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.GetCallData is not implemented"))
}

func (UnimplementedP3ApiHandler) ListHuntGroups(context.Context, *connect_go.Request[v0alpha.ListHuntGroupsReq]) (*connect_go.Response[v0alpha.ListHuntGroupsRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.ListHuntGroups is not implemented"))
}

func (UnimplementedP3ApiHandler) ListReassignmentHuntGroups(context.Context, *connect_go.Request[v0alpha.ListReassignmentHuntGroupsReq]) (*connect_go.Response[v0alpha.ListReassignmentHuntGroupsRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.ListReassignmentHuntGroups is not implemented"))
}

func (UnimplementedP3ApiHandler) GetOrgAgentSettings(context.Context, *connect_go.Request[v0alpha.GetOrgAgentSettingsReq]) (*connect_go.Response[v0alpha.GetOrgAgentSettingsRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.GetOrgAgentSettings is not implemented"))
}

func (UnimplementedP3ApiHandler) ListCallerIdsFromBucket(context.Context, *connect_go.Request[v0alpha.ListCallerIdsFromBucketReq]) (*connect_go.Response[v0alpha.ListCallerIdsFromBucketRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.ListCallerIdsFromBucket is not implemented"))
}

func (UnimplementedP3ApiHandler) SaveLastCallResponse(context.Context, *connect_go.Request[v0alpha.SaveLastCallResponseReq]) (*connect_go.Response[v0alpha.SaveLastCallResponseRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.SaveLastCallResponse is not implemented"))
}

func (UnimplementedP3ApiHandler) ListAgentCallLogsByCallSidAndType(context.Context, *connect_go.Request[v0alpha.ListAgentCallLogsByCallSidAndTypeReq]) (*connect_go.Response[v0alpha.ListAgentCallLogsByCallSidAndTypeRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.ListAgentCallLogsByCallSidAndType is not implemented"))
}

func (UnimplementedP3ApiHandler) ListAgentCallResponseValues(context.Context, *connect_go.Request[v0alpha.ListAgentCallResponseValuesReq]) (*connect_go.Response[v0alpha.ListAgentCallResponseValuesRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.ListAgentCallResponseValues is not implemented"))
}

func (UnimplementedP3ApiHandler) GetContactSchemaByContactGroup(context.Context, *connect_go.Request[v0alpha.GetContactSchemaByContactGroupReq]) (*connect_go.Response[v0alpha.ContactSchema], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.GetContactSchemaByContactGroup is not implemented"))
}

func (UnimplementedP3ApiHandler) ListContactGroupDetailsByClientSid(context.Context, *connect_go.Request[v0alpha.ListContactGroupDetailsByClientSidReq]) (*connect_go.Response[v0alpha.ListContactGroupDetailsByClientSidRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.ListContactGroupDetailsByClientSid is not implemented"))
}

func (UnimplementedP3ApiHandler) GetContactGroupDetails(context.Context, *connect_go.Request[v0alpha.GetContactGroupReq]) (*connect_go.Response[v0alpha.ContactGroup], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.GetContactGroupDetails is not implemented"))
}

func (UnimplementedP3ApiHandler) GetContactGroupSize(context.Context, *connect_go.Request[v0alpha.GetContactGroupReq]) (*connect_go.Response[v0alpha.GetContactGroupSizeRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.GetContactGroupSize is not implemented"))
}

func (UnimplementedP3ApiHandler) CreateContactFieldDescription(context.Context, *connect_go.Request[v0alpha.CreateContactFieldDescriptionReq]) (*connect_go.Response[v0alpha.CreateContactFieldDescriptionRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.CreateContactFieldDescription is not implemented"))
}

func (UnimplementedP3ApiHandler) DeleteContactFieldDescription(context.Context, *connect_go.Request[v0alpha.DeleteContactFieldDescriptionReq]) (*connect_go.Response[v0alpha.DeleteContactFieldDescriptionRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.DeleteContactFieldDescription is not implemented"))
}

func (UnimplementedP3ApiHandler) ListContactFieldDescriptions(context.Context, *connect_go.Request[v0alpha.ListContactFieldDescriptionsReq]) (*connect_go.Response[v0alpha.ListContactFieldDescriptionsRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.ListContactFieldDescriptions is not implemented"))
}

func (UnimplementedP3ApiHandler) ListContactFieldDescriptionsByCGSid(context.Context, *connect_go.Request[v0alpha.ListContactFieldDescriptionsByCGSidReq]) (*connect_go.Response[v0alpha.ListContactFieldDescriptionsByCGSidRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.ListContactFieldDescriptionsByCGSid is not implemented"))
}

func (UnimplementedP3ApiHandler) ListContactImportTemplates(context.Context, *connect_go.Request[v0alpha.ListContactImportTemplatesReq]) (*connect_go.Response[v0alpha.ListContactImportTemplatesRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.ListContactImportTemplates is not implemented"))
}

func (UnimplementedP3ApiHandler) UpdatePreviewRecordToFinished(context.Context, *connect_go.Request[v0alpha.UpdatePreviewRecordToFinishedReq]) (*connect_go.Response[v0alpha.UpdatePreviewRecordToFinishedRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.UpdatePreviewRecordToFinished is not implemented"))
}

func (UnimplementedP3ApiHandler) UpdateAgentHuntGroup(context.Context, *connect_go.Request[v0alpha.UpdateAgentHuntGroupReq]) (*connect_go.Response[v0alpha.UpdateAgentHuntGroupRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.UpdateAgentHuntGroup is not implemented"))
}

func (UnimplementedP3ApiHandler) MultiAgentHuntGroupAssignment(context.Context, *connect_go.Request[v0alpha.MultiAgentHuntGroupAssignmentReq]) (*connect_go.Response[v0alpha.MultiAgentHuntGroupAssignmentRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.MultiAgentHuntGroupAssignment is not implemented"))
}

func (UnimplementedP3ApiHandler) GetAgentProfile(context.Context, *connect_go.Request[v0alpha.GetAgentProfileReq]) (*connect_go.Response[v0alpha.AgentProfile], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.GetAgentProfile is not implemented"))
}

func (UnimplementedP3ApiHandler) RecalculateBilling(context.Context, *connect_go.Request[v0alpha.RecalculateBillingReq]) (*connect_go.Response[v0alpha.RecalculateBillingRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.RecalculateBilling is not implemented"))
}

func (UnimplementedP3ApiHandler) ListOutboundBroadcastTemplateData(context.Context, *connect_go.Request[v0alpha.ListOutboundBroadcastTemplateDataReq]) (*connect_go.Response[v0alpha.ListOutboundBroadcastTemplateDataRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.ListOutboundBroadcastTemplateData is not implemented"))
}

func (UnimplementedP3ApiHandler) MultiAgentSkillAssignment(context.Context, *connect_go.Request[v0alpha.MultiAgentSkillAssignmentReq]) (*connect_go.Response[v0alpha.MultiAgentSkillAssignmentRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.MultiAgentSkillAssignment is not implemented"))
}

func (UnimplementedP3ApiHandler) MultiAgentSkillUnassignment(context.Context, *connect_go.Request[v0alpha.MultiAgentSkillUnassignmentReq]) (*connect_go.Response[v0alpha.MultiAgentSkillUnassignmentRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.MultiAgentSkillUnassignment is not implemented"))
}

func (UnimplementedP3ApiHandler) ListMAMAgentHuntGroupsByClientSid(context.Context, *connect_go.Request[v0alpha.ListMAMAgentHuntGroupsByClientSidReq]) (*connect_go.Response[v0alpha.ListMAMAgentHuntGroupsByClientSidRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.ListMAMAgentHuntGroupsByClientSid is not implemented"))
}

func (UnimplementedP3ApiHandler) ListTtsVoices(context.Context, *connect_go.Request[v0alpha.ListTtsVoicesReq]) (*connect_go.Response[v0alpha.ListTtsVoicesRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.ListTtsVoices is not implemented"))
}

func (UnimplementedP3ApiHandler) CreateTtsVoice(context.Context, *connect_go.Request[v0alpha.CreateTtsVoiceReq]) (*connect_go.Response[v0alpha.CreateTtsVoiceRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.CreateTtsVoice is not implemented"))
}

func (UnimplementedP3ApiHandler) DeleteTtsVoice(context.Context, *connect_go.Request[v0alpha.DeleteTtsVoiceReq]) (*connect_go.Response[v0alpha.DeleteTtsVoiceRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.DeleteTtsVoice is not implemented"))
}

func (UnimplementedP3ApiHandler) ListCustomDataKeys(context.Context, *connect_go.Request[v0alpha.ListCustomDataKeysReq]) (*connect_go.Response[v0alpha.ListCustomDataKeysRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.ListCustomDataKeys is not implemented"))
}

func (UnimplementedP3ApiHandler) CreateCustomDataKey(context.Context, *connect_go.Request[v0alpha.CreateCustomDataKeyReq]) (*connect_go.Response[v0alpha.CreateCustomDataKeyRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.CreateCustomDataKey is not implemented"))
}

func (UnimplementedP3ApiHandler) DeleteCustomDataKey(context.Context, *connect_go.Request[v0alpha.DeleteCustomDataKeyReq]) (*connect_go.Response[v0alpha.DeleteCustomDataKeyRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.DeleteCustomDataKey is not implemented"))
}

func (UnimplementedP3ApiHandler) UpdateCustomDataKey(context.Context, *connect_go.Request[v0alpha.UpdateCustomDataKeyReq]) (*connect_go.Response[v0alpha.UpdateCustomDataKeyRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.UpdateCustomDataKey is not implemented"))
}

func (UnimplementedP3ApiHandler) GetActivityLogHistory(context.Context, *connect_go.Request[v0alpha.GetActivityLogHistoryReq], *connect_go.ServerStream[v0alpha.GetActivityLogHistoryRes]) error {
	return connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.GetActivityLogHistory is not implemented"))
}

func (UnimplementedP3ApiHandler) ListTableTemplateProperties(context.Context, *connect_go.Request[v0alpha.ListTableTemplatePropertiesReq]) (*connect_go.Response[v0alpha.ListTableTemplatePropertiesRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.ListTableTemplateProperties is not implemented"))
}

func (UnimplementedP3ApiHandler) ListAgentSkillsFilters(context.Context, *connect_go.Request[v0alpha.ListAgentSkillsFiltersReq]) (*connect_go.Response[v0alpha.ListAgentSkillsFiltersRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.ListAgentSkillsFilters is not implemented"))
}

func (UnimplementedP3ApiHandler) ListScheduleRules(context.Context, *connect_go.Request[v0alpha.ListScheduleRulesRequest]) (*connect_go.Response[v0alpha.ListScheduleRulesResult], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.ListScheduleRules is not implemented"))
}

func (UnimplementedP3ApiHandler) ListCustomReportFilters(context.Context, *connect_go.Request[v0alpha.ListCustomReportFiltersReq]) (*connect_go.Response[v0alpha.ListCustomReportFiltersRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.ListCustomReportFilters is not implemented"))
}

func (UnimplementedP3ApiHandler) ListSmsNumbers(context.Context, *connect_go.Request[v0alpha.ListSmsNumbersReq]) (*connect_go.Response[v0alpha.ListSmsNumbersRes], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v0alpha.P3Api.ListSmsNumbers is not implemented"))
}
