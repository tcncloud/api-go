// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: api/v0alpha/dashboards.proto

package v0alpha

import (
	_ "github.com/tcncloud/api-go/annotations"
	perms "github.com/tcncloud/api-go/annotations/perms"
	commons "github.com/tcncloud/api-go/api/commons"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// simple time selection
type TimeSpan_Interval int32

const (
	TimeSpan_TODAY              TimeSpan_Interval = 0
	TimeSpan_YESTERDAY          TimeSpan_Interval = 1
	TimeSpan_LAST_30_DAYS       TimeSpan_Interval = 2
	TimeSpan_MONTH_TO_DATE      TimeSpan_Interval = 3
	TimeSpan_LAST_2_WEEKS       TimeSpan_Interval = 4
	TimeSpan_THIS_WEEK          TimeSpan_Interval = 5
	TimeSpan_THIS_MONTH         TimeSpan_Interval = 6
	TimeSpan_THIS_DAY_LAST_WEEK TimeSpan_Interval = 7
	TimeSpan_PREVIOUS_MONTH     TimeSpan_Interval = 8
)

// Enum value maps for TimeSpan_Interval.
var (
	TimeSpan_Interval_name = map[int32]string{
		0: "TODAY",
		1: "YESTERDAY",
		2: "LAST_30_DAYS",
		3: "MONTH_TO_DATE",
		4: "LAST_2_WEEKS",
		5: "THIS_WEEK",
		6: "THIS_MONTH",
		7: "THIS_DAY_LAST_WEEK",
		8: "PREVIOUS_MONTH",
	}
	TimeSpan_Interval_value = map[string]int32{
		"TODAY":              0,
		"YESTERDAY":          1,
		"LAST_30_DAYS":       2,
		"MONTH_TO_DATE":      3,
		"LAST_2_WEEKS":       4,
		"THIS_WEEK":          5,
		"THIS_MONTH":         6,
		"THIS_DAY_LAST_WEEK": 7,
		"PREVIOUS_MONTH":     8,
	}
)

func (x TimeSpan_Interval) Enum() *TimeSpan_Interval {
	p := new(TimeSpan_Interval)
	*p = x
	return p
}

func (x TimeSpan_Interval) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TimeSpan_Interval) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v0alpha_dashboards_proto_enumTypes[0].Descriptor()
}

func (TimeSpan_Interval) Type() protoreflect.EnumType {
	return &file_api_v0alpha_dashboards_proto_enumTypes[0]
}

func (x TimeSpan_Interval) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TimeSpan_Interval.Descriptor instead.
func (TimeSpan_Interval) EnumDescriptor() ([]byte, []int) {
	return file_api_v0alpha_dashboards_proto_rawDescGZIP(), []int{26, 0}
}

// PublishDashboardRequest used in PublishDashboard rpc
type PublishDashboardRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// resource id of the dashboard to be published
	ResourceId string `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	// destination resource id can be emtpy to create
	// a new resource or can be used to update an existing
	DestinationResourceId string `protobuf:"bytes,2,opt,name=destination_resource_id,json=destinationResourceId,proto3" json:"destination_resource_id,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *PublishDashboardRequest) Reset() {
	*x = PublishDashboardRequest{}
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishDashboardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishDashboardRequest) ProtoMessage() {}

func (x *PublishDashboardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishDashboardRequest.ProtoReflect.Descriptor instead.
func (*PublishDashboardRequest) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_dashboards_proto_rawDescGZIP(), []int{0}
}

func (x *PublishDashboardRequest) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *PublishDashboardRequest) GetDestinationResourceId() string {
	if x != nil {
		return x.DestinationResourceId
	}
	return ""
}

// PublishDashboardResponse used in PublishDashboard rpc
type PublishDashboardResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// resource id of the published dashboard
	ResourceId    string `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublishDashboardResponse) Reset() {
	*x = PublishDashboardResponse{}
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishDashboardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishDashboardResponse) ProtoMessage() {}

func (x *PublishDashboardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishDashboardResponse.ProtoReflect.Descriptor instead.
func (*PublishDashboardResponse) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_dashboards_proto_rawDescGZIP(), []int{1}
}

func (x *PublishDashboardResponse) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

// ListDashboardsRequest --  filled in from auth. May include filters in future
type ListDashboardsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDashboardsRequest) Reset() {
	*x = ListDashboardsRequest{}
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDashboardsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDashboardsRequest) ProtoMessage() {}

func (x *ListDashboardsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDashboardsRequest.ProtoReflect.Descriptor instead.
func (*ListDashboardsRequest) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_dashboards_proto_rawDescGZIP(), []int{2}
}

// ListDashboardsRes contains an array of dashboard summaries
type ListDashboardsResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	DashboardSummaries []*DashboardSummary    `protobuf:"bytes,1,rep,name=dashboard_summaries,json=dashboardSummaries,proto3" json:"dashboard_summaries,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ListDashboardsResponse) Reset() {
	*x = ListDashboardsResponse{}
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDashboardsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDashboardsResponse) ProtoMessage() {}

func (x *ListDashboardsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDashboardsResponse.ProtoReflect.Descriptor instead.
func (*ListDashboardsResponse) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_dashboards_proto_rawDescGZIP(), []int{3}
}

func (x *ListDashboardsResponse) GetDashboardSummaries() []*DashboardSummary {
	if x != nil {
		return x.DashboardSummaries
	}
	return nil
}

// Dashboard summary
type DashboardSummary struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// unique ID for this dashboard
	DashboardId string `protobuf:"bytes,1,opt,name=dashboard_id,json=dashboardId,proto3" json:"dashboard_id,omitempty"`
	// required dashboard title
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// optional dashboard description
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// number of associated panels
	PanelCount int32 `protobuf:"varint,4,opt,name=panel_count,json=panelCount,proto3" json:"panel_count,omitempty"`
	// resource id of the dashboard
	ResourceId string `protobuf:"bytes,5,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	// standard dashboard flag
	StandardDashboard bool `protobuf:"varint,6,opt,name=standard_dashboard,json=standardDashboard,proto3" json:"standard_dashboard,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *DashboardSummary) Reset() {
	*x = DashboardSummary{}
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DashboardSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DashboardSummary) ProtoMessage() {}

func (x *DashboardSummary) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DashboardSummary.ProtoReflect.Descriptor instead.
func (*DashboardSummary) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_dashboards_proto_rawDescGZIP(), []int{4}
}

func (x *DashboardSummary) GetDashboardId() string {
	if x != nil {
		return x.DashboardId
	}
	return ""
}

func (x *DashboardSummary) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *DashboardSummary) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DashboardSummary) GetPanelCount() int32 {
	if x != nil {
		return x.PanelCount
	}
	return 0
}

func (x *DashboardSummary) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *DashboardSummary) GetStandardDashboard() bool {
	if x != nil {
		return x.StandardDashboard
	}
	return false
}

// GetDefaultDashboardRequest used in GetDefaultDashboard rpc
type GetDefaultDashboardRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDefaultDashboardRequest) Reset() {
	*x = GetDefaultDashboardRequest{}
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDefaultDashboardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDefaultDashboardRequest) ProtoMessage() {}

func (x *GetDefaultDashboardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDefaultDashboardRequest.ProtoReflect.Descriptor instead.
func (*GetDefaultDashboardRequest) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_dashboards_proto_rawDescGZIP(), []int{5}
}

// SetDefaultDashboardRequest used in SetDefaultDashboard rpc
type SetDefaultDashboardRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// unique ID of dashboard to be set as default
	DashboardId string `protobuf:"bytes,1,opt,name=dashboard_id,json=dashboardId,proto3" json:"dashboard_id,omitempty"`
	// resource id of the dashboard
	ResourceId    string `protobuf:"bytes,2,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetDefaultDashboardRequest) Reset() {
	*x = SetDefaultDashboardRequest{}
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetDefaultDashboardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDefaultDashboardRequest) ProtoMessage() {}

func (x *SetDefaultDashboardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDefaultDashboardRequest.ProtoReflect.Descriptor instead.
func (*SetDefaultDashboardRequest) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_dashboards_proto_rawDescGZIP(), []int{6}
}

func (x *SetDefaultDashboardRequest) GetDashboardId() string {
	if x != nil {
		return x.DashboardId
	}
	return ""
}

func (x *SetDefaultDashboardRequest) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

// ListProductTypesRequest used in ListProductTypes rpc
type ListProductTypesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListProductTypesRequest) Reset() {
	*x = ListProductTypesRequest{}
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListProductTypesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProductTypesRequest) ProtoMessage() {}

func (x *ListProductTypesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProductTypesRequest.ProtoReflect.Descriptor instead.
func (*ListProductTypesRequest) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_dashboards_proto_rawDescGZIP(), []int{7}
}

type ListProductTypesResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Types         []*ProductType         `protobuf:"bytes,1,rep,name=types,proto3" json:"types,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListProductTypesResult) Reset() {
	*x = ListProductTypesResult{}
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListProductTypesResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProductTypesResult) ProtoMessage() {}

func (x *ListProductTypesResult) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProductTypesResult.ProtoReflect.Descriptor instead.
func (*ListProductTypesResult) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_dashboards_proto_rawDescGZIP(), []int{8}
}

func (x *ListProductTypesResult) GetTypes() []*ProductType {
	if x != nil {
		return x.Types
	}
	return nil
}

type ProductType struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProductType) Reset() {
	*x = ProductType{}
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProductType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductType) ProtoMessage() {}

func (x *ProductType) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductType.ProtoReflect.Descriptor instead.
func (*ProductType) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_dashboards_proto_rawDescGZIP(), []int{9}
}

func (x *ProductType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProductType) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// DeleteDashboardRequest used in DeleteDashboard rpc
type DeleteDashboardRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// unique ID of dashboard to be deleted
	DashboardId string `protobuf:"bytes,1,opt,name=dashboard_id,json=dashboardId,proto3" json:"dashboard_id,omitempty"`
	// resource id of the dashboard
	ResourceId    string `protobuf:"bytes,2,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteDashboardRequest) Reset() {
	*x = DeleteDashboardRequest{}
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDashboardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDashboardRequest) ProtoMessage() {}

func (x *DeleteDashboardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDashboardRequest.ProtoReflect.Descriptor instead.
func (*DeleteDashboardRequest) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_dashboards_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteDashboardRequest) GetDashboardId() string {
	if x != nil {
		return x.DashboardId
	}
	return ""
}

func (x *DeleteDashboardRequest) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

// GetDashboardRequest used in GetDashboard rpc
type GetDashboardRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// unique ID of dashboard to retrieve
	DashboardId string `protobuf:"bytes,1,opt,name=dashboard_id,json=dashboardId,proto3" json:"dashboard_id,omitempty"`
	// resource id of the dashboard
	ResourceId string `protobuf:"bytes,2,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	// application retrieving the dashboard
	Application   perms.Application `protobuf:"varint,3,opt,name=application,proto3,enum=annotations.perms.Application" json:"application,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDashboardRequest) Reset() {
	*x = GetDashboardRequest{}
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDashboardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDashboardRequest) ProtoMessage() {}

func (x *GetDashboardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDashboardRequest.ProtoReflect.Descriptor instead.
func (*GetDashboardRequest) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_dashboards_proto_rawDescGZIP(), []int{11}
}

func (x *GetDashboardRequest) GetDashboardId() string {
	if x != nil {
		return x.DashboardId
	}
	return ""
}

func (x *GetDashboardRequest) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *GetDashboardRequest) GetApplication() perms.Application {
	if x != nil {
		return x.Application
	}
	return perms.Application(0)
}

// CreateDashboardRequest used in the CreateDashboard rpc
type CreateDashboardRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// required dashboard title
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// optional dashboard description
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// layout of associated dashboard panels
	Layout *DashboardLayout `protobuf:"bytes,3,opt,name=layout,proto3" json:"layout,omitempty"`
	// the dashboards viewing params
	View *DashboardView `protobuf:"bytes,4,opt,name=view,proto3" json:"view,omitempty"`
	// the type of dashboard, with type specific components
	Type          *DashboardType `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateDashboardRequest) Reset() {
	*x = CreateDashboardRequest{}
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDashboardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDashboardRequest) ProtoMessage() {}

func (x *CreateDashboardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDashboardRequest.ProtoReflect.Descriptor instead.
func (*CreateDashboardRequest) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_dashboards_proto_rawDescGZIP(), []int{12}
}

func (x *CreateDashboardRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateDashboardRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateDashboardRequest) GetLayout() *DashboardLayout {
	if x != nil {
		return x.Layout
	}
	return nil
}

func (x *CreateDashboardRequest) GetView() *DashboardView {
	if x != nil {
		return x.View
	}
	return nil
}

func (x *CreateDashboardRequest) GetType() *DashboardType {
	if x != nil {
		return x.Type
	}
	return nil
}

// CreateDashboardResponse used in the CreateDashboard rpc
type CreateDashboardResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// unique ID of the dashboard created
	DashboardId string `protobuf:"bytes,1,opt,name=dashboard_id,json=dashboardId,proto3" json:"dashboard_id,omitempty"`
	// resource id of the dashboard created
	ResourceId    string `protobuf:"bytes,2,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateDashboardResponse) Reset() {
	*x = CreateDashboardResponse{}
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDashboardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDashboardResponse) ProtoMessage() {}

func (x *CreateDashboardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDashboardResponse.ProtoReflect.Descriptor instead.
func (*CreateDashboardResponse) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_dashboards_proto_rawDescGZIP(), []int{13}
}

func (x *CreateDashboardResponse) GetDashboardId() string {
	if x != nil {
		return x.DashboardId
	}
	return ""
}

func (x *CreateDashboardResponse) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

// DashboardLayout contains location information for a dashboards panels
type DashboardLayout struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// location information for each panel
	Panels        []*DashboardPanel `protobuf:"bytes,1,rep,name=panels,proto3" json:"panels,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DashboardLayout) Reset() {
	*x = DashboardLayout{}
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DashboardLayout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DashboardLayout) ProtoMessage() {}

func (x *DashboardLayout) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DashboardLayout.ProtoReflect.Descriptor instead.
func (*DashboardLayout) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_dashboards_proto_rawDescGZIP(), []int{14}
}

func (x *DashboardLayout) GetPanels() []*DashboardPanel {
	if x != nil {
		return x.Panels
	}
	return nil
}

// location fields subject to change
type DashboardPanel struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// panel_source determines the fields needed to
	// retrieve the panel data and is used to determine
	// who to pull the data from
	PanelSource *PanelSource `protobuf:"bytes,1,opt,name=panel_source,json=panelSource,proto3" json:"panel_source,omitempty"`
	// height of panel
	RowLength int64 `protobuf:"varint,2,opt,name=row_length,json=rowLength,proto3" json:"row_length,omitempty"`
	// length of panel
	ColumnLength int64 `protobuf:"varint,3,opt,name=column_length,json=columnLength,proto3" json:"column_length,omitempty"`
	// absolute x position of panel
	RowStart int64 `protobuf:"varint,4,opt,name=row_start,json=rowStart,proto3" json:"row_start,omitempty"`
	// absoulute y position of panel
	ColumnStart   int64 `protobuf:"varint,5,opt,name=column_start,json=columnStart,proto3" json:"column_start,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DashboardPanel) Reset() {
	*x = DashboardPanel{}
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DashboardPanel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DashboardPanel) ProtoMessage() {}

func (x *DashboardPanel) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DashboardPanel.ProtoReflect.Descriptor instead.
func (*DashboardPanel) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_dashboards_proto_rawDescGZIP(), []int{15}
}

func (x *DashboardPanel) GetPanelSource() *PanelSource {
	if x != nil {
		return x.PanelSource
	}
	return nil
}

func (x *DashboardPanel) GetRowLength() int64 {
	if x != nil {
		return x.RowLength
	}
	return 0
}

func (x *DashboardPanel) GetColumnLength() int64 {
	if x != nil {
		return x.ColumnLength
	}
	return 0
}

func (x *DashboardPanel) GetRowStart() int64 {
	if x != nil {
		return x.RowStart
	}
	return 0
}

func (x *DashboardPanel) GetColumnStart() int64 {
	if x != nil {
		return x.ColumnStart
	}
	return 0
}

// PanelSource is used per APP and each message in the oneOf is used to determine what APP to call
type PanelSource struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// added for each new panel type used by multiple teams
	//
	// Types that are valid to be assigned to PanelType:
	//
	//	*PanelSource_InsightId
	//	*PanelSource_LegacyInsightId
	//	*PanelSource_InsightResourceId
	PanelType isPanelSource_PanelType `protobuf_oneof:"panel_type"`
	// Used for selecting which output configuration to display in the dashboard
	OutputConfigurationResourceId string `protobuf:"bytes,4,opt,name=output_configuration_resource_id,json=outputConfigurationResourceId,proto3" json:"output_configuration_resource_id,omitempty"`
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *PanelSource) Reset() {
	*x = PanelSource{}
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PanelSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PanelSource) ProtoMessage() {}

func (x *PanelSource) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PanelSource.ProtoReflect.Descriptor instead.
func (*PanelSource) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_dashboards_proto_rawDescGZIP(), []int{16}
}

func (x *PanelSource) GetPanelType() isPanelSource_PanelType {
	if x != nil {
		return x.PanelType
	}
	return nil
}

// Deprecated: Marked as deprecated in api/v0alpha/dashboards.proto.
func (x *PanelSource) GetInsightId() string {
	if x != nil {
		if x, ok := x.PanelType.(*PanelSource_InsightId); ok {
			return x.InsightId
		}
	}
	return ""
}

func (x *PanelSource) GetLegacyInsightId() string {
	if x != nil {
		if x, ok := x.PanelType.(*PanelSource_LegacyInsightId); ok {
			return x.LegacyInsightId
		}
	}
	return ""
}

func (x *PanelSource) GetInsightResourceId() string {
	if x != nil {
		if x, ok := x.PanelType.(*PanelSource_InsightResourceId); ok {
			return x.InsightResourceId
		}
	}
	return ""
}

func (x *PanelSource) GetOutputConfigurationResourceId() string {
	if x != nil {
		return x.OutputConfigurationResourceId
	}
	return ""
}

type isPanelSource_PanelType interface {
	isPanelSource_PanelType()
}

type PanelSource_InsightId struct {
	// Used for new BI insights in operator
	//
	// Deprecated: Marked as deprecated in api/v0alpha/dashboards.proto.
	InsightId string `protobuf:"bytes,1,opt,name=insight_id,json=insightId,proto3,oneof"`
}

type PanelSource_LegacyInsightId struct {
	// Used for old insights in BI
	LegacyInsightId string `protobuf:"bytes,2,opt,name=legacy_insight_id,json=legacyInsightId,proto3,oneof"`
}

type PanelSource_InsightResourceId struct {
	// Used for BI Insights in operator
	InsightResourceId string `protobuf:"bytes,3,opt,name=insight_resource_id,json=insightResourceId,proto3,oneof"`
}

func (*PanelSource_InsightId) isPanelSource_PanelType() {}

func (*PanelSource_LegacyInsightId) isPanelSource_PanelType() {}

func (*PanelSource_InsightResourceId) isPanelSource_PanelType() {}

// Dashboard contains all fields for a dashboard
type Dashboard struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// unique ID for this dashboard
	DashboardId string `protobuf:"bytes,1,opt,name=dashboard_id,json=dashboardId,proto3" json:"dashboard_id,omitempty"`
	// required dashboard title
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// optional dashboard description
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// layout of associated panels
	Layout *DashboardLayout `protobuf:"bytes,4,opt,name=layout,proto3" json:"layout,omitempty"`
	// viewing params of dashboard
	View *DashboardView `protobuf:"bytes,5,opt,name=view,proto3" json:"view,omitempty"`
	// dashboard type, with type specific components
	Type *DashboardType `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	// resource id of the dashboard
	ResourceId string `protobuf:"bytes,7,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	// standard dashboard flag
	StandardDashboard bool `protobuf:"varint,8,opt,name=standard_dashboard,json=standardDashboard,proto3" json:"standard_dashboard,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Dashboard) Reset() {
	*x = Dashboard{}
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Dashboard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dashboard) ProtoMessage() {}

func (x *Dashboard) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dashboard.ProtoReflect.Descriptor instead.
func (*Dashboard) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_dashboards_proto_rawDescGZIP(), []int{17}
}

func (x *Dashboard) GetDashboardId() string {
	if x != nil {
		return x.DashboardId
	}
	return ""
}

func (x *Dashboard) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Dashboard) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Dashboard) GetLayout() *DashboardLayout {
	if x != nil {
		return x.Layout
	}
	return nil
}

func (x *Dashboard) GetView() *DashboardView {
	if x != nil {
		return x.View
	}
	return nil
}

func (x *Dashboard) GetType() *DashboardType {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *Dashboard) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *Dashboard) GetStandardDashboard() bool {
	if x != nil {
		return x.StandardDashboard
	}
	return false
}

// DashboardType, specifies what type of dashboard we are dealing with
type DashboardType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Type:
	//
	//	*DashboardType_Historic
	//	*DashboardType_RealTime
	Type          isDashboardType_Type `protobuf_oneof:"type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DashboardType) Reset() {
	*x = DashboardType{}
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DashboardType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DashboardType) ProtoMessage() {}

func (x *DashboardType) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DashboardType.ProtoReflect.Descriptor instead.
func (*DashboardType) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_dashboards_proto_rawDescGZIP(), []int{18}
}

func (x *DashboardType) GetType() isDashboardType_Type {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *DashboardType) GetHistoric() *HistoricConfig {
	if x != nil {
		if x, ok := x.Type.(*DashboardType_Historic); ok {
			return x.Historic
		}
	}
	return nil
}

func (x *DashboardType) GetRealTime() *RealTimeConfig {
	if x != nil {
		if x, ok := x.Type.(*DashboardType_RealTime); ok {
			return x.RealTime
		}
	}
	return nil
}

type isDashboardType_Type interface {
	isDashboardType_Type()
}

type DashboardType_Historic struct {
	Historic *HistoricConfig `protobuf:"bytes,6,opt,name=historic,proto3,oneof"`
}

type DashboardType_RealTime struct {
	RealTime *RealTimeConfig `protobuf:"bytes,7,opt,name=real_time,json=realTime,proto3,oneof"`
}

func (*DashboardType_Historic) isDashboardType_Type() {}

func (*DashboardType_RealTime) isDashboardType_Type() {}

// Historic Dashboard type
type HistoricConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// amount of history the dashboard consumes
	//
	// Types that are valid to be assigned to TimeSpan:
	//
	//	*HistoricConfig_TimeSpanSimple
	//	*HistoricConfig_TimeSpanRange
	TimeSpan isHistoricConfig_TimeSpan `protobuf_oneof:"time_span"`
	// The default time zone to view the historic data by
	TimeZone commons.TimeZone `protobuf:"varint,4,opt,name=time_zone,json=timeZone,proto3,enum=api.commons.TimeZone" json:"time_zone,omitempty"`
	// The time period quick filter
	TimePeriod    commons.TimePeriod `protobuf:"varint,5,opt,name=time_period,json=timePeriod,proto3,enum=api.commons.TimePeriod" json:"time_period,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HistoricConfig) Reset() {
	*x = HistoricConfig{}
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HistoricConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoricConfig) ProtoMessage() {}

func (x *HistoricConfig) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoricConfig.ProtoReflect.Descriptor instead.
func (*HistoricConfig) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_dashboards_proto_rawDescGZIP(), []int{19}
}

func (x *HistoricConfig) GetTimeSpan() isHistoricConfig_TimeSpan {
	if x != nil {
		return x.TimeSpan
	}
	return nil
}

func (x *HistoricConfig) GetTimeSpanSimple() TimeSpan_Interval {
	if x != nil {
		if x, ok := x.TimeSpan.(*HistoricConfig_TimeSpanSimple); ok {
			return x.TimeSpanSimple
		}
	}
	return TimeSpan_TODAY
}

func (x *HistoricConfig) GetTimeSpanRange() *TimeSpan_Range {
	if x != nil {
		if x, ok := x.TimeSpan.(*HistoricConfig_TimeSpanRange); ok {
			return x.TimeSpanRange
		}
	}
	return nil
}

func (x *HistoricConfig) GetTimeZone() commons.TimeZone {
	if x != nil {
		return x.TimeZone
	}
	return commons.TimeZone(0)
}

func (x *HistoricConfig) GetTimePeriod() commons.TimePeriod {
	if x != nil {
		return x.TimePeriod
	}
	return commons.TimePeriod(0)
}

type isHistoricConfig_TimeSpan interface {
	isHistoricConfig_TimeSpan()
}

type HistoricConfig_TimeSpanSimple struct {
	TimeSpanSimple TimeSpan_Interval `protobuf:"varint,1,opt,name=time_span_simple,json=timeSpanSimple,proto3,enum=api.v0alpha.TimeSpan_Interval,oneof"`
}

type HistoricConfig_TimeSpanRange struct {
	TimeSpanRange *TimeSpan_Range `protobuf:"bytes,3,opt,name=time_span_range,json=timeSpanRange,proto3,oneof"`
}

func (*HistoricConfig_TimeSpanSimple) isHistoricConfig_TimeSpan() {}

func (*HistoricConfig_TimeSpanRange) isHistoricConfig_TimeSpan() {}

// Real Time Dashboard type
// has no time_span, is only concerned with the present
type RealTimeConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RealTimeConfig) Reset() {
	*x = RealTimeConfig{}
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RealTimeConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RealTimeConfig) ProtoMessage() {}

func (x *RealTimeConfig) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RealTimeConfig.ProtoReflect.Descriptor instead.
func (*RealTimeConfig) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_dashboards_proto_rawDescGZIP(), []int{20}
}

// UpdateDashboard used for the update RPC
type UpdateDashboardRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// unique ID for this dashboard
	DashboardId string `protobuf:"bytes,1,opt,name=dashboard_id,json=dashboardId,proto3" json:"dashboard_id,omitempty"`
	// required dashboard title
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// optional dashboard description
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// layout of associated panels
	Layout *DashboardLayout `protobuf:"bytes,4,opt,name=layout,proto3" json:"layout,omitempty"`
	// viewing params of dashboard
	View *DashboardView `protobuf:"bytes,5,opt,name=view,proto3" json:"view,omitempty"`
	// dashboard type, with type specific components
	Type *DashboardType `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	// resource id of the dashboard
	ResourceId    string `protobuf:"bytes,7,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDashboardRequest) Reset() {
	*x = UpdateDashboardRequest{}
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDashboardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDashboardRequest) ProtoMessage() {}

func (x *UpdateDashboardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDashboardRequest.ProtoReflect.Descriptor instead.
func (*UpdateDashboardRequest) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_dashboards_proto_rawDescGZIP(), []int{21}
}

func (x *UpdateDashboardRequest) GetDashboardId() string {
	if x != nil {
		return x.DashboardId
	}
	return ""
}

func (x *UpdateDashboardRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateDashboardRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateDashboardRequest) GetLayout() *DashboardLayout {
	if x != nil {
		return x.Layout
	}
	return nil
}

func (x *UpdateDashboardRequest) GetView() *DashboardView {
	if x != nil {
		return x.View
	}
	return nil
}

func (x *UpdateDashboardRequest) GetType() *DashboardType {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *UpdateDashboardRequest) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

// UpdateDashboardTitleAndDescriptionResponse used for the update RPC
type UpdateDashboardTitleAndDescriptionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// unique ID for dashboard to update
	DashboardId string `protobuf:"bytes,1,opt,name=dashboard_id,json=dashboardId,proto3" json:"dashboard_id,omitempty"`
	// required new dashboard title
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// optional new dashboard description
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// resource id of the dashboard
	ResourceId    string `protobuf:"bytes,4,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDashboardTitleAndDescriptionRequest) Reset() {
	*x = UpdateDashboardTitleAndDescriptionRequest{}
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDashboardTitleAndDescriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDashboardTitleAndDescriptionRequest) ProtoMessage() {}

func (x *UpdateDashboardTitleAndDescriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDashboardTitleAndDescriptionRequest.ProtoReflect.Descriptor instead.
func (*UpdateDashboardTitleAndDescriptionRequest) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_dashboards_proto_rawDescGZIP(), []int{22}
}

func (x *UpdateDashboardTitleAndDescriptionRequest) GetDashboardId() string {
	if x != nil {
		return x.DashboardId
	}
	return ""
}

func (x *UpdateDashboardTitleAndDescriptionRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateDashboardTitleAndDescriptionRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateDashboardTitleAndDescriptionRequest) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

// UpdateDashboardTitleAndDescriptionRequest used for the update RPC
type UpdateDashboardLayoutRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// unique ID for dashboard to update
	DashboardId string `protobuf:"bytes,1,opt,name=dashboard_id,json=dashboardId,proto3" json:"dashboard_id,omitempty"`
	// layout of associated panels
	Layout *DashboardLayout `protobuf:"bytes,2,opt,name=layout,proto3" json:"layout,omitempty"`
	// resource id of the dashboard
	ResourceId    string `protobuf:"bytes,3,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDashboardLayoutRequest) Reset() {
	*x = UpdateDashboardLayoutRequest{}
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDashboardLayoutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDashboardLayoutRequest) ProtoMessage() {}

func (x *UpdateDashboardLayoutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDashboardLayoutRequest.ProtoReflect.Descriptor instead.
func (*UpdateDashboardLayoutRequest) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_dashboards_proto_rawDescGZIP(), []int{23}
}

func (x *UpdateDashboardLayoutRequest) GetDashboardId() string {
	if x != nil {
		return x.DashboardId
	}
	return ""
}

func (x *UpdateDashboardLayoutRequest) GetLayout() *DashboardLayout {
	if x != nil {
		return x.Layout
	}
	return nil
}

func (x *UpdateDashboardLayoutRequest) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

// UpdateDashboardViewRequest  used in the update RPC
type UpdateDashboardViewRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// unique ID of dashboard to update
	DashboardId string `protobuf:"bytes,1,opt,name=dashboard_id,json=dashboardId,proto3" json:"dashboard_id,omitempty"`
	// the dashboards viewing params
	View *DashboardView `protobuf:"bytes,2,opt,name=view,proto3" json:"view,omitempty"`
	// resource id of the dashboard
	ResourceId    string `protobuf:"bytes,3,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDashboardViewRequest) Reset() {
	*x = UpdateDashboardViewRequest{}
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDashboardViewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDashboardViewRequest) ProtoMessage() {}

func (x *UpdateDashboardViewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDashboardViewRequest.ProtoReflect.Descriptor instead.
func (*UpdateDashboardViewRequest) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_dashboards_proto_rawDescGZIP(), []int{24}
}

func (x *UpdateDashboardViewRequest) GetDashboardId() string {
	if x != nil {
		return x.DashboardId
	}
	return ""
}

func (x *UpdateDashboardViewRequest) GetView() *DashboardView {
	if x != nil {
		return x.View
	}
	return nil
}

func (x *UpdateDashboardViewRequest) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

// DashboardView contains the viewing parameters that make up the view of a dashboard
type DashboardView struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// list of clients whose data will be viewed
	OrgIds        []string `protobuf:"bytes,2,rep,name=org_ids,json=orgIds,proto3" json:"org_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DashboardView) Reset() {
	*x = DashboardView{}
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DashboardView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DashboardView) ProtoMessage() {}

func (x *DashboardView) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DashboardView.ProtoReflect.Descriptor instead.
func (*DashboardView) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_dashboards_proto_rawDescGZIP(), []int{25}
}

func (x *DashboardView) GetOrgIds() []string {
	if x != nil {
		return x.OrgIds
	}
	return nil
}

// TimeSpan is used to determine the time scope of data retrieved from the dash
type TimeSpan struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TimeSpan) Reset() {
	*x = TimeSpan{}
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimeSpan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeSpan) ProtoMessage() {}

func (x *TimeSpan) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeSpan.ProtoReflect.Descriptor instead.
func (*TimeSpan) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_dashboards_proto_rawDescGZIP(), []int{26}
}

// CreateApplicationDashboardRequest assigns a dashboard to an application
type CreateApplicationDashboardRequest struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	DashboardResourceId string                 `protobuf:"bytes,1,opt,name=dashboard_resource_id,json=dashboardResourceId,proto3" json:"dashboard_resource_id,omitempty"` // dashboard resource id
	OrgId               string                 `protobuf:"bytes,2,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`                                             // org id for ownership
	Application         perms.Application      `protobuf:"varint,3,opt,name=application,proto3,enum=annotations.perms.Application" json:"application,omitempty"`          // application enum
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *CreateApplicationDashboardRequest) Reset() {
	*x = CreateApplicationDashboardRequest{}
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateApplicationDashboardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateApplicationDashboardRequest) ProtoMessage() {}

func (x *CreateApplicationDashboardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateApplicationDashboardRequest.ProtoReflect.Descriptor instead.
func (*CreateApplicationDashboardRequest) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_dashboards_proto_rawDescGZIP(), []int{27}
}

func (x *CreateApplicationDashboardRequest) GetDashboardResourceId() string {
	if x != nil {
		return x.DashboardResourceId
	}
	return ""
}

func (x *CreateApplicationDashboardRequest) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *CreateApplicationDashboardRequest) GetApplication() perms.Application {
	if x != nil {
		return x.Application
	}
	return perms.Application(0)
}

// CreateApplicationDashboardResponse is idempotent
type CreateApplicationDashboardResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateApplicationDashboardResponse) Reset() {
	*x = CreateApplicationDashboardResponse{}
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateApplicationDashboardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateApplicationDashboardResponse) ProtoMessage() {}

func (x *CreateApplicationDashboardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateApplicationDashboardResponse.ProtoReflect.Descriptor instead.
func (*CreateApplicationDashboardResponse) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_dashboards_proto_rawDescGZIP(), []int{28}
}

// ListApplicationDashboardsRequest lists apps and assigned dashboards
type ListApplicationsDashboardsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListApplicationsDashboardsRequest) Reset() {
	*x = ListApplicationsDashboardsRequest{}
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListApplicationsDashboardsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListApplicationsDashboardsRequest) ProtoMessage() {}

func (x *ListApplicationsDashboardsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListApplicationsDashboardsRequest.ProtoReflect.Descriptor instead.
func (*ListApplicationsDashboardsRequest) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_dashboards_proto_rawDescGZIP(), []int{29}
}

// ApplicationDashboards wraps a list of dashboards for a specific application
type ApplicationDashboards struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// application dashboard id
	Application        perms.Application   `protobuf:"varint,1,opt,name=application,proto3,enum=annotations.perms.Application" json:"application,omitempty"`     // application enum
	DashboardSummaries []*DashboardSummary `protobuf:"bytes,2,rep,name=dashboard_summaries,json=dashboardSummaries,proto3" json:"dashboard_summaries,omitempty"` // dashboards assigned to application
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ApplicationDashboards) Reset() {
	*x = ApplicationDashboards{}
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplicationDashboards) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationDashboards) ProtoMessage() {}

func (x *ApplicationDashboards) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationDashboards.ProtoReflect.Descriptor instead.
func (*ApplicationDashboards) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_dashboards_proto_rawDescGZIP(), []int{30}
}

func (x *ApplicationDashboards) GetApplication() perms.Application {
	if x != nil {
		return x.Application
	}
	return perms.Application(0)
}

func (x *ApplicationDashboards) GetDashboardSummaries() []*DashboardSummary {
	if x != nil {
		return x.DashboardSummaries
	}
	return nil
}

// ListApplicationsDashboardsResponse used in ListApplicationDashboards rpc'
type ListApplicationsDashboardsResponse struct {
	state                 protoimpl.MessageState   `protogen:"open.v1"`
	ApplicationDashboards []*ApplicationDashboards `protobuf:"bytes,1,rep,name=application_dashboards,json=applicationDashboards,proto3" json:"application_dashboards,omitempty"` // list of application dashboards
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *ListApplicationsDashboardsResponse) Reset() {
	*x = ListApplicationsDashboardsResponse{}
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListApplicationsDashboardsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListApplicationsDashboardsResponse) ProtoMessage() {}

func (x *ListApplicationsDashboardsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListApplicationsDashboardsResponse.ProtoReflect.Descriptor instead.
func (*ListApplicationsDashboardsResponse) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_dashboards_proto_rawDescGZIP(), []int{31}
}

func (x *ListApplicationsDashboardsResponse) GetApplicationDashboards() []*ApplicationDashboards {
	if x != nil {
		return x.ApplicationDashboards
	}
	return nil
}

// DeleteApplicationDashboardRequest used in DeleteApplicationDashboard rpc
type DeleteApplicationDashboardRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// application dashboard id
	Application         perms.Application `protobuf:"varint,1,opt,name=application,proto3,enum=annotations.perms.Application" json:"application,omitempty"`          // application enum
	DashboardResourceId string            `protobuf:"bytes,2,opt,name=dashboard_resource_id,json=dashboardResourceId,proto3" json:"dashboard_resource_id,omitempty"` // dashboard resource id
	OrgId               string            `protobuf:"bytes,3,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`                                             // org id for ownership
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *DeleteApplicationDashboardRequest) Reset() {
	*x = DeleteApplicationDashboardRequest{}
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteApplicationDashboardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteApplicationDashboardRequest) ProtoMessage() {}

func (x *DeleteApplicationDashboardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteApplicationDashboardRequest.ProtoReflect.Descriptor instead.
func (*DeleteApplicationDashboardRequest) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_dashboards_proto_rawDescGZIP(), []int{32}
}

func (x *DeleteApplicationDashboardRequest) GetApplication() perms.Application {
	if x != nil {
		return x.Application
	}
	return perms.Application(0)
}

func (x *DeleteApplicationDashboardRequest) GetDashboardResourceId() string {
	if x != nil {
		return x.DashboardResourceId
	}
	return ""
}

func (x *DeleteApplicationDashboardRequest) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

// DeleteApplicationDashboardResponse used in DeleteApplicationDashboard rpc
type DeleteApplicationDashboardResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteApplicationDashboardResponse) Reset() {
	*x = DeleteApplicationDashboardResponse{}
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteApplicationDashboardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteApplicationDashboardResponse) ProtoMessage() {}

func (x *DeleteApplicationDashboardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteApplicationDashboardResponse.ProtoReflect.Descriptor instead.
func (*DeleteApplicationDashboardResponse) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_dashboards_proto_rawDescGZIP(), []int{33}
}

// absolute time range
type TimeSpan_Range struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Start         *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	End           *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TimeSpan_Range) Reset() {
	*x = TimeSpan_Range{}
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimeSpan_Range) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeSpan_Range) ProtoMessage() {}

func (x *TimeSpan_Range) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0alpha_dashboards_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeSpan_Range.ProtoReflect.Descriptor instead.
func (*TimeSpan_Range) Descriptor() ([]byte, []int) {
	return file_api_v0alpha_dashboards_proto_rawDescGZIP(), []int{26, 0}
}

func (x *TimeSpan_Range) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *TimeSpan_Range) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

var File_api_v0alpha_dashboards_proto protoreflect.FileDescriptor

const file_api_v0alpha_dashboards_proto_rawDesc = "" +
	"\n" +
	"\x1capi/v0alpha/dashboards.proto\x12\vapi.v0alpha\x1a\x17annotations/authz.proto\x1a\x1fannotations/perms/license.proto\x1a#api/commons/bireportgenerator.proto\x1a\x15api/commons/org.proto\x1a\x1cgoogle/api/annotations.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"r\n" +
	"\x17PublishDashboardRequest\x12\x1f\n" +
	"\vresource_id\x18\x01 \x01(\tR\n" +
	"resourceId\x126\n" +
	"\x17destination_resource_id\x18\x02 \x01(\tR\x15destinationResourceId\";\n" +
	"\x18PublishDashboardResponse\x12\x1f\n" +
	"\vresource_id\x18\x01 \x01(\tR\n" +
	"resourceId\"\x17\n" +
	"\x15ListDashboardsRequest\"h\n" +
	"\x16ListDashboardsResponse\x12N\n" +
	"\x13dashboard_summaries\x18\x01 \x03(\v2\x1d.api.v0alpha.DashboardSummaryR\x12dashboardSummaries\"\xde\x01\n" +
	"\x10DashboardSummary\x12!\n" +
	"\fdashboard_id\x18\x01 \x01(\tR\vdashboardId\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x1f\n" +
	"\vpanel_count\x18\x04 \x01(\x05R\n" +
	"panelCount\x12\x1f\n" +
	"\vresource_id\x18\x05 \x01(\tR\n" +
	"resourceId\x12-\n" +
	"\x12standard_dashboard\x18\x06 \x01(\bR\x11standardDashboard\"\x1c\n" +
	"\x1aGetDefaultDashboardRequest\"`\n" +
	"\x1aSetDefaultDashboardRequest\x12!\n" +
	"\fdashboard_id\x18\x01 \x01(\tR\vdashboardId\x12\x1f\n" +
	"\vresource_id\x18\x02 \x01(\tR\n" +
	"resourceId\"\x19\n" +
	"\x17ListProductTypesRequest\"H\n" +
	"\x16ListProductTypesResult\x12.\n" +
	"\x05types\x18\x01 \x03(\v2\x18.api.v0alpha.ProductTypeR\x05types\"1\n" +
	"\vProductType\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\"\\\n" +
	"\x16DeleteDashboardRequest\x12!\n" +
	"\fdashboard_id\x18\x01 \x01(\tR\vdashboardId\x12\x1f\n" +
	"\vresource_id\x18\x02 \x01(\tR\n" +
	"resourceId\"\x9b\x01\n" +
	"\x13GetDashboardRequest\x12!\n" +
	"\fdashboard_id\x18\x01 \x01(\tR\vdashboardId\x12\x1f\n" +
	"\vresource_id\x18\x02 \x01(\tR\n" +
	"resourceId\x12@\n" +
	"\vapplication\x18\x03 \x01(\x0e2\x1e.annotations.perms.ApplicationR\vapplication\"\xe6\x01\n" +
	"\x16CreateDashboardRequest\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x124\n" +
	"\x06layout\x18\x03 \x01(\v2\x1c.api.v0alpha.DashboardLayoutR\x06layout\x12.\n" +
	"\x04view\x18\x04 \x01(\v2\x1a.api.v0alpha.DashboardViewR\x04view\x12.\n" +
	"\x04type\x18\x05 \x01(\v2\x1a.api.v0alpha.DashboardTypeR\x04type\"]\n" +
	"\x17CreateDashboardResponse\x12!\n" +
	"\fdashboard_id\x18\x01 \x01(\tR\vdashboardId\x12\x1f\n" +
	"\vresource_id\x18\x02 \x01(\tR\n" +
	"resourceId\"F\n" +
	"\x0fDashboardLayout\x123\n" +
	"\x06panels\x18\x01 \x03(\v2\x1b.api.v0alpha.DashboardPanelR\x06panels\"\xd1\x01\n" +
	"\x0eDashboardPanel\x12;\n" +
	"\fpanel_source\x18\x01 \x01(\v2\x18.api.v0alpha.PanelSourceR\vpanelSource\x12\x1d\n" +
	"\n" +
	"row_length\x18\x02 \x01(\x03R\trowLength\x12#\n" +
	"\rcolumn_length\x18\x03 \x01(\x03R\fcolumnLength\x12\x1b\n" +
	"\trow_start\x18\x04 \x01(\x03R\browStart\x12!\n" +
	"\fcolumn_start\x18\x05 \x01(\x03R\vcolumnStart\"\xe9\x01\n" +
	"\vPanelSource\x12#\n" +
	"\n" +
	"insight_id\x18\x01 \x01(\tB\x02\x18\x01H\x00R\tinsightId\x12,\n" +
	"\x11legacy_insight_id\x18\x02 \x01(\tH\x00R\x0flegacyInsightId\x120\n" +
	"\x13insight_resource_id\x18\x03 \x01(\tH\x00R\x11insightResourceId\x12G\n" +
	" output_configuration_resource_id\x18\x04 \x01(\tR\x1doutputConfigurationResourceIdB\f\n" +
	"\n" +
	"panel_type\"\xcc\x02\n" +
	"\tDashboard\x12!\n" +
	"\fdashboard_id\x18\x01 \x01(\tR\vdashboardId\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x124\n" +
	"\x06layout\x18\x04 \x01(\v2\x1c.api.v0alpha.DashboardLayoutR\x06layout\x12.\n" +
	"\x04view\x18\x05 \x01(\v2\x1a.api.v0alpha.DashboardViewR\x04view\x12.\n" +
	"\x04type\x18\x06 \x01(\v2\x1a.api.v0alpha.DashboardTypeR\x04type\x12\x1f\n" +
	"\vresource_id\x18\a \x01(\tR\n" +
	"resourceId\x12-\n" +
	"\x12standard_dashboard\x18\b \x01(\bR\x11standardDashboard\"\x8e\x01\n" +
	"\rDashboardType\x129\n" +
	"\bhistoric\x18\x06 \x01(\v2\x1b.api.v0alpha.HistoricConfigH\x00R\bhistoric\x12:\n" +
	"\treal_time\x18\a \x01(\v2\x1b.api.v0alpha.RealTimeConfigH\x00R\brealTimeB\x06\n" +
	"\x04type\"\xa4\x02\n" +
	"\x0eHistoricConfig\x12J\n" +
	"\x10time_span_simple\x18\x01 \x01(\x0e2\x1e.api.v0alpha.TimeSpan.IntervalH\x00R\x0etimeSpanSimple\x12E\n" +
	"\x0ftime_span_range\x18\x03 \x01(\v2\x1b.api.v0alpha.TimeSpan.RangeH\x00R\rtimeSpanRange\x122\n" +
	"\ttime_zone\x18\x04 \x01(\x0e2\x15.api.commons.TimeZoneR\btimeZone\x128\n" +
	"\vtime_period\x18\x05 \x01(\x0e2\x17.api.commons.TimePeriodR\n" +
	"timePeriodB\v\n" +
	"\ttime_spanJ\x04\b\x02\x10\x03\"\x10\n" +
	"\x0eRealTimeConfig\"\xaa\x02\n" +
	"\x16UpdateDashboardRequest\x12!\n" +
	"\fdashboard_id\x18\x01 \x01(\tR\vdashboardId\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x124\n" +
	"\x06layout\x18\x04 \x01(\v2\x1c.api.v0alpha.DashboardLayoutR\x06layout\x12.\n" +
	"\x04view\x18\x05 \x01(\v2\x1a.api.v0alpha.DashboardViewR\x04view\x12.\n" +
	"\x04type\x18\x06 \x01(\v2\x1a.api.v0alpha.DashboardTypeR\x04type\x12\x1f\n" +
	"\vresource_id\x18\a \x01(\tR\n" +
	"resourceId\"\xa7\x01\n" +
	")UpdateDashboardTitleAndDescriptionRequest\x12!\n" +
	"\fdashboard_id\x18\x01 \x01(\tR\vdashboardId\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x1f\n" +
	"\vresource_id\x18\x04 \x01(\tR\n" +
	"resourceId\"\x98\x01\n" +
	"\x1cUpdateDashboardLayoutRequest\x12!\n" +
	"\fdashboard_id\x18\x01 \x01(\tR\vdashboardId\x124\n" +
	"\x06layout\x18\x02 \x01(\v2\x1c.api.v0alpha.DashboardLayoutR\x06layout\x12\x1f\n" +
	"\vresource_id\x18\x03 \x01(\tR\n" +
	"resourceId\"\x90\x01\n" +
	"\x1aUpdateDashboardViewRequest\x12!\n" +
	"\fdashboard_id\x18\x01 \x01(\tR\vdashboardId\x12.\n" +
	"\x04view\x18\x02 \x01(\v2\x1a.api.v0alpha.DashboardViewR\x04view\x12\x1f\n" +
	"\vresource_id\x18\x03 \x01(\tR\n" +
	"resourceId\"@\n" +
	"\rDashboardView\x12\x17\n" +
	"\aorg_ids\x18\x02 \x03(\tR\x06orgIdsJ\x04\b\x01\x10\x02J\x04\b\x03\x10\x04J\x04\b\x04\x10\x05J\x04\b\x05\x10\x06\"\x9c\x02\n" +
	"\bTimeSpan\x1ag\n" +
	"\x05Range\x120\n" +
	"\x05start\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\x05start\x12,\n" +
	"\x03end\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x03end\"\xa6\x01\n" +
	"\bInterval\x12\t\n" +
	"\x05TODAY\x10\x00\x12\r\n" +
	"\tYESTERDAY\x10\x01\x12\x10\n" +
	"\fLAST_30_DAYS\x10\x02\x12\x11\n" +
	"\rMONTH_TO_DATE\x10\x03\x12\x10\n" +
	"\fLAST_2_WEEKS\x10\x04\x12\r\n" +
	"\tTHIS_WEEK\x10\x05\x12\x0e\n" +
	"\n" +
	"THIS_MONTH\x10\x06\x12\x16\n" +
	"\x12THIS_DAY_LAST_WEEK\x10\a\x12\x12\n" +
	"\x0ePREVIOUS_MONTH\x10\b\"\xb0\x01\n" +
	"!CreateApplicationDashboardRequest\x122\n" +
	"\x15dashboard_resource_id\x18\x01 \x01(\tR\x13dashboardResourceId\x12\x15\n" +
	"\x06org_id\x18\x02 \x01(\tR\x05orgId\x12@\n" +
	"\vapplication\x18\x03 \x01(\x0e2\x1e.annotations.perms.ApplicationR\vapplication\"$\n" +
	"\"CreateApplicationDashboardResponse\"#\n" +
	"!ListApplicationsDashboardsRequest\"\xa9\x01\n" +
	"\x15ApplicationDashboards\x12@\n" +
	"\vapplication\x18\x01 \x01(\x0e2\x1e.annotations.perms.ApplicationR\vapplication\x12N\n" +
	"\x13dashboard_summaries\x18\x02 \x03(\v2\x1d.api.v0alpha.DashboardSummaryR\x12dashboardSummaries\"\x7f\n" +
	"\"ListApplicationsDashboardsResponse\x12Y\n" +
	"\x16application_dashboards\x18\x01 \x03(\v2\".api.v0alpha.ApplicationDashboardsR\x15applicationDashboards\"\xb0\x01\n" +
	"!DeleteApplicationDashboardRequest\x12@\n" +
	"\vapplication\x18\x01 \x01(\x0e2\x1e.annotations.perms.ApplicationR\vapplication\x122\n" +
	"\x15dashboard_resource_id\x18\x02 \x01(\tR\x13dashboardResourceId\x12\x15\n" +
	"\x06org_id\x18\x03 \x01(\tR\x05orgId\"$\n" +
	"\"DeleteApplicationDashboardResponse2\xf4\x13\n" +
	"\n" +
	"Dashboards\x12\x9d\x01\n" +
	"\x0fCreateDashboard\x12#.api.v0alpha.CreateDashboardRequest\x1a$.api.v0alpha.CreateDashboardResponse\"?\xba\xb8\x91\x02\b\n" +
	"\x06\b\xd9\x04\b\xda\x04\x82\xd3\xe4\x93\x02,:\x01*\"'/api/v0alpha/dashboards/CreateDashboard\x12\xa4\x01\n" +
	"\fGetDashboard\x12 .api.v0alpha.GetDashboardRequest\x1a\x16.api.v0alpha.Dashboard\"Z\xba\xb8\x91\x02&\n" +
	"\x03\b\xd9\x04\n" +
	"\t\b\xd4\x02\x12\x04\b\x03\x10\x01\n" +
	"\t\b\xc0\f\x12\x04\b\x03\x10\x13\n" +
	"\t\b\xc1\f\x12\x04\b\x03\x10\x13\x82\xd3\xe4\x93\x02):\x01*\"$/api/v0alpha/dashboards/GetDashboard\x12\x98\x01\n" +
	"\x13GetDefaultDashboard\x12'.api.v0alpha.GetDefaultDashboardRequest\x1a\x16.api.v0alpha.Dashboard\"@\xba\xb8\x91\x02\x05\n" +
	"\x03\b\xd9\x04\x82\xd3\xe4\x93\x020:\x01*\"+/api/v0alpha/dashboards/GetDefaultDashboard\x12\x96\x01\n" +
	"\x0eListDashboards\x12\".api.v0alpha.ListDashboardsRequest\x1a#.api.v0alpha.ListDashboardsResponse\";\xba\xb8\x91\x02\x05\n" +
	"\x03\b\xd9\x04\x82\xd3\xe4\x93\x02+:\x01*\"&/api/v0alpha/dashboards/ListDashboards\x12\x9c\x01\n" +
	"\x10ListProductTypes\x12$.api.v0alpha.ListProductTypesRequest\x1a#.api.v0alpha.ListProductTypesResult\"=\xba\xb8\x91\x02\x05\n" +
	"\x03\b\xd9\x04\x82\xd3\xe4\x93\x02-:\x01*\"(/api/v0alpha/dashboards/ListProductTypes\x12\x8f\x01\n" +
	"\x0fDeleteDashboard\x12#.api.v0alpha.DeleteDashboardRequest\x1a\x16.google.protobuf.Empty\"?\xba\xb8\x91\x02\b\n" +
	"\x06\b\xd9\x04\b\xda\x04\x82\xd3\xe4\x93\x02,:\x01*\"'/api/v0alpha/dashboards/DeleteDashboard\x12\x9b\x01\n" +
	"\x13SetDefaultDashboard\x12'.api.v0alpha.SetDefaultDashboardRequest\x1a\x16.google.protobuf.Empty\"C\xba\xb8\x91\x02\b\n" +
	"\x06\b\xd9\x04\b\xda\x04\x82\xd3\xe4\x93\x020:\x01*\"+/api/v0alpha/dashboards/SetDefaultDashboard\x12\x8f\x01\n" +
	"\x0fUpdateDashboard\x12#.api.v0alpha.UpdateDashboardRequest\x1a\x16.google.protobuf.Empty\"?\xba\xb8\x91\x02\b\n" +
	"\x06\b\xd9\x04\b\xda\x04\x82\xd3\xe4\x93\x02,:\x01*\"'/api/v0alpha/dashboards/UpdateDashboard\x12\xc8\x01\n" +
	"\"UpdateDashboardTitleAndDescription\x126.api.v0alpha.UpdateDashboardTitleAndDescriptionRequest\x1a\x16.google.protobuf.Empty\"R\xba\xb8\x91\x02\b\n" +
	"\x06\b\xd9\x04\b\xda\x04\x82\xd3\xe4\x93\x02?:\x01*\":/api/v0alpha/dashboards/UpdateDashboardTitleAndDescription\x12\x9b\x01\n" +
	"\x13UpdateDashboardView\x12'.api.v0alpha.UpdateDashboardViewRequest\x1a\x16.google.protobuf.Empty\"C\xba\xb8\x91\x02\b\n" +
	"\x06\b\xd9\x04\b\xda\x04\x82\xd3\xe4\x93\x020:\x01*\"+/api/v0alpha/dashboards/UpdateDashboardView\x12\xa1\x01\n" +
	"\x15UpdateDashboardLayout\x12).api.v0alpha.UpdateDashboardLayoutRequest\x1a\x16.google.protobuf.Empty\"E\xba\xb8\x91\x02\b\n" +
	"\x06\b\xd9\x04\b\xda\x04\x82\xd3\xe4\x93\x022:\x01*\"-/api/v0alpha/dashboards/UpdateDashboardLayout\x12\xa1\x01\n" +
	"\x10PublishDashboard\x12$.api.v0alpha.PublishDashboardRequest\x1a%.api.v0alpha.PublishDashboardResponse\"@\xba\xb8\x91\x02\b\n" +
	"\x06\b\xfb\x01\b\xda\x04\x82\xd3\xe4\x93\x02-:\x01*\"(/api/v0alpha/dashboards/PublishDashboard\x12\xc6\x01\n" +
	"\x1aCreateApplicationDashboard\x12..api.v0alpha.CreateApplicationDashboardRequest\x1a/.api.v0alpha.CreateApplicationDashboardResponse\"G\xba\xb8\x91\x02\x05\n" +
	"\x03\b\xda\x04\x82\xd3\xe4\x93\x027:\x01*\"2/api/v0alpha/dashboards/CreateApplicationDashboard\x12\xc6\x01\n" +
	"\x1aListApplicationsDashboards\x12..api.v0alpha.ListApplicationsDashboardsRequest\x1a/.api.v0alpha.ListApplicationsDashboardsResponse\"G\xba\xb8\x91\x02\x05\n" +
	"\x03\b\xda\x04\x82\xd3\xe4\x93\x027:\x01*\"2/api/v0alpha/dashboards/ListApplicationsDashboards\x12\xc6\x01\n" +
	"\x1aDeleteApplicationDashboard\x12..api.v0alpha.DeleteApplicationDashboardRequest\x1a/.api.v0alpha.DeleteApplicationDashboardResponse\"G\xba\xb8\x91\x02\x05\n" +
	"\x03\b\xda\x04\x82\xd3\xe4\x93\x027:\x01*\"2/api/v0alpha/dashboards/DeleteApplicationDashboardB\x97\x01\n" +
	"\x0fcom.api.v0alphaB\x0fDashboardsProtoP\x01Z&github.com/tcncloud/api-go/api/v0alpha\xa2\x02\x03AVX\xaa\x02\vApi.V0alpha\xca\x02\vApi\\V0alpha\xe2\x02\x17Api\\V0alpha\\GPBMetadata\xea\x02\fApi::V0alphab\x06proto3"

var (
	file_api_v0alpha_dashboards_proto_rawDescOnce sync.Once
	file_api_v0alpha_dashboards_proto_rawDescData []byte
)

func file_api_v0alpha_dashboards_proto_rawDescGZIP() []byte {
	file_api_v0alpha_dashboards_proto_rawDescOnce.Do(func() {
		file_api_v0alpha_dashboards_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_v0alpha_dashboards_proto_rawDesc), len(file_api_v0alpha_dashboards_proto_rawDesc)))
	})
	return file_api_v0alpha_dashboards_proto_rawDescData
}

var file_api_v0alpha_dashboards_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_v0alpha_dashboards_proto_msgTypes = make([]protoimpl.MessageInfo, 35)
var file_api_v0alpha_dashboards_proto_goTypes = []any{
	(TimeSpan_Interval)(0),                            // 0: api.v0alpha.TimeSpan.Interval
	(*PublishDashboardRequest)(nil),                   // 1: api.v0alpha.PublishDashboardRequest
	(*PublishDashboardResponse)(nil),                  // 2: api.v0alpha.PublishDashboardResponse
	(*ListDashboardsRequest)(nil),                     // 3: api.v0alpha.ListDashboardsRequest
	(*ListDashboardsResponse)(nil),                    // 4: api.v0alpha.ListDashboardsResponse
	(*DashboardSummary)(nil),                          // 5: api.v0alpha.DashboardSummary
	(*GetDefaultDashboardRequest)(nil),                // 6: api.v0alpha.GetDefaultDashboardRequest
	(*SetDefaultDashboardRequest)(nil),                // 7: api.v0alpha.SetDefaultDashboardRequest
	(*ListProductTypesRequest)(nil),                   // 8: api.v0alpha.ListProductTypesRequest
	(*ListProductTypesResult)(nil),                    // 9: api.v0alpha.ListProductTypesResult
	(*ProductType)(nil),                               // 10: api.v0alpha.ProductType
	(*DeleteDashboardRequest)(nil),                    // 11: api.v0alpha.DeleteDashboardRequest
	(*GetDashboardRequest)(nil),                       // 12: api.v0alpha.GetDashboardRequest
	(*CreateDashboardRequest)(nil),                    // 13: api.v0alpha.CreateDashboardRequest
	(*CreateDashboardResponse)(nil),                   // 14: api.v0alpha.CreateDashboardResponse
	(*DashboardLayout)(nil),                           // 15: api.v0alpha.DashboardLayout
	(*DashboardPanel)(nil),                            // 16: api.v0alpha.DashboardPanel
	(*PanelSource)(nil),                               // 17: api.v0alpha.PanelSource
	(*Dashboard)(nil),                                 // 18: api.v0alpha.Dashboard
	(*DashboardType)(nil),                             // 19: api.v0alpha.DashboardType
	(*HistoricConfig)(nil),                            // 20: api.v0alpha.HistoricConfig
	(*RealTimeConfig)(nil),                            // 21: api.v0alpha.RealTimeConfig
	(*UpdateDashboardRequest)(nil),                    // 22: api.v0alpha.UpdateDashboardRequest
	(*UpdateDashboardTitleAndDescriptionRequest)(nil), // 23: api.v0alpha.UpdateDashboardTitleAndDescriptionRequest
	(*UpdateDashboardLayoutRequest)(nil),              // 24: api.v0alpha.UpdateDashboardLayoutRequest
	(*UpdateDashboardViewRequest)(nil),                // 25: api.v0alpha.UpdateDashboardViewRequest
	(*DashboardView)(nil),                             // 26: api.v0alpha.DashboardView
	(*TimeSpan)(nil),                                  // 27: api.v0alpha.TimeSpan
	(*CreateApplicationDashboardRequest)(nil),         // 28: api.v0alpha.CreateApplicationDashboardRequest
	(*CreateApplicationDashboardResponse)(nil),        // 29: api.v0alpha.CreateApplicationDashboardResponse
	(*ListApplicationsDashboardsRequest)(nil),         // 30: api.v0alpha.ListApplicationsDashboardsRequest
	(*ApplicationDashboards)(nil),                     // 31: api.v0alpha.ApplicationDashboards
	(*ListApplicationsDashboardsResponse)(nil),        // 32: api.v0alpha.ListApplicationsDashboardsResponse
	(*DeleteApplicationDashboardRequest)(nil),         // 33: api.v0alpha.DeleteApplicationDashboardRequest
	(*DeleteApplicationDashboardResponse)(nil),        // 34: api.v0alpha.DeleteApplicationDashboardResponse
	(*TimeSpan_Range)(nil),                            // 35: api.v0alpha.TimeSpan.Range
	(perms.Application)(0),                            // 36: annotations.perms.Application
	(commons.TimeZone)(0),                             // 37: api.commons.TimeZone
	(commons.TimePeriod)(0),                           // 38: api.commons.TimePeriod
	(*timestamppb.Timestamp)(nil),                     // 39: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                             // 40: google.protobuf.Empty
}
var file_api_v0alpha_dashboards_proto_depIdxs = []int32{
	5,  // 0: api.v0alpha.ListDashboardsResponse.dashboard_summaries:type_name -> api.v0alpha.DashboardSummary
	10, // 1: api.v0alpha.ListProductTypesResult.types:type_name -> api.v0alpha.ProductType
	36, // 2: api.v0alpha.GetDashboardRequest.application:type_name -> annotations.perms.Application
	15, // 3: api.v0alpha.CreateDashboardRequest.layout:type_name -> api.v0alpha.DashboardLayout
	26, // 4: api.v0alpha.CreateDashboardRequest.view:type_name -> api.v0alpha.DashboardView
	19, // 5: api.v0alpha.CreateDashboardRequest.type:type_name -> api.v0alpha.DashboardType
	16, // 6: api.v0alpha.DashboardLayout.panels:type_name -> api.v0alpha.DashboardPanel
	17, // 7: api.v0alpha.DashboardPanel.panel_source:type_name -> api.v0alpha.PanelSource
	15, // 8: api.v0alpha.Dashboard.layout:type_name -> api.v0alpha.DashboardLayout
	26, // 9: api.v0alpha.Dashboard.view:type_name -> api.v0alpha.DashboardView
	19, // 10: api.v0alpha.Dashboard.type:type_name -> api.v0alpha.DashboardType
	20, // 11: api.v0alpha.DashboardType.historic:type_name -> api.v0alpha.HistoricConfig
	21, // 12: api.v0alpha.DashboardType.real_time:type_name -> api.v0alpha.RealTimeConfig
	0,  // 13: api.v0alpha.HistoricConfig.time_span_simple:type_name -> api.v0alpha.TimeSpan.Interval
	35, // 14: api.v0alpha.HistoricConfig.time_span_range:type_name -> api.v0alpha.TimeSpan.Range
	37, // 15: api.v0alpha.HistoricConfig.time_zone:type_name -> api.commons.TimeZone
	38, // 16: api.v0alpha.HistoricConfig.time_period:type_name -> api.commons.TimePeriod
	15, // 17: api.v0alpha.UpdateDashboardRequest.layout:type_name -> api.v0alpha.DashboardLayout
	26, // 18: api.v0alpha.UpdateDashboardRequest.view:type_name -> api.v0alpha.DashboardView
	19, // 19: api.v0alpha.UpdateDashboardRequest.type:type_name -> api.v0alpha.DashboardType
	15, // 20: api.v0alpha.UpdateDashboardLayoutRequest.layout:type_name -> api.v0alpha.DashboardLayout
	26, // 21: api.v0alpha.UpdateDashboardViewRequest.view:type_name -> api.v0alpha.DashboardView
	36, // 22: api.v0alpha.CreateApplicationDashboardRequest.application:type_name -> annotations.perms.Application
	36, // 23: api.v0alpha.ApplicationDashboards.application:type_name -> annotations.perms.Application
	5,  // 24: api.v0alpha.ApplicationDashboards.dashboard_summaries:type_name -> api.v0alpha.DashboardSummary
	31, // 25: api.v0alpha.ListApplicationsDashboardsResponse.application_dashboards:type_name -> api.v0alpha.ApplicationDashboards
	36, // 26: api.v0alpha.DeleteApplicationDashboardRequest.application:type_name -> annotations.perms.Application
	39, // 27: api.v0alpha.TimeSpan.Range.start:type_name -> google.protobuf.Timestamp
	39, // 28: api.v0alpha.TimeSpan.Range.end:type_name -> google.protobuf.Timestamp
	13, // 29: api.v0alpha.Dashboards.CreateDashboard:input_type -> api.v0alpha.CreateDashboardRequest
	12, // 30: api.v0alpha.Dashboards.GetDashboard:input_type -> api.v0alpha.GetDashboardRequest
	6,  // 31: api.v0alpha.Dashboards.GetDefaultDashboard:input_type -> api.v0alpha.GetDefaultDashboardRequest
	3,  // 32: api.v0alpha.Dashboards.ListDashboards:input_type -> api.v0alpha.ListDashboardsRequest
	8,  // 33: api.v0alpha.Dashboards.ListProductTypes:input_type -> api.v0alpha.ListProductTypesRequest
	11, // 34: api.v0alpha.Dashboards.DeleteDashboard:input_type -> api.v0alpha.DeleteDashboardRequest
	7,  // 35: api.v0alpha.Dashboards.SetDefaultDashboard:input_type -> api.v0alpha.SetDefaultDashboardRequest
	22, // 36: api.v0alpha.Dashboards.UpdateDashboard:input_type -> api.v0alpha.UpdateDashboardRequest
	23, // 37: api.v0alpha.Dashboards.UpdateDashboardTitleAndDescription:input_type -> api.v0alpha.UpdateDashboardTitleAndDescriptionRequest
	25, // 38: api.v0alpha.Dashboards.UpdateDashboardView:input_type -> api.v0alpha.UpdateDashboardViewRequest
	24, // 39: api.v0alpha.Dashboards.UpdateDashboardLayout:input_type -> api.v0alpha.UpdateDashboardLayoutRequest
	1,  // 40: api.v0alpha.Dashboards.PublishDashboard:input_type -> api.v0alpha.PublishDashboardRequest
	28, // 41: api.v0alpha.Dashboards.CreateApplicationDashboard:input_type -> api.v0alpha.CreateApplicationDashboardRequest
	30, // 42: api.v0alpha.Dashboards.ListApplicationsDashboards:input_type -> api.v0alpha.ListApplicationsDashboardsRequest
	33, // 43: api.v0alpha.Dashboards.DeleteApplicationDashboard:input_type -> api.v0alpha.DeleteApplicationDashboardRequest
	14, // 44: api.v0alpha.Dashboards.CreateDashboard:output_type -> api.v0alpha.CreateDashboardResponse
	18, // 45: api.v0alpha.Dashboards.GetDashboard:output_type -> api.v0alpha.Dashboard
	18, // 46: api.v0alpha.Dashboards.GetDefaultDashboard:output_type -> api.v0alpha.Dashboard
	4,  // 47: api.v0alpha.Dashboards.ListDashboards:output_type -> api.v0alpha.ListDashboardsResponse
	9,  // 48: api.v0alpha.Dashboards.ListProductTypes:output_type -> api.v0alpha.ListProductTypesResult
	40, // 49: api.v0alpha.Dashboards.DeleteDashboard:output_type -> google.protobuf.Empty
	40, // 50: api.v0alpha.Dashboards.SetDefaultDashboard:output_type -> google.protobuf.Empty
	40, // 51: api.v0alpha.Dashboards.UpdateDashboard:output_type -> google.protobuf.Empty
	40, // 52: api.v0alpha.Dashboards.UpdateDashboardTitleAndDescription:output_type -> google.protobuf.Empty
	40, // 53: api.v0alpha.Dashboards.UpdateDashboardView:output_type -> google.protobuf.Empty
	40, // 54: api.v0alpha.Dashboards.UpdateDashboardLayout:output_type -> google.protobuf.Empty
	2,  // 55: api.v0alpha.Dashboards.PublishDashboard:output_type -> api.v0alpha.PublishDashboardResponse
	29, // 56: api.v0alpha.Dashboards.CreateApplicationDashboard:output_type -> api.v0alpha.CreateApplicationDashboardResponse
	32, // 57: api.v0alpha.Dashboards.ListApplicationsDashboards:output_type -> api.v0alpha.ListApplicationsDashboardsResponse
	34, // 58: api.v0alpha.Dashboards.DeleteApplicationDashboard:output_type -> api.v0alpha.DeleteApplicationDashboardResponse
	44, // [44:59] is the sub-list for method output_type
	29, // [29:44] is the sub-list for method input_type
	29, // [29:29] is the sub-list for extension type_name
	29, // [29:29] is the sub-list for extension extendee
	0,  // [0:29] is the sub-list for field type_name
}

func init() { file_api_v0alpha_dashboards_proto_init() }
func file_api_v0alpha_dashboards_proto_init() {
	if File_api_v0alpha_dashboards_proto != nil {
		return
	}
	file_api_v0alpha_dashboards_proto_msgTypes[16].OneofWrappers = []any{
		(*PanelSource_InsightId)(nil),
		(*PanelSource_LegacyInsightId)(nil),
		(*PanelSource_InsightResourceId)(nil),
	}
	file_api_v0alpha_dashboards_proto_msgTypes[18].OneofWrappers = []any{
		(*DashboardType_Historic)(nil),
		(*DashboardType_RealTime)(nil),
	}
	file_api_v0alpha_dashboards_proto_msgTypes[19].OneofWrappers = []any{
		(*HistoricConfig_TimeSpanSimple)(nil),
		(*HistoricConfig_TimeSpanRange)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_v0alpha_dashboards_proto_rawDesc), len(file_api_v0alpha_dashboards_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   35,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v0alpha_dashboards_proto_goTypes,
		DependencyIndexes: file_api_v0alpha_dashboards_proto_depIdxs,
		EnumInfos:         file_api_v0alpha_dashboards_proto_enumTypes,
		MessageInfos:      file_api_v0alpha_dashboards_proto_msgTypes,
	}.Build()
	File_api_v0alpha_dashboards_proto = out.File
	file_api_v0alpha_dashboards_proto_goTypes = nil
	file_api_v0alpha_dashboards_proto_depIdxs = nil
}
