// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        (unknown)
// source: api/v1alpha1/newsroom/entities.proto

package newsroom

import (
	commons "github.com/tcncloud/api-go/api/commons"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request to create news article
type CreateNewsArticleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// news article title
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// markdown content
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	// article author
	Author string `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`
	// image reference id
	ImageReferenceId string `protobuf:"bytes,4,opt,name=image_reference_id,json=imageReferenceId,proto3" json:"image_reference_id,omitempty"`
}

func (x *CreateNewsArticleRequest) Reset() {
	*x = CreateNewsArticleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNewsArticleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNewsArticleRequest) ProtoMessage() {}

func (x *CreateNewsArticleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNewsArticleRequest.ProtoReflect.Descriptor instead.
func (*CreateNewsArticleRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{0}
}

func (x *CreateNewsArticleRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateNewsArticleRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreateNewsArticleRequest) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *CreateNewsArticleRequest) GetImageReferenceId() string {
	if x != nil {
		return x.ImageReferenceId
	}
	return ""
}

// Response to create news article
type CreateNewsArticleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// news article details
	ArticleDetails *NewsArticleDetails `protobuf:"bytes,1,opt,name=article_details,json=articleDetails,proto3" json:"article_details,omitempty"`
}

func (x *CreateNewsArticleResponse) Reset() {
	*x = CreateNewsArticleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNewsArticleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNewsArticleResponse) ProtoMessage() {}

func (x *CreateNewsArticleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNewsArticleResponse.ProtoReflect.Descriptor instead.
func (*CreateNewsArticleResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{1}
}

func (x *CreateNewsArticleResponse) GetArticleDetails() *NewsArticleDetails {
	if x != nil {
		return x.ArticleDetails
	}
	return nil
}

// Request to list of news articles
type ListNewsArticlesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the statuses to select by when listing articles (if empty, selects all)
	Statuses []commons.ArticleStatus `protobuf:"varint,1,rep,packed,name=statuses,proto3,enum=api.commons.ArticleStatus" json:"statuses,omitempty"`
	// list of article details to be Requested
	FieldMask *fieldmaskpb.FieldMask `protobuf:"bytes,100,opt,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"`
}

func (x *ListNewsArticlesRequest) Reset() {
	*x = ListNewsArticlesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNewsArticlesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNewsArticlesRequest) ProtoMessage() {}

func (x *ListNewsArticlesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNewsArticlesRequest.ProtoReflect.Descriptor instead.
func (*ListNewsArticlesRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{2}
}

func (x *ListNewsArticlesRequest) GetStatuses() []commons.ArticleStatus {
	if x != nil {
		return x.Statuses
	}
	return nil
}

func (x *ListNewsArticlesRequest) GetFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

// Responseponse to list of news articles
type ListNewsArticlesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// article details
	ArticleDetails []*NewsArticleDetails `protobuf:"bytes,1,rep,name=article_details,json=articleDetails,proto3" json:"article_details,omitempty"`
}

func (x *ListNewsArticlesResponse) Reset() {
	*x = ListNewsArticlesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNewsArticlesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNewsArticlesResponse) ProtoMessage() {}

func (x *ListNewsArticlesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNewsArticlesResponse.ProtoReflect.Descriptor instead.
func (*ListNewsArticlesResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{3}
}

func (x *ListNewsArticlesResponse) GetArticleDetails() []*NewsArticleDetails {
	if x != nil {
		return x.ArticleDetails
	}
	return nil
}

// Request to get news article by id
type GetNewsArticleByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the unique news article identifier
	NewArticleSid int64 `protobuf:"varint,1,opt,name=new_article_sid,json=newArticleSid,proto3" json:"new_article_sid,omitempty"`
}

func (x *GetNewsArticleByIdRequest) Reset() {
	*x = GetNewsArticleByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNewsArticleByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNewsArticleByIdRequest) ProtoMessage() {}

func (x *GetNewsArticleByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNewsArticleByIdRequest.ProtoReflect.Descriptor instead.
func (*GetNewsArticleByIdRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{4}
}

func (x *GetNewsArticleByIdRequest) GetNewArticleSid() int64 {
	if x != nil {
		return x.NewArticleSid
	}
	return 0
}

// Response to get news article
type GetNewsArticleByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// news article details
	ArticleDetails *NewsArticleDetails `protobuf:"bytes,1,opt,name=article_details,json=articleDetails,proto3" json:"article_details,omitempty"`
}

func (x *GetNewsArticleByIdResponse) Reset() {
	*x = GetNewsArticleByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNewsArticleByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNewsArticleByIdResponse) ProtoMessage() {}

func (x *GetNewsArticleByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNewsArticleByIdResponse.ProtoReflect.Descriptor instead.
func (*GetNewsArticleByIdResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{5}
}

func (x *GetNewsArticleByIdResponse) GetArticleDetails() *NewsArticleDetails {
	if x != nil {
		return x.ArticleDetails
	}
	return nil
}

// Request to update news article
type UpdateNewsArticleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the news article fields specified to be updated
	ArticleDetails *NewsArticleDetails `protobuf:"bytes,1,opt,name=article_details,json=articleDetails,proto3" json:"article_details,omitempty"`
	// list of fields Requested to be updated
	FieldMask *fieldmaskpb.FieldMask `protobuf:"bytes,100,opt,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"`
}

func (x *UpdateNewsArticleRequest) Reset() {
	*x = UpdateNewsArticleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNewsArticleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNewsArticleRequest) ProtoMessage() {}

func (x *UpdateNewsArticleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNewsArticleRequest.ProtoReflect.Descriptor instead.
func (*UpdateNewsArticleRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateNewsArticleRequest) GetArticleDetails() *NewsArticleDetails {
	if x != nil {
		return x.ArticleDetails
	}
	return nil
}

func (x *UpdateNewsArticleRequest) GetFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

// Response to update news article
type UpdateNewsArticleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// updated news article
	ArticleDetails *NewsArticleDetails `protobuf:"bytes,1,opt,name=article_details,json=articleDetails,proto3" json:"article_details,omitempty"`
}

func (x *UpdateNewsArticleResponse) Reset() {
	*x = UpdateNewsArticleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNewsArticleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNewsArticleResponse) ProtoMessage() {}

func (x *UpdateNewsArticleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNewsArticleResponse.ProtoReflect.Descriptor instead.
func (*UpdateNewsArticleResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateNewsArticleResponse) GetArticleDetails() *NewsArticleDetails {
	if x != nil {
		return x.ArticleDetails
	}
	return nil
}

// news article details
type NewsArticleDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the unique news article identifier
	NewArticleSid int64 `protobuf:"varint,1,opt,name=new_article_sid,json=newArticleSid,proto3" json:"new_article_sid,omitempty"`
	// news article title
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// markdown content
	Content string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	// article status
	Status commons.ArticleStatus `protobuf:"varint,4,opt,name=status,proto3,enum=api.commons.ArticleStatus" json:"status,omitempty"`
	// news article creation date
	DateCreated *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=date_created,json=dateCreated,proto3" json:"date_created,omitempty"`
	// news article last updated date
	LastEdited *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=last_edited,json=lastEdited,proto3" json:"last_edited,omitempty"`
	// article author
	Author string `protobuf:"bytes,7,opt,name=author,proto3" json:"author,omitempty"`
	// image reference id
	ImageReferenceId string `protobuf:"bytes,8,opt,name=image_reference_id,json=imageReferenceId,proto3" json:"image_reference_id,omitempty"`
}

func (x *NewsArticleDetails) Reset() {
	*x = NewsArticleDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewsArticleDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewsArticleDetails) ProtoMessage() {}

func (x *NewsArticleDetails) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewsArticleDetails.ProtoReflect.Descriptor instead.
func (*NewsArticleDetails) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{8}
}

func (x *NewsArticleDetails) GetNewArticleSid() int64 {
	if x != nil {
		return x.NewArticleSid
	}
	return 0
}

func (x *NewsArticleDetails) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *NewsArticleDetails) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *NewsArticleDetails) GetStatus() commons.ArticleStatus {
	if x != nil {
		return x.Status
	}
	return commons.ArticleStatus(0)
}

func (x *NewsArticleDetails) GetDateCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.DateCreated
	}
	return nil
}

func (x *NewsArticleDetails) GetLastEdited() *timestamppb.Timestamp {
	if x != nil {
		return x.LastEdited
	}
	return nil
}

func (x *NewsArticleDetails) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *NewsArticleDetails) GetImageReferenceId() string {
	if x != nil {
		return x.ImageReferenceId
	}
	return ""
}

// published article details
type PublishedArticleDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the unique published article identifier
	PublishedArticleSid int64 `protobuf:"varint,1,opt,name=published_article_sid,json=publishedArticleSid,proto3" json:"published_article_sid,omitempty"`
	// news article details
	NewsArticleDetails *NewsArticleDetails `protobuf:"bytes,2,opt,name=news_article_details,json=newsArticleDetails,proto3" json:"news_article_details,omitempty"`
	// news article published date
	DatePublished *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=date_published,json=datePublished,proto3" json:"date_published,omitempty"`
	// this flag determines if we show to user or not
	DisplayToUser bool `protobuf:"varint,4,opt,name=display_to_user,json=displayToUser,proto3" json:"display_to_user,omitempty"`
}

func (x *PublishedArticleDetails) Reset() {
	*x = PublishedArticleDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishedArticleDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishedArticleDetails) ProtoMessage() {}

func (x *PublishedArticleDetails) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishedArticleDetails.ProtoReflect.Descriptor instead.
func (*PublishedArticleDetails) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{9}
}

func (x *PublishedArticleDetails) GetPublishedArticleSid() int64 {
	if x != nil {
		return x.PublishedArticleSid
	}
	return 0
}

func (x *PublishedArticleDetails) GetNewsArticleDetails() *NewsArticleDetails {
	if x != nil {
		return x.NewsArticleDetails
	}
	return nil
}

func (x *PublishedArticleDetails) GetDatePublished() *timestamppb.Timestamp {
	if x != nil {
		return x.DatePublished
	}
	return nil
}

func (x *PublishedArticleDetails) GetDisplayToUser() bool {
	if x != nil {
		return x.DisplayToUser
	}
	return false
}

// user activity details
type UserActivity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the unique user activity log identifier
	UserActivityLogSid int64 `protobuf:"varint,1,opt,name=user_activity_log_sid,json=userActivityLogSid,proto3" json:"user_activity_log_sid,omitempty"`
	// user activity created date
	DateCreated *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=date_created,json=dateCreated,proto3" json:"date_created,omitempty"`
	// user activity details
	UserActivityDetails *UserActivity_UserActivityDetails `protobuf:"bytes,3,opt,name=user_activity_details,json=userActivityDetails,proto3" json:"user_activity_details,omitempty"`
}

func (x *UserActivity) Reset() {
	*x = UserActivity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserActivity) ProtoMessage() {}

func (x *UserActivity) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserActivity.ProtoReflect.Descriptor instead.
func (*UserActivity) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{10}
}

func (x *UserActivity) GetUserActivityLogSid() int64 {
	if x != nil {
		return x.UserActivityLogSid
	}
	return 0
}

func (x *UserActivity) GetDateCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.DateCreated
	}
	return nil
}

func (x *UserActivity) GetUserActivityDetails() *UserActivity_UserActivityDetails {
	if x != nil {
		return x.UserActivityDetails
	}
	return nil
}

// Request to create published article
type CreatePublishedArticleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// news article identifier
	NewArticleSid int64 `protobuf:"varint,1,opt,name=new_article_sid,json=newArticleSid,proto3" json:"new_article_sid,omitempty"`
	// determines if we show to user
	DisplayToUser bool `protobuf:"varint,2,opt,name=display_to_user,json=displayToUser,proto3" json:"display_to_user,omitempty"`
	// link to the published article
	ArticleLink string `protobuf:"bytes,3,opt,name=article_link,json=articleLink,proto3" json:"article_link,omitempty"`
}

func (x *CreatePublishedArticleRequest) Reset() {
	*x = CreatePublishedArticleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePublishedArticleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePublishedArticleRequest) ProtoMessage() {}

func (x *CreatePublishedArticleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePublishedArticleRequest.ProtoReflect.Descriptor instead.
func (*CreatePublishedArticleRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{11}
}

func (x *CreatePublishedArticleRequest) GetNewArticleSid() int64 {
	if x != nil {
		return x.NewArticleSid
	}
	return 0
}

func (x *CreatePublishedArticleRequest) GetDisplayToUser() bool {
	if x != nil {
		return x.DisplayToUser
	}
	return false
}

func (x *CreatePublishedArticleRequest) GetArticleLink() string {
	if x != nil {
		return x.ArticleLink
	}
	return ""
}

// Response to create published article
type CreatePublishedArticleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// news article details
	PublishedArticleDetails *PublishedArticleDetails `protobuf:"bytes,1,opt,name=published_article_details,json=publishedArticleDetails,proto3" json:"published_article_details,omitempty"`
}

func (x *CreatePublishedArticleResponse) Reset() {
	*x = CreatePublishedArticleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePublishedArticleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePublishedArticleResponse) ProtoMessage() {}

func (x *CreatePublishedArticleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePublishedArticleResponse.ProtoReflect.Descriptor instead.
func (*CreatePublishedArticleResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{12}
}

func (x *CreatePublishedArticleResponse) GetPublishedArticleDetails() *PublishedArticleDetails {
	if x != nil {
		return x.PublishedArticleDetails
	}
	return nil
}

// Request to list of published articles
type ListPublishedArticlesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListPublishedArticlesRequest) Reset() {
	*x = ListPublishedArticlesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPublishedArticlesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPublishedArticlesRequest) ProtoMessage() {}

func (x *ListPublishedArticlesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPublishedArticlesRequest.ProtoReflect.Descriptor instead.
func (*ListPublishedArticlesRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{13}
}

// Response to list of published articles
type ListPublishedArticlesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// published article details
	PublishedArticleDetails []*PublishedArticleDetails `protobuf:"bytes,1,rep,name=published_article_details,json=publishedArticleDetails,proto3" json:"published_article_details,omitempty"`
}

func (x *ListPublishedArticlesResponse) Reset() {
	*x = ListPublishedArticlesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPublishedArticlesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPublishedArticlesResponse) ProtoMessage() {}

func (x *ListPublishedArticlesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPublishedArticlesResponse.ProtoReflect.Descriptor instead.
func (*ListPublishedArticlesResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{14}
}

func (x *ListPublishedArticlesResponse) GetPublishedArticleDetails() []*PublishedArticleDetails {
	if x != nil {
		return x.PublishedArticleDetails
	}
	return nil
}

// Request to get published article by id
type GetPublishedArticleByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// deprecated
	//
	// Deprecated: Marked as deprecated in api/v1alpha1/newsroom/entities.proto.
	NewArticleSid int64 `protobuf:"varint,1,opt,name=new_article_sid,json=newArticleSid,proto3" json:"new_article_sid,omitempty"`
	// the unique published article sid
	PublishedArticleSid int64 `protobuf:"varint,2,opt,name=published_article_sid,json=publishedArticleSid,proto3" json:"published_article_sid,omitempty"`
}

func (x *GetPublishedArticleByIdRequest) Reset() {
	*x = GetPublishedArticleByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPublishedArticleByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPublishedArticleByIdRequest) ProtoMessage() {}

func (x *GetPublishedArticleByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPublishedArticleByIdRequest.ProtoReflect.Descriptor instead.
func (*GetPublishedArticleByIdRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{15}
}

// Deprecated: Marked as deprecated in api/v1alpha1/newsroom/entities.proto.
func (x *GetPublishedArticleByIdRequest) GetNewArticleSid() int64 {
	if x != nil {
		return x.NewArticleSid
	}
	return 0
}

func (x *GetPublishedArticleByIdRequest) GetPublishedArticleSid() int64 {
	if x != nil {
		return x.PublishedArticleSid
	}
	return 0
}

// Response to get published article
type GetPublishedArticleByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// published article details
	PublishedArticleDetails *PublishedArticleDetails `protobuf:"bytes,1,opt,name=published_article_details,json=publishedArticleDetails,proto3" json:"published_article_details,omitempty"`
}

func (x *GetPublishedArticleByIdResponse) Reset() {
	*x = GetPublishedArticleByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPublishedArticleByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPublishedArticleByIdResponse) ProtoMessage() {}

func (x *GetPublishedArticleByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPublishedArticleByIdResponse.ProtoReflect.Descriptor instead.
func (*GetPublishedArticleByIdResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{16}
}

func (x *GetPublishedArticleByIdResponse) GetPublishedArticleDetails() *PublishedArticleDetails {
	if x != nil {
		return x.PublishedArticleDetails
	}
	return nil
}

// Request to update user activity
type UserActivityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the unique published article identifier
	PublishedArticleSid int64 `protobuf:"varint,1,opt,name=published_article_sid,json=publishedArticleSid,proto3" json:"published_article_sid,omitempty"`
}

func (x *UserActivityRequest) Reset() {
	*x = UserActivityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserActivityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserActivityRequest) ProtoMessage() {}

func (x *UserActivityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserActivityRequest.ProtoReflect.Descriptor instead.
func (*UserActivityRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{17}
}

func (x *UserActivityRequest) GetPublishedArticleSid() int64 {
	if x != nil {
		return x.PublishedArticleSid
	}
	return 0
}

// Response to user activity updates
type UserActivityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// user activity details
	UserActivity *UserActivity `protobuf:"bytes,1,opt,name=user_activity,json=userActivity,proto3" json:"user_activity,omitempty"`
}

func (x *UserActivityResponse) Reset() {
	*x = UserActivityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserActivityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserActivityResponse) ProtoMessage() {}

func (x *UserActivityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserActivityResponse.ProtoReflect.Descriptor instead.
func (*UserActivityResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{18}
}

func (x *UserActivityResponse) GetUserActivity() *UserActivity {
	if x != nil {
		return x.UserActivity
	}
	return nil
}

// Request to get unseen news articles for the user
type GetNewsForUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetNewsForUserRequest) Reset() {
	*x = GetNewsForUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNewsForUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNewsForUserRequest) ProtoMessage() {}

func (x *GetNewsForUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNewsForUserRequest.ProtoReflect.Descriptor instead.
func (*GetNewsForUserRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{19}
}

// Response to unseen news articles for the user
type GetNewsForUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// published article details
	PublishedArticleDetails []*PublishedArticleDetails `protobuf:"bytes,1,rep,name=published_article_details,json=publishedArticleDetails,proto3" json:"published_article_details,omitempty"`
}

func (x *GetNewsForUserResponse) Reset() {
	*x = GetNewsForUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNewsForUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNewsForUserResponse) ProtoMessage() {}

func (x *GetNewsForUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNewsForUserResponse.ProtoReflect.Descriptor instead.
func (*GetNewsForUserResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{20}
}

func (x *GetNewsForUserResponse) GetPublishedArticleDetails() []*PublishedArticleDetails {
	if x != nil {
		return x.PublishedArticleDetails
	}
	return nil
}

// request to upload image for the news article
type StoreNewsArticleImageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// NewsArticleImage
	Image *NewsArticleImage `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
}

func (x *StoreNewsArticleImageRequest) Reset() {
	*x = StoreNewsArticleImageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreNewsArticleImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreNewsArticleImageRequest) ProtoMessage() {}

func (x *StoreNewsArticleImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreNewsArticleImageRequest.ProtoReflect.Descriptor instead.
func (*StoreNewsArticleImageRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{21}
}

func (x *StoreNewsArticleImageRequest) GetImage() *NewsArticleImage {
	if x != nil {
		return x.Image
	}
	return nil
}

// image for the news article details
type NewsArticleImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// unique name of the image
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// image for the new article
	NewArticleSid int64 `protobuf:"varint,2,opt,name=new_article_sid,json=newArticleSid,proto3" json:"new_article_sid,omitempty"`
	// image content
	Content string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	// download image url
	DownloadUrl string `protobuf:"bytes,4,opt,name=download_url,json=downloadUrl,proto3" json:"download_url,omitempty"`
	// image reference id
	ImageReferenceId string `protobuf:"bytes,5,opt,name=image_reference_id,json=imageReferenceId,proto3" json:"image_reference_id,omitempty"`
	// image type
	ImageType string `protobuf:"bytes,6,opt,name=image_type,json=imageType,proto3" json:"image_type,omitempty"`
}

func (x *NewsArticleImage) Reset() {
	*x = NewsArticleImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewsArticleImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewsArticleImage) ProtoMessage() {}

func (x *NewsArticleImage) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewsArticleImage.ProtoReflect.Descriptor instead.
func (*NewsArticleImage) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{22}
}

func (x *NewsArticleImage) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *NewsArticleImage) GetNewArticleSid() int64 {
	if x != nil {
		return x.NewArticleSid
	}
	return 0
}

func (x *NewsArticleImage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *NewsArticleImage) GetDownloadUrl() string {
	if x != nil {
		return x.DownloadUrl
	}
	return ""
}

func (x *NewsArticleImage) GetImageReferenceId() string {
	if x != nil {
		return x.ImageReferenceId
	}
	return ""
}

func (x *NewsArticleImage) GetImageType() string {
	if x != nil {
		return x.ImageType
	}
	return ""
}

// response to uploaded image
type StoreNewsArticleImageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// stored image details
	Image *NewsArticleImage `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
}

func (x *StoreNewsArticleImageResponse) Reset() {
	*x = StoreNewsArticleImageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreNewsArticleImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreNewsArticleImageResponse) ProtoMessage() {}

func (x *StoreNewsArticleImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreNewsArticleImageResponse.ProtoReflect.Descriptor instead.
func (*StoreNewsArticleImageResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{23}
}

func (x *StoreNewsArticleImageResponse) GetImage() *NewsArticleImage {
	if x != nil {
		return x.Image
	}
	return nil
}

// request to list all images news article
type ListImagesForNewsArticleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// images for the new article sid
	NewArticleSid int64 `protobuf:"varint,1,opt,name=new_article_sid,json=newArticleSid,proto3" json:"new_article_sid,omitempty"`
}

func (x *ListImagesForNewsArticleRequest) Reset() {
	*x = ListImagesForNewsArticleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListImagesForNewsArticleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListImagesForNewsArticleRequest) ProtoMessage() {}

func (x *ListImagesForNewsArticleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListImagesForNewsArticleRequest.ProtoReflect.Descriptor instead.
func (*ListImagesForNewsArticleRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{24}
}

func (x *ListImagesForNewsArticleRequest) GetNewArticleSid() int64 {
	if x != nil {
		return x.NewArticleSid
	}
	return 0
}

// response to list all images for the news article
type ListImagesForNewsArticleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// images for the news article
	NewsArticleImages []*NewsArticleImage `protobuf:"bytes,1,rep,name=news_article_images,json=newsArticleImages,proto3" json:"news_article_images,omitempty"`
}

func (x *ListImagesForNewsArticleResponse) Reset() {
	*x = ListImagesForNewsArticleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListImagesForNewsArticleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListImagesForNewsArticleResponse) ProtoMessage() {}

func (x *ListImagesForNewsArticleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListImagesForNewsArticleResponse.ProtoReflect.Descriptor instead.
func (*ListImagesForNewsArticleResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{25}
}

func (x *ListImagesForNewsArticleResponse) GetNewsArticleImages() []*NewsArticleImage {
	if x != nil {
		return x.NewsArticleImages
	}
	return nil
}

// user activity details
type UserActivity_UserActivityDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the unique published article identifier
	PublishedArticleSid int64 `protobuf:"varint,1,opt,name=published_article_sid,json=publishedArticleSid,proto3" json:"published_article_sid,omitempty"`
}

func (x *UserActivity_UserActivityDetails) Reset() {
	*x = UserActivity_UserActivityDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserActivity_UserActivityDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserActivity_UserActivityDetails) ProtoMessage() {}

func (x *UserActivity_UserActivityDetails) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserActivity_UserActivityDetails.ProtoReflect.Descriptor instead.
func (*UserActivity_UserActivityDetails) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{10, 0}
}

func (x *UserActivity_UserActivityDetails) GetPublishedArticleSid() int64 {
	if x != nil {
		return x.PublishedArticleSid
	}
	return 0
}

var File_api_v1alpha1_newsroom_entities_proto protoreflect.FileDescriptor

var file_api_v1alpha1_newsroom_entities_proto_rawDesc = []byte{
	0x0a, 0x24, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x6e,
	0x65, 0x77, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x6e, 0x65, 0x77, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x1a, 0x1a, 0x61,
	0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2f, 0x6e, 0x65, 0x77, 0x73, 0x72,
	0x6f, 0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x90, 0x01, 0x0a,
	0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x77, 0x73, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x12, 0x2c, 0x0a, 0x12, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x22,
	0x6f, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x77, 0x73, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0f,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x6e, 0x65, 0x77, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x4e, 0x65,
	0x77, 0x73, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x52, 0x0e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x22, 0x8c, 0x01, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x65, 0x77, 0x73, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x08,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1a,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61,
	0x73, 0x6b, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x4d, 0x61, 0x73, 0x6b, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x22,
	0x6e, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x65, 0x77, 0x73, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0f, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x6e, 0x65, 0x77, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x4e, 0x65, 0x77,
	0x73, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52,
	0x0e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22,
	0x47, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x73, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x0f,
	0x6e, 0x65, 0x77, 0x5f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x0d, 0x6e, 0x65, 0x77, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x69, 0x64, 0x22, 0x70, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4e,
	0x65, 0x77, 0x73, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x6e,
	0x65, 0x77, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x4e, 0x65, 0x77, 0x73, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0e, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0xa9, 0x01, 0x0a, 0x18, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x77, 0x73, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x52, 0x0a, 0x0f, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x6e, 0x65, 0x77, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x4e, 0x65, 0x77, 0x73, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0e, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x09, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x6f, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4e, 0x65, 0x77, 0x73, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x6e, 0x65, 0x77, 0x73,
	0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x4e, 0x65, 0x77, 0x73, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0xe6, 0x02, 0x0a, 0x12, 0x4e, 0x65, 0x77, 0x73,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x2a,
	0x0a, 0x0f, 0x6e, 0x65, 0x77, 0x5f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x73, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x0d, 0x6e, 0x65, 0x77,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3d,
	0x0a, 0x0c, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x3b, 0x0a,
	0x0b, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a,
	0x6c, 0x61, 0x73, 0x74, 0x45, 0x64, 0x69, 0x74, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x12, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64,
	0x22, 0x99, 0x02, 0x0a, 0x17, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x36, 0x0a, 0x15,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52,
	0x13, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x53, 0x69, 0x64, 0x12, 0x5b, 0x0a, 0x14, 0x6e, 0x65, 0x77, 0x73, 0x5f, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x6e, 0x65, 0x77, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x4e, 0x65, 0x77, 0x73, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x12, 0x6e,
	0x65, 0x77, 0x73, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x12, 0x41, 0x0a, 0x0e, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x64, 0x61, 0x74, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f,
	0x74, 0x6f, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x22, 0xc0, 0x02, 0x0a,
	0x0c, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x35, 0x0a,
	0x15, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x6c,
	0x6f, 0x67, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01,
	0x52, 0x12, 0x75, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4c, 0x6f,
	0x67, 0x53, 0x69, 0x64, 0x12, 0x3d, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x6b, 0x0a, 0x15, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x37, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x6e, 0x65, 0x77, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x13, 0x75, 0x73, 0x65,
	0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x1a, 0x4d, 0x0a, 0x13, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x36, 0x0a, 0x15, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x65, 0x64, 0x5f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x13, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x65, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x69, 0x64, 0x22,
	0x96, 0x01, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x65, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2a, 0x0a, 0x0f, 0x6e, 0x65, 0x77, 0x5f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x5f, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x0d,
	0x6e, 0x65, 0x77, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x69, 0x64, 0x12, 0x26, 0x0a,
	0x0f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54,
	0x6f, 0x55, 0x73, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x22, 0x8c, 0x01, 0x0a, 0x1e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a, 0x19, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x6e, 0x65,
	0x77, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x17,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x1e, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x8b, 0x01, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a, 0x19, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x6e, 0x65, 0x77, 0x73,
	0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x17, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x84, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x0f, 0x6e, 0x65, 0x77, 0x5f,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0d, 0x6e, 0x65, 0x77, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x53, 0x69, 0x64, 0x12, 0x36, 0x0a, 0x15, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65,
	0x64, 0x5f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x13, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x65, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x69, 0x64, 0x22, 0x8d, 0x01, 0x0a,
	0x1f, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x6a, 0x0a, 0x19, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x6e, 0x65, 0x77, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x65, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x52, 0x17, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x4d, 0x0a, 0x13,
	0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x15, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64,
	0x5f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x13, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65,
	0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x69, 0x64, 0x22, 0x60, 0x0a, 0x14, 0x55,
	0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x6e, 0x65, 0x77, 0x73, 0x72, 0x6f,
	0x6f, 0x6d, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52,
	0x0c, 0x75, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x22, 0x17, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x73, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x84, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4e, 0x65,
	0x77, 0x73, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x6a, 0x0a, 0x19, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x6e, 0x65, 0x77, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x17, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x5d, 0x0a,
	0x1c, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4e, 0x65, 0x77, 0x73, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a,
	0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x6e, 0x65, 0x77, 0x73,
	0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x4e, 0x65, 0x77, 0x73, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x22, 0xdc, 0x01, 0x0a,
	0x10, 0x4e, 0x65, 0x77, 0x73, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x0f, 0x6e, 0x65, 0x77, 0x5f, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02,
	0x30, 0x01, 0x52, 0x0d, 0x6e, 0x65, 0x77, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x69,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x64,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x12, 0x2c,
	0x0a, 0x12, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x5e, 0x0a, 0x1d, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x4e, 0x65, 0x77, 0x73, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x05,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x6e, 0x65, 0x77, 0x73, 0x72,
	0x6f, 0x6f, 0x6d, 0x2e, 0x4e, 0x65, 0x77, 0x73, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x22, 0x4d, 0x0a, 0x1f, 0x4c,
	0x69, 0x73, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x4e, 0x65, 0x77, 0x73,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a,
	0x0a, 0x0f, 0x6e, 0x65, 0x77, 0x5f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x73, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x0d, 0x6e, 0x65, 0x77,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x69, 0x64, 0x22, 0x7b, 0x0a, 0x20, 0x4c, 0x69,
	0x73, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x4e, 0x65, 0x77, 0x73, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57,
	0x0a, 0x13, 0x6e, 0x65, 0x77, 0x73, 0x5f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x6e, 0x65, 0x77, 0x73, 0x72,
	0x6f, 0x6f, 0x6d, 0x2e, 0x4e, 0x65, 0x77, 0x73, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x52, 0x11, 0x6e, 0x65, 0x77, 0x73, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x42, 0xd2, 0x01, 0x0a, 0x19, 0x63, 0x6f, 0x6d, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x6e, 0x65, 0x77,
	0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x42, 0x0d, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x74, 0x63, 0x6e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x61, 0x70, 0x69, 0x2d,
	0x67, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f,
	0x6e, 0x65, 0x77, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0xa2, 0x02, 0x03, 0x41, 0x56, 0x4e, 0xaa, 0x02,
	0x15, 0x41, 0x70, 0x69, 0x2e, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4e, 0x65,
	0x77, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0xca, 0x02, 0x15, 0x41, 0x70, 0x69, 0x5c, 0x56, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x5c, 0x4e, 0x65, 0x77, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0xe2, 0x02,
	0x21, 0x41, 0x70, 0x69, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x5c, 0x4e, 0x65,
	0x77, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0xea, 0x02, 0x17, 0x41, 0x70, 0x69, 0x3a, 0x3a, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x3a, 0x3a, 0x4e, 0x65, 0x77, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_v1alpha1_newsroom_entities_proto_rawDescOnce sync.Once
	file_api_v1alpha1_newsroom_entities_proto_rawDescData = file_api_v1alpha1_newsroom_entities_proto_rawDesc
)

func file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP() []byte {
	file_api_v1alpha1_newsroom_entities_proto_rawDescOnce.Do(func() {
		file_api_v1alpha1_newsroom_entities_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v1alpha1_newsroom_entities_proto_rawDescData)
	})
	return file_api_v1alpha1_newsroom_entities_proto_rawDescData
}

var file_api_v1alpha1_newsroom_entities_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_api_v1alpha1_newsroom_entities_proto_goTypes = []interface{}{
	(*CreateNewsArticleRequest)(nil),         // 0: api.v1alpha1.newsroom.CreateNewsArticleRequest
	(*CreateNewsArticleResponse)(nil),        // 1: api.v1alpha1.newsroom.CreateNewsArticleResponse
	(*ListNewsArticlesRequest)(nil),          // 2: api.v1alpha1.newsroom.ListNewsArticlesRequest
	(*ListNewsArticlesResponse)(nil),         // 3: api.v1alpha1.newsroom.ListNewsArticlesResponse
	(*GetNewsArticleByIdRequest)(nil),        // 4: api.v1alpha1.newsroom.GetNewsArticleByIdRequest
	(*GetNewsArticleByIdResponse)(nil),       // 5: api.v1alpha1.newsroom.GetNewsArticleByIdResponse
	(*UpdateNewsArticleRequest)(nil),         // 6: api.v1alpha1.newsroom.UpdateNewsArticleRequest
	(*UpdateNewsArticleResponse)(nil),        // 7: api.v1alpha1.newsroom.UpdateNewsArticleResponse
	(*NewsArticleDetails)(nil),               // 8: api.v1alpha1.newsroom.NewsArticleDetails
	(*PublishedArticleDetails)(nil),          // 9: api.v1alpha1.newsroom.PublishedArticleDetails
	(*UserActivity)(nil),                     // 10: api.v1alpha1.newsroom.UserActivity
	(*CreatePublishedArticleRequest)(nil),    // 11: api.v1alpha1.newsroom.CreatePublishedArticleRequest
	(*CreatePublishedArticleResponse)(nil),   // 12: api.v1alpha1.newsroom.CreatePublishedArticleResponse
	(*ListPublishedArticlesRequest)(nil),     // 13: api.v1alpha1.newsroom.ListPublishedArticlesRequest
	(*ListPublishedArticlesResponse)(nil),    // 14: api.v1alpha1.newsroom.ListPublishedArticlesResponse
	(*GetPublishedArticleByIdRequest)(nil),   // 15: api.v1alpha1.newsroom.GetPublishedArticleByIdRequest
	(*GetPublishedArticleByIdResponse)(nil),  // 16: api.v1alpha1.newsroom.GetPublishedArticleByIdResponse
	(*UserActivityRequest)(nil),              // 17: api.v1alpha1.newsroom.UserActivityRequest
	(*UserActivityResponse)(nil),             // 18: api.v1alpha1.newsroom.UserActivityResponse
	(*GetNewsForUserRequest)(nil),            // 19: api.v1alpha1.newsroom.GetNewsForUserRequest
	(*GetNewsForUserResponse)(nil),           // 20: api.v1alpha1.newsroom.GetNewsForUserResponse
	(*StoreNewsArticleImageRequest)(nil),     // 21: api.v1alpha1.newsroom.StoreNewsArticleImageRequest
	(*NewsArticleImage)(nil),                 // 22: api.v1alpha1.newsroom.NewsArticleImage
	(*StoreNewsArticleImageResponse)(nil),    // 23: api.v1alpha1.newsroom.StoreNewsArticleImageResponse
	(*ListImagesForNewsArticleRequest)(nil),  // 24: api.v1alpha1.newsroom.ListImagesForNewsArticleRequest
	(*ListImagesForNewsArticleResponse)(nil), // 25: api.v1alpha1.newsroom.ListImagesForNewsArticleResponse
	(*UserActivity_UserActivityDetails)(nil), // 26: api.v1alpha1.newsroom.UserActivity.UserActivityDetails
	(commons.ArticleStatus)(0),               // 27: api.commons.ArticleStatus
	(*fieldmaskpb.FieldMask)(nil),            // 28: google.protobuf.FieldMask
	(*timestamppb.Timestamp)(nil),            // 29: google.protobuf.Timestamp
}
var file_api_v1alpha1_newsroom_entities_proto_depIdxs = []int32{
	8,  // 0: api.v1alpha1.newsroom.CreateNewsArticleResponse.article_details:type_name -> api.v1alpha1.newsroom.NewsArticleDetails
	27, // 1: api.v1alpha1.newsroom.ListNewsArticlesRequest.statuses:type_name -> api.commons.ArticleStatus
	28, // 2: api.v1alpha1.newsroom.ListNewsArticlesRequest.field_mask:type_name -> google.protobuf.FieldMask
	8,  // 3: api.v1alpha1.newsroom.ListNewsArticlesResponse.article_details:type_name -> api.v1alpha1.newsroom.NewsArticleDetails
	8,  // 4: api.v1alpha1.newsroom.GetNewsArticleByIdResponse.article_details:type_name -> api.v1alpha1.newsroom.NewsArticleDetails
	8,  // 5: api.v1alpha1.newsroom.UpdateNewsArticleRequest.article_details:type_name -> api.v1alpha1.newsroom.NewsArticleDetails
	28, // 6: api.v1alpha1.newsroom.UpdateNewsArticleRequest.field_mask:type_name -> google.protobuf.FieldMask
	8,  // 7: api.v1alpha1.newsroom.UpdateNewsArticleResponse.article_details:type_name -> api.v1alpha1.newsroom.NewsArticleDetails
	27, // 8: api.v1alpha1.newsroom.NewsArticleDetails.status:type_name -> api.commons.ArticleStatus
	29, // 9: api.v1alpha1.newsroom.NewsArticleDetails.date_created:type_name -> google.protobuf.Timestamp
	29, // 10: api.v1alpha1.newsroom.NewsArticleDetails.last_edited:type_name -> google.protobuf.Timestamp
	8,  // 11: api.v1alpha1.newsroom.PublishedArticleDetails.news_article_details:type_name -> api.v1alpha1.newsroom.NewsArticleDetails
	29, // 12: api.v1alpha1.newsroom.PublishedArticleDetails.date_published:type_name -> google.protobuf.Timestamp
	29, // 13: api.v1alpha1.newsroom.UserActivity.date_created:type_name -> google.protobuf.Timestamp
	26, // 14: api.v1alpha1.newsroom.UserActivity.user_activity_details:type_name -> api.v1alpha1.newsroom.UserActivity.UserActivityDetails
	9,  // 15: api.v1alpha1.newsroom.CreatePublishedArticleResponse.published_article_details:type_name -> api.v1alpha1.newsroom.PublishedArticleDetails
	9,  // 16: api.v1alpha1.newsroom.ListPublishedArticlesResponse.published_article_details:type_name -> api.v1alpha1.newsroom.PublishedArticleDetails
	9,  // 17: api.v1alpha1.newsroom.GetPublishedArticleByIdResponse.published_article_details:type_name -> api.v1alpha1.newsroom.PublishedArticleDetails
	10, // 18: api.v1alpha1.newsroom.UserActivityResponse.user_activity:type_name -> api.v1alpha1.newsroom.UserActivity
	9,  // 19: api.v1alpha1.newsroom.GetNewsForUserResponse.published_article_details:type_name -> api.v1alpha1.newsroom.PublishedArticleDetails
	22, // 20: api.v1alpha1.newsroom.StoreNewsArticleImageRequest.image:type_name -> api.v1alpha1.newsroom.NewsArticleImage
	22, // 21: api.v1alpha1.newsroom.StoreNewsArticleImageResponse.image:type_name -> api.v1alpha1.newsroom.NewsArticleImage
	22, // 22: api.v1alpha1.newsroom.ListImagesForNewsArticleResponse.news_article_images:type_name -> api.v1alpha1.newsroom.NewsArticleImage
	23, // [23:23] is the sub-list for method output_type
	23, // [23:23] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_api_v1alpha1_newsroom_entities_proto_init() }
func file_api_v1alpha1_newsroom_entities_proto_init() {
	if File_api_v1alpha1_newsroom_entities_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_v1alpha1_newsroom_entities_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNewsArticleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_newsroom_entities_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNewsArticleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_newsroom_entities_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNewsArticlesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_newsroom_entities_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNewsArticlesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_newsroom_entities_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNewsArticleByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_newsroom_entities_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNewsArticleByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_newsroom_entities_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNewsArticleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_newsroom_entities_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNewsArticleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_newsroom_entities_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewsArticleDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_newsroom_entities_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishedArticleDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_newsroom_entities_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserActivity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_newsroom_entities_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePublishedArticleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_newsroom_entities_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePublishedArticleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_newsroom_entities_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPublishedArticlesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_newsroom_entities_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPublishedArticlesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_newsroom_entities_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPublishedArticleByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_newsroom_entities_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPublishedArticleByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_newsroom_entities_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserActivityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_newsroom_entities_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserActivityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_newsroom_entities_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNewsForUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_newsroom_entities_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNewsForUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_newsroom_entities_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreNewsArticleImageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_newsroom_entities_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewsArticleImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_newsroom_entities_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreNewsArticleImageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_newsroom_entities_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListImagesForNewsArticleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_newsroom_entities_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListImagesForNewsArticleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_newsroom_entities_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserActivity_UserActivityDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v1alpha1_newsroom_entities_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_v1alpha1_newsroom_entities_proto_goTypes,
		DependencyIndexes: file_api_v1alpha1_newsroom_entities_proto_depIdxs,
		MessageInfos:      file_api_v1alpha1_newsroom_entities_proto_msgTypes,
	}.Build()
	File_api_v1alpha1_newsroom_entities_proto = out.File
	file_api_v1alpha1_newsroom_entities_proto_rawDesc = nil
	file_api_v1alpha1_newsroom_entities_proto_goTypes = nil
	file_api_v1alpha1_newsroom_entities_proto_depIdxs = nil
}
