// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: api/v1alpha1/newsroom/entities.proto

package newsroom

import (
	commons "github.com/tcncloud/api-go/api/commons"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request to create news article
type CreateNewsArticleRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// news article title
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// markdown content
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	// article author
	Author string `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`
	// image reference id
	ImageReferenceId string `protobuf:"bytes,4,opt,name=image_reference_id,json=imageReferenceId,proto3" json:"image_reference_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CreateNewsArticleRequest) Reset() {
	*x = CreateNewsArticleRequest{}
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNewsArticleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNewsArticleRequest) ProtoMessage() {}

func (x *CreateNewsArticleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNewsArticleRequest.ProtoReflect.Descriptor instead.
func (*CreateNewsArticleRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{0}
}

func (x *CreateNewsArticleRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateNewsArticleRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreateNewsArticleRequest) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *CreateNewsArticleRequest) GetImageReferenceId() string {
	if x != nil {
		return x.ImageReferenceId
	}
	return ""
}

// Response to create news article
type CreateNewsArticleResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// news article details
	ArticleDetails *NewsArticleDetails `protobuf:"bytes,1,opt,name=article_details,json=articleDetails,proto3" json:"article_details,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreateNewsArticleResponse) Reset() {
	*x = CreateNewsArticleResponse{}
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNewsArticleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNewsArticleResponse) ProtoMessage() {}

func (x *CreateNewsArticleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNewsArticleResponse.ProtoReflect.Descriptor instead.
func (*CreateNewsArticleResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{1}
}

func (x *CreateNewsArticleResponse) GetArticleDetails() *NewsArticleDetails {
	if x != nil {
		return x.ArticleDetails
	}
	return nil
}

// Request to list of news articles
type ListNewsArticlesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the statuses to select by when listing articles (if empty, selects all)
	Statuses []commons.ArticleStatus `protobuf:"varint,1,rep,packed,name=statuses,proto3,enum=api.commons.ArticleStatus" json:"statuses,omitempty"`
	// list of article details to be Requested
	FieldMask     *fieldmaskpb.FieldMask `protobuf:"bytes,100,opt,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNewsArticlesRequest) Reset() {
	*x = ListNewsArticlesRequest{}
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNewsArticlesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNewsArticlesRequest) ProtoMessage() {}

func (x *ListNewsArticlesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNewsArticlesRequest.ProtoReflect.Descriptor instead.
func (*ListNewsArticlesRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{2}
}

func (x *ListNewsArticlesRequest) GetStatuses() []commons.ArticleStatus {
	if x != nil {
		return x.Statuses
	}
	return nil
}

func (x *ListNewsArticlesRequest) GetFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

// Response to list of news articles
type ListNewsArticlesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// article details
	ArticleDetails []*NewsArticleDetails `protobuf:"bytes,1,rep,name=article_details,json=articleDetails,proto3" json:"article_details,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ListNewsArticlesResponse) Reset() {
	*x = ListNewsArticlesResponse{}
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNewsArticlesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNewsArticlesResponse) ProtoMessage() {}

func (x *ListNewsArticlesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNewsArticlesResponse.ProtoReflect.Descriptor instead.
func (*ListNewsArticlesResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{3}
}

func (x *ListNewsArticlesResponse) GetArticleDetails() []*NewsArticleDetails {
	if x != nil {
		return x.ArticleDetails
	}
	return nil
}

// Request to get news article by id
type GetNewsArticleByIdRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the unique news article identifier
	NewArticleSid int64 `protobuf:"varint,1,opt,name=new_article_sid,json=newArticleSid,proto3" json:"new_article_sid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNewsArticleByIdRequest) Reset() {
	*x = GetNewsArticleByIdRequest{}
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNewsArticleByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNewsArticleByIdRequest) ProtoMessage() {}

func (x *GetNewsArticleByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNewsArticleByIdRequest.ProtoReflect.Descriptor instead.
func (*GetNewsArticleByIdRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{4}
}

func (x *GetNewsArticleByIdRequest) GetNewArticleSid() int64 {
	if x != nil {
		return x.NewArticleSid
	}
	return 0
}

// Response to get news article
type GetNewsArticleByIdResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// news article details
	ArticleDetails *NewsArticleDetails `protobuf:"bytes,1,opt,name=article_details,json=articleDetails,proto3" json:"article_details,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetNewsArticleByIdResponse) Reset() {
	*x = GetNewsArticleByIdResponse{}
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNewsArticleByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNewsArticleByIdResponse) ProtoMessage() {}

func (x *GetNewsArticleByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNewsArticleByIdResponse.ProtoReflect.Descriptor instead.
func (*GetNewsArticleByIdResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{5}
}

func (x *GetNewsArticleByIdResponse) GetArticleDetails() *NewsArticleDetails {
	if x != nil {
		return x.ArticleDetails
	}
	return nil
}

// Request to update news article
type UpdateNewsArticleRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the news article fields specified to be updated
	ArticleDetails *NewsArticleDetails `protobuf:"bytes,1,opt,name=article_details,json=articleDetails,proto3" json:"article_details,omitempty"`
	// list of fields Requested to be updated
	FieldMask     *fieldmaskpb.FieldMask `protobuf:"bytes,100,opt,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNewsArticleRequest) Reset() {
	*x = UpdateNewsArticleRequest{}
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNewsArticleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNewsArticleRequest) ProtoMessage() {}

func (x *UpdateNewsArticleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNewsArticleRequest.ProtoReflect.Descriptor instead.
func (*UpdateNewsArticleRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateNewsArticleRequest) GetArticleDetails() *NewsArticleDetails {
	if x != nil {
		return x.ArticleDetails
	}
	return nil
}

func (x *UpdateNewsArticleRequest) GetFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

// Response to update news article
type UpdateNewsArticleResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// updated news article
	ArticleDetails *NewsArticleDetails `protobuf:"bytes,1,opt,name=article_details,json=articleDetails,proto3" json:"article_details,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UpdateNewsArticleResponse) Reset() {
	*x = UpdateNewsArticleResponse{}
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNewsArticleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNewsArticleResponse) ProtoMessage() {}

func (x *UpdateNewsArticleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNewsArticleResponse.ProtoReflect.Descriptor instead.
func (*UpdateNewsArticleResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateNewsArticleResponse) GetArticleDetails() *NewsArticleDetails {
	if x != nil {
		return x.ArticleDetails
	}
	return nil
}

// news article details
type NewsArticleDetails struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the unique news article identifier
	NewArticleSid int64 `protobuf:"varint,1,opt,name=new_article_sid,json=newArticleSid,proto3" json:"new_article_sid,omitempty"`
	// news article title
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// markdown content
	Content string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	// article status
	Status commons.ArticleStatus `protobuf:"varint,4,opt,name=status,proto3,enum=api.commons.ArticleStatus" json:"status,omitempty"`
	// news article creation date
	DateCreated *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=date_created,json=dateCreated,proto3" json:"date_created,omitempty"`
	// news article last updated date
	LastEdited *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=last_edited,json=lastEdited,proto3" json:"last_edited,omitempty"`
	// article author
	Author string `protobuf:"bytes,7,opt,name=author,proto3" json:"author,omitempty"`
	// image reference id
	ImageReferenceId string `protobuf:"bytes,8,opt,name=image_reference_id,json=imageReferenceId,proto3" json:"image_reference_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *NewsArticleDetails) Reset() {
	*x = NewsArticleDetails{}
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewsArticleDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewsArticleDetails) ProtoMessage() {}

func (x *NewsArticleDetails) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewsArticleDetails.ProtoReflect.Descriptor instead.
func (*NewsArticleDetails) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{8}
}

func (x *NewsArticleDetails) GetNewArticleSid() int64 {
	if x != nil {
		return x.NewArticleSid
	}
	return 0
}

func (x *NewsArticleDetails) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *NewsArticleDetails) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *NewsArticleDetails) GetStatus() commons.ArticleStatus {
	if x != nil {
		return x.Status
	}
	return commons.ArticleStatus(0)
}

func (x *NewsArticleDetails) GetDateCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.DateCreated
	}
	return nil
}

func (x *NewsArticleDetails) GetLastEdited() *timestamppb.Timestamp {
	if x != nil {
		return x.LastEdited
	}
	return nil
}

func (x *NewsArticleDetails) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *NewsArticleDetails) GetImageReferenceId() string {
	if x != nil {
		return x.ImageReferenceId
	}
	return ""
}

// published article details
type PublishedArticleDetails struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the unique published article identifier
	PublishedArticleSid int64 `protobuf:"varint,1,opt,name=published_article_sid,json=publishedArticleSid,proto3" json:"published_article_sid,omitempty"`
	// news article details
	NewsArticleDetails *NewsArticleDetails `protobuf:"bytes,2,opt,name=news_article_details,json=newsArticleDetails,proto3" json:"news_article_details,omitempty"`
	// news article published date
	DatePublished *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=date_published,json=datePublished,proto3" json:"date_published,omitempty"`
	// this flag determines if we show to user or not
	DisplayToUser bool `protobuf:"varint,4,opt,name=display_to_user,json=displayToUser,proto3" json:"display_to_user,omitempty"`
	// this flag determines if we show to the user every time
	// they log in (for compliance for example)
	AlwaysDisplay bool `protobuf:"varint,5,opt,name=always_display,json=alwaysDisplay,proto3" json:"always_display,omitempty"`
	// differentiate between client and tcn articles
	IsClientArticle bool `protobuf:"varint,6,opt,name=is_client_article,json=isClientArticle,proto3" json:"is_client_article,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *PublishedArticleDetails) Reset() {
	*x = PublishedArticleDetails{}
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishedArticleDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishedArticleDetails) ProtoMessage() {}

func (x *PublishedArticleDetails) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishedArticleDetails.ProtoReflect.Descriptor instead.
func (*PublishedArticleDetails) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{9}
}

func (x *PublishedArticleDetails) GetPublishedArticleSid() int64 {
	if x != nil {
		return x.PublishedArticleSid
	}
	return 0
}

func (x *PublishedArticleDetails) GetNewsArticleDetails() *NewsArticleDetails {
	if x != nil {
		return x.NewsArticleDetails
	}
	return nil
}

func (x *PublishedArticleDetails) GetDatePublished() *timestamppb.Timestamp {
	if x != nil {
		return x.DatePublished
	}
	return nil
}

func (x *PublishedArticleDetails) GetDisplayToUser() bool {
	if x != nil {
		return x.DisplayToUser
	}
	return false
}

func (x *PublishedArticleDetails) GetAlwaysDisplay() bool {
	if x != nil {
		return x.AlwaysDisplay
	}
	return false
}

func (x *PublishedArticleDetails) GetIsClientArticle() bool {
	if x != nil {
		return x.IsClientArticle
	}
	return false
}

// user activity details
type UserActivity struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the unique user activity log identifier
	UserActivityLogSid int64 `protobuf:"varint,1,opt,name=user_activity_log_sid,json=userActivityLogSid,proto3" json:"user_activity_log_sid,omitempty"`
	// user activity created date
	DateCreated *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=date_created,json=dateCreated,proto3" json:"date_created,omitempty"`
	// user activity details
	UserActivityDetails *UserActivity_UserActivityDetails `protobuf:"bytes,3,opt,name=user_activity_details,json=userActivityDetails,proto3" json:"user_activity_details,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *UserActivity) Reset() {
	*x = UserActivity{}
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserActivity) ProtoMessage() {}

func (x *UserActivity) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserActivity.ProtoReflect.Descriptor instead.
func (*UserActivity) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{10}
}

func (x *UserActivity) GetUserActivityLogSid() int64 {
	if x != nil {
		return x.UserActivityLogSid
	}
	return 0
}

func (x *UserActivity) GetDateCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.DateCreated
	}
	return nil
}

func (x *UserActivity) GetUserActivityDetails() *UserActivity_UserActivityDetails {
	if x != nil {
		return x.UserActivityDetails
	}
	return nil
}

// Request to create published article
type CreatePublishedArticleRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// news article identifier
	NewArticleSid int64 `protobuf:"varint,1,opt,name=new_article_sid,json=newArticleSid,proto3" json:"new_article_sid,omitempty"`
	// determines if we show to user
	DisplayToUser bool `protobuf:"varint,2,opt,name=display_to_user,json=displayToUser,proto3" json:"display_to_user,omitempty"`
	// link to the published article
	ArticleLink   string `protobuf:"bytes,3,opt,name=article_link,json=articleLink,proto3" json:"article_link,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePublishedArticleRequest) Reset() {
	*x = CreatePublishedArticleRequest{}
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePublishedArticleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePublishedArticleRequest) ProtoMessage() {}

func (x *CreatePublishedArticleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePublishedArticleRequest.ProtoReflect.Descriptor instead.
func (*CreatePublishedArticleRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{11}
}

func (x *CreatePublishedArticleRequest) GetNewArticleSid() int64 {
	if x != nil {
		return x.NewArticleSid
	}
	return 0
}

func (x *CreatePublishedArticleRequest) GetDisplayToUser() bool {
	if x != nil {
		return x.DisplayToUser
	}
	return false
}

func (x *CreatePublishedArticleRequest) GetArticleLink() string {
	if x != nil {
		return x.ArticleLink
	}
	return ""
}

// Response to create published article
type CreatePublishedArticleResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// news article details
	PublishedArticleDetails *PublishedArticleDetails `protobuf:"bytes,1,opt,name=published_article_details,json=publishedArticleDetails,proto3" json:"published_article_details,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *CreatePublishedArticleResponse) Reset() {
	*x = CreatePublishedArticleResponse{}
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePublishedArticleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePublishedArticleResponse) ProtoMessage() {}

func (x *CreatePublishedArticleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePublishedArticleResponse.ProtoReflect.Descriptor instead.
func (*CreatePublishedArticleResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{12}
}

func (x *CreatePublishedArticleResponse) GetPublishedArticleDetails() *PublishedArticleDetails {
	if x != nil {
		return x.PublishedArticleDetails
	}
	return nil
}

// Request to list of published articles
type ListPublishedArticlesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPublishedArticlesRequest) Reset() {
	*x = ListPublishedArticlesRequest{}
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPublishedArticlesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPublishedArticlesRequest) ProtoMessage() {}

func (x *ListPublishedArticlesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPublishedArticlesRequest.ProtoReflect.Descriptor instead.
func (*ListPublishedArticlesRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{13}
}

// Response to list of published articles
type ListPublishedArticlesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// published article details
	PublishedArticleDetails []*PublishedArticleDetails `protobuf:"bytes,1,rep,name=published_article_details,json=publishedArticleDetails,proto3" json:"published_article_details,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ListPublishedArticlesResponse) Reset() {
	*x = ListPublishedArticlesResponse{}
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPublishedArticlesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPublishedArticlesResponse) ProtoMessage() {}

func (x *ListPublishedArticlesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPublishedArticlesResponse.ProtoReflect.Descriptor instead.
func (*ListPublishedArticlesResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{14}
}

func (x *ListPublishedArticlesResponse) GetPublishedArticleDetails() []*PublishedArticleDetails {
	if x != nil {
		return x.PublishedArticleDetails
	}
	return nil
}

// Request to get published article by id
type GetPublishedArticleByIdRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// deprecated
	//
	// Deprecated: Marked as deprecated in api/v1alpha1/newsroom/entities.proto.
	NewArticleSid int64 `protobuf:"varint,1,opt,name=new_article_sid,json=newArticleSid,proto3" json:"new_article_sid,omitempty"`
	// the unique published article sid
	PublishedArticleSid int64 `protobuf:"varint,2,opt,name=published_article_sid,json=publishedArticleSid,proto3" json:"published_article_sid,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *GetPublishedArticleByIdRequest) Reset() {
	*x = GetPublishedArticleByIdRequest{}
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPublishedArticleByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPublishedArticleByIdRequest) ProtoMessage() {}

func (x *GetPublishedArticleByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPublishedArticleByIdRequest.ProtoReflect.Descriptor instead.
func (*GetPublishedArticleByIdRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{15}
}

// Deprecated: Marked as deprecated in api/v1alpha1/newsroom/entities.proto.
func (x *GetPublishedArticleByIdRequest) GetNewArticleSid() int64 {
	if x != nil {
		return x.NewArticleSid
	}
	return 0
}

func (x *GetPublishedArticleByIdRequest) GetPublishedArticleSid() int64 {
	if x != nil {
		return x.PublishedArticleSid
	}
	return 0
}

// Response to get published article
type GetPublishedArticleByIdResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// published article details
	PublishedArticleDetails *PublishedArticleDetails `protobuf:"bytes,1,opt,name=published_article_details,json=publishedArticleDetails,proto3" json:"published_article_details,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *GetPublishedArticleByIdResponse) Reset() {
	*x = GetPublishedArticleByIdResponse{}
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPublishedArticleByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPublishedArticleByIdResponse) ProtoMessage() {}

func (x *GetPublishedArticleByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPublishedArticleByIdResponse.ProtoReflect.Descriptor instead.
func (*GetPublishedArticleByIdResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{16}
}

func (x *GetPublishedArticleByIdResponse) GetPublishedArticleDetails() *PublishedArticleDetails {
	if x != nil {
		return x.PublishedArticleDetails
	}
	return nil
}

// Request to update user activity
type UserActivityRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the unique published article identifier
	PublishedArticleSid int64 `protobuf:"varint,1,opt,name=published_article_sid,json=publishedArticleSid,proto3" json:"published_article_sid,omitempty"`
	// this flag determines whether to allow news article popups while imitating/impersonating
	Force bool `protobuf:"varint,2,opt,name=force,proto3" json:"force,omitempty"`
	// the unique published client article identifier
	PublishedClientArticleSid int64 `protobuf:"varint,3,opt,name=published_client_article_sid,json=publishedClientArticleSid,proto3" json:"published_client_article_sid,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *UserActivityRequest) Reset() {
	*x = UserActivityRequest{}
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserActivityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserActivityRequest) ProtoMessage() {}

func (x *UserActivityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserActivityRequest.ProtoReflect.Descriptor instead.
func (*UserActivityRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{17}
}

func (x *UserActivityRequest) GetPublishedArticleSid() int64 {
	if x != nil {
		return x.PublishedArticleSid
	}
	return 0
}

func (x *UserActivityRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

func (x *UserActivityRequest) GetPublishedClientArticleSid() int64 {
	if x != nil {
		return x.PublishedClientArticleSid
	}
	return 0
}

// Response to user activity updates
type UserActivityResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// user activity details
	UserActivity  *UserActivity `protobuf:"bytes,1,opt,name=user_activity,json=userActivity,proto3" json:"user_activity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserActivityResponse) Reset() {
	*x = UserActivityResponse{}
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserActivityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserActivityResponse) ProtoMessage() {}

func (x *UserActivityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserActivityResponse.ProtoReflect.Descriptor instead.
func (*UserActivityResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{18}
}

func (x *UserActivityResponse) GetUserActivity() *UserActivity {
	if x != nil {
		return x.UserActivity
	}
	return nil
}

// Request to get unseen news articles for the user
type GetNewsForUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNewsForUserRequest) Reset() {
	*x = GetNewsForUserRequest{}
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNewsForUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNewsForUserRequest) ProtoMessage() {}

func (x *GetNewsForUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNewsForUserRequest.ProtoReflect.Descriptor instead.
func (*GetNewsForUserRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{19}
}

// Response to unseen news articles for the user
type GetNewsForUserResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// published article details
	PublishedArticleDetails []*PublishedArticleDetails `protobuf:"bytes,1,rep,name=published_article_details,json=publishedArticleDetails,proto3" json:"published_article_details,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *GetNewsForUserResponse) Reset() {
	*x = GetNewsForUserResponse{}
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNewsForUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNewsForUserResponse) ProtoMessage() {}

func (x *GetNewsForUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNewsForUserResponse.ProtoReflect.Descriptor instead.
func (*GetNewsForUserResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{20}
}

func (x *GetNewsForUserResponse) GetPublishedArticleDetails() []*PublishedArticleDetails {
	if x != nil {
		return x.PublishedArticleDetails
	}
	return nil
}

// request to upload image for the news article
type StoreNewsArticleImageRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// NewsArticleImage
	Image         *NewsArticleImage `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreNewsArticleImageRequest) Reset() {
	*x = StoreNewsArticleImageRequest{}
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreNewsArticleImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreNewsArticleImageRequest) ProtoMessage() {}

func (x *StoreNewsArticleImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreNewsArticleImageRequest.ProtoReflect.Descriptor instead.
func (*StoreNewsArticleImageRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{21}
}

func (x *StoreNewsArticleImageRequest) GetImage() *NewsArticleImage {
	if x != nil {
		return x.Image
	}
	return nil
}

// image for the news article details
type NewsArticleImage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// unique name of the image
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// image for the new article
	NewArticleSid int64 `protobuf:"varint,2,opt,name=new_article_sid,json=newArticleSid,proto3" json:"new_article_sid,omitempty"`
	// image content
	Content string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	// download image url
	DownloadUrl string `protobuf:"bytes,4,opt,name=download_url,json=downloadUrl,proto3" json:"download_url,omitempty"`
	// image reference id
	ImageReferenceId string `protobuf:"bytes,5,opt,name=image_reference_id,json=imageReferenceId,proto3" json:"image_reference_id,omitempty"`
	// image type
	ImageType string `protobuf:"bytes,6,opt,name=image_type,json=imageType,proto3" json:"image_type,omitempty"`
	// temp id for the image
	TempId        *wrapperspb.StringValue `protobuf:"bytes,7,opt,name=temp_id,json=tempId,proto3" json:"temp_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NewsArticleImage) Reset() {
	*x = NewsArticleImage{}
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewsArticleImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewsArticleImage) ProtoMessage() {}

func (x *NewsArticleImage) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewsArticleImage.ProtoReflect.Descriptor instead.
func (*NewsArticleImage) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{22}
}

func (x *NewsArticleImage) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *NewsArticleImage) GetNewArticleSid() int64 {
	if x != nil {
		return x.NewArticleSid
	}
	return 0
}

func (x *NewsArticleImage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *NewsArticleImage) GetDownloadUrl() string {
	if x != nil {
		return x.DownloadUrl
	}
	return ""
}

func (x *NewsArticleImage) GetImageReferenceId() string {
	if x != nil {
		return x.ImageReferenceId
	}
	return ""
}

func (x *NewsArticleImage) GetImageType() string {
	if x != nil {
		return x.ImageType
	}
	return ""
}

func (x *NewsArticleImage) GetTempId() *wrapperspb.StringValue {
	if x != nil {
		return x.TempId
	}
	return nil
}

// response to uploaded image
type StoreNewsArticleImageResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// stored image details
	Image         *NewsArticleImage `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreNewsArticleImageResponse) Reset() {
	*x = StoreNewsArticleImageResponse{}
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreNewsArticleImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreNewsArticleImageResponse) ProtoMessage() {}

func (x *StoreNewsArticleImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreNewsArticleImageResponse.ProtoReflect.Descriptor instead.
func (*StoreNewsArticleImageResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{23}
}

func (x *StoreNewsArticleImageResponse) GetImage() *NewsArticleImage {
	if x != nil {
		return x.Image
	}
	return nil
}

// request to list all images news article
type ListImagesForNewsArticleRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// images for the new article sid
	NewArticleSid int64 `protobuf:"varint,1,opt,name=new_article_sid,json=newArticleSid,proto3" json:"new_article_sid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListImagesForNewsArticleRequest) Reset() {
	*x = ListImagesForNewsArticleRequest{}
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListImagesForNewsArticleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListImagesForNewsArticleRequest) ProtoMessage() {}

func (x *ListImagesForNewsArticleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListImagesForNewsArticleRequest.ProtoReflect.Descriptor instead.
func (*ListImagesForNewsArticleRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{24}
}

func (x *ListImagesForNewsArticleRequest) GetNewArticleSid() int64 {
	if x != nil {
		return x.NewArticleSid
	}
	return 0
}

// response to list all images for the news article
type ListImagesForNewsArticleResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// images for the news article
	NewsArticleImages []*NewsArticleImage `protobuf:"bytes,1,rep,name=news_article_images,json=newsArticleImages,proto3" json:"news_article_images,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ListImagesForNewsArticleResponse) Reset() {
	*x = ListImagesForNewsArticleResponse{}
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListImagesForNewsArticleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListImagesForNewsArticleResponse) ProtoMessage() {}

func (x *ListImagesForNewsArticleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListImagesForNewsArticleResponse.ProtoReflect.Descriptor instead.
func (*ListImagesForNewsArticleResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{25}
}

func (x *ListImagesForNewsArticleResponse) GetNewsArticleImages() []*NewsArticleImage {
	if x != nil {
		return x.NewsArticleImages
	}
	return nil
}

// request to upload image for the news article
type UploadNewsArticleImageRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// image details
	Image         *NewsArticleImage `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadNewsArticleImageRequest) Reset() {
	*x = UploadNewsArticleImageRequest{}
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadNewsArticleImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadNewsArticleImageRequest) ProtoMessage() {}

func (x *UploadNewsArticleImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadNewsArticleImageRequest.ProtoReflect.Descriptor instead.
func (*UploadNewsArticleImageRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{26}
}

func (x *UploadNewsArticleImageRequest) GetImage() *NewsArticleImage {
	if x != nil {
		return x.Image
	}
	return nil
}

// response after uploading image for the news article
type UploadNewsArticleImageResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// uploaded image details
	Image         *NewsArticleImage `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadNewsArticleImageResponse) Reset() {
	*x = UploadNewsArticleImageResponse{}
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadNewsArticleImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadNewsArticleImageResponse) ProtoMessage() {}

func (x *UploadNewsArticleImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadNewsArticleImageResponse.ProtoReflect.Descriptor instead.
func (*UploadNewsArticleImageResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{27}
}

func (x *UploadNewsArticleImageResponse) GetImage() *NewsArticleImage {
	if x != nil {
		return x.Image
	}
	return nil
}

// Request to create client news article
type CreateClientArticleRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// news article title
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// markdown content
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	// article author
	Author string `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`
	// image reference id
	ImageReferenceId string `protobuf:"bytes,4,opt,name=image_reference_id,json=imageReferenceId,proto3" json:"image_reference_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CreateClientArticleRequest) Reset() {
	*x = CreateClientArticleRequest{}
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateClientArticleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateClientArticleRequest) ProtoMessage() {}

func (x *CreateClientArticleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateClientArticleRequest.ProtoReflect.Descriptor instead.
func (*CreateClientArticleRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{28}
}

func (x *CreateClientArticleRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateClientArticleRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreateClientArticleRequest) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *CreateClientArticleRequest) GetImageReferenceId() string {
	if x != nil {
		return x.ImageReferenceId
	}
	return ""
}

// Response to create client news article
type CreateClientArticleResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// news article details
	ArticleDetails *NewsArticleDetails `protobuf:"bytes,1,opt,name=article_details,json=articleDetails,proto3" json:"article_details,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreateClientArticleResponse) Reset() {
	*x = CreateClientArticleResponse{}
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateClientArticleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateClientArticleResponse) ProtoMessage() {}

func (x *CreateClientArticleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateClientArticleResponse.ProtoReflect.Descriptor instead.
func (*CreateClientArticleResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{29}
}

func (x *CreateClientArticleResponse) GetArticleDetails() *NewsArticleDetails {
	if x != nil {
		return x.ArticleDetails
	}
	return nil
}

// Request to update client news article
type UpdateClientArticleRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the client news article fields specified to be updated
	ArticleDetails *NewsArticleDetails `protobuf:"bytes,1,opt,name=article_details,json=articleDetails,proto3" json:"article_details,omitempty"`
	// list of fields Requested to be updated
	FieldMask     *fieldmaskpb.FieldMask `protobuf:"bytes,100,opt,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateClientArticleRequest) Reset() {
	*x = UpdateClientArticleRequest{}
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateClientArticleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateClientArticleRequest) ProtoMessage() {}

func (x *UpdateClientArticleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateClientArticleRequest.ProtoReflect.Descriptor instead.
func (*UpdateClientArticleRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{30}
}

func (x *UpdateClientArticleRequest) GetArticleDetails() *NewsArticleDetails {
	if x != nil {
		return x.ArticleDetails
	}
	return nil
}

func (x *UpdateClientArticleRequest) GetFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

// Response to update client news article
type UpdateClientArticleResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// updated client news article
	ArticleDetails *NewsArticleDetails `protobuf:"bytes,1,opt,name=article_details,json=articleDetails,proto3" json:"article_details,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UpdateClientArticleResponse) Reset() {
	*x = UpdateClientArticleResponse{}
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateClientArticleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateClientArticleResponse) ProtoMessage() {}

func (x *UpdateClientArticleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateClientArticleResponse.ProtoReflect.Descriptor instead.
func (*UpdateClientArticleResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{31}
}

func (x *UpdateClientArticleResponse) GetArticleDetails() *NewsArticleDetails {
	if x != nil {
		return x.ArticleDetails
	}
	return nil
}

// Request to list of client news articles
type ListClientArticlesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the statuses to select by when listing articles (if empty, selects all)
	Statuses []commons.ArticleStatus `protobuf:"varint,1,rep,packed,name=statuses,proto3,enum=api.commons.ArticleStatus" json:"statuses,omitempty"`
	// list of article details to be Requested
	FieldMask     *fieldmaskpb.FieldMask `protobuf:"bytes,100,opt,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListClientArticlesRequest) Reset() {
	*x = ListClientArticlesRequest{}
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClientArticlesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClientArticlesRequest) ProtoMessage() {}

func (x *ListClientArticlesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClientArticlesRequest.ProtoReflect.Descriptor instead.
func (*ListClientArticlesRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{32}
}

func (x *ListClientArticlesRequest) GetStatuses() []commons.ArticleStatus {
	if x != nil {
		return x.Statuses
	}
	return nil
}

func (x *ListClientArticlesRequest) GetFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

// Response to list of client news articles
type ListClientArticlesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// client article details
	ArticleDetails []*NewsArticleDetails `protobuf:"bytes,1,rep,name=article_details,json=articleDetails,proto3" json:"article_details,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ListClientArticlesResponse) Reset() {
	*x = ListClientArticlesResponse{}
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClientArticlesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClientArticlesResponse) ProtoMessage() {}

func (x *ListClientArticlesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClientArticlesResponse.ProtoReflect.Descriptor instead.
func (*ListClientArticlesResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{33}
}

func (x *ListClientArticlesResponse) GetArticleDetails() []*NewsArticleDetails {
	if x != nil {
		return x.ArticleDetails
	}
	return nil
}

// Request to create published client article
type CreatePublishedClientArticleRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// news article identifier
	NewArticleSid int64 `protobuf:"varint,1,opt,name=new_article_sid,json=newArticleSid,proto3" json:"new_article_sid,omitempty"`
	// determines if we show to user
	DisplayToUser bool `protobuf:"varint,2,opt,name=display_to_user,json=displayToUser,proto3" json:"display_to_user,omitempty"`
	// link to the published article
	ArticleLink string `protobuf:"bytes,3,opt,name=article_link,json=articleLink,proto3" json:"article_link,omitempty"`
	// determines if we always show this article to the user on login
	AlwaysShow    bool `protobuf:"varint,4,opt,name=always_show,json=alwaysShow,proto3" json:"always_show,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePublishedClientArticleRequest) Reset() {
	*x = CreatePublishedClientArticleRequest{}
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePublishedClientArticleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePublishedClientArticleRequest) ProtoMessage() {}

func (x *CreatePublishedClientArticleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePublishedClientArticleRequest.ProtoReflect.Descriptor instead.
func (*CreatePublishedClientArticleRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{34}
}

func (x *CreatePublishedClientArticleRequest) GetNewArticleSid() int64 {
	if x != nil {
		return x.NewArticleSid
	}
	return 0
}

func (x *CreatePublishedClientArticleRequest) GetDisplayToUser() bool {
	if x != nil {
		return x.DisplayToUser
	}
	return false
}

func (x *CreatePublishedClientArticleRequest) GetArticleLink() string {
	if x != nil {
		return x.ArticleLink
	}
	return ""
}

func (x *CreatePublishedClientArticleRequest) GetAlwaysShow() bool {
	if x != nil {
		return x.AlwaysShow
	}
	return false
}

// Response to create published client article
type CreatePublishedClientArticleResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// news article details
	PublishedArticleDetails *PublishedArticleDetails `protobuf:"bytes,1,opt,name=published_article_details,json=publishedArticleDetails,proto3" json:"published_article_details,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *CreatePublishedClientArticleResponse) Reset() {
	*x = CreatePublishedClientArticleResponse{}
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePublishedClientArticleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePublishedClientArticleResponse) ProtoMessage() {}

func (x *CreatePublishedClientArticleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePublishedClientArticleResponse.ProtoReflect.Descriptor instead.
func (*CreatePublishedClientArticleResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{35}
}

func (x *CreatePublishedClientArticleResponse) GetPublishedArticleDetails() *PublishedArticleDetails {
	if x != nil {
		return x.PublishedArticleDetails
	}
	return nil
}

// Request to get published client article by id
type GetPublishedClientArticleByIdRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the unique published article sid
	PublishedArticleSid int64 `protobuf:"varint,1,opt,name=published_article_sid,json=publishedArticleSid,proto3" json:"published_article_sid,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *GetPublishedClientArticleByIdRequest) Reset() {
	*x = GetPublishedClientArticleByIdRequest{}
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPublishedClientArticleByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPublishedClientArticleByIdRequest) ProtoMessage() {}

func (x *GetPublishedClientArticleByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPublishedClientArticleByIdRequest.ProtoReflect.Descriptor instead.
func (*GetPublishedClientArticleByIdRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{36}
}

func (x *GetPublishedClientArticleByIdRequest) GetPublishedArticleSid() int64 {
	if x != nil {
		return x.PublishedArticleSid
	}
	return 0
}

// Response to get published client article
type GetPublishedClientArticleByIdResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// published article details
	PublishedArticleDetails *PublishedArticleDetails `protobuf:"bytes,1,opt,name=published_article_details,json=publishedArticleDetails,proto3" json:"published_article_details,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *GetPublishedClientArticleByIdResponse) Reset() {
	*x = GetPublishedClientArticleByIdResponse{}
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPublishedClientArticleByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPublishedClientArticleByIdResponse) ProtoMessage() {}

func (x *GetPublishedClientArticleByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPublishedClientArticleByIdResponse.ProtoReflect.Descriptor instead.
func (*GetPublishedClientArticleByIdResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{37}
}

func (x *GetPublishedClientArticleByIdResponse) GetPublishedArticleDetails() *PublishedArticleDetails {
	if x != nil {
		return x.PublishedArticleDetails
	}
	return nil
}

// request to upload image for the client news article
type StoreClientArticleImageRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// NewsArticleImage
	Image         *NewsArticleImage `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreClientArticleImageRequest) Reset() {
	*x = StoreClientArticleImageRequest{}
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreClientArticleImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreClientArticleImageRequest) ProtoMessage() {}

func (x *StoreClientArticleImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreClientArticleImageRequest.ProtoReflect.Descriptor instead.
func (*StoreClientArticleImageRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{38}
}

func (x *StoreClientArticleImageRequest) GetImage() *NewsArticleImage {
	if x != nil {
		return x.Image
	}
	return nil
}

// response to client uploaded image
type StoreClientArticleImageResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// stored image details
	Image         *NewsArticleImage `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreClientArticleImageResponse) Reset() {
	*x = StoreClientArticleImageResponse{}
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreClientArticleImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreClientArticleImageResponse) ProtoMessage() {}

func (x *StoreClientArticleImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreClientArticleImageResponse.ProtoReflect.Descriptor instead.
func (*StoreClientArticleImageResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{39}
}

func (x *StoreClientArticleImageResponse) GetImage() *NewsArticleImage {
	if x != nil {
		return x.Image
	}
	return nil
}

// request to list all images for client article
type ListImagesForClientArticleRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// images for the new article sid
	NewArticleSid int64 `protobuf:"varint,1,opt,name=new_article_sid,json=newArticleSid,proto3" json:"new_article_sid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListImagesForClientArticleRequest) Reset() {
	*x = ListImagesForClientArticleRequest{}
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListImagesForClientArticleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListImagesForClientArticleRequest) ProtoMessage() {}

func (x *ListImagesForClientArticleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListImagesForClientArticleRequest.ProtoReflect.Descriptor instead.
func (*ListImagesForClientArticleRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{40}
}

func (x *ListImagesForClientArticleRequest) GetNewArticleSid() int64 {
	if x != nil {
		return x.NewArticleSid
	}
	return 0
}

// response to list all images for the client article
type ListImagesForClientArticleResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// images for the client news article
	NewsArticleImages []*NewsArticleImage `protobuf:"bytes,1,rep,name=news_article_images,json=newsArticleImages,proto3" json:"news_article_images,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ListImagesForClientArticleResponse) Reset() {
	*x = ListImagesForClientArticleResponse{}
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListImagesForClientArticleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListImagesForClientArticleResponse) ProtoMessage() {}

func (x *ListImagesForClientArticleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListImagesForClientArticleResponse.ProtoReflect.Descriptor instead.
func (*ListImagesForClientArticleResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{41}
}

func (x *ListImagesForClientArticleResponse) GetNewsArticleImages() []*NewsArticleImage {
	if x != nil {
		return x.NewsArticleImages
	}
	return nil
}

// request to upload image for the client news article
type UploadClientArticleImageRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// image details
	Image         *NewsArticleImage `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadClientArticleImageRequest) Reset() {
	*x = UploadClientArticleImageRequest{}
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadClientArticleImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadClientArticleImageRequest) ProtoMessage() {}

func (x *UploadClientArticleImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadClientArticleImageRequest.ProtoReflect.Descriptor instead.
func (*UploadClientArticleImageRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{42}
}

func (x *UploadClientArticleImageRequest) GetImage() *NewsArticleImage {
	if x != nil {
		return x.Image
	}
	return nil
}

// response after uploading image for the client news article
type UploadClientArticleImageResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// uploaded image details
	Image         *NewsArticleImage `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadClientArticleImageResponse) Reset() {
	*x = UploadClientArticleImageResponse{}
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadClientArticleImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadClientArticleImageResponse) ProtoMessage() {}

func (x *UploadClientArticleImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadClientArticleImageResponse.ProtoReflect.Descriptor instead.
func (*UploadClientArticleImageResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{43}
}

func (x *UploadClientArticleImageResponse) GetImage() *NewsArticleImage {
	if x != nil {
		return x.Image
	}
	return nil
}

// Request to list of published client articles
type ListPublishedClientArticlesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPublishedClientArticlesRequest) Reset() {
	*x = ListPublishedClientArticlesRequest{}
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPublishedClientArticlesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPublishedClientArticlesRequest) ProtoMessage() {}

func (x *ListPublishedClientArticlesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPublishedClientArticlesRequest.ProtoReflect.Descriptor instead.
func (*ListPublishedClientArticlesRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{44}
}

// Response to list of published client articles
type ListPublishedClientArticlesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// published article details
	PublishedArticleDetails []*PublishedArticleDetails `protobuf:"bytes,1,rep,name=published_article_details,json=publishedArticleDetails,proto3" json:"published_article_details,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ListPublishedClientArticlesResponse) Reset() {
	*x = ListPublishedClientArticlesResponse{}
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPublishedClientArticlesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPublishedClientArticlesResponse) ProtoMessage() {}

func (x *ListPublishedClientArticlesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPublishedClientArticlesResponse.ProtoReflect.Descriptor instead.
func (*ListPublishedClientArticlesResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{45}
}

func (x *ListPublishedClientArticlesResponse) GetPublishedArticleDetails() []*PublishedArticleDetails {
	if x != nil {
		return x.PublishedArticleDetails
	}
	return nil
}

// Request to get client article by id
type GetClientArticleByIdRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the unique news article identifier
	NewArticleSid int64 `protobuf:"varint,1,opt,name=new_article_sid,json=newArticleSid,proto3" json:"new_article_sid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetClientArticleByIdRequest) Reset() {
	*x = GetClientArticleByIdRequest{}
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetClientArticleByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClientArticleByIdRequest) ProtoMessage() {}

func (x *GetClientArticleByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClientArticleByIdRequest.ProtoReflect.Descriptor instead.
func (*GetClientArticleByIdRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{46}
}

func (x *GetClientArticleByIdRequest) GetNewArticleSid() int64 {
	if x != nil {
		return x.NewArticleSid
	}
	return 0
}

// Response to get client article
type GetClientArticleByIdResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// client article details
	ArticleDetails *NewsArticleDetails `protobuf:"bytes,1,opt,name=article_details,json=articleDetails,proto3" json:"article_details,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetClientArticleByIdResponse) Reset() {
	*x = GetClientArticleByIdResponse{}
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetClientArticleByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClientArticleByIdResponse) ProtoMessage() {}

func (x *GetClientArticleByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClientArticleByIdResponse.ProtoReflect.Descriptor instead.
func (*GetClientArticleByIdResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{47}
}

func (x *GetClientArticleByIdResponse) GetArticleDetails() *NewsArticleDetails {
	if x != nil {
		return x.ArticleDetails
	}
	return nil
}

// user activity details
type UserActivity_UserActivityDetails struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the unique published article identifier
	PublishedArticleSid int64 `protobuf:"varint,1,opt,name=published_article_sid,json=publishedArticleSid,proto3" json:"published_article_sid,omitempty"`
	// the unique published client article identifier
	PublishedClientArticleSid int64 `protobuf:"varint,2,opt,name=published_client_article_sid,json=publishedClientArticleSid,proto3" json:"published_client_article_sid,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *UserActivity_UserActivityDetails) Reset() {
	*x = UserActivity_UserActivityDetails{}
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserActivity_UserActivityDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserActivity_UserActivityDetails) ProtoMessage() {}

func (x *UserActivity_UserActivityDetails) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_newsroom_entities_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserActivity_UserActivityDetails.ProtoReflect.Descriptor instead.
func (*UserActivity_UserActivityDetails) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP(), []int{10, 0}
}

func (x *UserActivity_UserActivityDetails) GetPublishedArticleSid() int64 {
	if x != nil {
		return x.PublishedArticleSid
	}
	return 0
}

func (x *UserActivity_UserActivityDetails) GetPublishedClientArticleSid() int64 {
	if x != nil {
		return x.PublishedClientArticleSid
	}
	return 0
}

var File_api_v1alpha1_newsroom_entities_proto protoreflect.FileDescriptor

const file_api_v1alpha1_newsroom_entities_proto_rawDesc = "" +
	"\n" +
	"$api/v1alpha1/newsroom/entities.proto\x12\x15api.v1alpha1.newsroom\x1a\x1aapi/commons/newsroom.proto\x1a google/protobuf/field_mask.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1egoogle/protobuf/wrappers.proto\"\x90\x01\n" +
	"\x18CreateNewsArticleRequest\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12\x18\n" +
	"\acontent\x18\x02 \x01(\tR\acontent\x12\x16\n" +
	"\x06author\x18\x03 \x01(\tR\x06author\x12,\n" +
	"\x12image_reference_id\x18\x04 \x01(\tR\x10imageReferenceId\"o\n" +
	"\x19CreateNewsArticleResponse\x12R\n" +
	"\x0farticle_details\x18\x01 \x01(\v2).api.v1alpha1.newsroom.NewsArticleDetailsR\x0earticleDetails\"\x8c\x01\n" +
	"\x17ListNewsArticlesRequest\x126\n" +
	"\bstatuses\x18\x01 \x03(\x0e2\x1a.api.commons.ArticleStatusR\bstatuses\x129\n" +
	"\n" +
	"field_mask\x18d \x01(\v2\x1a.google.protobuf.FieldMaskR\tfieldMask\"n\n" +
	"\x18ListNewsArticlesResponse\x12R\n" +
	"\x0farticle_details\x18\x01 \x03(\v2).api.v1alpha1.newsroom.NewsArticleDetailsR\x0earticleDetails\"G\n" +
	"\x19GetNewsArticleByIdRequest\x12*\n" +
	"\x0fnew_article_sid\x18\x01 \x01(\x03B\x020\x01R\rnewArticleSid\"p\n" +
	"\x1aGetNewsArticleByIdResponse\x12R\n" +
	"\x0farticle_details\x18\x01 \x01(\v2).api.v1alpha1.newsroom.NewsArticleDetailsR\x0earticleDetails\"\xa9\x01\n" +
	"\x18UpdateNewsArticleRequest\x12R\n" +
	"\x0farticle_details\x18\x01 \x01(\v2).api.v1alpha1.newsroom.NewsArticleDetailsR\x0earticleDetails\x129\n" +
	"\n" +
	"field_mask\x18d \x01(\v2\x1a.google.protobuf.FieldMaskR\tfieldMask\"o\n" +
	"\x19UpdateNewsArticleResponse\x12R\n" +
	"\x0farticle_details\x18\x01 \x01(\v2).api.v1alpha1.newsroom.NewsArticleDetailsR\x0earticleDetails\"\xe6\x02\n" +
	"\x12NewsArticleDetails\x12*\n" +
	"\x0fnew_article_sid\x18\x01 \x01(\x03B\x020\x01R\rnewArticleSid\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\x122\n" +
	"\x06status\x18\x04 \x01(\x0e2\x1a.api.commons.ArticleStatusR\x06status\x12=\n" +
	"\fdate_created\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\vdateCreated\x12;\n" +
	"\vlast_edited\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"lastEdited\x12\x16\n" +
	"\x06author\x18\a \x01(\tR\x06author\x12,\n" +
	"\x12image_reference_id\x18\b \x01(\tR\x10imageReferenceId\"\xec\x02\n" +
	"\x17PublishedArticleDetails\x126\n" +
	"\x15published_article_sid\x18\x01 \x01(\x03B\x020\x01R\x13publishedArticleSid\x12[\n" +
	"\x14news_article_details\x18\x02 \x01(\v2).api.v1alpha1.newsroom.NewsArticleDetailsR\x12newsArticleDetails\x12A\n" +
	"\x0edate_published\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\rdatePublished\x12&\n" +
	"\x0fdisplay_to_user\x18\x04 \x01(\bR\rdisplayToUser\x12%\n" +
	"\x0ealways_display\x18\x05 \x01(\bR\ralwaysDisplay\x12*\n" +
	"\x11is_client_article\x18\x06 \x01(\bR\x0fisClientArticle\"\x86\x03\n" +
	"\fUserActivity\x125\n" +
	"\x15user_activity_log_sid\x18\x01 \x01(\x03B\x020\x01R\x12userActivityLogSid\x12=\n" +
	"\fdate_created\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\vdateCreated\x12k\n" +
	"\x15user_activity_details\x18\x03 \x01(\v27.api.v1alpha1.newsroom.UserActivity.UserActivityDetailsR\x13userActivityDetails\x1a\x92\x01\n" +
	"\x13UserActivityDetails\x126\n" +
	"\x15published_article_sid\x18\x01 \x01(\x03B\x020\x01R\x13publishedArticleSid\x12C\n" +
	"\x1cpublished_client_article_sid\x18\x02 \x01(\x03B\x020\x01R\x19publishedClientArticleSid\"\x96\x01\n" +
	"\x1dCreatePublishedArticleRequest\x12*\n" +
	"\x0fnew_article_sid\x18\x01 \x01(\x03B\x020\x01R\rnewArticleSid\x12&\n" +
	"\x0fdisplay_to_user\x18\x02 \x01(\bR\rdisplayToUser\x12!\n" +
	"\farticle_link\x18\x03 \x01(\tR\varticleLink\"\x8c\x01\n" +
	"\x1eCreatePublishedArticleResponse\x12j\n" +
	"\x19published_article_details\x18\x01 \x01(\v2..api.v1alpha1.newsroom.PublishedArticleDetailsR\x17publishedArticleDetails\"\x1e\n" +
	"\x1cListPublishedArticlesRequest\"\x8b\x01\n" +
	"\x1dListPublishedArticlesResponse\x12j\n" +
	"\x19published_article_details\x18\x01 \x03(\v2..api.v1alpha1.newsroom.PublishedArticleDetailsR\x17publishedArticleDetails\"\x84\x01\n" +
	"\x1eGetPublishedArticleByIdRequest\x12*\n" +
	"\x0fnew_article_sid\x18\x01 \x01(\x03B\x02\x18\x01R\rnewArticleSid\x126\n" +
	"\x15published_article_sid\x18\x02 \x01(\x03B\x020\x01R\x13publishedArticleSid\"\x8d\x01\n" +
	"\x1fGetPublishedArticleByIdResponse\x12j\n" +
	"\x19published_article_details\x18\x01 \x01(\v2..api.v1alpha1.newsroom.PublishedArticleDetailsR\x17publishedArticleDetails\"\xa8\x01\n" +
	"\x13UserActivityRequest\x126\n" +
	"\x15published_article_sid\x18\x01 \x01(\x03B\x020\x01R\x13publishedArticleSid\x12\x14\n" +
	"\x05force\x18\x02 \x01(\bR\x05force\x12C\n" +
	"\x1cpublished_client_article_sid\x18\x03 \x01(\x03B\x020\x01R\x19publishedClientArticleSid\"`\n" +
	"\x14UserActivityResponse\x12H\n" +
	"\ruser_activity\x18\x01 \x01(\v2#.api.v1alpha1.newsroom.UserActivityR\fuserActivity\"\x17\n" +
	"\x15GetNewsForUserRequest\"\x84\x01\n" +
	"\x16GetNewsForUserResponse\x12j\n" +
	"\x19published_article_details\x18\x01 \x03(\v2..api.v1alpha1.newsroom.PublishedArticleDetailsR\x17publishedArticleDetails\"]\n" +
	"\x1cStoreNewsArticleImageRequest\x12=\n" +
	"\x05image\x18\x01 \x01(\v2'.api.v1alpha1.newsroom.NewsArticleImageR\x05image\"\x93\x02\n" +
	"\x10NewsArticleImage\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\tR\x04uuid\x12*\n" +
	"\x0fnew_article_sid\x18\x02 \x01(\x03B\x020\x01R\rnewArticleSid\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\x12!\n" +
	"\fdownload_url\x18\x04 \x01(\tR\vdownloadUrl\x12,\n" +
	"\x12image_reference_id\x18\x05 \x01(\tR\x10imageReferenceId\x12\x1d\n" +
	"\n" +
	"image_type\x18\x06 \x01(\tR\timageType\x125\n" +
	"\atemp_id\x18\a \x01(\v2\x1c.google.protobuf.StringValueR\x06tempId\"^\n" +
	"\x1dStoreNewsArticleImageResponse\x12=\n" +
	"\x05image\x18\x01 \x01(\v2'.api.v1alpha1.newsroom.NewsArticleImageR\x05image\"M\n" +
	"\x1fListImagesForNewsArticleRequest\x12*\n" +
	"\x0fnew_article_sid\x18\x01 \x01(\x03B\x020\x01R\rnewArticleSid\"{\n" +
	" ListImagesForNewsArticleResponse\x12W\n" +
	"\x13news_article_images\x18\x01 \x03(\v2'.api.v1alpha1.newsroom.NewsArticleImageR\x11newsArticleImages\"^\n" +
	"\x1dUploadNewsArticleImageRequest\x12=\n" +
	"\x05image\x18\x01 \x01(\v2'.api.v1alpha1.newsroom.NewsArticleImageR\x05image\"_\n" +
	"\x1eUploadNewsArticleImageResponse\x12=\n" +
	"\x05image\x18\x01 \x01(\v2'.api.v1alpha1.newsroom.NewsArticleImageR\x05image\"\x92\x01\n" +
	"\x1aCreateClientArticleRequest\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12\x18\n" +
	"\acontent\x18\x02 \x01(\tR\acontent\x12\x16\n" +
	"\x06author\x18\x03 \x01(\tR\x06author\x12,\n" +
	"\x12image_reference_id\x18\x04 \x01(\tR\x10imageReferenceId\"q\n" +
	"\x1bCreateClientArticleResponse\x12R\n" +
	"\x0farticle_details\x18\x01 \x01(\v2).api.v1alpha1.newsroom.NewsArticleDetailsR\x0earticleDetails\"\xab\x01\n" +
	"\x1aUpdateClientArticleRequest\x12R\n" +
	"\x0farticle_details\x18\x01 \x01(\v2).api.v1alpha1.newsroom.NewsArticleDetailsR\x0earticleDetails\x129\n" +
	"\n" +
	"field_mask\x18d \x01(\v2\x1a.google.protobuf.FieldMaskR\tfieldMask\"q\n" +
	"\x1bUpdateClientArticleResponse\x12R\n" +
	"\x0farticle_details\x18\x01 \x01(\v2).api.v1alpha1.newsroom.NewsArticleDetailsR\x0earticleDetails\"\x8e\x01\n" +
	"\x19ListClientArticlesRequest\x126\n" +
	"\bstatuses\x18\x01 \x03(\x0e2\x1a.api.commons.ArticleStatusR\bstatuses\x129\n" +
	"\n" +
	"field_mask\x18d \x01(\v2\x1a.google.protobuf.FieldMaskR\tfieldMask\"p\n" +
	"\x1aListClientArticlesResponse\x12R\n" +
	"\x0farticle_details\x18\x01 \x03(\v2).api.v1alpha1.newsroom.NewsArticleDetailsR\x0earticleDetails\"\xbd\x01\n" +
	"#CreatePublishedClientArticleRequest\x12*\n" +
	"\x0fnew_article_sid\x18\x01 \x01(\x03B\x020\x01R\rnewArticleSid\x12&\n" +
	"\x0fdisplay_to_user\x18\x02 \x01(\bR\rdisplayToUser\x12!\n" +
	"\farticle_link\x18\x03 \x01(\tR\varticleLink\x12\x1f\n" +
	"\valways_show\x18\x04 \x01(\bR\n" +
	"alwaysShow\"\x92\x01\n" +
	"$CreatePublishedClientArticleResponse\x12j\n" +
	"\x19published_article_details\x18\x01 \x01(\v2..api.v1alpha1.newsroom.PublishedArticleDetailsR\x17publishedArticleDetails\"^\n" +
	"$GetPublishedClientArticleByIdRequest\x126\n" +
	"\x15published_article_sid\x18\x01 \x01(\x03B\x020\x01R\x13publishedArticleSid\"\x93\x01\n" +
	"%GetPublishedClientArticleByIdResponse\x12j\n" +
	"\x19published_article_details\x18\x01 \x01(\v2..api.v1alpha1.newsroom.PublishedArticleDetailsR\x17publishedArticleDetails\"_\n" +
	"\x1eStoreClientArticleImageRequest\x12=\n" +
	"\x05image\x18\x01 \x01(\v2'.api.v1alpha1.newsroom.NewsArticleImageR\x05image\"`\n" +
	"\x1fStoreClientArticleImageResponse\x12=\n" +
	"\x05image\x18\x01 \x01(\v2'.api.v1alpha1.newsroom.NewsArticleImageR\x05image\"O\n" +
	"!ListImagesForClientArticleRequest\x12*\n" +
	"\x0fnew_article_sid\x18\x01 \x01(\x03B\x020\x01R\rnewArticleSid\"}\n" +
	"\"ListImagesForClientArticleResponse\x12W\n" +
	"\x13news_article_images\x18\x01 \x03(\v2'.api.v1alpha1.newsroom.NewsArticleImageR\x11newsArticleImages\"`\n" +
	"\x1fUploadClientArticleImageRequest\x12=\n" +
	"\x05image\x18\x01 \x01(\v2'.api.v1alpha1.newsroom.NewsArticleImageR\x05image\"a\n" +
	" UploadClientArticleImageResponse\x12=\n" +
	"\x05image\x18\x01 \x01(\v2'.api.v1alpha1.newsroom.NewsArticleImageR\x05image\"$\n" +
	"\"ListPublishedClientArticlesRequest\"\x91\x01\n" +
	"#ListPublishedClientArticlesResponse\x12j\n" +
	"\x19published_article_details\x18\x01 \x03(\v2..api.v1alpha1.newsroom.PublishedArticleDetailsR\x17publishedArticleDetails\"I\n" +
	"\x1bGetClientArticleByIdRequest\x12*\n" +
	"\x0fnew_article_sid\x18\x01 \x01(\x03B\x020\x01R\rnewArticleSid\"r\n" +
	"\x1cGetClientArticleByIdResponse\x12R\n" +
	"\x0farticle_details\x18\x01 \x01(\v2).api.v1alpha1.newsroom.NewsArticleDetailsR\x0earticleDetailsB\xd2\x01\n" +
	"\x19com.api.v1alpha1.newsroomB\rEntitiesProtoP\x01Z0github.com/tcncloud/api-go/api/v1alpha1/newsroom\xa2\x02\x03AVN\xaa\x02\x15Api.V1alpha1.Newsroom\xca\x02\x15Api\\V1alpha1\\Newsroom\xe2\x02!Api\\V1alpha1\\Newsroom\\GPBMetadata\xea\x02\x17Api::V1alpha1::Newsroomb\x06proto3"

var (
	file_api_v1alpha1_newsroom_entities_proto_rawDescOnce sync.Once
	file_api_v1alpha1_newsroom_entities_proto_rawDescData []byte
)

func file_api_v1alpha1_newsroom_entities_proto_rawDescGZIP() []byte {
	file_api_v1alpha1_newsroom_entities_proto_rawDescOnce.Do(func() {
		file_api_v1alpha1_newsroom_entities_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_v1alpha1_newsroom_entities_proto_rawDesc), len(file_api_v1alpha1_newsroom_entities_proto_rawDesc)))
	})
	return file_api_v1alpha1_newsroom_entities_proto_rawDescData
}

var file_api_v1alpha1_newsroom_entities_proto_msgTypes = make([]protoimpl.MessageInfo, 49)
var file_api_v1alpha1_newsroom_entities_proto_goTypes = []any{
	(*CreateNewsArticleRequest)(nil),              // 0: api.v1alpha1.newsroom.CreateNewsArticleRequest
	(*CreateNewsArticleResponse)(nil),             // 1: api.v1alpha1.newsroom.CreateNewsArticleResponse
	(*ListNewsArticlesRequest)(nil),               // 2: api.v1alpha1.newsroom.ListNewsArticlesRequest
	(*ListNewsArticlesResponse)(nil),              // 3: api.v1alpha1.newsroom.ListNewsArticlesResponse
	(*GetNewsArticleByIdRequest)(nil),             // 4: api.v1alpha1.newsroom.GetNewsArticleByIdRequest
	(*GetNewsArticleByIdResponse)(nil),            // 5: api.v1alpha1.newsroom.GetNewsArticleByIdResponse
	(*UpdateNewsArticleRequest)(nil),              // 6: api.v1alpha1.newsroom.UpdateNewsArticleRequest
	(*UpdateNewsArticleResponse)(nil),             // 7: api.v1alpha1.newsroom.UpdateNewsArticleResponse
	(*NewsArticleDetails)(nil),                    // 8: api.v1alpha1.newsroom.NewsArticleDetails
	(*PublishedArticleDetails)(nil),               // 9: api.v1alpha1.newsroom.PublishedArticleDetails
	(*UserActivity)(nil),                          // 10: api.v1alpha1.newsroom.UserActivity
	(*CreatePublishedArticleRequest)(nil),         // 11: api.v1alpha1.newsroom.CreatePublishedArticleRequest
	(*CreatePublishedArticleResponse)(nil),        // 12: api.v1alpha1.newsroom.CreatePublishedArticleResponse
	(*ListPublishedArticlesRequest)(nil),          // 13: api.v1alpha1.newsroom.ListPublishedArticlesRequest
	(*ListPublishedArticlesResponse)(nil),         // 14: api.v1alpha1.newsroom.ListPublishedArticlesResponse
	(*GetPublishedArticleByIdRequest)(nil),        // 15: api.v1alpha1.newsroom.GetPublishedArticleByIdRequest
	(*GetPublishedArticleByIdResponse)(nil),       // 16: api.v1alpha1.newsroom.GetPublishedArticleByIdResponse
	(*UserActivityRequest)(nil),                   // 17: api.v1alpha1.newsroom.UserActivityRequest
	(*UserActivityResponse)(nil),                  // 18: api.v1alpha1.newsroom.UserActivityResponse
	(*GetNewsForUserRequest)(nil),                 // 19: api.v1alpha1.newsroom.GetNewsForUserRequest
	(*GetNewsForUserResponse)(nil),                // 20: api.v1alpha1.newsroom.GetNewsForUserResponse
	(*StoreNewsArticleImageRequest)(nil),          // 21: api.v1alpha1.newsroom.StoreNewsArticleImageRequest
	(*NewsArticleImage)(nil),                      // 22: api.v1alpha1.newsroom.NewsArticleImage
	(*StoreNewsArticleImageResponse)(nil),         // 23: api.v1alpha1.newsroom.StoreNewsArticleImageResponse
	(*ListImagesForNewsArticleRequest)(nil),       // 24: api.v1alpha1.newsroom.ListImagesForNewsArticleRequest
	(*ListImagesForNewsArticleResponse)(nil),      // 25: api.v1alpha1.newsroom.ListImagesForNewsArticleResponse
	(*UploadNewsArticleImageRequest)(nil),         // 26: api.v1alpha1.newsroom.UploadNewsArticleImageRequest
	(*UploadNewsArticleImageResponse)(nil),        // 27: api.v1alpha1.newsroom.UploadNewsArticleImageResponse
	(*CreateClientArticleRequest)(nil),            // 28: api.v1alpha1.newsroom.CreateClientArticleRequest
	(*CreateClientArticleResponse)(nil),           // 29: api.v1alpha1.newsroom.CreateClientArticleResponse
	(*UpdateClientArticleRequest)(nil),            // 30: api.v1alpha1.newsroom.UpdateClientArticleRequest
	(*UpdateClientArticleResponse)(nil),           // 31: api.v1alpha1.newsroom.UpdateClientArticleResponse
	(*ListClientArticlesRequest)(nil),             // 32: api.v1alpha1.newsroom.ListClientArticlesRequest
	(*ListClientArticlesResponse)(nil),            // 33: api.v1alpha1.newsroom.ListClientArticlesResponse
	(*CreatePublishedClientArticleRequest)(nil),   // 34: api.v1alpha1.newsroom.CreatePublishedClientArticleRequest
	(*CreatePublishedClientArticleResponse)(nil),  // 35: api.v1alpha1.newsroom.CreatePublishedClientArticleResponse
	(*GetPublishedClientArticleByIdRequest)(nil),  // 36: api.v1alpha1.newsroom.GetPublishedClientArticleByIdRequest
	(*GetPublishedClientArticleByIdResponse)(nil), // 37: api.v1alpha1.newsroom.GetPublishedClientArticleByIdResponse
	(*StoreClientArticleImageRequest)(nil),        // 38: api.v1alpha1.newsroom.StoreClientArticleImageRequest
	(*StoreClientArticleImageResponse)(nil),       // 39: api.v1alpha1.newsroom.StoreClientArticleImageResponse
	(*ListImagesForClientArticleRequest)(nil),     // 40: api.v1alpha1.newsroom.ListImagesForClientArticleRequest
	(*ListImagesForClientArticleResponse)(nil),    // 41: api.v1alpha1.newsroom.ListImagesForClientArticleResponse
	(*UploadClientArticleImageRequest)(nil),       // 42: api.v1alpha1.newsroom.UploadClientArticleImageRequest
	(*UploadClientArticleImageResponse)(nil),      // 43: api.v1alpha1.newsroom.UploadClientArticleImageResponse
	(*ListPublishedClientArticlesRequest)(nil),    // 44: api.v1alpha1.newsroom.ListPublishedClientArticlesRequest
	(*ListPublishedClientArticlesResponse)(nil),   // 45: api.v1alpha1.newsroom.ListPublishedClientArticlesResponse
	(*GetClientArticleByIdRequest)(nil),           // 46: api.v1alpha1.newsroom.GetClientArticleByIdRequest
	(*GetClientArticleByIdResponse)(nil),          // 47: api.v1alpha1.newsroom.GetClientArticleByIdResponse
	(*UserActivity_UserActivityDetails)(nil),      // 48: api.v1alpha1.newsroom.UserActivity.UserActivityDetails
	(commons.ArticleStatus)(0),                    // 49: api.commons.ArticleStatus
	(*fieldmaskpb.FieldMask)(nil),                 // 50: google.protobuf.FieldMask
	(*timestamppb.Timestamp)(nil),                 // 51: google.protobuf.Timestamp
	(*wrapperspb.StringValue)(nil),                // 52: google.protobuf.StringValue
}
var file_api_v1alpha1_newsroom_entities_proto_depIdxs = []int32{
	8,  // 0: api.v1alpha1.newsroom.CreateNewsArticleResponse.article_details:type_name -> api.v1alpha1.newsroom.NewsArticleDetails
	49, // 1: api.v1alpha1.newsroom.ListNewsArticlesRequest.statuses:type_name -> api.commons.ArticleStatus
	50, // 2: api.v1alpha1.newsroom.ListNewsArticlesRequest.field_mask:type_name -> google.protobuf.FieldMask
	8,  // 3: api.v1alpha1.newsroom.ListNewsArticlesResponse.article_details:type_name -> api.v1alpha1.newsroom.NewsArticleDetails
	8,  // 4: api.v1alpha1.newsroom.GetNewsArticleByIdResponse.article_details:type_name -> api.v1alpha1.newsroom.NewsArticleDetails
	8,  // 5: api.v1alpha1.newsroom.UpdateNewsArticleRequest.article_details:type_name -> api.v1alpha1.newsroom.NewsArticleDetails
	50, // 6: api.v1alpha1.newsroom.UpdateNewsArticleRequest.field_mask:type_name -> google.protobuf.FieldMask
	8,  // 7: api.v1alpha1.newsroom.UpdateNewsArticleResponse.article_details:type_name -> api.v1alpha1.newsroom.NewsArticleDetails
	49, // 8: api.v1alpha1.newsroom.NewsArticleDetails.status:type_name -> api.commons.ArticleStatus
	51, // 9: api.v1alpha1.newsroom.NewsArticleDetails.date_created:type_name -> google.protobuf.Timestamp
	51, // 10: api.v1alpha1.newsroom.NewsArticleDetails.last_edited:type_name -> google.protobuf.Timestamp
	8,  // 11: api.v1alpha1.newsroom.PublishedArticleDetails.news_article_details:type_name -> api.v1alpha1.newsroom.NewsArticleDetails
	51, // 12: api.v1alpha1.newsroom.PublishedArticleDetails.date_published:type_name -> google.protobuf.Timestamp
	51, // 13: api.v1alpha1.newsroom.UserActivity.date_created:type_name -> google.protobuf.Timestamp
	48, // 14: api.v1alpha1.newsroom.UserActivity.user_activity_details:type_name -> api.v1alpha1.newsroom.UserActivity.UserActivityDetails
	9,  // 15: api.v1alpha1.newsroom.CreatePublishedArticleResponse.published_article_details:type_name -> api.v1alpha1.newsroom.PublishedArticleDetails
	9,  // 16: api.v1alpha1.newsroom.ListPublishedArticlesResponse.published_article_details:type_name -> api.v1alpha1.newsroom.PublishedArticleDetails
	9,  // 17: api.v1alpha1.newsroom.GetPublishedArticleByIdResponse.published_article_details:type_name -> api.v1alpha1.newsroom.PublishedArticleDetails
	10, // 18: api.v1alpha1.newsroom.UserActivityResponse.user_activity:type_name -> api.v1alpha1.newsroom.UserActivity
	9,  // 19: api.v1alpha1.newsroom.GetNewsForUserResponse.published_article_details:type_name -> api.v1alpha1.newsroom.PublishedArticleDetails
	22, // 20: api.v1alpha1.newsroom.StoreNewsArticleImageRequest.image:type_name -> api.v1alpha1.newsroom.NewsArticleImage
	52, // 21: api.v1alpha1.newsroom.NewsArticleImage.temp_id:type_name -> google.protobuf.StringValue
	22, // 22: api.v1alpha1.newsroom.StoreNewsArticleImageResponse.image:type_name -> api.v1alpha1.newsroom.NewsArticleImage
	22, // 23: api.v1alpha1.newsroom.ListImagesForNewsArticleResponse.news_article_images:type_name -> api.v1alpha1.newsroom.NewsArticleImage
	22, // 24: api.v1alpha1.newsroom.UploadNewsArticleImageRequest.image:type_name -> api.v1alpha1.newsroom.NewsArticleImage
	22, // 25: api.v1alpha1.newsroom.UploadNewsArticleImageResponse.image:type_name -> api.v1alpha1.newsroom.NewsArticleImage
	8,  // 26: api.v1alpha1.newsroom.CreateClientArticleResponse.article_details:type_name -> api.v1alpha1.newsroom.NewsArticleDetails
	8,  // 27: api.v1alpha1.newsroom.UpdateClientArticleRequest.article_details:type_name -> api.v1alpha1.newsroom.NewsArticleDetails
	50, // 28: api.v1alpha1.newsroom.UpdateClientArticleRequest.field_mask:type_name -> google.protobuf.FieldMask
	8,  // 29: api.v1alpha1.newsroom.UpdateClientArticleResponse.article_details:type_name -> api.v1alpha1.newsroom.NewsArticleDetails
	49, // 30: api.v1alpha1.newsroom.ListClientArticlesRequest.statuses:type_name -> api.commons.ArticleStatus
	50, // 31: api.v1alpha1.newsroom.ListClientArticlesRequest.field_mask:type_name -> google.protobuf.FieldMask
	8,  // 32: api.v1alpha1.newsroom.ListClientArticlesResponse.article_details:type_name -> api.v1alpha1.newsroom.NewsArticleDetails
	9,  // 33: api.v1alpha1.newsroom.CreatePublishedClientArticleResponse.published_article_details:type_name -> api.v1alpha1.newsroom.PublishedArticleDetails
	9,  // 34: api.v1alpha1.newsroom.GetPublishedClientArticleByIdResponse.published_article_details:type_name -> api.v1alpha1.newsroom.PublishedArticleDetails
	22, // 35: api.v1alpha1.newsroom.StoreClientArticleImageRequest.image:type_name -> api.v1alpha1.newsroom.NewsArticleImage
	22, // 36: api.v1alpha1.newsroom.StoreClientArticleImageResponse.image:type_name -> api.v1alpha1.newsroom.NewsArticleImage
	22, // 37: api.v1alpha1.newsroom.ListImagesForClientArticleResponse.news_article_images:type_name -> api.v1alpha1.newsroom.NewsArticleImage
	22, // 38: api.v1alpha1.newsroom.UploadClientArticleImageRequest.image:type_name -> api.v1alpha1.newsroom.NewsArticleImage
	22, // 39: api.v1alpha1.newsroom.UploadClientArticleImageResponse.image:type_name -> api.v1alpha1.newsroom.NewsArticleImage
	9,  // 40: api.v1alpha1.newsroom.ListPublishedClientArticlesResponse.published_article_details:type_name -> api.v1alpha1.newsroom.PublishedArticleDetails
	8,  // 41: api.v1alpha1.newsroom.GetClientArticleByIdResponse.article_details:type_name -> api.v1alpha1.newsroom.NewsArticleDetails
	42, // [42:42] is the sub-list for method output_type
	42, // [42:42] is the sub-list for method input_type
	42, // [42:42] is the sub-list for extension type_name
	42, // [42:42] is the sub-list for extension extendee
	0,  // [0:42] is the sub-list for field type_name
}

func init() { file_api_v1alpha1_newsroom_entities_proto_init() }
func file_api_v1alpha1_newsroom_entities_proto_init() {
	if File_api_v1alpha1_newsroom_entities_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_v1alpha1_newsroom_entities_proto_rawDesc), len(file_api_v1alpha1_newsroom_entities_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   49,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_v1alpha1_newsroom_entities_proto_goTypes,
		DependencyIndexes: file_api_v1alpha1_newsroom_entities_proto_depIdxs,
		MessageInfos:      file_api_v1alpha1_newsroom_entities_proto_msgTypes,
	}.Build()
	File_api_v1alpha1_newsroom_entities_proto = out.File
	file_api_v1alpha1_newsroom_entities_proto_goTypes = nil
	file_api_v1alpha1_newsroom_entities_proto_depIdxs = nil
}
