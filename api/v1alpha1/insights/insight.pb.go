// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        (unknown)
// source: api/v1alpha1/insights/insight.proto

package insights

import (
	commons "github.com/tcncloud/api-go/api/commons"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Insight is a data handling entity used to process data
// Insight can represent an object that belongs to the user
// Insight can represent an object inside the common lib
type Insight struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InsightId             int64                         `protobuf:"varint,2,opt,name=insight_id,json=insightId,proto3" json:"insight_id,omitempty"`                                                                              // Required - unique insight snowflake id
	Name                  string                        `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                                                                                                          // Required - name of the insight
	Description           string                        `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`                                                                                            // Required - description of the insight
	InsightType           commons.InsightType           `protobuf:"varint,5,opt,name=insight_type,json=insightType,proto3,enum=api.commons.InsightType" json:"insight_type,omitempty"`                                           // Required - enum type used to deserialize body
	InsightVersion        uint32                        `protobuf:"varint,6,opt,name=insight_version,json=insightVersion,proto3" json:"insight_version,omitempty"`                                                               // Required - version of the insight
	Body                  string                        `protobuf:"bytes,7,opt,name=body,proto3" json:"body,omitempty"`                                                                                                          // Required - serialized json of the insight body
	InsightPermissionType commons.InsightPermissionType `protobuf:"varint,8,opt,name=insight_permission_type,json=insightPermissionType,proto3,enum=api.commons.InsightPermissionType" json:"insight_permission_type,omitempty"` // Required - enum type used to deserialize body
	ResourceId            string                        `protobuf:"bytes,9,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`                                                                            // unique resource id of the insight
	StandardInsight       bool                          `protobuf:"varint,10,opt,name=standard_insight,json=standardInsight,proto3" json:"standard_insight,omitempty"`                                                           // whether the insight is a standard insight
}

func (x *Insight) Reset() {
	*x = Insight{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_insights_insight_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Insight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Insight) ProtoMessage() {}

func (x *Insight) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_insights_insight_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Insight.ProtoReflect.Descriptor instead.
func (*Insight) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_insights_insight_proto_rawDescGZIP(), []int{0}
}

func (x *Insight) GetInsightId() int64 {
	if x != nil {
		return x.InsightId
	}
	return 0
}

func (x *Insight) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Insight) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Insight) GetInsightType() commons.InsightType {
	if x != nil {
		return x.InsightType
	}
	return commons.InsightType(0)
}

func (x *Insight) GetInsightVersion() uint32 {
	if x != nil {
		return x.InsightVersion
	}
	return 0
}

func (x *Insight) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *Insight) GetInsightPermissionType() commons.InsightPermissionType {
	if x != nil {
		return x.InsightPermissionType
	}
	return commons.InsightPermissionType(0)
}

func (x *Insight) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *Insight) GetStandardInsight() bool {
	if x != nil {
		return x.StandardInsight
	}
	return false
}

// PublishInsightRequest is the request to publish an insight.
type PublishInsightRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required - resource id of the insight to publish
	ResourceId string `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	// Optional - resource id of the destination to publish to
	// If not provided, a new standard insight will be created
	DestinationResourceId string `protobuf:"bytes,2,opt,name=destination_resource_id,json=destinationResourceId,proto3" json:"destination_resource_id,omitempty"`
}

func (x *PublishInsightRequest) Reset() {
	*x = PublishInsightRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_insights_insight_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishInsightRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishInsightRequest) ProtoMessage() {}

func (x *PublishInsightRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_insights_insight_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishInsightRequest.ProtoReflect.Descriptor instead.
func (*PublishInsightRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_insights_insight_proto_rawDescGZIP(), []int{1}
}

func (x *PublishInsightRequest) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *PublishInsightRequest) GetDestinationResourceId() string {
	if x != nil {
		return x.DestinationResourceId
	}
	return ""
}

// PublishInsightResponse contains the Insight that was published.
type PublishInsightResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Insight *Insight `protobuf:"bytes,1,opt,name=insight,proto3" json:"insight,omitempty"` // Published entity
}

func (x *PublishInsightResponse) Reset() {
	*x = PublishInsightResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_insights_insight_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishInsightResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishInsightResponse) ProtoMessage() {}

func (x *PublishInsightResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_insights_insight_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishInsightResponse.ProtoReflect.Descriptor instead.
func (*PublishInsightResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_insights_insight_proto_rawDescGZIP(), []int{2}
}

func (x *PublishInsightResponse) GetInsight() *Insight {
	if x != nil {
		return x.Insight
	}
	return nil
}

// CreateInsightRequest is the request to create an insight.
type CreateInsightRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Insight *Insight `protobuf:"bytes,1,opt,name=insight,proto3" json:"insight,omitempty"` // Required - insight to be created
}

func (x *CreateInsightRequest) Reset() {
	*x = CreateInsightRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_insights_insight_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateInsightRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInsightRequest) ProtoMessage() {}

func (x *CreateInsightRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_insights_insight_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInsightRequest.ProtoReflect.Descriptor instead.
func (*CreateInsightRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_insights_insight_proto_rawDescGZIP(), []int{3}
}

func (x *CreateInsightRequest) GetInsight() *Insight {
	if x != nil {
		return x.Insight
	}
	return nil
}

// CreateInsightResponse contains the Insight that was created.
type CreateInsightResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Insight *Insight `protobuf:"bytes,1,opt,name=insight,proto3" json:"insight,omitempty"` // Created entity
}

func (x *CreateInsightResponse) Reset() {
	*x = CreateInsightResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_insights_insight_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateInsightResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInsightResponse) ProtoMessage() {}

func (x *CreateInsightResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_insights_insight_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInsightResponse.ProtoReflect.Descriptor instead.
func (*CreateInsightResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_insights_insight_proto_rawDescGZIP(), []int{4}
}

func (x *CreateInsightResponse) GetInsight() *Insight {
	if x != nil {
		return x.Insight
	}
	return nil
}

// ListInsightsRequest is the request to list insights.
type ListInsightsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InsightPermissionTypes []commons.InsightPermissionType `protobuf:"varint,2,rep,packed,name=insight_permission_types,json=insightPermissionTypes,proto3,enum=api.commons.InsightPermissionType" json:"insight_permission_types,omitempty"` // Optional - list of insight permission types to filter by
}

func (x *ListInsightsRequest) Reset() {
	*x = ListInsightsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_insights_insight_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInsightsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInsightsRequest) ProtoMessage() {}

func (x *ListInsightsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_insights_insight_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInsightsRequest.ProtoReflect.Descriptor instead.
func (*ListInsightsRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_insights_insight_proto_rawDescGZIP(), []int{5}
}

func (x *ListInsightsRequest) GetInsightPermissionTypes() []commons.InsightPermissionType {
	if x != nil {
		return x.InsightPermissionTypes
	}
	return nil
}

// ListInsightsResponse contains the Insights that were listed.
type ListInsightsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Insights []*Insight `protobuf:"bytes,1,rep,name=insights,proto3" json:"insights,omitempty"` // Requested insights
}

func (x *ListInsightsResponse) Reset() {
	*x = ListInsightsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_insights_insight_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInsightsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInsightsResponse) ProtoMessage() {}

func (x *ListInsightsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_insights_insight_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInsightsResponse.ProtoReflect.Descriptor instead.
func (*ListInsightsResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_insights_insight_proto_rawDescGZIP(), []int{6}
}

func (x *ListInsightsResponse) GetInsights() []*Insight {
	if x != nil {
		return x.Insights
	}
	return nil
}

// ListOrgInsightsRequest is the request to list insights for an org in support.
type ListOrgInsightsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId string `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"` // Required - org id to list insights for
}

func (x *ListOrgInsightsRequest) Reset() {
	*x = ListOrgInsightsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_insights_insight_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrgInsightsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrgInsightsRequest) ProtoMessage() {}

func (x *ListOrgInsightsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_insights_insight_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrgInsightsRequest.ProtoReflect.Descriptor instead.
func (*ListOrgInsightsRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_insights_insight_proto_rawDescGZIP(), []int{7}
}

func (x *ListOrgInsightsRequest) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

// ListOrgInsightsResponse contains the Insights that were listed.
type ListOrgInsightsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Insights []*Insight `protobuf:"bytes,1,rep,name=insights,proto3" json:"insights,omitempty"` // Requested insights
}

func (x *ListOrgInsightsResponse) Reset() {
	*x = ListOrgInsightsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_insights_insight_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrgInsightsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrgInsightsResponse) ProtoMessage() {}

func (x *ListOrgInsightsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_insights_insight_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrgInsightsResponse.ProtoReflect.Descriptor instead.
func (*ListOrgInsightsResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_insights_insight_proto_rawDescGZIP(), []int{8}
}

func (x *ListOrgInsightsResponse) GetInsights() []*Insight {
	if x != nil {
		return x.Insights
	}
	return nil
}

// UpdateInsightRequest is the request to update an insight.
type UpdateInsightRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Insight    *Insight               `protobuf:"bytes,1,opt,name=insight,proto3" json:"insight,omitempty"`                         // Required - insight to be updated
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"` // Required - mask of fields to update
}

func (x *UpdateInsightRequest) Reset() {
	*x = UpdateInsightRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_insights_insight_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateInsightRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInsightRequest) ProtoMessage() {}

func (x *UpdateInsightRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_insights_insight_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInsightRequest.ProtoReflect.Descriptor instead.
func (*UpdateInsightRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_insights_insight_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateInsightRequest) GetInsight() *Insight {
	if x != nil {
		return x.Insight
	}
	return nil
}

func (x *UpdateInsightRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

// UpdateInsightResponse contains the Insight that was updated.
type UpdateInsightResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Insight *Insight `protobuf:"bytes,1,opt,name=insight,proto3" json:"insight,omitempty"` // Updated entity
}

func (x *UpdateInsightResponse) Reset() {
	*x = UpdateInsightResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_insights_insight_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateInsightResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInsightResponse) ProtoMessage() {}

func (x *UpdateInsightResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_insights_insight_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInsightResponse.ProtoReflect.Descriptor instead.
func (*UpdateInsightResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_insights_insight_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateInsightResponse) GetInsight() *Insight {
	if x != nil {
		return x.Insight
	}
	return nil
}

// DeleteInsightRequest is the request to delete an insight.
type DeleteInsightRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InsightId  int64  `protobuf:"varint,1,opt,name=insight_id,json=insightId,proto3" json:"insight_id,omitempty"`   // Required - id of insight to delete
	ResourceId string `protobuf:"bytes,2,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"` // resource id of the insight to delete
}

func (x *DeleteInsightRequest) Reset() {
	*x = DeleteInsightRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_insights_insight_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteInsightRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInsightRequest) ProtoMessage() {}

func (x *DeleteInsightRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_insights_insight_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInsightRequest.ProtoReflect.Descriptor instead.
func (*DeleteInsightRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_insights_insight_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteInsightRequest) GetInsightId() int64 {
	if x != nil {
		return x.InsightId
	}
	return 0
}

func (x *DeleteInsightRequest) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

// DeleteInsightResponse contains the Insight that was deleted.
type DeleteInsightResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Insight *Insight `protobuf:"bytes,1,opt,name=insight,proto3" json:"insight,omitempty"` // Deleted entity
}

func (x *DeleteInsightResponse) Reset() {
	*x = DeleteInsightResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_insights_insight_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteInsightResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInsightResponse) ProtoMessage() {}

func (x *DeleteInsightResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_insights_insight_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInsightResponse.ProtoReflect.Descriptor instead.
func (*DeleteInsightResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_insights_insight_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteInsightResponse) GetInsight() *Insight {
	if x != nil {
		return x.Insight
	}
	return nil
}

// GetInsightRequest is the request to get an insight.
type GetInsightRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InsightId  int64  `protobuf:"varint,1,opt,name=insight_id,json=insightId,proto3" json:"insight_id,omitempty"`   // Required - id of insight to get
	ResourceId string `protobuf:"bytes,2,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"` // resource id of insight to get
}

func (x *GetInsightRequest) Reset() {
	*x = GetInsightRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_insights_insight_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInsightRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInsightRequest) ProtoMessage() {}

func (x *GetInsightRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_insights_insight_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInsightRequest.ProtoReflect.Descriptor instead.
func (*GetInsightRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_insights_insight_proto_rawDescGZIP(), []int{13}
}

func (x *GetInsightRequest) GetInsightId() int64 {
	if x != nil {
		return x.InsightId
	}
	return 0
}

func (x *GetInsightRequest) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

// GetInsightResponse contains the Insight that was retrieved.
type GetInsightResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Insight *Insight `protobuf:"bytes,1,opt,name=insight,proto3" json:"insight,omitempty"` // Requested entity
}

func (x *GetInsightResponse) Reset() {
	*x = GetInsightResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_insights_insight_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInsightResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInsightResponse) ProtoMessage() {}

func (x *GetInsightResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_insights_insight_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInsightResponse.ProtoReflect.Descriptor instead.
func (*GetInsightResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_insights_insight_proto_rawDescGZIP(), []int{14}
}

func (x *GetInsightResponse) GetInsight() *Insight {
	if x != nil {
		return x.Insight
	}
	return nil
}

// GetVfsSchemaRequest is request to get vfs schema using alias
type GetVfsSchemaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AliasName string `protobuf:"bytes,1,opt,name=alias_name,json=aliasName,proto3" json:"alias_name,omitempty"` // Required - alias name of vfs to get schema for
}

func (x *GetVfsSchemaRequest) Reset() {
	*x = GetVfsSchemaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_insights_insight_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVfsSchemaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVfsSchemaRequest) ProtoMessage() {}

func (x *GetVfsSchemaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_insights_insight_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVfsSchemaRequest.ProtoReflect.Descriptor instead.
func (*GetVfsSchemaRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_insights_insight_proto_rawDescGZIP(), []int{15}
}

func (x *GetVfsSchemaRequest) GetAliasName() string {
	if x != nil {
		return x.AliasName
	}
	return ""
}

// GetVfsSchemaResponse is response with vfs schema
type GetVfsSchemaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields         []*GetVfsSchemaResponse_Field `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`                                       // array of fields
	VfsDescription string                        `protobuf:"bytes,2,opt,name=vfs_description,json=vfsDescription,proto3" json:"vfs_description,omitempty"` // description of the vfs - optional may not always be present
	AliasName      string                        `protobuf:"bytes,3,opt,name=alias_name,json=aliasName,proto3" json:"alias_name,omitempty"`                // alias name of the vfs
}

func (x *GetVfsSchemaResponse) Reset() {
	*x = GetVfsSchemaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_insights_insight_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVfsSchemaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVfsSchemaResponse) ProtoMessage() {}

func (x *GetVfsSchemaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_insights_insight_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVfsSchemaResponse.ProtoReflect.Descriptor instead.
func (*GetVfsSchemaResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_insights_insight_proto_rawDescGZIP(), []int{16}
}

func (x *GetVfsSchemaResponse) GetFields() []*GetVfsSchemaResponse_Field {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *GetVfsSchemaResponse) GetVfsDescription() string {
	if x != nil {
		return x.VfsDescription
	}
	return ""
}

func (x *GetVfsSchemaResponse) GetAliasName() string {
	if x != nil {
		return x.AliasName
	}
	return ""
}

// ListVfsesRequest is request to list vfses
type ListVfsesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListVfsesRequest) Reset() {
	*x = ListVfsesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_insights_insight_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVfsesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVfsesRequest) ProtoMessage() {}

func (x *ListVfsesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_insights_insight_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVfsesRequest.ProtoReflect.Descriptor instead.
func (*ListVfsesRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_insights_insight_proto_rawDescGZIP(), []int{17}
}

// ListVfsesResponse is response with vfs aliases
type ListVfsesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aliases []string `protobuf:"bytes,1,rep,name=aliases,proto3" json:"aliases,omitempty"` // Array of vfs alias names
}

func (x *ListVfsesResponse) Reset() {
	*x = ListVfsesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_insights_insight_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVfsesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVfsesResponse) ProtoMessage() {}

func (x *ListVfsesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_insights_insight_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVfsesResponse.ProtoReflect.Descriptor instead.
func (*ListVfsesResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_insights_insight_proto_rawDescGZIP(), []int{18}
}

func (x *ListVfsesResponse) GetAliases() []string {
	if x != nil {
		return x.Aliases
	}
	return nil
}

// ListVfsSchemasRequest is request to list vfs schemas
type ListVfsSchemasRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListVfsSchemasRequest) Reset() {
	*x = ListVfsSchemasRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_insights_insight_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVfsSchemasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVfsSchemasRequest) ProtoMessage() {}

func (x *ListVfsSchemasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_insights_insight_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVfsSchemasRequest.ProtoReflect.Descriptor instead.
func (*ListVfsSchemasRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_insights_insight_proto_rawDescGZIP(), []int{19}
}

// ListVfsSchemasResponse is response with vfs schemas
type ListVfsSchemasResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VfsSchemas []*GetVfsSchemaResponse `protobuf:"bytes,1,rep,name=vfs_schemas,json=vfsSchemas,proto3" json:"vfs_schemas,omitempty"` // Array of vfs schemas
}

func (x *ListVfsSchemasResponse) Reset() {
	*x = ListVfsSchemasResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_insights_insight_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVfsSchemasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVfsSchemasResponse) ProtoMessage() {}

func (x *ListVfsSchemasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_insights_insight_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVfsSchemasResponse.ProtoReflect.Descriptor instead.
func (*ListVfsSchemasResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_insights_insight_proto_rawDescGZIP(), []int{20}
}

func (x *ListVfsSchemasResponse) GetVfsSchemas() []*GetVfsSchemaResponse {
	if x != nil {
		return x.VfsSchemas
	}
	return nil
}

// Field represents a column in a dataframe
type GetVfsSchemaResponse_Field struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ColumnName        string                       `protobuf:"bytes,1,opt,name=column_name,json=columnName,proto3" json:"column_name,omitempty"`                                        // name of the column
	ColumnType        commons.InsightVfsSchemaType `protobuf:"varint,2,opt,name=column_type,json=columnType,proto3,enum=api.commons.InsightVfsSchemaType" json:"column_type,omitempty"` // internal enumerated column type
	ColumnDescription string                       `protobuf:"bytes,3,opt,name=column_description,json=columnDescription,proto3" json:"column_description,omitempty"`                   // description of the column - optional may not always be present
}

func (x *GetVfsSchemaResponse_Field) Reset() {
	*x = GetVfsSchemaResponse_Field{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_insights_insight_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVfsSchemaResponse_Field) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVfsSchemaResponse_Field) ProtoMessage() {}

func (x *GetVfsSchemaResponse_Field) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_insights_insight_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVfsSchemaResponse_Field.ProtoReflect.Descriptor instead.
func (*GetVfsSchemaResponse_Field) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_insights_insight_proto_rawDescGZIP(), []int{16, 0}
}

func (x *GetVfsSchemaResponse_Field) GetColumnName() string {
	if x != nil {
		return x.ColumnName
	}
	return ""
}

func (x *GetVfsSchemaResponse_Field) GetColumnType() commons.InsightVfsSchemaType {
	if x != nil {
		return x.ColumnType
	}
	return commons.InsightVfsSchemaType(0)
}

func (x *GetVfsSchemaResponse_Field) GetColumnDescription() string {
	if x != nil {
		return x.ColumnDescription
	}
	return ""
}

var File_api_v1alpha1_insights_insight_proto protoreflect.FileDescriptor

var file_api_v1alpha1_insights_insight_proto_rawDesc = []byte{
	0x0a, 0x23, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x69,
	0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x73, 0x2f, 0x69, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x73, 0x1a, 0x1a, 0x61, 0x70,
	0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2f, 0x69, 0x6e, 0x73, 0x69, 0x67, 0x68,
	0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f,
	0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x84, 0x03, 0x0a, 0x07, 0x49,
	0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x12, 0x21, 0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x69, 0x67, 0x68,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x09,
	0x69, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x3b, 0x0a, 0x0c, 0x69, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x73, 0x2e, 0x49, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0b, 0x69, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x0f,
	0x69, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x69, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x5a, 0x0a, 0x17, 0x69, 0x6e, 0x73,
	0x69, 0x67, 0x68, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x49, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x15,
	0x69, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61,
	0x72, 0x64, 0x5f, 0x69, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0f, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x73, 0x69, 0x67, 0x68,
	0x74, 0x22, 0x70, 0x0a, 0x15, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x49, 0x6e, 0x73, 0x69,
	0x67, 0x68, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x17, 0x64,
	0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x64, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x49, 0x64, 0x22, 0x52, 0x0a, 0x16, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x49, 0x6e,
	0x73, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a,
	0x07, 0x69, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e,
	0x73, 0x69, 0x67, 0x68, 0x74, 0x73, 0x2e, 0x49, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x52, 0x07,
	0x69, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x22, 0x50, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x49, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x38, 0x0a, 0x07, 0x69, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x69, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x73, 0x2e, 0x49, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74,
	0x52, 0x07, 0x69, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x22, 0x51, 0x0a, 0x15, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x38, 0x0a, 0x07, 0x69, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x69, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x73, 0x2e, 0x49, 0x6e, 0x73, 0x69,
	0x67, 0x68, 0x74, 0x52, 0x07, 0x69, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x22, 0x73, 0x0a, 0x13,
	0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x5c, 0x0a, 0x18, 0x69, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x73, 0x2e, 0x49, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x16, 0x69, 0x6e, 0x73, 0x69, 0x67,
	0x68, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x73, 0x22, 0x52, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x08, 0x69, 0x6e, 0x73,
	0x69, 0x67, 0x68, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x73, 0x69, 0x67,
	0x68, 0x74, 0x73, 0x2e, 0x49, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x52, 0x08, 0x69, 0x6e, 0x73,
	0x69, 0x67, 0x68, 0x74, 0x73, 0x22, 0x2f, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67,
	0x49, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x22, 0x55, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72,
	0x67, 0x49, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3a, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x69, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x73, 0x2e, 0x49, 0x6e, 0x73, 0x69,
	0x67, 0x68, 0x74, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x73, 0x22, 0x8d, 0x01,
	0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x07, 0x69, 0x6e, 0x73, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x73, 0x2e,
	0x49, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x52, 0x07, 0x69, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73,
	0x6b, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x51, 0x0a,
	0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x07, 0x69, 0x6e, 0x73, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x73, 0x2e,
	0x49, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x52, 0x07, 0x69, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74,
	0x22, 0x5a, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x69, 0x67, 0x68,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x69,
	0x67, 0x68, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01,
	0x52, 0x09, 0x69, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x22, 0x51, 0x0a, 0x15,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x07, 0x69, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x73, 0x2e, 0x49,
	0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x52, 0x07, 0x69, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x22,
	0x57, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x09, 0x69, 0x6e,
	0x73, 0x69, 0x67, 0x68, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x22, 0x4e, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x49,
	0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38,
	0x0a, 0x07, 0x69, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69,
	0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x73, 0x2e, 0x49, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x52,
	0x07, 0x69, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x22, 0x34, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x56,
	0x66, 0x73, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xc7,
	0x02, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x56, 0x66, 0x73, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x56, 0x66, 0x73, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x76, 0x66, 0x73, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x76, 0x66, 0x73,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x61,
	0x6c, 0x69, 0x61, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x9b, 0x01, 0x0a, 0x05, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x42, 0x0a, 0x0b, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x49, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74,
	0x56, 0x66, 0x73, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x63,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x63, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x12, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74,
	0x56, 0x66, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x2d, 0x0a, 0x11,
	0x4c, 0x69, 0x73, 0x74, 0x56, 0x66, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x22, 0x17, 0x0a, 0x15, 0x4c,
	0x69, 0x73, 0x74, 0x56, 0x66, 0x73, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x66, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x66, 0x73, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c,
	0x0a, 0x0b, 0x76, 0x66, 0x73, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x69, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x56,
	0x66, 0x73, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x0a, 0x76, 0x66, 0x73, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x42, 0xd1, 0x01, 0x0a,
	0x19, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x69, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x73, 0x42, 0x0c, 0x49, 0x6e, 0x73, 0x69,
	0x67, 0x68, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x63, 0x6e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f,
	0x61, 0x70, 0x69, 0x2d, 0x67, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2f, 0x69, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x73, 0xa2, 0x02, 0x03, 0x41,
	0x56, 0x49, 0xaa, 0x02, 0x15, 0x41, 0x70, 0x69, 0x2e, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x49, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x73, 0xca, 0x02, 0x15, 0x41, 0x70, 0x69,
	0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x5c, 0x49, 0x6e, 0x73, 0x69, 0x67, 0x68,
	0x74, 0x73, 0xe2, 0x02, 0x21, 0x41, 0x70, 0x69, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x5c, 0x49, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x73, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x17, 0x41, 0x70, 0x69, 0x3a, 0x3a, 0x56, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x3a, 0x3a, 0x49, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_v1alpha1_insights_insight_proto_rawDescOnce sync.Once
	file_api_v1alpha1_insights_insight_proto_rawDescData = file_api_v1alpha1_insights_insight_proto_rawDesc
)

func file_api_v1alpha1_insights_insight_proto_rawDescGZIP() []byte {
	file_api_v1alpha1_insights_insight_proto_rawDescOnce.Do(func() {
		file_api_v1alpha1_insights_insight_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v1alpha1_insights_insight_proto_rawDescData)
	})
	return file_api_v1alpha1_insights_insight_proto_rawDescData
}

var file_api_v1alpha1_insights_insight_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_api_v1alpha1_insights_insight_proto_goTypes = []interface{}{
	(*Insight)(nil),                    // 0: api.v1alpha1.insights.Insight
	(*PublishInsightRequest)(nil),      // 1: api.v1alpha1.insights.PublishInsightRequest
	(*PublishInsightResponse)(nil),     // 2: api.v1alpha1.insights.PublishInsightResponse
	(*CreateInsightRequest)(nil),       // 3: api.v1alpha1.insights.CreateInsightRequest
	(*CreateInsightResponse)(nil),      // 4: api.v1alpha1.insights.CreateInsightResponse
	(*ListInsightsRequest)(nil),        // 5: api.v1alpha1.insights.ListInsightsRequest
	(*ListInsightsResponse)(nil),       // 6: api.v1alpha1.insights.ListInsightsResponse
	(*ListOrgInsightsRequest)(nil),     // 7: api.v1alpha1.insights.ListOrgInsightsRequest
	(*ListOrgInsightsResponse)(nil),    // 8: api.v1alpha1.insights.ListOrgInsightsResponse
	(*UpdateInsightRequest)(nil),       // 9: api.v1alpha1.insights.UpdateInsightRequest
	(*UpdateInsightResponse)(nil),      // 10: api.v1alpha1.insights.UpdateInsightResponse
	(*DeleteInsightRequest)(nil),       // 11: api.v1alpha1.insights.DeleteInsightRequest
	(*DeleteInsightResponse)(nil),      // 12: api.v1alpha1.insights.DeleteInsightResponse
	(*GetInsightRequest)(nil),          // 13: api.v1alpha1.insights.GetInsightRequest
	(*GetInsightResponse)(nil),         // 14: api.v1alpha1.insights.GetInsightResponse
	(*GetVfsSchemaRequest)(nil),        // 15: api.v1alpha1.insights.GetVfsSchemaRequest
	(*GetVfsSchemaResponse)(nil),       // 16: api.v1alpha1.insights.GetVfsSchemaResponse
	(*ListVfsesRequest)(nil),           // 17: api.v1alpha1.insights.ListVfsesRequest
	(*ListVfsesResponse)(nil),          // 18: api.v1alpha1.insights.ListVfsesResponse
	(*ListVfsSchemasRequest)(nil),      // 19: api.v1alpha1.insights.ListVfsSchemasRequest
	(*ListVfsSchemasResponse)(nil),     // 20: api.v1alpha1.insights.ListVfsSchemasResponse
	(*GetVfsSchemaResponse_Field)(nil), // 21: api.v1alpha1.insights.GetVfsSchemaResponse.Field
	(commons.InsightType)(0),           // 22: api.commons.InsightType
	(commons.InsightPermissionType)(0), // 23: api.commons.InsightPermissionType
	(*fieldmaskpb.FieldMask)(nil),      // 24: google.protobuf.FieldMask
	(commons.InsightVfsSchemaType)(0),  // 25: api.commons.InsightVfsSchemaType
}
var file_api_v1alpha1_insights_insight_proto_depIdxs = []int32{
	22, // 0: api.v1alpha1.insights.Insight.insight_type:type_name -> api.commons.InsightType
	23, // 1: api.v1alpha1.insights.Insight.insight_permission_type:type_name -> api.commons.InsightPermissionType
	0,  // 2: api.v1alpha1.insights.PublishInsightResponse.insight:type_name -> api.v1alpha1.insights.Insight
	0,  // 3: api.v1alpha1.insights.CreateInsightRequest.insight:type_name -> api.v1alpha1.insights.Insight
	0,  // 4: api.v1alpha1.insights.CreateInsightResponse.insight:type_name -> api.v1alpha1.insights.Insight
	23, // 5: api.v1alpha1.insights.ListInsightsRequest.insight_permission_types:type_name -> api.commons.InsightPermissionType
	0,  // 6: api.v1alpha1.insights.ListInsightsResponse.insights:type_name -> api.v1alpha1.insights.Insight
	0,  // 7: api.v1alpha1.insights.ListOrgInsightsResponse.insights:type_name -> api.v1alpha1.insights.Insight
	0,  // 8: api.v1alpha1.insights.UpdateInsightRequest.insight:type_name -> api.v1alpha1.insights.Insight
	24, // 9: api.v1alpha1.insights.UpdateInsightRequest.update_mask:type_name -> google.protobuf.FieldMask
	0,  // 10: api.v1alpha1.insights.UpdateInsightResponse.insight:type_name -> api.v1alpha1.insights.Insight
	0,  // 11: api.v1alpha1.insights.DeleteInsightResponse.insight:type_name -> api.v1alpha1.insights.Insight
	0,  // 12: api.v1alpha1.insights.GetInsightResponse.insight:type_name -> api.v1alpha1.insights.Insight
	21, // 13: api.v1alpha1.insights.GetVfsSchemaResponse.fields:type_name -> api.v1alpha1.insights.GetVfsSchemaResponse.Field
	16, // 14: api.v1alpha1.insights.ListVfsSchemasResponse.vfs_schemas:type_name -> api.v1alpha1.insights.GetVfsSchemaResponse
	25, // 15: api.v1alpha1.insights.GetVfsSchemaResponse.Field.column_type:type_name -> api.commons.InsightVfsSchemaType
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_api_v1alpha1_insights_insight_proto_init() }
func file_api_v1alpha1_insights_insight_proto_init() {
	if File_api_v1alpha1_insights_insight_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_v1alpha1_insights_insight_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Insight); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_insights_insight_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishInsightRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_insights_insight_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishInsightResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_insights_insight_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateInsightRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_insights_insight_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateInsightResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_insights_insight_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInsightsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_insights_insight_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInsightsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_insights_insight_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrgInsightsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_insights_insight_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrgInsightsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_insights_insight_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateInsightRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_insights_insight_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateInsightResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_insights_insight_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteInsightRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_insights_insight_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteInsightResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_insights_insight_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInsightRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_insights_insight_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInsightResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_insights_insight_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVfsSchemaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_insights_insight_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVfsSchemaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_insights_insight_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVfsesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_insights_insight_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVfsesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_insights_insight_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVfsSchemasRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_insights_insight_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVfsSchemasResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_insights_insight_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVfsSchemaResponse_Field); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v1alpha1_insights_insight_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_v1alpha1_insights_insight_proto_goTypes,
		DependencyIndexes: file_api_v1alpha1_insights_insight_proto_depIdxs,
		MessageInfos:      file_api_v1alpha1_insights_insight_proto_msgTypes,
	}.Build()
	File_api_v1alpha1_insights_insight_proto = out.File
	file_api_v1alpha1_insights_insight_proto_rawDesc = nil
	file_api_v1alpha1_insights_insight_proto_goTypes = nil
	file_api_v1alpha1_insights_insight_proto_depIdxs = nil
}
