// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: api/v1alpha1/integrations/portals.proto

package integrations

import (
	public "github.com/tcncloud/api-go/api/commons/public"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UpsertPortalConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *PortalConfig          `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	Mask   *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=mask,proto3" json:"mask,omitempty"`
}

func (x *UpsertPortalConfigReq) Reset() {
	*x = UpsertPortalConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertPortalConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertPortalConfigReq) ProtoMessage() {}

func (x *UpsertPortalConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertPortalConfigReq.ProtoReflect.Descriptor instead.
func (*UpsertPortalConfigReq) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_portals_proto_rawDescGZIP(), []int{0}
}

func (x *UpsertPortalConfigReq) GetEntity() *PortalConfig {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *UpsertPortalConfigReq) GetMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.Mask
	}
	return nil
}

type UpsertPortalConfigRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *PortalConfigId `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
}

func (x *UpsertPortalConfigRes) Reset() {
	*x = UpsertPortalConfigRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertPortalConfigRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertPortalConfigRes) ProtoMessage() {}

func (x *UpsertPortalConfigRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertPortalConfigRes.ProtoReflect.Descriptor instead.
func (*UpsertPortalConfigRes) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_portals_proto_rawDescGZIP(), []int{1}
}

func (x *UpsertPortalConfigRes) GetEntity() *PortalConfigId {
	if x != nil {
		return x.Entity
	}
	return nil
}

type GetPortalConfigRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *PortalConfig `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
}

func (x *GetPortalConfigRes) Reset() {
	*x = GetPortalConfigRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPortalConfigRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPortalConfigRes) ProtoMessage() {}

func (x *GetPortalConfigRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPortalConfigRes.ProtoReflect.Descriptor instead.
func (*GetPortalConfigRes) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_portals_proto_rawDescGZIP(), []int{2}
}

func (x *GetPortalConfigRes) GetEntity() *PortalConfig {
	if x != nil {
		return x.Entity
	}
	return nil
}

type DeletePortalConfigRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeletePortalConfigRes) Reset() {
	*x = DeletePortalConfigRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePortalConfigRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePortalConfigRes) ProtoMessage() {}

func (x *DeletePortalConfigRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePortalConfigRes.ProtoReflect.Descriptor instead.
func (*DeletePortalConfigRes) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_portals_proto_rawDescGZIP(), []int{3}
}

type ListPortalConfigsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entities      []*PortalConfig `protobuf:"bytes,1,rep,name=entities,proto3" json:"entities,omitempty"`
	NextPageToken string          `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListPortalConfigsRes) Reset() {
	*x = ListPortalConfigsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPortalConfigsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPortalConfigsRes) ProtoMessage() {}

func (x *ListPortalConfigsRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPortalConfigsRes.ProtoReflect.Descriptor instead.
func (*ListPortalConfigsRes) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_portals_proto_rawDescGZIP(), []int{4}
}

func (x *ListPortalConfigsRes) GetEntities() []*PortalConfig {
	if x != nil {
		return x.Entities
	}
	return nil
}

func (x *ListPortalConfigsRes) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type UpdatePortalConfigLogoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *PortalConfig `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
}

func (x *UpdatePortalConfigLogoReq) Reset() {
	*x = UpdatePortalConfigLogoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePortalConfigLogoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePortalConfigLogoReq) ProtoMessage() {}

func (x *UpdatePortalConfigLogoReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePortalConfigLogoReq.ProtoReflect.Descriptor instead.
func (*UpdatePortalConfigLogoReq) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_portals_proto_rawDescGZIP(), []int{5}
}

func (x *UpdatePortalConfigLogoReq) GetEntity() *PortalConfig {
	if x != nil {
		return x.Entity
	}
	return nil
}

type UpdatePortalConfigLogoRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdatePortalConfigLogoRes) Reset() {
	*x = UpdatePortalConfigLogoRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePortalConfigLogoRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePortalConfigLogoRes) ProtoMessage() {}

func (x *UpdatePortalConfigLogoRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePortalConfigLogoRes.ProtoReflect.Descriptor instead.
func (*UpdatePortalConfigLogoRes) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_portals_proto_rawDescGZIP(), []int{6}
}

type GetPortalConfigLogoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *PortalConfigId `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
}

func (x *GetPortalConfigLogoReq) Reset() {
	*x = GetPortalConfigLogoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPortalConfigLogoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPortalConfigLogoReq) ProtoMessage() {}

func (x *GetPortalConfigLogoReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPortalConfigLogoReq.ProtoReflect.Descriptor instead.
func (*GetPortalConfigLogoReq) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_portals_proto_rawDescGZIP(), []int{7}
}

func (x *GetPortalConfigLogoReq) GetEntity() *PortalConfigId {
	if x != nil {
		return x.Entity
	}
	return nil
}

type GetPortalConfigLogoRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity []byte `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
}

func (x *GetPortalConfigLogoRes) Reset() {
	*x = GetPortalConfigLogoRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPortalConfigLogoRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPortalConfigLogoRes) ProtoMessage() {}

func (x *GetPortalConfigLogoRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPortalConfigLogoRes.ProtoReflect.Descriptor instead.
func (*GetPortalConfigLogoRes) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_portals_proto_rawDescGZIP(), []int{8}
}

func (x *GetPortalConfigLogoRes) GetEntity() []byte {
	if x != nil {
		return x.Entity
	}
	return nil
}

type UpsertPortalReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *Portal                `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	Mask   *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=mask,proto3" json:"mask,omitempty"`
}

func (x *UpsertPortalReq) Reset() {
	*x = UpsertPortalReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertPortalReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertPortalReq) ProtoMessage() {}

func (x *UpsertPortalReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertPortalReq.ProtoReflect.Descriptor instead.
func (*UpsertPortalReq) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_portals_proto_rawDescGZIP(), []int{9}
}

func (x *UpsertPortalReq) GetEntity() *Portal {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *UpsertPortalReq) GetMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.Mask
	}
	return nil
}

type UpsertPortalRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *PortalId `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
}

func (x *UpsertPortalRes) Reset() {
	*x = UpsertPortalRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertPortalRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertPortalRes) ProtoMessage() {}

func (x *UpsertPortalRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertPortalRes.ProtoReflect.Descriptor instead.
func (*UpsertPortalRes) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_portals_proto_rawDescGZIP(), []int{10}
}

func (x *UpsertPortalRes) GetEntity() *PortalId {
	if x != nil {
		return x.Entity
	}
	return nil
}

type GetPortalReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *PortalId              `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	Mask   *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=mask,proto3" json:"mask,omitempty"`
}

func (x *GetPortalReq) Reset() {
	*x = GetPortalReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPortalReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPortalReq) ProtoMessage() {}

func (x *GetPortalReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPortalReq.ProtoReflect.Descriptor instead.
func (*GetPortalReq) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_portals_proto_rawDescGZIP(), []int{11}
}

func (x *GetPortalReq) GetEntity() *PortalId {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *GetPortalReq) GetMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.Mask
	}
	return nil
}

type GetPortalRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *Portal `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
}

func (x *GetPortalRes) Reset() {
	*x = GetPortalRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPortalRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPortalRes) ProtoMessage() {}

func (x *GetPortalRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPortalRes.ProtoReflect.Descriptor instead.
func (*GetPortalRes) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_portals_proto_rawDescGZIP(), []int{12}
}

func (x *GetPortalRes) GetEntity() *Portal {
	if x != nil {
		return x.Entity
	}
	return nil
}

type DeletePortalReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *PortalId `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
}

func (x *DeletePortalReq) Reset() {
	*x = DeletePortalReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePortalReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePortalReq) ProtoMessage() {}

func (x *DeletePortalReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePortalReq.ProtoReflect.Descriptor instead.
func (*DeletePortalReq) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_portals_proto_rawDescGZIP(), []int{13}
}

func (x *DeletePortalReq) GetEntity() *PortalId {
	if x != nil {
		return x.Entity
	}
	return nil
}

type DeletePortalRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeletePortalRes) Reset() {
	*x = DeletePortalRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePortalRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePortalRes) ProtoMessage() {}

func (x *DeletePortalRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePortalRes.ProtoReflect.Descriptor instead.
func (*DeletePortalRes) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_portals_proto_rawDescGZIP(), []int{14}
}

type ListPortalsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity   *PortalId              `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	Mask     *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=mask,proto3" json:"mask,omitempty"`
	PageSize int32                  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Page     int32                  `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	Ptypes   []*PortalType          `protobuf:"bytes,5,rep,name=ptypes,proto3" json:"ptypes,omitempty"`
}

func (x *ListPortalsReq) Reset() {
	*x = ListPortalsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPortalsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPortalsReq) ProtoMessage() {}

func (x *ListPortalsReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPortalsReq.ProtoReflect.Descriptor instead.
func (*ListPortalsReq) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_portals_proto_rawDescGZIP(), []int{15}
}

func (x *ListPortalsReq) GetEntity() *PortalId {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *ListPortalsReq) GetMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.Mask
	}
	return nil
}

func (x *ListPortalsReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListPortalsReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListPortalsReq) GetPtypes() []*PortalType {
	if x != nil {
		return x.Ptypes
	}
	return nil
}

type ListPortalsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entities []*Portal `protobuf:"bytes,1,rep,name=entities,proto3" json:"entities,omitempty"`
}

func (x *ListPortalsRes) Reset() {
	*x = ListPortalsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPortalsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPortalsRes) ProtoMessage() {}

func (x *ListPortalsRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPortalsRes.ProtoReflect.Descriptor instead.
func (*ListPortalsRes) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_portals_proto_rawDescGZIP(), []int{16}
}

func (x *ListPortalsRes) GetEntities() []*Portal {
	if x != nil {
		return x.Entities
	}
	return nil
}

type ListDetailedPortalsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity     *PortalId              `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	PortalMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=portal_mask,json=portalMask,proto3" json:"portal_mask,omitempty"`
	// controls which fields are sent back on entity related to the portal's portal_config.
	// If left empty, only the portal_config.name, and portal_config.id fields will be set.
	PortalConfigMask *fieldmaskpb.FieldMask `protobuf:"bytes,3,opt,name=portal_config_mask,json=portalConfigMask,proto3" json:"portal_config_mask,omitempty"`
	// controls which fields are sent back on entity related to the portal's plugin_instances.
	// If left empty, only each plugin_instance.name, and plugin_instance.id fields will be set.
	PluginInstanceMask *fieldmaskpb.FieldMask `protobuf:"bytes,4,opt,name=plugin_instance_mask,json=pluginInstanceMask,proto3" json:"plugin_instance_mask,omitempty"`
	PageSize           int32                  `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Page               int32                  `protobuf:"varint,6,opt,name=page,proto3" json:"page,omitempty"`
	Ptypes             []*PortalType          `protobuf:"bytes,7,rep,name=ptypes,proto3" json:"ptypes,omitempty"`
}

func (x *ListDetailedPortalsReq) Reset() {
	*x = ListDetailedPortalsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDetailedPortalsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDetailedPortalsReq) ProtoMessage() {}

func (x *ListDetailedPortalsReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDetailedPortalsReq.ProtoReflect.Descriptor instead.
func (*ListDetailedPortalsReq) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_portals_proto_rawDescGZIP(), []int{17}
}

func (x *ListDetailedPortalsReq) GetEntity() *PortalId {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *ListDetailedPortalsReq) GetPortalMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.PortalMask
	}
	return nil
}

func (x *ListDetailedPortalsReq) GetPortalConfigMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.PortalConfigMask
	}
	return nil
}

func (x *ListDetailedPortalsReq) GetPluginInstanceMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.PluginInstanceMask
	}
	return nil
}

func (x *ListDetailedPortalsReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListDetailedPortalsReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListDetailedPortalsReq) GetPtypes() []*PortalType {
	if x != nil {
		return x.Ptypes
	}
	return nil
}

type ListDetailedPortalsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entities []*ListDetailedPortalsRes_Entity `protobuf:"bytes,4,rep,name=entities,proto3" json:"entities,omitempty"`
}

func (x *ListDetailedPortalsRes) Reset() {
	*x = ListDetailedPortalsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDetailedPortalsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDetailedPortalsRes) ProtoMessage() {}

func (x *ListDetailedPortalsRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDetailedPortalsRes.ProtoReflect.Descriptor instead.
func (*ListDetailedPortalsRes) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_portals_proto_rawDescGZIP(), []int{18}
}

func (x *ListDetailedPortalsRes) GetEntities() []*ListDetailedPortalsRes_Entity {
	if x != nil {
		return x.Entities
	}
	return nil
}

type GetDetailedPortalReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity     *PortalId              `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	PortalMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=portal_mask,json=portalMask,proto3" json:"portal_mask,omitempty"`
	// controls which fields are sent back on entity related to the portal's portal_config.
	// If left empty, only the portal_config.name, and portal_config.id fields will be set.
	PortalConfigMask *fieldmaskpb.FieldMask `protobuf:"bytes,3,opt,name=portal_config_mask,json=portalConfigMask,proto3" json:"portal_config_mask,omitempty"`
	// controls which fields are sent back on entity related to the portal's plugin_instances.
	// If left empty, only each plugin_instance.name, and plugin_instance.id fields will be set.
	PluginInstanceMask *fieldmaskpb.FieldMask `protobuf:"bytes,4,opt,name=plugin_instance_mask,json=pluginInstanceMask,proto3" json:"plugin_instance_mask,omitempty"`
}

func (x *GetDetailedPortalReq) Reset() {
	*x = GetDetailedPortalReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDetailedPortalReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDetailedPortalReq) ProtoMessage() {}

func (x *GetDetailedPortalReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDetailedPortalReq.ProtoReflect.Descriptor instead.
func (*GetDetailedPortalReq) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_portals_proto_rawDescGZIP(), []int{19}
}

func (x *GetDetailedPortalReq) GetEntity() *PortalId {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *GetDetailedPortalReq) GetPortalMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.PortalMask
	}
	return nil
}

func (x *GetDetailedPortalReq) GetPortalConfigMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.PortalConfigMask
	}
	return nil
}

func (x *GetDetailedPortalReq) GetPluginInstanceMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.PluginInstanceMask
	}
	return nil
}

type GetDetailedPortalRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *GetDetailedPortalRes_Entity `protobuf:"bytes,4,opt,name=entity,proto3" json:"entity,omitempty"`
}

func (x *GetDetailedPortalRes) Reset() {
	*x = GetDetailedPortalRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDetailedPortalRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDetailedPortalRes) ProtoMessage() {}

func (x *GetDetailedPortalRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDetailedPortalRes.ProtoReflect.Descriptor instead.
func (*GetDetailedPortalRes) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_portals_proto_rawDescGZIP(), []int{20}
}

func (x *GetDetailedPortalRes) GetEntity() *GetDetailedPortalRes_Entity {
	if x != nil {
		return x.Entity
	}
	return nil
}

type UpsertPluginInstanceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *PluginInstance        `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	Mask   *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=mask,proto3" json:"mask,omitempty"`
}

func (x *UpsertPluginInstanceReq) Reset() {
	*x = UpsertPluginInstanceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertPluginInstanceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertPluginInstanceReq) ProtoMessage() {}

func (x *UpsertPluginInstanceReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertPluginInstanceReq.ProtoReflect.Descriptor instead.
func (*UpsertPluginInstanceReq) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_portals_proto_rawDescGZIP(), []int{21}
}

func (x *UpsertPluginInstanceReq) GetEntity() *PluginInstance {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *UpsertPluginInstanceReq) GetMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.Mask
	}
	return nil
}

type UpsertPluginInstanceRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *PluginInstanceId `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
}

func (x *UpsertPluginInstanceRes) Reset() {
	*x = UpsertPluginInstanceRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertPluginInstanceRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertPluginInstanceRes) ProtoMessage() {}

func (x *UpsertPluginInstanceRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertPluginInstanceRes.ProtoReflect.Descriptor instead.
func (*UpsertPluginInstanceRes) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_portals_proto_rawDescGZIP(), []int{22}
}

func (x *UpsertPluginInstanceRes) GetEntity() *PluginInstanceId {
	if x != nil {
		return x.Entity
	}
	return nil
}

type GetPluginInstanceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *PluginInstanceId      `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	Mask   *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=mask,proto3" json:"mask,omitempty"`
}

func (x *GetPluginInstanceReq) Reset() {
	*x = GetPluginInstanceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPluginInstanceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPluginInstanceReq) ProtoMessage() {}

func (x *GetPluginInstanceReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPluginInstanceReq.ProtoReflect.Descriptor instead.
func (*GetPluginInstanceReq) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_portals_proto_rawDescGZIP(), []int{23}
}

func (x *GetPluginInstanceReq) GetEntity() *PluginInstanceId {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *GetPluginInstanceReq) GetMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.Mask
	}
	return nil
}

type GetPluginInstanceRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *PluginInstance `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
}

func (x *GetPluginInstanceRes) Reset() {
	*x = GetPluginInstanceRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPluginInstanceRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPluginInstanceRes) ProtoMessage() {}

func (x *GetPluginInstanceRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPluginInstanceRes.ProtoReflect.Descriptor instead.
func (*GetPluginInstanceRes) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_portals_proto_rawDescGZIP(), []int{24}
}

func (x *GetPluginInstanceRes) GetEntity() *PluginInstance {
	if x != nil {
		return x.Entity
	}
	return nil
}

type DeletePluginInstanceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *PluginInstanceId `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
}

func (x *DeletePluginInstanceReq) Reset() {
	*x = DeletePluginInstanceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePluginInstanceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePluginInstanceReq) ProtoMessage() {}

func (x *DeletePluginInstanceReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePluginInstanceReq.ProtoReflect.Descriptor instead.
func (*DeletePluginInstanceReq) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_portals_proto_rawDescGZIP(), []int{25}
}

func (x *DeletePluginInstanceReq) GetEntity() *PluginInstanceId {
	if x != nil {
		return x.Entity
	}
	return nil
}

type DeletePluginInstanceRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeletePluginInstanceRes) Reset() {
	*x = DeletePluginInstanceRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePluginInstanceRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePluginInstanceRes) ProtoMessage() {}

func (x *DeletePluginInstanceRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePluginInstanceRes.ProtoReflect.Descriptor instead.
func (*DeletePluginInstanceRes) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_portals_proto_rawDescGZIP(), []int{26}
}

type ListPluginInstanceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity   *PluginInstance        `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	Mask     *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=mask,proto3" json:"mask,omitempty"`
	PageSize int32                  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Page     int32                  `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *ListPluginInstanceReq) Reset() {
	*x = ListPluginInstanceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPluginInstanceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPluginInstanceReq) ProtoMessage() {}

func (x *ListPluginInstanceReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPluginInstanceReq.ProtoReflect.Descriptor instead.
func (*ListPluginInstanceReq) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_portals_proto_rawDescGZIP(), []int{27}
}

func (x *ListPluginInstanceReq) GetEntity() *PluginInstance {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *ListPluginInstanceReq) GetMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.Mask
	}
	return nil
}

func (x *ListPluginInstanceReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListPluginInstanceReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type ListPluginInstanceRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entities []*PluginInstance `protobuf:"bytes,1,rep,name=entities,proto3" json:"entities,omitempty"`
}

func (x *ListPluginInstanceRes) Reset() {
	*x = ListPluginInstanceRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPluginInstanceRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPluginInstanceRes) ProtoMessage() {}

func (x *ListPluginInstanceRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPluginInstanceRes.ProtoReflect.Descriptor instead.
func (*ListPluginInstanceRes) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_portals_proto_rawDescGZIP(), []int{28}
}

func (x *ListPluginInstanceRes) GetEntities() []*PluginInstance {
	if x != nil {
		return x.Entities
	}
	return nil
}

type ListPluginsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListPluginsReq) Reset() {
	*x = ListPluginsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPluginsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPluginsReq) ProtoMessage() {}

func (x *ListPluginsReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPluginsReq.ProtoReflect.Descriptor instead.
func (*ListPluginsReq) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_portals_proto_rawDescGZIP(), []int{29}
}

type ListPluginsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListPluginsRes) Reset() {
	*x = ListPluginsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPluginsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPluginsRes) ProtoMessage() {}

func (x *ListPluginsRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPluginsRes.ProtoReflect.Descriptor instead.
func (*ListPluginsRes) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_portals_proto_rawDescGZIP(), []int{30}
}

type ListPortalLinksReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity   *PortalLinkId          `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	Mask     *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=mask,proto3" json:"mask,omitempty"`
	PageSize int32                  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Page     int32                  `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *ListPortalLinksReq) Reset() {
	*x = ListPortalLinksReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPortalLinksReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPortalLinksReq) ProtoMessage() {}

func (x *ListPortalLinksReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPortalLinksReq.ProtoReflect.Descriptor instead.
func (*ListPortalLinksReq) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_portals_proto_rawDescGZIP(), []int{31}
}

func (x *ListPortalLinksReq) GetEntity() *PortalLinkId {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *ListPortalLinksReq) GetMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.Mask
	}
	return nil
}

func (x *ListPortalLinksReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListPortalLinksReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type ListPortalLinksRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entities []*PortalLink `protobuf:"bytes,1,rep,name=entities,proto3" json:"entities,omitempty"`
}

func (x *ListPortalLinksRes) Reset() {
	*x = ListPortalLinksRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPortalLinksRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPortalLinksRes) ProtoMessage() {}

func (x *ListPortalLinksRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPortalLinksRes.ProtoReflect.Descriptor instead.
func (*ListPortalLinksRes) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_portals_proto_rawDescGZIP(), []int{32}
}

func (x *ListPortalLinksRes) GetEntities() []*PortalLink {
	if x != nil {
		return x.Entities
	}
	return nil
}

type GetPortalLinkReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *PortalLinkId          `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	Mask   *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=mask,proto3" json:"mask,omitempty"`
}

func (x *GetPortalLinkReq) Reset() {
	*x = GetPortalLinkReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPortalLinkReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPortalLinkReq) ProtoMessage() {}

func (x *GetPortalLinkReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPortalLinkReq.ProtoReflect.Descriptor instead.
func (*GetPortalLinkReq) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_portals_proto_rawDescGZIP(), []int{33}
}

func (x *GetPortalLinkReq) GetEntity() *PortalLinkId {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *GetPortalLinkReq) GetMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.Mask
	}
	return nil
}

type GetPortalLinkRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *PortalLink `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
}

func (x *GetPortalLinkRes) Reset() {
	*x = GetPortalLinkRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPortalLinkRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPortalLinkRes) ProtoMessage() {}

func (x *GetPortalLinkRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPortalLinkRes.ProtoReflect.Descriptor instead.
func (*GetPortalLinkRes) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_portals_proto_rawDescGZIP(), []int{34}
}

func (x *GetPortalLinkRes) GetEntity() *PortalLink {
	if x != nil {
		return x.Entity
	}
	return nil
}

type DeletePortalLinkReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *PortalLinkId `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
}

func (x *DeletePortalLinkReq) Reset() {
	*x = DeletePortalLinkReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePortalLinkReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePortalLinkReq) ProtoMessage() {}

func (x *DeletePortalLinkReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePortalLinkReq.ProtoReflect.Descriptor instead.
func (*DeletePortalLinkReq) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_portals_proto_rawDescGZIP(), []int{35}
}

func (x *DeletePortalLinkReq) GetEntity() *PortalLinkId {
	if x != nil {
		return x.Entity
	}
	return nil
}

type DeletePortalLinkRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeletePortalLinkRes) Reset() {
	*x = DeletePortalLinkRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePortalLinkRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePortalLinkRes) ProtoMessage() {}

func (x *DeletePortalLinkRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePortalLinkRes.ProtoReflect.Descriptor instead.
func (*DeletePortalLinkRes) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_portals_proto_rawDescGZIP(), []int{36}
}

type CreatePortalLinksReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the portal's pk the link is for
	Entity *PortalId `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	// each task will have a url created for it
	// and all info for it can be located by Task.task_id
	LinkDatas []*Task `protobuf:"bytes,2,rep,name=link_datas,json=linkDatas,proto3" json:"link_datas,omitempty"`
}

func (x *CreatePortalLinksReq) Reset() {
	*x = CreatePortalLinksReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePortalLinksReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePortalLinksReq) ProtoMessage() {}

func (x *CreatePortalLinksReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePortalLinksReq.ProtoReflect.Descriptor instead.
func (*CreatePortalLinksReq) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_portals_proto_rawDescGZIP(), []int{37}
}

func (x *CreatePortalLinksReq) GetEntity() *PortalId {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *CreatePortalLinksReq) GetLinkDatas() []*Task {
	if x != nil {
		return x.LinkDatas
	}
	return nil
}

type CreatePortalLinksRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// each url will be returned in order of the CreatePortalLinks.link_datas sent them in
	Urls []string `protobuf:"bytes,1,rep,name=urls,proto3" json:"urls,omitempty"`
}

func (x *CreatePortalLinksRes) Reset() {
	*x = CreatePortalLinksRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePortalLinksRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePortalLinksRes) ProtoMessage() {}

func (x *CreatePortalLinksRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePortalLinksRes.ProtoReflect.Descriptor instead.
func (*CreatePortalLinksRes) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_portals_proto_rawDescGZIP(), []int{38}
}

func (x *CreatePortalLinksRes) GetUrls() []string {
	if x != nil {
		return x.Urls
	}
	return nil
}

// used to check what field names are expected by a flow
// does not return any other information about the fields,
// and the user backend still allows any data to be submitted.
type ListFlowFieldNamesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *ListFlowFieldNamesReq_Entity `protobuf:"bytes,5,opt,name=entity,proto3" json:"entity,omitempty"`
}

func (x *ListFlowFieldNamesReq) Reset() {
	*x = ListFlowFieldNamesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFlowFieldNamesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFlowFieldNamesReq) ProtoMessage() {}

func (x *ListFlowFieldNamesReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFlowFieldNamesReq.ProtoReflect.Descriptor instead.
func (*ListFlowFieldNamesReq) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_portals_proto_rawDescGZIP(), []int{39}
}

func (x *ListFlowFieldNamesReq) GetEntity() *ListFlowFieldNamesReq_Entity {
	if x != nil {
		return x.Entity
	}
	return nil
}

// the field names the flow will look for at the request's specified location
type ListFlowFieldNamesRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldNames []string `protobuf:"bytes,1,rep,name=field_names,json=fieldNames,proto3" json:"field_names,omitempty"`
}

func (x *ListFlowFieldNamesRes) Reset() {
	*x = ListFlowFieldNamesRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFlowFieldNamesRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFlowFieldNamesRes) ProtoMessage() {}

func (x *ListFlowFieldNamesRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFlowFieldNamesRes.ProtoReflect.Descriptor instead.
func (*ListFlowFieldNamesRes) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_portals_proto_rawDescGZIP(), []int{40}
}

func (x *ListFlowFieldNamesRes) GetFieldNames() []string {
	if x != nil {
		return x.FieldNames
	}
	return nil
}

// for listing fields on the given verification flow
type ListAvailableVerificationFieldsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Verification *public.VerificationFlow `protobuf:"bytes,1,opt,name=verification,proto3" json:"verification,omitempty"`
}

func (x *ListAvailableVerificationFieldsReq) Reset() {
	*x = ListAvailableVerificationFieldsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAvailableVerificationFieldsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAvailableVerificationFieldsReq) ProtoMessage() {}

func (x *ListAvailableVerificationFieldsReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAvailableVerificationFieldsReq.ProtoReflect.Descriptor instead.
func (*ListAvailableVerificationFieldsReq) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_portals_proto_rawDescGZIP(), []int{41}
}

func (x *ListAvailableVerificationFieldsReq) GetVerification() *public.VerificationFlow {
	if x != nil {
		return x.Verification
	}
	return nil
}

// the available fields for the verification flow
type ListAvailableVerificationFieldsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VerificationFields []*public.FieldDefinition `protobuf:"bytes,2,rep,name=verification_fields,json=verificationFields,proto3" json:"verification_fields,omitempty"`
}

func (x *ListAvailableVerificationFieldsRes) Reset() {
	*x = ListAvailableVerificationFieldsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAvailableVerificationFieldsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAvailableVerificationFieldsRes) ProtoMessage() {}

func (x *ListAvailableVerificationFieldsRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAvailableVerificationFieldsRes.ProtoReflect.Descriptor instead.
func (*ListAvailableVerificationFieldsRes) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_portals_proto_rawDescGZIP(), []int{42}
}

func (x *ListAvailableVerificationFieldsRes) GetVerificationFields() []*public.FieldDefinition {
	if x != nil {
		return x.VerificationFields
	}
	return nil
}

// for listing fields on the given payment flow
type ListAvailablePaymentFieldsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payment *public.PaymentFlow `protobuf:"bytes,1,opt,name=payment,proto3" json:"payment,omitempty"`
}

func (x *ListAvailablePaymentFieldsReq) Reset() {
	*x = ListAvailablePaymentFieldsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAvailablePaymentFieldsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAvailablePaymentFieldsReq) ProtoMessage() {}

func (x *ListAvailablePaymentFieldsReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAvailablePaymentFieldsReq.ProtoReflect.Descriptor instead.
func (*ListAvailablePaymentFieldsReq) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_portals_proto_rawDescGZIP(), []int{43}
}

func (x *ListAvailablePaymentFieldsReq) GetPayment() *public.PaymentFlow {
	if x != nil {
		return x.Payment
	}
	return nil
}

// the available fields for the payment flow
type ListAvailablePaymentFieldsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentFields []*public.FieldDefinition `protobuf:"bytes,2,rep,name=payment_fields,json=paymentFields,proto3" json:"payment_fields,omitempty"`
}

func (x *ListAvailablePaymentFieldsRes) Reset() {
	*x = ListAvailablePaymentFieldsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAvailablePaymentFieldsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAvailablePaymentFieldsRes) ProtoMessage() {}

func (x *ListAvailablePaymentFieldsRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAvailablePaymentFieldsRes.ProtoReflect.Descriptor instead.
func (*ListAvailablePaymentFieldsRes) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_portals_proto_rawDescGZIP(), []int{44}
}

func (x *ListAvailablePaymentFieldsRes) GetPaymentFields() []*public.FieldDefinition {
	if x != nil {
		return x.PaymentFields
	}
	return nil
}

type ListDetailedPortalsRes_Entity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Portal          *Portal           `protobuf:"bytes,1,opt,name=portal,proto3" json:"portal,omitempty"`
	PortalConfig    *PortalConfig     `protobuf:"bytes,2,opt,name=portal_config,json=portalConfig,proto3" json:"portal_config,omitempty"`
	PluginInstances []*PluginInstance `protobuf:"bytes,3,rep,name=plugin_instances,json=pluginInstances,proto3" json:"plugin_instances,omitempty"`
}

func (x *ListDetailedPortalsRes_Entity) Reset() {
	*x = ListDetailedPortalsRes_Entity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDetailedPortalsRes_Entity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDetailedPortalsRes_Entity) ProtoMessage() {}

func (x *ListDetailedPortalsRes_Entity) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDetailedPortalsRes_Entity.ProtoReflect.Descriptor instead.
func (*ListDetailedPortalsRes_Entity) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_portals_proto_rawDescGZIP(), []int{18, 0}
}

func (x *ListDetailedPortalsRes_Entity) GetPortal() *Portal {
	if x != nil {
		return x.Portal
	}
	return nil
}

func (x *ListDetailedPortalsRes_Entity) GetPortalConfig() *PortalConfig {
	if x != nil {
		return x.PortalConfig
	}
	return nil
}

func (x *ListDetailedPortalsRes_Entity) GetPluginInstances() []*PluginInstance {
	if x != nil {
		return x.PluginInstances
	}
	return nil
}

type GetDetailedPortalRes_Entity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Portal          *Portal           `protobuf:"bytes,1,opt,name=portal,proto3" json:"portal,omitempty"`
	PortalConfig    *PortalConfig     `protobuf:"bytes,2,opt,name=portal_config,json=portalConfig,proto3" json:"portal_config,omitempty"`
	PluginInstances []*PluginInstance `protobuf:"bytes,3,rep,name=plugin_instances,json=pluginInstances,proto3" json:"plugin_instances,omitempty"`
}

func (x *GetDetailedPortalRes_Entity) Reset() {
	*x = GetDetailedPortalRes_Entity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDetailedPortalRes_Entity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDetailedPortalRes_Entity) ProtoMessage() {}

func (x *GetDetailedPortalRes_Entity) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDetailedPortalRes_Entity.ProtoReflect.Descriptor instead.
func (*GetDetailedPortalRes_Entity) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_portals_proto_rawDescGZIP(), []int{20, 0}
}

func (x *GetDetailedPortalRes_Entity) GetPortal() *Portal {
	if x != nil {
		return x.Portal
	}
	return nil
}

func (x *GetDetailedPortalRes_Entity) GetPortalConfig() *PortalConfig {
	if x != nil {
		return x.PortalConfig
	}
	return nil
}

func (x *GetDetailedPortalRes_Entity) GetPluginInstances() []*PluginInstance {
	if x != nil {
		return x.PluginInstances
	}
	return nil
}

type ListFlowFieldNamesReq_Entity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the single flow we are interested in checking
	Flow *public.Flow `protobuf:"bytes,3,opt,name=flow,proto3" json:"flow,omitempty"`
	// the location the flow will check for fields
	Loc public.FlowFieldLoc `protobuf:"varint,4,opt,name=loc,proto3,enum=api.commons.public.FlowFieldLoc" json:"loc,omitempty"`
}

func (x *ListFlowFieldNamesReq_Entity) Reset() {
	*x = ListFlowFieldNamesReq_Entity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFlowFieldNamesReq_Entity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFlowFieldNamesReq_Entity) ProtoMessage() {}

func (x *ListFlowFieldNamesReq_Entity) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_portals_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFlowFieldNamesReq_Entity.ProtoReflect.Descriptor instead.
func (*ListFlowFieldNamesReq_Entity) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_portals_proto_rawDescGZIP(), []int{39, 0}
}

func (x *ListFlowFieldNamesReq_Entity) GetFlow() *public.Flow {
	if x != nil {
		return x.Flow
	}
	return nil
}

func (x *ListFlowFieldNamesReq_Entity) GetLoc() public.FlowFieldLoc {
	if x != nil {
		return x.Loc
	}
	return public.FlowFieldLoc(0)
}

var File_api_v1alpha1_integrations_portals_proto protoreflect.FileDescriptor

var file_api_v1alpha1_integrations_portals_proto_rawDesc = []byte{
	0x0a, 0x27, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x70, 0x6f, 0x72, 0x74,
	0x61, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x25, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x73, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x27, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x88, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x50,
	0x6f, 0x72, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x12, 0x3f,
	0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x61,
	0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x2e, 0x0a, 0x04, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x6d, 0x61, 0x73, 0x6b, 0x22,
	0x5a, 0x0a, 0x15, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x12, 0x41, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x49, 0x64, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x55, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x73, 0x12, 0x3f, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x6f,
	0x72, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x22, 0x17, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74,
	0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x22, 0x83, 0x01, 0x0a, 0x14,
	0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x73, 0x52, 0x65, 0x73, 0x12, 0x43, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78,
	0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x22, 0x5c, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x61,
	0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c, 0x6f, 0x67, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x3f,
	0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x61,
	0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22,
	0x1b, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c, 0x6f, 0x67, 0x6f, 0x52, 0x65, 0x73, 0x22, 0x5b, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c,
	0x6f, 0x67, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x41, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49,
	0x64, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x30, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c, 0x6f, 0x67, 0x6f,
	0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x7c, 0x0a, 0x0f, 0x55,
	0x70, 0x73, 0x65, 0x72, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x39,
	0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x61,
	0x6c, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x2e, 0x0a, 0x04, 0x6d, 0x61, 0x73,
	0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d,
	0x61, 0x73, 0x6b, 0x52, 0x04, 0x6d, 0x61, 0x73, 0x6b, 0x22, 0x4e, 0x0a, 0x0f, 0x55, 0x70, 0x73,
	0x65, 0x72, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x12, 0x3b, 0x0a, 0x06,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x49,
	0x64, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x7b, 0x0a, 0x0c, 0x47, 0x65, 0x74,
	0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x3b, 0x0a, 0x06, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x49, 0x64, 0x52, 0x06,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x2e, 0x0a, 0x04, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b,
	0x52, 0x04, 0x6d, 0x61, 0x73, 0x6b, 0x22, 0x49, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x72,
	0x74, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x22, 0x4e, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x61,
	0x6c, 0x52, 0x65, 0x71, 0x12, 0x3b, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x49, 0x64, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x22, 0x11, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x61,
	0x6c, 0x52, 0x65, 0x73, 0x22, 0xed, 0x01, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x72,
	0x74, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x12, 0x3b, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x49, 0x64, 0x52, 0x06, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x12, 0x2e, 0x0a, 0x04, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x04,
	0x6d, 0x61, 0x73, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x3d, 0x0a, 0x06, 0x70, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x70, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x22, 0x4f, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x72, 0x74,
	0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x12, 0x3d, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x52, 0x08, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0x9a, 0x03, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x3b, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x6f, 0x72,
	0x74, 0x61, 0x6c, 0x49, 0x64, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x3b, 0x0a,
	0x0b, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x0a,
	0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x48, 0x0a, 0x12, 0x70, 0x6f,
	0x72, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x6d, 0x61, 0x73, 0x6b,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61,
	0x73, 0x6b, 0x52, 0x10, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x4d, 0x61, 0x73, 0x6b, 0x12, 0x4c, 0x0a, 0x14, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x5f, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x12,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x61,
	0x73, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x3d, 0x0a, 0x06, 0x70, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x70, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x22, 0xd8, 0x02, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x65, 0x64, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x12, 0x54, 0x0a,
	0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x38, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x73, 0x52,
	0x65, 0x73, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x1a, 0xe7, 0x01, 0x0a, 0x06, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x39,
	0x0a, 0x06, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x61,
	0x6c, 0x52, 0x06, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x12, 0x4c, 0x0a, 0x0d, 0x70, 0x6f, 0x72,
	0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x6f, 0x72,
	0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0c, 0x70, 0x6f, 0x72, 0x74, 0x61,
	0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x54, 0x0a, 0x10, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x0f, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x22, 0xa8, 0x02,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x50, 0x6f, 0x72,
	0x74, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x3b, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x49, 0x64, 0x52, 0x06, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x12, 0x3b, 0x0a, 0x0b, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x5f, 0x6d, 0x61,
	0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x4d, 0x61, 0x73, 0x6b, 0x52, 0x0a, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x4d, 0x61, 0x73, 0x6b,
	0x12, 0x48, 0x0a, 0x12, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x10, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x4c, 0x0a, 0x14, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6d, 0x61,
	0x73, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x4d, 0x61, 0x73, 0x6b, 0x52, 0x12, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0xd0, 0x02, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x52, 0x65,
	0x73, 0x12, 0x4e, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x36, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x52,
	0x65, 0x73, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x1a, 0xe7, 0x01, 0x0a, 0x06, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x39, 0x0a, 0x06,
	0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x52,
	0x06, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x12, 0x4c, 0x0a, 0x0d, 0x70, 0x6f, 0x72, 0x74, 0x61,
	0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x61,
	0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0c, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x54, 0x0a, 0x10, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x5f,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x0f, 0x70, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x22, 0x8c, 0x01, 0x0a, 0x17,
	0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x41, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x2e, 0x0a, 0x04, 0x6d, 0x61,
	0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x4d, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x6d, 0x61, 0x73, 0x6b, 0x22, 0x5e, 0x0a, 0x17, 0x55, 0x70,
	0x73, 0x65, 0x72, 0x74, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x12, 0x43, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x49, 0x64, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x8b, 0x01, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x43, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64,
	0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x2e, 0x0a, 0x04, 0x6d, 0x61, 0x73, 0x6b,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61,
	0x73, 0x6b, 0x52, 0x04, 0x6d, 0x61, 0x73, 0x6b, 0x22, 0x59, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x50,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x12, 0x41, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x06, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x22, 0x5e, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x43,
	0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x52, 0x06, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x22, 0x19, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x22, 0xbb,
	0x01, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x41, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x2e, 0x0a, 0x04, 0x6d,
	0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x6d, 0x61, 0x73, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x5e, 0x0a, 0x15,
	0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x12, 0x45, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0x10, 0x0a, 0x0e,
	0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x22, 0x10,
	0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x22, 0xb6, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x4c,
	0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x12, 0x3f, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x49, 0x64,
	0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x2e, 0x0a, 0x04, 0x6d, 0x61, 0x73, 0x6b,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61,
	0x73, 0x6b, 0x52, 0x04, 0x6d, 0x61, 0x73, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x57, 0x0a, 0x12, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x12,
	0x41, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x6f,
	0x72, 0x74, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x22, 0x83, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c,
	0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x3f, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x49, 0x64,
	0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x2e, 0x0a, 0x04, 0x6d, 0x61, 0x73, 0x6b,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61,
	0x73, 0x6b, 0x52, 0x04, 0x6d, 0x61, 0x73, 0x6b, 0x22, 0x51, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50,
	0x6f, 0x72, 0x74, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x12, 0x3d, 0x0a, 0x06,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x4c,
	0x69, 0x6e, 0x6b, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x56, 0x0a, 0x13, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x52,
	0x65, 0x71, 0x12, 0x3f, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50,
	0x6f, 0x72, 0x74, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x49, 0x64, 0x52, 0x06, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x22, 0x15, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x72,
	0x74, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x22, 0x93, 0x01, 0x0a, 0x14, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x3b, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x49, 0x64, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x3e, 0x0a, 0x0a, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x09, 0x6c, 0x69, 0x6e, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x73,
	0x22, 0x2a, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c,
	0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x72, 0x6c, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x75, 0x72, 0x6c, 0x73, 0x22, 0xd4, 0x01, 0x0a,
	0x15, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x6c, 0x6f, 0x77, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x4f, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x6c, 0x6f, 0x77, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52,
	0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x1a, 0x6a, 0x0a, 0x06, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x12, 0x2c, 0x0a, 0x04, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x04, 0x66, 0x6c, 0x6f, 0x77, 0x12,
	0x32, 0x0a, 0x03, 0x6c, 0x6f, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4c, 0x6f, 0x63, 0x52, 0x03,
	0x6c, 0x6f, 0x63, 0x22, 0x38, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x6c, 0x6f, 0x77, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x6e, 0x0a,
	0x22, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x48, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6c, 0x6f, 0x77, 0x52,
	0x0c, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x7a, 0x0a,
	0x22, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x52, 0x65, 0x73, 0x12, 0x54, 0x0a, 0x13, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x12, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0x5a, 0x0a, 0x1d, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x71, 0x12, 0x39, 0x0a, 0x07, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x07, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x6b, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x52, 0x65, 0x73, 0x12, 0x4a, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x32, 0xb3, 0x20, 0x0a, 0x10, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x41, 0x70, 0x69, 0x12, 0xb3, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x73, 0x65,
	0x72, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x30,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72,
	0x74, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71,
	0x1a, 0x30, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x55, 0x70, 0x73,
	0x65, 0x72, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x73, 0x22, 0x39, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x33, 0x3a, 0x01, 0x2a, 0x22, 0x2e, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x70, 0x6f, 0x72,
	0x74, 0x61, 0x6c, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x75, 0x70, 0x73, 0x65, 0x72,
	0x74, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0xaf, 0x01,
	0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x73, 0x12, 0x2f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x2f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x73, 0x52, 0x65, 0x73, 0x22, 0x38, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x32, 0x3a, 0x01, 0x2a,
	0x22, 0x2d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f,
	0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x6c, 0x69,
	0x73, 0x74, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x12,
	0xa7, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x71, 0x1a, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x73, 0x22, 0x36, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x30, 0x3a, 0x01, 0x2a, 0x22, 0x2b, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x70, 0x6f, 0x72, 0x74,
	0x61, 0x6c, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x67, 0x65, 0x74, 0x70, 0x6f, 0x72,
	0x74, 0x61, 0x6c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0xb3, 0x01, 0x0a, 0x12, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x30, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x71, 0x1a, 0x30, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x73, 0x22, 0x39, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x33, 0x3a, 0x01, 0x2a, 0x22,
	0x2e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x70,
	0x6f, 0x72, 0x74, 0x61, 0x6c, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0xc3, 0x01, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c, 0x6f, 0x67, 0x6f, 0x12, 0x34, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x72,
	0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c, 0x6f, 0x67, 0x6f, 0x52, 0x65, 0x71,
	0x1a, 0x34, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c,
	0x6f, 0x67, 0x6f, 0x52, 0x65, 0x73, 0x22, 0x3d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x37, 0x3a, 0x01,
	0x2a, 0x22, 0x32, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2f, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x6c, 0x6f, 0x67, 0x6f, 0x12, 0xb7, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x72,
	0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c, 0x6f, 0x67, 0x6f, 0x12, 0x31, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x72,
	0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c, 0x6f, 0x67, 0x6f, 0x52, 0x65, 0x71,
	0x1a, 0x31, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c, 0x6f, 0x67, 0x6f,
	0x52, 0x65, 0x73, 0x22, 0x3a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x34, 0x3a, 0x01, 0x2a, 0x22, 0x2f,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x70, 0x6f,
	0x72, 0x74, 0x61, 0x6c, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x67, 0x65, 0x74, 0x70,
	0x6f, 0x72, 0x74, 0x61, 0x6c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x6c, 0x6f, 0x67, 0x6f, 0x12,
	0xa7, 0x01, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x4c, 0x69,
	0x6e, 0x6b, 0x73, 0x12, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65,
	0x73, 0x22, 0x36, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x30, 0x3a, 0x01, 0x2a, 0x22, 0x2b, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x70, 0x6f, 0x72, 0x74,
	0x61, 0x6c, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x70, 0x6f,
	0x72, 0x74, 0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x9f, 0x01, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x2b, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x61,
	0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x4c, 0x69,
	0x6e, 0x6b, 0x52, 0x65, 0x73, 0x22, 0x34, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2e, 0x3a, 0x01, 0x2a,
	0x22, 0x29, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f,
	0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x67, 0x65,
	0x74, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0xab, 0x01, 0x0a, 0x10,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b,
	0x12, 0x2e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71,
	0x1a, 0x2e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73,
	0x22, 0x37, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x31, 0x3a, 0x01, 0x2a, 0x22, 0x2c, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x70, 0x6f, 0x72, 0x74, 0x61,
	0x6c, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0xaf, 0x01, 0x0a, 0x11, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x12,
	0x2f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x71,
	0x1a, 0x2f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65,
	0x73, 0x22, 0x38, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x32, 0x3a, 0x01, 0x2a, 0x22, 0x2d, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x70, 0x6f, 0x72, 0x74,
	0x61, 0x6c, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x9b, 0x01, 0x0a, 0x0c,
	0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x12, 0x2a, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x50,
	0x6f, 0x72, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x61,
	0x6c, 0x52, 0x65, 0x73, 0x22, 0x33, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x3a, 0x01, 0x2a, 0x22,
	0x28, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x70,
	0x6f, 0x72, 0x74, 0x61, 0x6c, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x75, 0x70, 0x73,
	0x65, 0x72, 0x74, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x12, 0x8f, 0x01, 0x0a, 0x09, 0x47, 0x65,
	0x74, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x12, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x71,
	0x1a, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x22, 0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x2a, 0x3a, 0x01, 0x2a, 0x22, 0x25, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2f, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2f, 0x67, 0x65, 0x74, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x12, 0x9b, 0x01, 0x0a, 0x0c,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x12, 0x2a, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x6f, 0x72, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x61,
	0x6c, 0x52, 0x65, 0x73, 0x22, 0x33, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x3a, 0x01, 0x2a, 0x22,
	0x28, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x70,
	0x6f, 0x72, 0x74, 0x61, 0x6c, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x12, 0x97, 0x01, 0x0a, 0x0b, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x73, 0x12, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x22,
	0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x3a, 0x01, 0x2a, 0x22, 0x27, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x70, 0x6f, 0x72, 0x74,
	0x61, 0x6c, 0x73, 0x12, 0xb7, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x65, 0x64, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x73, 0x12, 0x31, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x65, 0x64, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x31,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x73, 0x52, 0x65,
	0x73, 0x22, 0x3a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x34, 0x3a, 0x01, 0x2a, 0x22, 0x2f, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x70, 0x6f, 0x72, 0x74,
	0x61, 0x6c, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x73, 0x12, 0xaf, 0x01,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x50, 0x6f, 0x72,
	0x74, 0x61, 0x6c, 0x12, 0x2f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x50, 0x6f, 0x72, 0x74, 0x61,
	0x6c, 0x52, 0x65, 0x71, 0x1a, 0x2f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x50, 0x6f, 0x72, 0x74,
	0x61, 0x6c, 0x52, 0x65, 0x73, 0x22, 0x38, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x32, 0x3a, 0x01, 0x2a,
	0x22, 0x2d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f,
	0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x67, 0x65,
	0x74, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x12,
	0xbb, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x32, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x32, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x50,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x22, 0x3b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x35, 0x3a, 0x01, 0x2a, 0x22, 0x30, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x70, 0x6f, 0x72, 0x74, 0x61,
	0x6c, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x75, 0x70, 0x73, 0x65, 0x72, 0x74, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0xaf, 0x01,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x2f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x2f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x22, 0x38, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x32, 0x3a, 0x01, 0x2a,
	0x22, 0x2d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f,
	0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x67, 0x65,
	0x74, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0xbb, 0x01, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x32, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x32, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x22, 0x3b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x35, 0x3a, 0x01, 0x2a, 0x22, 0x30, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x70, 0x6f, 0x72, 0x74, 0x61,
	0x6c, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0xb4, 0x01,
	0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x30, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x30, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x22, 0x3a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x34,
	0x3a, 0x01, 0x2a, 0x22, 0x2f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2f, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2f, 0x6c, 0x69, 0x73, 0x74, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x12, 0xb3, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x6c, 0x6f,
	0x77, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x30, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x6c, 0x6f, 0x77,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x30, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x6c,
	0x6f, 0x77, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x22,
	0x39, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x33, 0x3a, 0x01, 0x2a, 0x22, 0x2e, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x66, 0x6c, 0x6f, 0x77,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0xe6, 0x01, 0x0a, 0x1f, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x3d,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x3d, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x73, 0x22, 0x45, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x3f, 0x3a, 0x01, 0x2a, 0x22, 0x3a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x12, 0xd2, 0x01, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x12, 0x38, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x38, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x52, 0x65, 0x73, 0x22, 0x40, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3a, 0x3a, 0x01,
	0x2a, 0x22, 0x35, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x6c, 0x69,
	0x73, 0x74, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x42, 0x69, 0x0a, 0x28, 0x63, 0x6f, 0x6d, 0x2e,
	0x74, 0x63, 0x6e, 0x2e, 0x6d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x5a, 0x3d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x74, 0x63, 0x6e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x61, 0x70, 0x69, 0x2d, 0x67, 0x6f,
	0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x3b, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_v1alpha1_integrations_portals_proto_rawDescOnce sync.Once
	file_api_v1alpha1_integrations_portals_proto_rawDescData = file_api_v1alpha1_integrations_portals_proto_rawDesc
)

func file_api_v1alpha1_integrations_portals_proto_rawDescGZIP() []byte {
	file_api_v1alpha1_integrations_portals_proto_rawDescOnce.Do(func() {
		file_api_v1alpha1_integrations_portals_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v1alpha1_integrations_portals_proto_rawDescData)
	})
	return file_api_v1alpha1_integrations_portals_proto_rawDescData
}

var file_api_v1alpha1_integrations_portals_proto_msgTypes = make([]protoimpl.MessageInfo, 48)
var file_api_v1alpha1_integrations_portals_proto_goTypes = []interface{}{
	(*UpsertPortalConfigReq)(nil),              // 0: api.v1alpha1.integrations.UpsertPortalConfigReq
	(*UpsertPortalConfigRes)(nil),              // 1: api.v1alpha1.integrations.UpsertPortalConfigRes
	(*GetPortalConfigRes)(nil),                 // 2: api.v1alpha1.integrations.GetPortalConfigRes
	(*DeletePortalConfigRes)(nil),              // 3: api.v1alpha1.integrations.DeletePortalConfigRes
	(*ListPortalConfigsRes)(nil),               // 4: api.v1alpha1.integrations.ListPortalConfigsRes
	(*UpdatePortalConfigLogoReq)(nil),          // 5: api.v1alpha1.integrations.UpdatePortalConfigLogoReq
	(*UpdatePortalConfigLogoRes)(nil),          // 6: api.v1alpha1.integrations.UpdatePortalConfigLogoRes
	(*GetPortalConfigLogoReq)(nil),             // 7: api.v1alpha1.integrations.GetPortalConfigLogoReq
	(*GetPortalConfigLogoRes)(nil),             // 8: api.v1alpha1.integrations.GetPortalConfigLogoRes
	(*UpsertPortalReq)(nil),                    // 9: api.v1alpha1.integrations.UpsertPortalReq
	(*UpsertPortalRes)(nil),                    // 10: api.v1alpha1.integrations.UpsertPortalRes
	(*GetPortalReq)(nil),                       // 11: api.v1alpha1.integrations.GetPortalReq
	(*GetPortalRes)(nil),                       // 12: api.v1alpha1.integrations.GetPortalRes
	(*DeletePortalReq)(nil),                    // 13: api.v1alpha1.integrations.DeletePortalReq
	(*DeletePortalRes)(nil),                    // 14: api.v1alpha1.integrations.DeletePortalRes
	(*ListPortalsReq)(nil),                     // 15: api.v1alpha1.integrations.ListPortalsReq
	(*ListPortalsRes)(nil),                     // 16: api.v1alpha1.integrations.ListPortalsRes
	(*ListDetailedPortalsReq)(nil),             // 17: api.v1alpha1.integrations.ListDetailedPortalsReq
	(*ListDetailedPortalsRes)(nil),             // 18: api.v1alpha1.integrations.ListDetailedPortalsRes
	(*GetDetailedPortalReq)(nil),               // 19: api.v1alpha1.integrations.GetDetailedPortalReq
	(*GetDetailedPortalRes)(nil),               // 20: api.v1alpha1.integrations.GetDetailedPortalRes
	(*UpsertPluginInstanceReq)(nil),            // 21: api.v1alpha1.integrations.UpsertPluginInstanceReq
	(*UpsertPluginInstanceRes)(nil),            // 22: api.v1alpha1.integrations.UpsertPluginInstanceRes
	(*GetPluginInstanceReq)(nil),               // 23: api.v1alpha1.integrations.GetPluginInstanceReq
	(*GetPluginInstanceRes)(nil),               // 24: api.v1alpha1.integrations.GetPluginInstanceRes
	(*DeletePluginInstanceReq)(nil),            // 25: api.v1alpha1.integrations.DeletePluginInstanceReq
	(*DeletePluginInstanceRes)(nil),            // 26: api.v1alpha1.integrations.DeletePluginInstanceRes
	(*ListPluginInstanceReq)(nil),              // 27: api.v1alpha1.integrations.ListPluginInstanceReq
	(*ListPluginInstanceRes)(nil),              // 28: api.v1alpha1.integrations.ListPluginInstanceRes
	(*ListPluginsReq)(nil),                     // 29: api.v1alpha1.integrations.ListPluginsReq
	(*ListPluginsRes)(nil),                     // 30: api.v1alpha1.integrations.ListPluginsRes
	(*ListPortalLinksReq)(nil),                 // 31: api.v1alpha1.integrations.ListPortalLinksReq
	(*ListPortalLinksRes)(nil),                 // 32: api.v1alpha1.integrations.ListPortalLinksRes
	(*GetPortalLinkReq)(nil),                   // 33: api.v1alpha1.integrations.GetPortalLinkReq
	(*GetPortalLinkRes)(nil),                   // 34: api.v1alpha1.integrations.GetPortalLinkRes
	(*DeletePortalLinkReq)(nil),                // 35: api.v1alpha1.integrations.DeletePortalLinkReq
	(*DeletePortalLinkRes)(nil),                // 36: api.v1alpha1.integrations.DeletePortalLinkRes
	(*CreatePortalLinksReq)(nil),               // 37: api.v1alpha1.integrations.CreatePortalLinksReq
	(*CreatePortalLinksRes)(nil),               // 38: api.v1alpha1.integrations.CreatePortalLinksRes
	(*ListFlowFieldNamesReq)(nil),              // 39: api.v1alpha1.integrations.ListFlowFieldNamesReq
	(*ListFlowFieldNamesRes)(nil),              // 40: api.v1alpha1.integrations.ListFlowFieldNamesRes
	(*ListAvailableVerificationFieldsReq)(nil), // 41: api.v1alpha1.integrations.ListAvailableVerificationFieldsReq
	(*ListAvailableVerificationFieldsRes)(nil), // 42: api.v1alpha1.integrations.ListAvailableVerificationFieldsRes
	(*ListAvailablePaymentFieldsReq)(nil),      // 43: api.v1alpha1.integrations.ListAvailablePaymentFieldsReq
	(*ListAvailablePaymentFieldsRes)(nil),      // 44: api.v1alpha1.integrations.ListAvailablePaymentFieldsRes
	(*ListDetailedPortalsRes_Entity)(nil),      // 45: api.v1alpha1.integrations.ListDetailedPortalsRes.Entity
	(*GetDetailedPortalRes_Entity)(nil),        // 46: api.v1alpha1.integrations.GetDetailedPortalRes.Entity
	(*ListFlowFieldNamesReq_Entity)(nil),       // 47: api.v1alpha1.integrations.ListFlowFieldNamesReq.Entity
	(*PortalConfig)(nil),                       // 48: api.v1alpha1.integrations.PortalConfig
	(*fieldmaskpb.FieldMask)(nil),              // 49: google.protobuf.FieldMask
	(*PortalConfigId)(nil),                     // 50: api.v1alpha1.integrations.PortalConfigId
	(*Portal)(nil),                             // 51: api.v1alpha1.integrations.Portal
	(*PortalId)(nil),                           // 52: api.v1alpha1.integrations.PortalId
	(*PortalType)(nil),                         // 53: api.v1alpha1.integrations.PortalType
	(*PluginInstance)(nil),                     // 54: api.v1alpha1.integrations.PluginInstance
	(*PluginInstanceId)(nil),                   // 55: api.v1alpha1.integrations.PluginInstanceId
	(*PortalLinkId)(nil),                       // 56: api.v1alpha1.integrations.PortalLinkId
	(*PortalLink)(nil),                         // 57: api.v1alpha1.integrations.PortalLink
	(*Task)(nil),                               // 58: api.v1alpha1.integrations.Task
	(*public.VerificationFlow)(nil),            // 59: api.commons.public.VerificationFlow
	(*public.FieldDefinition)(nil),             // 60: api.commons.public.FieldDefinition
	(*public.PaymentFlow)(nil),                 // 61: api.commons.public.PaymentFlow
	(*public.Flow)(nil),                        // 62: api.commons.public.Flow
	(public.FlowFieldLoc)(0),                   // 63: api.commons.public.FlowFieldLoc
	(*ListPortalConfigsReq)(nil),               // 64: api.v1alpha1.integrations.ListPortalConfigsReq
	(*GetPortalConfigReq)(nil),                 // 65: api.v1alpha1.integrations.GetPortalConfigReq
	(*DeletePortalConfigReq)(nil),              // 66: api.v1alpha1.integrations.DeletePortalConfigReq
}
var file_api_v1alpha1_integrations_portals_proto_depIdxs = []int32{
	48, // 0: api.v1alpha1.integrations.UpsertPortalConfigReq.entity:type_name -> api.v1alpha1.integrations.PortalConfig
	49, // 1: api.v1alpha1.integrations.UpsertPortalConfigReq.mask:type_name -> google.protobuf.FieldMask
	50, // 2: api.v1alpha1.integrations.UpsertPortalConfigRes.entity:type_name -> api.v1alpha1.integrations.PortalConfigId
	48, // 3: api.v1alpha1.integrations.GetPortalConfigRes.entity:type_name -> api.v1alpha1.integrations.PortalConfig
	48, // 4: api.v1alpha1.integrations.ListPortalConfigsRes.entities:type_name -> api.v1alpha1.integrations.PortalConfig
	48, // 5: api.v1alpha1.integrations.UpdatePortalConfigLogoReq.entity:type_name -> api.v1alpha1.integrations.PortalConfig
	50, // 6: api.v1alpha1.integrations.GetPortalConfigLogoReq.entity:type_name -> api.v1alpha1.integrations.PortalConfigId
	51, // 7: api.v1alpha1.integrations.UpsertPortalReq.entity:type_name -> api.v1alpha1.integrations.Portal
	49, // 8: api.v1alpha1.integrations.UpsertPortalReq.mask:type_name -> google.protobuf.FieldMask
	52, // 9: api.v1alpha1.integrations.UpsertPortalRes.entity:type_name -> api.v1alpha1.integrations.PortalId
	52, // 10: api.v1alpha1.integrations.GetPortalReq.entity:type_name -> api.v1alpha1.integrations.PortalId
	49, // 11: api.v1alpha1.integrations.GetPortalReq.mask:type_name -> google.protobuf.FieldMask
	51, // 12: api.v1alpha1.integrations.GetPortalRes.entity:type_name -> api.v1alpha1.integrations.Portal
	52, // 13: api.v1alpha1.integrations.DeletePortalReq.entity:type_name -> api.v1alpha1.integrations.PortalId
	52, // 14: api.v1alpha1.integrations.ListPortalsReq.entity:type_name -> api.v1alpha1.integrations.PortalId
	49, // 15: api.v1alpha1.integrations.ListPortalsReq.mask:type_name -> google.protobuf.FieldMask
	53, // 16: api.v1alpha1.integrations.ListPortalsReq.ptypes:type_name -> api.v1alpha1.integrations.PortalType
	51, // 17: api.v1alpha1.integrations.ListPortalsRes.entities:type_name -> api.v1alpha1.integrations.Portal
	52, // 18: api.v1alpha1.integrations.ListDetailedPortalsReq.entity:type_name -> api.v1alpha1.integrations.PortalId
	49, // 19: api.v1alpha1.integrations.ListDetailedPortalsReq.portal_mask:type_name -> google.protobuf.FieldMask
	49, // 20: api.v1alpha1.integrations.ListDetailedPortalsReq.portal_config_mask:type_name -> google.protobuf.FieldMask
	49, // 21: api.v1alpha1.integrations.ListDetailedPortalsReq.plugin_instance_mask:type_name -> google.protobuf.FieldMask
	53, // 22: api.v1alpha1.integrations.ListDetailedPortalsReq.ptypes:type_name -> api.v1alpha1.integrations.PortalType
	45, // 23: api.v1alpha1.integrations.ListDetailedPortalsRes.entities:type_name -> api.v1alpha1.integrations.ListDetailedPortalsRes.Entity
	52, // 24: api.v1alpha1.integrations.GetDetailedPortalReq.entity:type_name -> api.v1alpha1.integrations.PortalId
	49, // 25: api.v1alpha1.integrations.GetDetailedPortalReq.portal_mask:type_name -> google.protobuf.FieldMask
	49, // 26: api.v1alpha1.integrations.GetDetailedPortalReq.portal_config_mask:type_name -> google.protobuf.FieldMask
	49, // 27: api.v1alpha1.integrations.GetDetailedPortalReq.plugin_instance_mask:type_name -> google.protobuf.FieldMask
	46, // 28: api.v1alpha1.integrations.GetDetailedPortalRes.entity:type_name -> api.v1alpha1.integrations.GetDetailedPortalRes.Entity
	54, // 29: api.v1alpha1.integrations.UpsertPluginInstanceReq.entity:type_name -> api.v1alpha1.integrations.PluginInstance
	49, // 30: api.v1alpha1.integrations.UpsertPluginInstanceReq.mask:type_name -> google.protobuf.FieldMask
	55, // 31: api.v1alpha1.integrations.UpsertPluginInstanceRes.entity:type_name -> api.v1alpha1.integrations.PluginInstanceId
	55, // 32: api.v1alpha1.integrations.GetPluginInstanceReq.entity:type_name -> api.v1alpha1.integrations.PluginInstanceId
	49, // 33: api.v1alpha1.integrations.GetPluginInstanceReq.mask:type_name -> google.protobuf.FieldMask
	54, // 34: api.v1alpha1.integrations.GetPluginInstanceRes.entity:type_name -> api.v1alpha1.integrations.PluginInstance
	55, // 35: api.v1alpha1.integrations.DeletePluginInstanceReq.entity:type_name -> api.v1alpha1.integrations.PluginInstanceId
	54, // 36: api.v1alpha1.integrations.ListPluginInstanceReq.entity:type_name -> api.v1alpha1.integrations.PluginInstance
	49, // 37: api.v1alpha1.integrations.ListPluginInstanceReq.mask:type_name -> google.protobuf.FieldMask
	54, // 38: api.v1alpha1.integrations.ListPluginInstanceRes.entities:type_name -> api.v1alpha1.integrations.PluginInstance
	56, // 39: api.v1alpha1.integrations.ListPortalLinksReq.entity:type_name -> api.v1alpha1.integrations.PortalLinkId
	49, // 40: api.v1alpha1.integrations.ListPortalLinksReq.mask:type_name -> google.protobuf.FieldMask
	57, // 41: api.v1alpha1.integrations.ListPortalLinksRes.entities:type_name -> api.v1alpha1.integrations.PortalLink
	56, // 42: api.v1alpha1.integrations.GetPortalLinkReq.entity:type_name -> api.v1alpha1.integrations.PortalLinkId
	49, // 43: api.v1alpha1.integrations.GetPortalLinkReq.mask:type_name -> google.protobuf.FieldMask
	57, // 44: api.v1alpha1.integrations.GetPortalLinkRes.entity:type_name -> api.v1alpha1.integrations.PortalLink
	56, // 45: api.v1alpha1.integrations.DeletePortalLinkReq.entity:type_name -> api.v1alpha1.integrations.PortalLinkId
	52, // 46: api.v1alpha1.integrations.CreatePortalLinksReq.entity:type_name -> api.v1alpha1.integrations.PortalId
	58, // 47: api.v1alpha1.integrations.CreatePortalLinksReq.link_datas:type_name -> api.v1alpha1.integrations.Task
	47, // 48: api.v1alpha1.integrations.ListFlowFieldNamesReq.entity:type_name -> api.v1alpha1.integrations.ListFlowFieldNamesReq.Entity
	59, // 49: api.v1alpha1.integrations.ListAvailableVerificationFieldsReq.verification:type_name -> api.commons.public.VerificationFlow
	60, // 50: api.v1alpha1.integrations.ListAvailableVerificationFieldsRes.verification_fields:type_name -> api.commons.public.FieldDefinition
	61, // 51: api.v1alpha1.integrations.ListAvailablePaymentFieldsReq.payment:type_name -> api.commons.public.PaymentFlow
	60, // 52: api.v1alpha1.integrations.ListAvailablePaymentFieldsRes.payment_fields:type_name -> api.commons.public.FieldDefinition
	51, // 53: api.v1alpha1.integrations.ListDetailedPortalsRes.Entity.portal:type_name -> api.v1alpha1.integrations.Portal
	48, // 54: api.v1alpha1.integrations.ListDetailedPortalsRes.Entity.portal_config:type_name -> api.v1alpha1.integrations.PortalConfig
	54, // 55: api.v1alpha1.integrations.ListDetailedPortalsRes.Entity.plugin_instances:type_name -> api.v1alpha1.integrations.PluginInstance
	51, // 56: api.v1alpha1.integrations.GetDetailedPortalRes.Entity.portal:type_name -> api.v1alpha1.integrations.Portal
	48, // 57: api.v1alpha1.integrations.GetDetailedPortalRes.Entity.portal_config:type_name -> api.v1alpha1.integrations.PortalConfig
	54, // 58: api.v1alpha1.integrations.GetDetailedPortalRes.Entity.plugin_instances:type_name -> api.v1alpha1.integrations.PluginInstance
	62, // 59: api.v1alpha1.integrations.ListFlowFieldNamesReq.Entity.flow:type_name -> api.commons.public.Flow
	63, // 60: api.v1alpha1.integrations.ListFlowFieldNamesReq.Entity.loc:type_name -> api.commons.public.FlowFieldLoc
	0,  // 61: api.v1alpha1.integrations.PortalManagerApi.UpsertPortalConfig:input_type -> api.v1alpha1.integrations.UpsertPortalConfigReq
	64, // 62: api.v1alpha1.integrations.PortalManagerApi.ListPortalConfigs:input_type -> api.v1alpha1.integrations.ListPortalConfigsReq
	65, // 63: api.v1alpha1.integrations.PortalManagerApi.GetPortalConfig:input_type -> api.v1alpha1.integrations.GetPortalConfigReq
	66, // 64: api.v1alpha1.integrations.PortalManagerApi.DeletePortalConfig:input_type -> api.v1alpha1.integrations.DeletePortalConfigReq
	5,  // 65: api.v1alpha1.integrations.PortalManagerApi.UpdatePortalConfigLogo:input_type -> api.v1alpha1.integrations.UpdatePortalConfigLogoReq
	7,  // 66: api.v1alpha1.integrations.PortalManagerApi.GetPortalConfigLogo:input_type -> api.v1alpha1.integrations.GetPortalConfigLogoReq
	31, // 67: api.v1alpha1.integrations.PortalManagerApi.ListPortalLinks:input_type -> api.v1alpha1.integrations.ListPortalLinksReq
	33, // 68: api.v1alpha1.integrations.PortalManagerApi.GetPortalLink:input_type -> api.v1alpha1.integrations.GetPortalLinkReq
	35, // 69: api.v1alpha1.integrations.PortalManagerApi.DeletePortalLink:input_type -> api.v1alpha1.integrations.DeletePortalLinkReq
	37, // 70: api.v1alpha1.integrations.PortalManagerApi.CreatePortalLinks:input_type -> api.v1alpha1.integrations.CreatePortalLinksReq
	9,  // 71: api.v1alpha1.integrations.PortalManagerApi.UpsertPortal:input_type -> api.v1alpha1.integrations.UpsertPortalReq
	11, // 72: api.v1alpha1.integrations.PortalManagerApi.GetPortal:input_type -> api.v1alpha1.integrations.GetPortalReq
	13, // 73: api.v1alpha1.integrations.PortalManagerApi.DeletePortal:input_type -> api.v1alpha1.integrations.DeletePortalReq
	15, // 74: api.v1alpha1.integrations.PortalManagerApi.ListPortals:input_type -> api.v1alpha1.integrations.ListPortalsReq
	17, // 75: api.v1alpha1.integrations.PortalManagerApi.ListDetailedPortals:input_type -> api.v1alpha1.integrations.ListDetailedPortalsReq
	19, // 76: api.v1alpha1.integrations.PortalManagerApi.GetDetailedPortal:input_type -> api.v1alpha1.integrations.GetDetailedPortalReq
	21, // 77: api.v1alpha1.integrations.PortalManagerApi.UpsertPluginInstance:input_type -> api.v1alpha1.integrations.UpsertPluginInstanceReq
	23, // 78: api.v1alpha1.integrations.PortalManagerApi.GetPluginInstance:input_type -> api.v1alpha1.integrations.GetPluginInstanceReq
	25, // 79: api.v1alpha1.integrations.PortalManagerApi.DeletePluginInstance:input_type -> api.v1alpha1.integrations.DeletePluginInstanceReq
	27, // 80: api.v1alpha1.integrations.PortalManagerApi.ListPluginInstance:input_type -> api.v1alpha1.integrations.ListPluginInstanceReq
	39, // 81: api.v1alpha1.integrations.PortalManagerApi.ListFlowFieldNames:input_type -> api.v1alpha1.integrations.ListFlowFieldNamesReq
	41, // 82: api.v1alpha1.integrations.PortalManagerApi.ListAvailableVerificationFields:input_type -> api.v1alpha1.integrations.ListAvailableVerificationFieldsReq
	43, // 83: api.v1alpha1.integrations.PortalManagerApi.ListAvailablePaymentFields:input_type -> api.v1alpha1.integrations.ListAvailablePaymentFieldsReq
	1,  // 84: api.v1alpha1.integrations.PortalManagerApi.UpsertPortalConfig:output_type -> api.v1alpha1.integrations.UpsertPortalConfigRes
	4,  // 85: api.v1alpha1.integrations.PortalManagerApi.ListPortalConfigs:output_type -> api.v1alpha1.integrations.ListPortalConfigsRes
	2,  // 86: api.v1alpha1.integrations.PortalManagerApi.GetPortalConfig:output_type -> api.v1alpha1.integrations.GetPortalConfigRes
	3,  // 87: api.v1alpha1.integrations.PortalManagerApi.DeletePortalConfig:output_type -> api.v1alpha1.integrations.DeletePortalConfigRes
	6,  // 88: api.v1alpha1.integrations.PortalManagerApi.UpdatePortalConfigLogo:output_type -> api.v1alpha1.integrations.UpdatePortalConfigLogoRes
	8,  // 89: api.v1alpha1.integrations.PortalManagerApi.GetPortalConfigLogo:output_type -> api.v1alpha1.integrations.GetPortalConfigLogoRes
	32, // 90: api.v1alpha1.integrations.PortalManagerApi.ListPortalLinks:output_type -> api.v1alpha1.integrations.ListPortalLinksRes
	34, // 91: api.v1alpha1.integrations.PortalManagerApi.GetPortalLink:output_type -> api.v1alpha1.integrations.GetPortalLinkRes
	36, // 92: api.v1alpha1.integrations.PortalManagerApi.DeletePortalLink:output_type -> api.v1alpha1.integrations.DeletePortalLinkRes
	38, // 93: api.v1alpha1.integrations.PortalManagerApi.CreatePortalLinks:output_type -> api.v1alpha1.integrations.CreatePortalLinksRes
	10, // 94: api.v1alpha1.integrations.PortalManagerApi.UpsertPortal:output_type -> api.v1alpha1.integrations.UpsertPortalRes
	12, // 95: api.v1alpha1.integrations.PortalManagerApi.GetPortal:output_type -> api.v1alpha1.integrations.GetPortalRes
	14, // 96: api.v1alpha1.integrations.PortalManagerApi.DeletePortal:output_type -> api.v1alpha1.integrations.DeletePortalRes
	16, // 97: api.v1alpha1.integrations.PortalManagerApi.ListPortals:output_type -> api.v1alpha1.integrations.ListPortalsRes
	18, // 98: api.v1alpha1.integrations.PortalManagerApi.ListDetailedPortals:output_type -> api.v1alpha1.integrations.ListDetailedPortalsRes
	20, // 99: api.v1alpha1.integrations.PortalManagerApi.GetDetailedPortal:output_type -> api.v1alpha1.integrations.GetDetailedPortalRes
	22, // 100: api.v1alpha1.integrations.PortalManagerApi.UpsertPluginInstance:output_type -> api.v1alpha1.integrations.UpsertPluginInstanceRes
	24, // 101: api.v1alpha1.integrations.PortalManagerApi.GetPluginInstance:output_type -> api.v1alpha1.integrations.GetPluginInstanceRes
	26, // 102: api.v1alpha1.integrations.PortalManagerApi.DeletePluginInstance:output_type -> api.v1alpha1.integrations.DeletePluginInstanceRes
	28, // 103: api.v1alpha1.integrations.PortalManagerApi.ListPluginInstance:output_type -> api.v1alpha1.integrations.ListPluginInstanceRes
	40, // 104: api.v1alpha1.integrations.PortalManagerApi.ListFlowFieldNames:output_type -> api.v1alpha1.integrations.ListFlowFieldNamesRes
	42, // 105: api.v1alpha1.integrations.PortalManagerApi.ListAvailableVerificationFields:output_type -> api.v1alpha1.integrations.ListAvailableVerificationFieldsRes
	44, // 106: api.v1alpha1.integrations.PortalManagerApi.ListAvailablePaymentFields:output_type -> api.v1alpha1.integrations.ListAvailablePaymentFieldsRes
	84, // [84:107] is the sub-list for method output_type
	61, // [61:84] is the sub-list for method input_type
	61, // [61:61] is the sub-list for extension type_name
	61, // [61:61] is the sub-list for extension extendee
	0,  // [0:61] is the sub-list for field type_name
}

func init() { file_api_v1alpha1_integrations_portals_proto_init() }
func file_api_v1alpha1_integrations_portals_proto_init() {
	if File_api_v1alpha1_integrations_portals_proto != nil {
		return
	}
	file_api_v1alpha1_integrations_service_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_v1alpha1_integrations_portals_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertPortalConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_portals_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertPortalConfigRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_portals_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPortalConfigRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_portals_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePortalConfigRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_portals_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPortalConfigsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_portals_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePortalConfigLogoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_portals_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePortalConfigLogoRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_portals_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPortalConfigLogoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_portals_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPortalConfigLogoRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_portals_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertPortalReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_portals_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertPortalRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_portals_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPortalReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_portals_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPortalRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_portals_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePortalReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_portals_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePortalRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_portals_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPortalsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_portals_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPortalsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_portals_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDetailedPortalsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_portals_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDetailedPortalsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_portals_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDetailedPortalReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_portals_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDetailedPortalRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_portals_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertPluginInstanceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_portals_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertPluginInstanceRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_portals_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPluginInstanceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_portals_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPluginInstanceRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_portals_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePluginInstanceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_portals_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePluginInstanceRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_portals_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPluginInstanceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_portals_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPluginInstanceRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_portals_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPluginsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_portals_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPluginsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_portals_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPortalLinksReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_portals_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPortalLinksRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_portals_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPortalLinkReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_portals_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPortalLinkRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_portals_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePortalLinkReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_portals_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePortalLinkRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_portals_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePortalLinksReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_portals_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePortalLinksRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_portals_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFlowFieldNamesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_portals_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFlowFieldNamesRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_portals_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAvailableVerificationFieldsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_portals_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAvailableVerificationFieldsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_portals_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAvailablePaymentFieldsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_portals_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAvailablePaymentFieldsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_portals_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDetailedPortalsRes_Entity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_portals_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDetailedPortalRes_Entity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_portals_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFlowFieldNamesReq_Entity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v1alpha1_integrations_portals_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   48,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v1alpha1_integrations_portals_proto_goTypes,
		DependencyIndexes: file_api_v1alpha1_integrations_portals_proto_depIdxs,
		MessageInfos:      file_api_v1alpha1_integrations_portals_proto_msgTypes,
	}.Build()
	File_api_v1alpha1_integrations_portals_proto = out.File
	file_api_v1alpha1_integrations_portals_proto_rawDesc = nil
	file_api_v1alpha1_integrations_portals_proto_goTypes = nil
	file_api_v1alpha1_integrations_portals_proto_depIdxs = nil
}
