// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: api/v1alpha1/integrations/service.proto

package integrations

import (
	_ "github.com/tcncloud/api-go/annotations"
	_ "github.com/tcncloud/api-go/api/commons"
	integrations "github.com/tcncloud/api-go/api/commons/integrations"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListJourneyConfigsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListJourneyConfigsReq) Reset() {
	*x = ListJourneyConfigsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListJourneyConfigsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListJourneyConfigsReq) ProtoMessage() {}

func (x *ListJourneyConfigsReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListJourneyConfigsReq.ProtoReflect.Descriptor instead.
func (*ListJourneyConfigsReq) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{0}
}

type ListNonJourneyConfigsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListNonJourneyConfigsReq) Reset() {
	*x = ListNonJourneyConfigsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNonJourneyConfigsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNonJourneyConfigsReq) ProtoMessage() {}

func (x *ListNonJourneyConfigsReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNonJourneyConfigsReq.ProtoReflect.Descriptor instead.
func (*ListNonJourneyConfigsReq) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{1}
}

type IntegrationConfigs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []*IntegrationConfig `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *IntegrationConfigs) Reset() {
	*x = IntegrationConfigs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntegrationConfigs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntegrationConfigs) ProtoMessage() {}

func (x *IntegrationConfigs) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntegrationConfigs.ProtoReflect.Descriptor instead.
func (*IntegrationConfigs) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{2}
}

func (x *IntegrationConfigs) GetValues() []*IntegrationConfig {
	if x != nil {
		return x.Values
	}
	return nil
}

type GetIntegrationConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IntegrationId integrations.IntegrationType `protobuf:"varint,3,opt,name=integration_id,json=integrationId,proto3,enum=api.commons.integrations.IntegrationType" json:"integration_id,omitempty"`
	Name          string                       `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// if this exists, we will do GetIntegrationConfigById, otherwise we will do GetIntegrationConfigByName
	Id string `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetIntegrationConfigReq) Reset() {
	*x = GetIntegrationConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIntegrationConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIntegrationConfigReq) ProtoMessage() {}

func (x *GetIntegrationConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIntegrationConfigReq.ProtoReflect.Descriptor instead.
func (*GetIntegrationConfigReq) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetIntegrationConfigReq) GetIntegrationId() integrations.IntegrationType {
	if x != nil {
		return x.IntegrationId
	}
	return integrations.IntegrationType(0)
}

func (x *GetIntegrationConfigReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetIntegrationConfigReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UpdateIntegrationConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// if this exists, we will do UpdateIntegrationConfigById, otherwise we will do UpdateIntegrationConfigByName
	Id            string                       `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	IntegrationId integrations.IntegrationType `protobuf:"varint,4,opt,name=integration_id,json=integrationId,proto3,enum=api.commons.integrations.IntegrationType" json:"integration_id,omitempty"`
	Name          string                       `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                       `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	Params        *Values                      `protobuf:"bytes,9,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *UpdateIntegrationConfigReq) Reset() {
	*x = UpdateIntegrationConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateIntegrationConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateIntegrationConfigReq) ProtoMessage() {}

func (x *UpdateIntegrationConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateIntegrationConfigReq.ProtoReflect.Descriptor instead.
func (*UpdateIntegrationConfigReq) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateIntegrationConfigReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateIntegrationConfigReq) GetIntegrationId() integrations.IntegrationType {
	if x != nil {
		return x.IntegrationId
	}
	return integrations.IntegrationType(0)
}

func (x *UpdateIntegrationConfigReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateIntegrationConfigReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateIntegrationConfigReq) GetParams() *Values {
	if x != nil {
		return x.Params
	}
	return nil
}

type DeleteIntegrationConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IntegrationId integrations.IntegrationType `protobuf:"varint,4,opt,name=integration_id,json=integrationId,proto3,enum=api.commons.integrations.IntegrationType" json:"integration_id,omitempty"`
	Name          string                       `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	// if this exists we will delete by id, otherwise we delete by integration_id and name
	Id string `protobuf:"bytes,6,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteIntegrationConfigReq) Reset() {
	*x = DeleteIntegrationConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteIntegrationConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteIntegrationConfigReq) ProtoMessage() {}

func (x *DeleteIntegrationConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteIntegrationConfigReq.ProtoReflect.Descriptor instead.
func (*DeleteIntegrationConfigReq) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteIntegrationConfigReq) GetIntegrationId() integrations.IntegrationType {
	if x != nil {
		return x.IntegrationId
	}
	return integrations.IntegrationType(0)
}

func (x *DeleteIntegrationConfigReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeleteIntegrationConfigReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ProcessReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// an identifier for this request so we do not do duplicate calls
	// if a IntegrationsApi.Process() call times out, but doesn't fail
	// you can call IntegrationsApi.Process() again with the same request_id.
	// The second call will just return the result of the previous timed out call
	// instead of processing the request a second time.
	RequestId string `protobuf:"bytes,8,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// the id of handler we want to trigger
	IntegrationId integrations.IntegrationType `protobuf:"varint,3,opt,name=integration_id,json=integrationId,proto3,enum=api.commons.integrations.IntegrationType" json:"integration_id,omitempty"`
	// which integration config is going to be triggered
	MethodId   integrations.RequestMethod `protobuf:"varint,4,opt,name=method_id,json=methodId,proto3,enum=api.commons.integrations.RequestMethod" json:"method_id,omitempty"`
	ConfigName string                     `protobuf:"bytes,5,opt,name=config_name,json=configName,proto3" json:"config_name,omitempty"`
	// if this exists, we will fetch the integration by id
	// otherwise we will get the integration by config_name (legecy)
	ConfigId string `protobuf:"bytes,9,opt,name=config_id,json=configId,proto3" json:"config_id,omitempty"`
	// parameters used for this request. These are combined with the parameters stored in the config
	Params map[string]*Value `protobuf:"bytes,6,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// can be left nil, used for verification requests
	Conds []*Condition `protobuf:"bytes,7,rep,name=conds,proto3" json:"conds,omitempty"`
}

func (x *ProcessReq) Reset() {
	*x = ProcessReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessReq) ProtoMessage() {}

func (x *ProcessReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessReq.ProtoReflect.Descriptor instead.
func (*ProcessReq) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{6}
}

func (x *ProcessReq) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *ProcessReq) GetIntegrationId() integrations.IntegrationType {
	if x != nil {
		return x.IntegrationId
	}
	return integrations.IntegrationType(0)
}

func (x *ProcessReq) GetMethodId() integrations.RequestMethod {
	if x != nil {
		return x.MethodId
	}
	return integrations.RequestMethod(0)
}

func (x *ProcessReq) GetConfigName() string {
	if x != nil {
		return x.ConfigName
	}
	return ""
}

func (x *ProcessReq) GetConfigId() string {
	if x != nil {
		return x.ConfigId
	}
	return ""
}

func (x *ProcessReq) GetParams() map[string]*Value {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *ProcessReq) GetConds() []*Condition {
	if x != nil {
		return x.Conds
	}
	return nil
}

type ProcessRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// whether we were successful or the bool result the operation returned.
	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	// contains the response value from the transaction. This could be an amount for payments
	// an object from inquiries, or it could be nil
	Data map[string]*Value `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// integration name that was called
	Integration string `protobuf:"bytes,3,opt,name=integration,proto3" json:"integration,omitempty"`
	// method that was called
	Method string `protobuf:"bytes,4,opt,name=method,proto3" json:"method,omitempty"`
	// ID of thing we inserted into the db
	// If this is only empty if we fail to insert a transaction (which will return an error) or
	// the transaction is pending. This happens if we call IntegrationsApi.Process() with the same request_id
	// twice, with the first call timing out.
	TransactionId string `protobuf:"bytes,5,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
}

func (x *ProcessRes) Reset() {
	*x = ProcessRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessRes) ProtoMessage() {}

func (x *ProcessRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessRes.ProtoReflect.Descriptor instead.
func (*ProcessRes) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{7}
}

func (x *ProcessRes) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

func (x *ProcessRes) GetData() map[string]*Value {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ProcessRes) GetIntegration() string {
	if x != nil {
		return x.Integration
	}
	return ""
}

func (x *ProcessRes) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *ProcessRes) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

type IntegrationInfos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []*IntegrationInfo `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *IntegrationInfos) Reset() {
	*x = IntegrationInfos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntegrationInfos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntegrationInfos) ProtoMessage() {}

func (x *IntegrationInfos) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntegrationInfos.ProtoReflect.Descriptor instead.
func (*IntegrationInfos) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{8}
}

func (x *IntegrationInfos) GetValues() []*IntegrationInfo {
	if x != nil {
		return x.Values
	}
	return nil
}

// IntegrationInfo describes one of our payment sub-services
// it is used in static structures in integrations/adapters/integrations go packages
type IntegrationInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the pretty name of this integration. Ex: 'BrainTree'
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// identifies which integration handler this is
	IntegrationId integrations.IntegrationType `protobuf:"varint,2,opt,name=integration_id,json=integrationId,proto3,enum=api.commons.integrations.IntegrationType" json:"integration_id,omitempty"`
	// describes this integration
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// what methods are available for this integration
	Methods []*MethodInfo `protobuf:"bytes,4,rep,name=methods,proto3" json:"methods,omitempty"`
	// the plugin fields for this integration.
	// These fields should be set on the plugin level and not the runtime.
	// key is a value starting at api.commons.integrations.Visiblity.VISIBILITY_GROUP
	// and ending at 99 more than that value, or parameters marked VISIBILITY_ANYWHERE
	GroupParams map[int32]*Parameter `protobuf:"bytes,5,rep,name=group_params,json=groupParams,proto3" json:"group_params,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *IntegrationInfo) Reset() {
	*x = IntegrationInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntegrationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntegrationInfo) ProtoMessage() {}

func (x *IntegrationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntegrationInfo.ProtoReflect.Descriptor instead.
func (*IntegrationInfo) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{9}
}

func (x *IntegrationInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *IntegrationInfo) GetIntegrationId() integrations.IntegrationType {
	if x != nil {
		return x.IntegrationId
	}
	return integrations.IntegrationType(0)
}

func (x *IntegrationInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *IntegrationInfo) GetMethods() []*MethodInfo {
	if x != nil {
		return x.Methods
	}
	return nil
}

func (x *IntegrationInfo) GetGroupParams() map[int32]*Parameter {
	if x != nil {
		return x.GroupParams
	}
	return nil
}

type MethodInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the pretty name of the method
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// identifies which method this is
	MethodId integrations.RequestMethod `protobuf:"varint,2,opt,name=method_id,json=methodId,proto3,enum=api.commons.integrations.RequestMethod" json:"method_id,omitempty"`
	// what type of method call this is: PAYMENT, INQUIRY, or VERIFY
	TxType integrations.TransactionType `protobuf:"varint,3,opt,name=tx_type,json=txType,proto3,enum=api.commons.integrations.TransactionType" json:"tx_type,omitempty"`
	// what types of fields can/must be sent with the data when calling the method
	Params []*Parameter `protobuf:"bytes,4,rep,name=params,proto3" json:"params,omitempty"`
	// the url we contact
	Url string `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	// the expected response map will have these values
	// none of these should be required, and none should have a default value
	Response []*Parameter `protobuf:"bytes,6,rep,name=response,proto3" json:"response,omitempty"`
	// fields specific to this method that should come over during the runtime
	// key will be a value starting at commnos.public.Visiblity.VISIBILITY_RUNTIME
	// and ending at 99 more than that value, or parameeters marked VISIBLITY_ANYWHERE
	RuntimeParams map[int32]*Parameter `protobuf:"bytes,7,rep,name=runtime_params,json=runtimeParams,proto3" json:"runtime_params,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *MethodInfo) Reset() {
	*x = MethodInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MethodInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MethodInfo) ProtoMessage() {}

func (x *MethodInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MethodInfo.ProtoReflect.Descriptor instead.
func (*MethodInfo) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{10}
}

func (x *MethodInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MethodInfo) GetMethodId() integrations.RequestMethod {
	if x != nil {
		return x.MethodId
	}
	return integrations.RequestMethod(0)
}

func (x *MethodInfo) GetTxType() integrations.TransactionType {
	if x != nil {
		return x.TxType
	}
	return integrations.TransactionType(0)
}

func (x *MethodInfo) GetParams() []*Parameter {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *MethodInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *MethodInfo) GetResponse() []*Parameter {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *MethodInfo) GetRuntimeParams() map[int32]*Parameter {
	if x != nil {
		return x.RuntimeParams
	}
	return nil
}

// Parameter is describes a key/value pair that needs to be on the requeset object
// it is used in static structures in integrations/adapters/integrations go packages
type Parameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name of parameter. This will be the key of the field in the request payload
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// the type of the field. The value of the key value pair needs to be this type in the request payload
	// right now this will be STRING, NUMBER, BOOL
	ParamType integrations.ValueType `protobuf:"varint,2,opt,name=param_type,json=paramType,proto3,enum=api.commons.integrations.ValueType" json:"param_type,omitempty"`
	// if the field must appear in the request payload or not
	Required bool `protobuf:"varint,3,opt,name=required,proto3" json:"required,omitempty"`
	// what is used if the value is not provided
	DefaultValue *Value `protobuf:"bytes,4,opt,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"`
	// some names are really ugly, display names are what the user should be shown
	DisplayName string `protobuf:"bytes,5,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// means we won't be storing in the database (and there is no way to override)
	Sensitive bool `protobuf:"varint,6,opt,name=sensitive,proto3" json:"sensitive,omitempty"`
	// whether this value can be stored in an integration config.
	// If true, we do not allow the value to be put in the config, the value can only
	// be received during processing.
	// true values should be filtered on the front end
	RuntimeParam bool `protobuf:"varint,7,opt,name=runtime_param,json=runtimeParam,proto3" json:"runtime_param,omitempty"`
	// tool tip info about the param
	HelperText string `protobuf:"bytes,8,opt,name=helper_text,json=helperText,proto3" json:"helper_text,omitempty"`
	// means the parameter is not allowed to be editted in the template builder.
	// template builder can use this to field to make the parameter read_only on the ui.
	// integration_config builder ui can ignore this field.
	// usually fields that are template_locked are ones that require extra work to
	// get an appropriate value for. like "collection_id"
	TemplateLocked bool `protobuf:"varint,9,opt,name=template_locked,json=templateLocked,proto3" json:"template_locked,omitempty"`
	// what type of data value we accept
	Validation integrations.Validation `protobuf:"varint,10,opt,name=validation,proto3,enum=api.commons.integrations.Validation" json:"validation,omitempty"`
}

func (x *Parameter) Reset() {
	*x = Parameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Parameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Parameter) ProtoMessage() {}

func (x *Parameter) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Parameter.ProtoReflect.Descriptor instead.
func (*Parameter) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{11}
}

func (x *Parameter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Parameter) GetParamType() integrations.ValueType {
	if x != nil {
		return x.ParamType
	}
	return integrations.ValueType(0)
}

func (x *Parameter) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

func (x *Parameter) GetDefaultValue() *Value {
	if x != nil {
		return x.DefaultValue
	}
	return nil
}

func (x *Parameter) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *Parameter) GetSensitive() bool {
	if x != nil {
		return x.Sensitive
	}
	return false
}

func (x *Parameter) GetRuntimeParam() bool {
	if x != nil {
		return x.RuntimeParam
	}
	return false
}

func (x *Parameter) GetHelperText() string {
	if x != nil {
		return x.HelperText
	}
	return ""
}

func (x *Parameter) GetTemplateLocked() bool {
	if x != nil {
		return x.TemplateLocked
	}
	return false
}

func (x *Parameter) GetValidation() integrations.Validation {
	if x != nil {
		return x.Validation
	}
	return integrations.Validation(0)
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{12}
}

type GetIntegrationTransactionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IntegrationTransactionId string `protobuf:"bytes,1,opt,name=integration_transaction_id,json=integrationTransactionId,proto3" json:"integration_transaction_id,omitempty"`
}

func (x *GetIntegrationTransactionReq) Reset() {
	*x = GetIntegrationTransactionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIntegrationTransactionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIntegrationTransactionReq) ProtoMessage() {}

func (x *GetIntegrationTransactionReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIntegrationTransactionReq.ProtoReflect.Descriptor instead.
func (*GetIntegrationTransactionReq) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{13}
}

func (x *GetIntegrationTransactionReq) GetIntegrationTransactionId() string {
	if x != nil {
		return x.IntegrationTransactionId
	}
	return ""
}

// get a summary of all the aggregated data between two dates
type GetAggregatedMetadataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start    *timestamppb.Timestamp     `protobuf:"bytes,3,opt,name=start,proto3" json:"start,omitempty"`
	End      *timestamppb.Timestamp     `protobuf:"bytes,4,opt,name=end,proto3" json:"end,omitempty"`
	MethodId integrations.RequestMethod `protobuf:"varint,5,opt,name=method_id,json=methodId,proto3,enum=api.commons.integrations.RequestMethod" json:"method_id,omitempty"`
}

func (x *GetAggregatedMetadataReq) Reset() {
	*x = GetAggregatedMetadataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAggregatedMetadataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAggregatedMetadataReq) ProtoMessage() {}

func (x *GetAggregatedMetadataReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAggregatedMetadataReq.ProtoReflect.Descriptor instead.
func (*GetAggregatedMetadataReq) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{14}
}

func (x *GetAggregatedMetadataReq) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *GetAggregatedMetadataReq) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *GetAggregatedMetadataReq) GetMethodId() integrations.RequestMethod {
	if x != nil {
		return x.MethodId
	}
	return integrations.RequestMethod(0)
}

// the metadata values. All values should be numbers or dates
type GetAggregatedMetadataRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Views            int32    `protobuf:"varint,1,opt,name=views,proto3" json:"views,omitempty"`
	VerifyAttempts   int32    `protobuf:"varint,2,opt,name=verify_attempts,json=verifyAttempts,proto3" json:"verify_attempts,omitempty"`
	VerifySuccesses  int32    `protobuf:"varint,3,opt,name=verify_successes,json=verifySuccesses,proto3" json:"verify_successes,omitempty"`
	PaymentAttempts  int32    `protobuf:"varint,4,opt,name=payment_attempts,json=paymentAttempts,proto3" json:"payment_attempts,omitempty"`
	PaymentSuccesses int32    `protobuf:"varint,5,opt,name=payment_successes,json=paymentSuccesses,proto3" json:"payment_successes,omitempty"`
	PaymentAmount    float64  `protobuf:"fixed64,6,opt,name=payment_amount,json=paymentAmount,proto3" json:"payment_amount,omitempty"`
	Fields           []string `protobuf:"bytes,7,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *GetAggregatedMetadataRes) Reset() {
	*x = GetAggregatedMetadataRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAggregatedMetadataRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAggregatedMetadataRes) ProtoMessage() {}

func (x *GetAggregatedMetadataRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAggregatedMetadataRes.ProtoReflect.Descriptor instead.
func (*GetAggregatedMetadataRes) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{15}
}

func (x *GetAggregatedMetadataRes) GetViews() int32 {
	if x != nil {
		return x.Views
	}
	return 0
}

func (x *GetAggregatedMetadataRes) GetVerifyAttempts() int32 {
	if x != nil {
		return x.VerifyAttempts
	}
	return 0
}

func (x *GetAggregatedMetadataRes) GetVerifySuccesses() int32 {
	if x != nil {
		return x.VerifySuccesses
	}
	return 0
}

func (x *GetAggregatedMetadataRes) GetPaymentAttempts() int32 {
	if x != nil {
		return x.PaymentAttempts
	}
	return 0
}

func (x *GetAggregatedMetadataRes) GetPaymentSuccesses() int32 {
	if x != nil {
		return x.PaymentSuccesses
	}
	return 0
}

func (x *GetAggregatedMetadataRes) GetPaymentAmount() float64 {
	if x != nil {
		return x.PaymentAmount
	}
	return 0
}

func (x *GetAggregatedMetadataRes) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

// GetIntegrationTransactionReportReq gives summarizes the IntegrationTrasactions between two dates
type GetIntegrationTransactionReportReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start,proto3" json:"start,omitempty"`
	End   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=end,proto3" json:"end,omitempty"`
	// field names we want to group the data by
	GroupBy []string `protobuf:"bytes,5,rep,name=group_by,json=groupBy,proto3" json:"group_by,omitempty"`
}

func (x *GetIntegrationTransactionReportReq) Reset() {
	*x = GetIntegrationTransactionReportReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIntegrationTransactionReportReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIntegrationTransactionReportReq) ProtoMessage() {}

func (x *GetIntegrationTransactionReportReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIntegrationTransactionReportReq.ProtoReflect.Descriptor instead.
func (*GetIntegrationTransactionReportReq) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{16}
}

func (x *GetIntegrationTransactionReportReq) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *GetIntegrationTransactionReportReq) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *GetIntegrationTransactionReportReq) GetGroupBy() []string {
	if x != nil {
		return x.GroupBy
	}
	return nil
}

type IntegrationTransactionReportRow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IntegrationId   integrations.IntegrationType `protobuf:"varint,5,opt,name=integration_id,json=integrationId,proto3,enum=api.commons.integrations.IntegrationType" json:"integration_id,omitempty"` // integration used
	IntegrationName string                       `protobuf:"bytes,17,opt,name=integration_name,json=integrationName,proto3" json:"integration_name,omitempty"`
	MethodId        integrations.RequestMethod   `protobuf:"varint,6,opt,name=method_id,json=methodId,proto3,enum=api.commons.integrations.RequestMethod" json:"method_id,omitempty"` // external service method
	MethodName      string                       `protobuf:"bytes,18,opt,name=method_name,json=methodName,proto3" json:"method_name,omitempty"`
	TransactionType integrations.TransactionType `protobuf:"varint,7,opt,name=transaction_type,json=transactionType,proto3,enum=api.commons.integrations.TransactionType" json:"transaction_type,omitempty"` // payment, data inquiry, etc.
	RequestSource   integrations.RequestSource   `protobuf:"varint,8,opt,name=request_source,json=requestSource,proto3,enum=api.commons.integrations.RequestSource" json:"request_source,omitempty"`         // email/web/sms/ivr/chat
	// name of the flow that was ran.
	// two flows can have the same method_id but have different flow_names due to
	// the payment portal and ivr portal using same methods, but different flows.
	// group by this to get rid of ivr data in the text2pay results
	FlowName     string `protobuf:"bytes,20,opt,name=flow_name,json=flowName,proto3" json:"flow_name,omitempty"`
	CampaignType string `protobuf:"bytes,22,opt,name=campaign_type,json=campaignType,proto3" json:"campaign_type,omitempty"`
	// the key value pairs for the 'group_by_fields' passed to the request
	GroupByValues map[string]string `protobuf:"bytes,23,rep,name=group_by_values,json=groupByValues,proto3" json:"group_by_values,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// aggregate results
	Revenue float64 `protobuf:"fixed64,10,opt,name=revenue,proto3" json:"revenue,omitempty"`
	// date => amount collected subtotals for this row.
	// if the transaction collected = 0 it is not included as an entry.
	// date format for the key is RFC339: "YYYY-MM-DDThh:mm:ss". It will always be in UTC.
	RevenueSubtotals map[string]float64 `protobuf:"bytes,19,rep,name=revenue_subtotals,json=revenueSubtotals,proto3" json:"revenue_subtotals,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
	SuccessCount     int64              `protobuf:"varint,11,opt,name=success_count,json=successCount,proto3" json:"success_count,omitempty"`
	FailureCount     int64              `protobuf:"varint,12,opt,name=failure_count,json=failureCount,proto3" json:"failure_count,omitempty"`
	TotalCount       int64              `protobuf:"varint,13,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	// DD-MM-YYYY format of highest traffic day
	HighestTrafficDate string `protobuf:"bytes,15,opt,name=highest_traffic_date,json=highestTrafficDate,proto3" json:"highest_traffic_date,omitempty"`
	// DD-MM-YYYY format of lowest traffic day
	LowestTrafficDate string `protobuf:"bytes,16,opt,name=lowest_traffic_date,json=lowestTrafficDate,proto3" json:"lowest_traffic_date,omitempty"`
	// views, verification, invoice, and payment attempts, etc
	CountMetrics map[string]int64 `protobuf:"bytes,24,rep,name=count_metrics,json=countMetrics,proto3" json:"count_metrics,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// the names of the fields uploaded to portal link, and sent for enriching portal link campaign info
	// to get these values, you must make a separate api call
	Fields []string `protobuf:"bytes,25,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *IntegrationTransactionReportRow) Reset() {
	*x = IntegrationTransactionReportRow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntegrationTransactionReportRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntegrationTransactionReportRow) ProtoMessage() {}

func (x *IntegrationTransactionReportRow) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntegrationTransactionReportRow.ProtoReflect.Descriptor instead.
func (*IntegrationTransactionReportRow) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{17}
}

func (x *IntegrationTransactionReportRow) GetIntegrationId() integrations.IntegrationType {
	if x != nil {
		return x.IntegrationId
	}
	return integrations.IntegrationType(0)
}

func (x *IntegrationTransactionReportRow) GetIntegrationName() string {
	if x != nil {
		return x.IntegrationName
	}
	return ""
}

func (x *IntegrationTransactionReportRow) GetMethodId() integrations.RequestMethod {
	if x != nil {
		return x.MethodId
	}
	return integrations.RequestMethod(0)
}

func (x *IntegrationTransactionReportRow) GetMethodName() string {
	if x != nil {
		return x.MethodName
	}
	return ""
}

func (x *IntegrationTransactionReportRow) GetTransactionType() integrations.TransactionType {
	if x != nil {
		return x.TransactionType
	}
	return integrations.TransactionType(0)
}

func (x *IntegrationTransactionReportRow) GetRequestSource() integrations.RequestSource {
	if x != nil {
		return x.RequestSource
	}
	return integrations.RequestSource(0)
}

func (x *IntegrationTransactionReportRow) GetFlowName() string {
	if x != nil {
		return x.FlowName
	}
	return ""
}

func (x *IntegrationTransactionReportRow) GetCampaignType() string {
	if x != nil {
		return x.CampaignType
	}
	return ""
}

func (x *IntegrationTransactionReportRow) GetGroupByValues() map[string]string {
	if x != nil {
		return x.GroupByValues
	}
	return nil
}

func (x *IntegrationTransactionReportRow) GetRevenue() float64 {
	if x != nil {
		return x.Revenue
	}
	return 0
}

func (x *IntegrationTransactionReportRow) GetRevenueSubtotals() map[string]float64 {
	if x != nil {
		return x.RevenueSubtotals
	}
	return nil
}

func (x *IntegrationTransactionReportRow) GetSuccessCount() int64 {
	if x != nil {
		return x.SuccessCount
	}
	return 0
}

func (x *IntegrationTransactionReportRow) GetFailureCount() int64 {
	if x != nil {
		return x.FailureCount
	}
	return 0
}

func (x *IntegrationTransactionReportRow) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *IntegrationTransactionReportRow) GetHighestTrafficDate() string {
	if x != nil {
		return x.HighestTrafficDate
	}
	return ""
}

func (x *IntegrationTransactionReportRow) GetLowestTrafficDate() string {
	if x != nil {
		return x.LowestTrafficDate
	}
	return ""
}

func (x *IntegrationTransactionReportRow) GetCountMetrics() map[string]int64 {
	if x != nil {
		return x.CountMetrics
	}
	return nil
}

func (x *IntegrationTransactionReportRow) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

type GetIntegrationTransactionReportRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []*IntegrationTransactionReportRow `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *GetIntegrationTransactionReportRes) Reset() {
	*x = GetIntegrationTransactionReportRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIntegrationTransactionReportRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIntegrationTransactionReportRes) ProtoMessage() {}

func (x *GetIntegrationTransactionReportRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIntegrationTransactionReportRes.ProtoReflect.Descriptor instead.
func (*GetIntegrationTransactionReportRes) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{18}
}

func (x *GetIntegrationTransactionReportRes) GetValues() []*IntegrationTransactionReportRow {
	if x != nil {
		return x.Values
	}
	return nil
}

// Lists the integration transactions that match a flow and campaign
type GetIntegrationTransactionReportDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start,proto3" json:"start,omitempty"`
	End   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=end,proto3" json:"end,omitempty"`
	// which field_names:value we want to see that was in the last request's group_by
	GroupBy        map[string]string            `protobuf:"bytes,5,rep,name=group_by,json=groupBy,proto3" json:"group_by,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	PageSize       int32                        `protobuf:"varint,7,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageNum        int32                        `protobuf:"varint,8,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`
	IntegrationId  integrations.IntegrationType `protobuf:"varint,9,opt,name=integration_id,json=integrationId,proto3,enum=api.commons.integrations.IntegrationType" json:"integration_id,omitempty"`
	SearchAfterSid int64                        `protobuf:"varint,10,opt,name=search_after_sid,json=searchAfterSid,proto3" json:"search_after_sid,omitempty"`
}

func (x *GetIntegrationTransactionReportDataReq) Reset() {
	*x = GetIntegrationTransactionReportDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIntegrationTransactionReportDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIntegrationTransactionReportDataReq) ProtoMessage() {}

func (x *GetIntegrationTransactionReportDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIntegrationTransactionReportDataReq.ProtoReflect.Descriptor instead.
func (*GetIntegrationTransactionReportDataReq) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{19}
}

func (x *GetIntegrationTransactionReportDataReq) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *GetIntegrationTransactionReportDataReq) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *GetIntegrationTransactionReportDataReq) GetGroupBy() map[string]string {
	if x != nil {
		return x.GroupBy
	}
	return nil
}

func (x *GetIntegrationTransactionReportDataReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetIntegrationTransactionReportDataReq) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *GetIntegrationTransactionReportDataReq) GetIntegrationId() integrations.IntegrationType {
	if x != nil {
		return x.IntegrationId
	}
	return integrations.IntegrationType(0)
}

func (x *GetIntegrationTransactionReportDataReq) GetSearchAfterSid() int64 {
	if x != nil {
		return x.SearchAfterSid
	}
	return 0
}

type GetIntegrationTransactionReportDataRow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CountMetrics  map[string]int64       `protobuf:"bytes,1,rep,name=count_metrics,json=countMetrics,proto3" json:"count_metrics,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	LinkData      map[string]string      `protobuf:"bytes,2,rep,name=link_data,json=linkData,proto3" json:"link_data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Date          *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`
	PaymentAmount float64                `protobuf:"fixed64,4,opt,name=payment_amount,json=paymentAmount,proto3" json:"payment_amount,omitempty"`
}

func (x *GetIntegrationTransactionReportDataRow) Reset() {
	*x = GetIntegrationTransactionReportDataRow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIntegrationTransactionReportDataRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIntegrationTransactionReportDataRow) ProtoMessage() {}

func (x *GetIntegrationTransactionReportDataRow) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIntegrationTransactionReportDataRow.ProtoReflect.Descriptor instead.
func (*GetIntegrationTransactionReportDataRow) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{20}
}

func (x *GetIntegrationTransactionReportDataRow) GetCountMetrics() map[string]int64 {
	if x != nil {
		return x.CountMetrics
	}
	return nil
}

func (x *GetIntegrationTransactionReportDataRow) GetLinkData() map[string]string {
	if x != nil {
		return x.LinkData
	}
	return nil
}

func (x *GetIntegrationTransactionReportDataRow) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *GetIntegrationTransactionReportDataRow) GetPaymentAmount() float64 {
	if x != nil {
		return x.PaymentAmount
	}
	return 0
}

type GetIntegrationTransactionReportDataRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entities           []*GetIntegrationTransactionReportDataRow `protobuf:"bytes,1,rep,name=entities,proto3" json:"entities,omitempty"`
	LastTransactionSid int64                                     `protobuf:"varint,2,opt,name=last_transaction_sid,json=lastTransactionSid,proto3" json:"last_transaction_sid,omitempty"`
}

func (x *GetIntegrationTransactionReportDataRes) Reset() {
	*x = GetIntegrationTransactionReportDataRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIntegrationTransactionReportDataRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIntegrationTransactionReportDataRes) ProtoMessage() {}

func (x *GetIntegrationTransactionReportDataRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIntegrationTransactionReportDataRes.ProtoReflect.Descriptor instead.
func (*GetIntegrationTransactionReportDataRes) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{21}
}

func (x *GetIntegrationTransactionReportDataRes) GetEntities() []*GetIntegrationTransactionReportDataRow {
	if x != nil {
		return x.Entities
	}
	return nil
}

func (x *GetIntegrationTransactionReportDataRes) GetLastTransactionSid() int64 {
	if x != nil {
		return x.LastTransactionSid
	}
	return 0
}

type SearchIntegrationTransactionsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// optional search parameters
	StartDate       *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate         *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	IntegrationType *IntegrationType       `protobuf:"bytes,10,opt,name=integration_type,json=integrationType,proto3" json:"integration_type,omitempty"`
	RequestMethod   *RequestMethod         `protobuf:"bytes,11,opt,name=request_method,json=requestMethod,proto3" json:"request_method,omitempty"`
	TransactionType *TransactionType       `protobuf:"bytes,12,opt,name=transaction_type,json=transactionType,proto3" json:"transaction_type,omitempty"`
	RequestSource   *RequestSource         `protobuf:"bytes,13,opt,name=request_source,json=requestSource,proto3" json:"request_source,omitempty"`
	Result          *TransactionResult     `protobuf:"bytes,14,opt,name=result,proto3" json:"result,omitempty"`
	TaskId          string                 `protobuf:"bytes,15,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
}

func (x *SearchIntegrationTransactionsReq) Reset() {
	*x = SearchIntegrationTransactionsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchIntegrationTransactionsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchIntegrationTransactionsReq) ProtoMessage() {}

func (x *SearchIntegrationTransactionsReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchIntegrationTransactionsReq.ProtoReflect.Descriptor instead.
func (*SearchIntegrationTransactionsReq) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{22}
}

func (x *SearchIntegrationTransactionsReq) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *SearchIntegrationTransactionsReq) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *SearchIntegrationTransactionsReq) GetIntegrationType() *IntegrationType {
	if x != nil {
		return x.IntegrationType
	}
	return nil
}

func (x *SearchIntegrationTransactionsReq) GetRequestMethod() *RequestMethod {
	if x != nil {
		return x.RequestMethod
	}
	return nil
}

func (x *SearchIntegrationTransactionsReq) GetTransactionType() *TransactionType {
	if x != nil {
		return x.TransactionType
	}
	return nil
}

func (x *SearchIntegrationTransactionsReq) GetRequestSource() *RequestSource {
	if x != nil {
		return x.RequestSource
	}
	return nil
}

func (x *SearchIntegrationTransactionsReq) GetResult() *TransactionResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *SearchIntegrationTransactionsReq) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

type SearchIntegrationTransactionsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transactions []*IntegrationTransaction `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"`
}

func (x *SearchIntegrationTransactionsRes) Reset() {
	*x = SearchIntegrationTransactionsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchIntegrationTransactionsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchIntegrationTransactionsRes) ProtoMessage() {}

func (x *SearchIntegrationTransactionsRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchIntegrationTransactionsRes.ProtoReflect.Descriptor instead.
func (*SearchIntegrationTransactionsRes) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{23}
}

func (x *SearchIntegrationTransactionsRes) GetTransactions() []*IntegrationTransaction {
	if x != nil {
		return x.Transactions
	}
	return nil
}

type IntegrationType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IntegrationId integrations.IntegrationType `protobuf:"varint,1,opt,name=integration_id,json=integrationId,proto3,enum=api.commons.integrations.IntegrationType" json:"integration_id,omitempty"`
}

func (x *IntegrationType) Reset() {
	*x = IntegrationType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntegrationType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntegrationType) ProtoMessage() {}

func (x *IntegrationType) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntegrationType.ProtoReflect.Descriptor instead.
func (*IntegrationType) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{24}
}

func (x *IntegrationType) GetIntegrationId() integrations.IntegrationType {
	if x != nil {
		return x.IntegrationId
	}
	return integrations.IntegrationType(0)
}

type RequestMethod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MethodId integrations.RequestMethod `protobuf:"varint,1,opt,name=method_id,json=methodId,proto3,enum=api.commons.integrations.RequestMethod" json:"method_id,omitempty"`
}

func (x *RequestMethod) Reset() {
	*x = RequestMethod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestMethod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestMethod) ProtoMessage() {}

func (x *RequestMethod) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestMethod.ProtoReflect.Descriptor instead.
func (*RequestMethod) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{25}
}

func (x *RequestMethod) GetMethodId() integrations.RequestMethod {
	if x != nil {
		return x.MethodId
	}
	return integrations.RequestMethod(0)
}

type TransactionType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionType integrations.TransactionType `protobuf:"varint,1,opt,name=transaction_type,json=transactionType,proto3,enum=api.commons.integrations.TransactionType" json:"transaction_type,omitempty"`
}

func (x *TransactionType) Reset() {
	*x = TransactionType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionType) ProtoMessage() {}

func (x *TransactionType) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionType.ProtoReflect.Descriptor instead.
func (*TransactionType) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{26}
}

func (x *TransactionType) GetTransactionType() integrations.TransactionType {
	if x != nil {
		return x.TransactionType
	}
	return integrations.TransactionType(0)
}

type RequestSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestSource integrations.RequestSource `protobuf:"varint,1,opt,name=request_source,json=requestSource,proto3,enum=api.commons.integrations.RequestSource" json:"request_source,omitempty"`
}

func (x *RequestSource) Reset() {
	*x = RequestSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestSource) ProtoMessage() {}

func (x *RequestSource) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestSource.ProtoReflect.Descriptor instead.
func (*RequestSource) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{27}
}

func (x *RequestSource) GetRequestSource() integrations.RequestSource {
	if x != nil {
		return x.RequestSource
	}
	return integrations.RequestSource(0)
}

type TransactionResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result integrations.TransactionResult `protobuf:"varint,1,opt,name=result,proto3,enum=api.commons.integrations.TransactionResult" json:"result,omitempty"`
}

func (x *TransactionResult) Reset() {
	*x = TransactionResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionResult) ProtoMessage() {}

func (x *TransactionResult) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionResult.ProtoReflect.Descriptor instead.
func (*TransactionResult) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{28}
}

func (x *TransactionResult) GetResult() integrations.TransactionResult {
	if x != nil {
		return x.Result
	}
	return integrations.TransactionResult(0)
}

// used to list all the config names that we have for an integration handler
type ListIntegrationConfigNamesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IntegrationId integrations.IntegrationType `protobuf:"varint,4,opt,name=integration_id,json=integrationId,proto3,enum=api.commons.integrations.IntegrationType" json:"integration_id,omitempty"`
}

func (x *ListIntegrationConfigNamesReq) Reset() {
	*x = ListIntegrationConfigNamesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListIntegrationConfigNamesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIntegrationConfigNamesReq) ProtoMessage() {}

func (x *ListIntegrationConfigNamesReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIntegrationConfigNamesReq.ProtoReflect.Descriptor instead.
func (*ListIntegrationConfigNamesReq) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{29}
}

func (x *ListIntegrationConfigNamesReq) GetIntegrationId() integrations.IntegrationType {
	if x != nil {
		return x.IntegrationId
	}
	return integrations.IntegrationType(0)
}

type ListIntegrationConfigNamesRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IntegrationId integrations.IntegrationType `protobuf:"varint,3,opt,name=integration_id,json=integrationId,proto3,enum=api.commons.integrations.IntegrationType" json:"integration_id,omitempty"`
	Names         []string                     `protobuf:"bytes,4,rep,name=names,proto3" json:"names,omitempty"`
}

func (x *ListIntegrationConfigNamesRes) Reset() {
	*x = ListIntegrationConfigNamesRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListIntegrationConfigNamesRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIntegrationConfigNamesRes) ProtoMessage() {}

func (x *ListIntegrationConfigNamesRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIntegrationConfigNamesRes.ProtoReflect.Descriptor instead.
func (*ListIntegrationConfigNamesRes) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{30}
}

func (x *ListIntegrationConfigNamesRes) GetIntegrationId() integrations.IntegrationType {
	if x != nil {
		return x.IntegrationId
	}
	return integrations.IntegrationType(0)
}

func (x *ListIntegrationConfigNamesRes) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

type GetPaymentLinkConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the pk of payment_link_config table that contains method we will be creating links for
	Id string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetPaymentLinkConfigReq) Reset() {
	*x = GetPaymentLinkConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPaymentLinkConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaymentLinkConfigReq) ProtoMessage() {}

func (x *GetPaymentLinkConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaymentLinkConfigReq.ProtoReflect.Descriptor instead.
func (*GetPaymentLinkConfigReq) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{31}
}

func (x *GetPaymentLinkConfigReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// is just the primary key of the config
type DeletePaymentLinkConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeletePaymentLinkConfigReq) Reset() {
	*x = DeletePaymentLinkConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePaymentLinkConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePaymentLinkConfigReq) ProtoMessage() {}

func (x *DeletePaymentLinkConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePaymentLinkConfigReq.ProtoReflect.Descriptor instead.
func (*DeletePaymentLinkConfigReq) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{32}
}

func (x *DeletePaymentLinkConfigReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// wrapper message so it can be stored in database correctly
type Logo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Logo) Reset() {
	*x = Logo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Logo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Logo) ProtoMessage() {}

func (x *Logo) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Logo.ProtoReflect.Descriptor instead.
func (*Logo) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{33}
}

func (x *Logo) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

// LETS MOVE THIS TO portals.proto WHERE IT BELONGS
type ListPortalConfigsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity   *PortalConfigId        `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	Mask     *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=mask,proto3" json:"mask,omitempty"`
	PageSize int32                  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Page     int32                  `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *ListPortalConfigsReq) Reset() {
	*x = ListPortalConfigsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPortalConfigsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPortalConfigsReq) ProtoMessage() {}

func (x *ListPortalConfigsReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPortalConfigsReq.ProtoReflect.Descriptor instead.
func (*ListPortalConfigsReq) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{34}
}

func (x *ListPortalConfigsReq) GetEntity() *PortalConfigId {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *ListPortalConfigsReq) GetMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.Mask
	}
	return nil
}

func (x *ListPortalConfigsReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListPortalConfigsReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

// LETS MOVE THIS TO portals.proto WHERE IT BELONGS
type GetPortalConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *PortalConfigId        `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	Mask   *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=mask,proto3" json:"mask,omitempty"`
	// DEPRECATED only here because integrations service needs it
	Id string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetPortalConfigReq) Reset() {
	*x = GetPortalConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPortalConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPortalConfigReq) ProtoMessage() {}

func (x *GetPortalConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPortalConfigReq.ProtoReflect.Descriptor instead.
func (*GetPortalConfigReq) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{35}
}

func (x *GetPortalConfigReq) GetEntity() *PortalConfigId {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *GetPortalConfigReq) GetMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.Mask
	}
	return nil
}

func (x *GetPortalConfigReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// LETS MOVE THIS TO portals.proto WHERE IT BELONGS
type DeletePortalConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *PortalConfigId        `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	Mask   *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=mask,proto3" json:"mask,omitempty"`
	// DEPRECATED only here because integrations service needs it
	Id string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeletePortalConfigReq) Reset() {
	*x = DeletePortalConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePortalConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePortalConfigReq) ProtoMessage() {}

func (x *DeletePortalConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePortalConfigReq.ProtoReflect.Descriptor instead.
func (*DeletePortalConfigReq) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{36}
}

func (x *DeletePortalConfigReq) GetEntity() *PortalConfigId {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *DeletePortalConfigReq) GetMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.Mask
	}
	return nil
}

func (x *DeletePortalConfigReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UpdatePortalLogoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id of portal_config
	Id string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	// is the logo used in the corner of the payment portal screen
	Logo []byte `protobuf:"bytes,4,opt,name=logo,proto3" json:"logo,omitempty"`
}

func (x *UpdatePortalLogoReq) Reset() {
	*x = UpdatePortalLogoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePortalLogoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePortalLogoReq) ProtoMessage() {}

func (x *UpdatePortalLogoReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePortalLogoReq.ProtoReflect.Descriptor instead.
func (*UpdatePortalLogoReq) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{37}
}

func (x *UpdatePortalLogoReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdatePortalLogoReq) GetLogo() []byte {
	if x != nil {
		return x.Logo
	}
	return nil
}

type GetPortalLogoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id of portal_config
	Id string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetPortalLogoReq) Reset() {
	*x = GetPortalLogoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPortalLogoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPortalLogoReq) ProtoMessage() {}

func (x *GetPortalLogoReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPortalLogoReq.ProtoReflect.Descriptor instead.
func (*GetPortalLogoReq) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{38}
}

func (x *GetPortalLogoReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RefreshLinkReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the integration_config.name for this link that we generated and encoded in the url
	LinkId string `protobuf:"bytes,3,opt,name=link_id,json=linkId,proto3" json:"link_id,omitempty"`
}

func (x *RefreshLinkReq) Reset() {
	*x = RefreshLinkReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshLinkReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshLinkReq) ProtoMessage() {}

func (x *RefreshLinkReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshLinkReq.ProtoReflect.Descriptor instead.
func (*RefreshLinkReq) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{39}
}

func (x *RefreshLinkReq) GetLinkId() string {
	if x != nil {
		return x.LinkId
	}
	return ""
}

type RefreshLinkRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// when the new link will expire
	NewExpiry *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=new_expiry,json=newExpiry,proto3" json:"new_expiry,omitempty"`
}

func (x *RefreshLinkRes) Reset() {
	*x = RefreshLinkRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshLinkRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshLinkRes) ProtoMessage() {}

func (x *RefreshLinkRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshLinkRes.ProtoReflect.Descriptor instead.
func (*RefreshLinkRes) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{40}
}

func (x *RefreshLinkRes) GetNewExpiry() *timestamppb.Timestamp {
	if x != nil {
		return x.NewExpiry
	}
	return nil
}

// same as PaymentPortalLinkConfigDB, but with nicer field types
type PaymentLinkConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the pk of payment_link_config table that contains method we will be creating links for
	Id          string `protobuf:"bytes,19,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// the journey collection that will enrich the link data
	//
	// Deprecated: Marked as deprecated in api/v1alpha1/integrations/service.proto.
	CollectionId string `protobuf:"bytes,5,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	// which integration will be used in the links
	//
	// Deprecated: Marked as deprecated in api/v1alpha1/integrations/service.proto.
	IntegrationId integrations.IntegrationType `protobuf:"varint,6,opt,name=integration_id,json=integrationId,proto3,enum=api.commons.integrations.IntegrationType" json:"integration_id,omitempty"`
	// the verification method. This is used if there is no collection_id to enrich link data
	//
	// Deprecated: Marked as deprecated in api/v1alpha1/integrations/service.proto.
	VerificationMethodId integrations.RequestMethod `protobuf:"varint,7,opt,name=verification_method_id,json=verificationMethodId,proto3,enum=api.commons.integrations.RequestMethod" json:"verification_method_id,omitempty"`
	// Deprecated: Marked as deprecated in api/v1alpha1/integrations/service.proto.
	InvoiceMethodId integrations.RequestMethod `protobuf:"varint,8,opt,name=invoice_method_id,json=invoiceMethodId,proto3,enum=api.commons.integrations.RequestMethod" json:"invoice_method_id,omitempty"`
	// which method will be called when a payment portal link is process
	//
	// Deprecated: Marked as deprecated in api/v1alpha1/integrations/service.proto.
	PaymentMethodId integrations.RequestMethod `protobuf:"varint,9,opt,name=payment_method_id,json=paymentMethodId,proto3,enum=api.commons.integrations.RequestMethod" json:"payment_method_id,omitempty"`
	// journey names and method parameter names might not match one to one
	// the keys of this mapping are journey keys
	// the values are method parameter name the key maps to
	// if we encounter a key that is unknown for the method, integrations checks the name mapping
	// for an alternative key name
	NameMapping map[string]string `protobuf:"bytes,10,rep,name=name_mapping,json=nameMapping,proto3" json:"name_mapping,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// these fields will be used to verify customer identity
	//
	// Deprecated: Marked as deprecated in api/v1alpha1/integrations/service.proto.
	VerificationFields []string `protobuf:"bytes,11,rep,name=verification_fields,json=verificationFields,proto3" json:"verification_fields,omitempty"`
	// name of the payment portal config that contains all the details for a payment portal screen shown to the user.
	// (visible to link receiver)
	// these don't affect usability of the service, meaning the backend doesn't require any of this info
	PaymentPortalId string                 `protobuf:"bytes,12,opt,name=payment_portal_id,json=paymentPortalId,proto3" json:"payment_portal_id,omitempty"`
	CreatedOn       *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=created_on,json=createdOn,proto3" json:"created_on,omitempty"`
	// how many days till link expires
	ExpiryDays int32 `protobuf:"varint,15,opt,name=expiry_days,json=expiryDays,proto3" json:"expiry_days,omitempty"`
	// whether we are allowed to refresh links
	LinksRefreshable bool `protobuf:"varint,16,opt,name=links_refreshable,json=linksRefreshable,proto3" json:"links_refreshable,omitempty"`
	// how many hours a refreshed link is good for
	// 24 == 1 day
	// 2.5 == 2 hours 30 minutes
	// defaults to 1.0
	RefreshLinkValidHours float64 `protobuf:"fixed64,17,opt,name=refresh_link_valid_hours,json=refreshLinkValidHours,proto3" json:"refresh_link_valid_hours,omitempty"`
	// how many times we will allow a link to refresh
	MaxRefreshTimes int32 `protobuf:"varint,18,opt,name=max_refresh_times,json=maxRefreshTimes,proto3" json:"max_refresh_times,omitempty"`
	// how we identify the link holder's identity.
	VerificationRequest *VerificationRequest `protobuf:"bytes,20,opt,name=verification_request,json=verificationRequest,proto3" json:"verification_request,omitempty"`
	// happens directly after the verification request to provide the user a description of the items
	// that need payment, and their amounts
	InvoiceRequest *InvoiceRequest `protobuf:"bytes,21,opt,name=invoice_request,json=invoiceRequest,proto3" json:"invoice_request,omitempty"`
	// the set of payments the user can choose from. A valid config needs at least one,
	// but can list as many as they want for the user to pick from.
	// only one PaymentRequest will be processed
	PaymentRequests []*PaymentRequest `protobuf:"bytes,22,rep,name=payment_requests,json=paymentRequests,proto3" json:"payment_requests,omitempty"`
	BaseData        map[string]*Value `protobuf:"bytes,23,rep,name=base_data,json=baseData,proto3" json:"base_data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// a marshalled PaymentTemplates proto message
	Templates *PaymentLinkConfigTemplates `protobuf:"bytes,24,opt,name=templates,proto3" json:"templates,omitempty"`
	// the name of the profile used to generate this profile
	PaymentProfileName string `protobuf:"bytes,25,opt,name=payment_profile_name,json=paymentProfileName,proto3" json:"payment_profile_name,omitempty"`
}

func (x *PaymentLinkConfig) Reset() {
	*x = PaymentLinkConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentLinkConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentLinkConfig) ProtoMessage() {}

func (x *PaymentLinkConfig) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentLinkConfig.ProtoReflect.Descriptor instead.
func (*PaymentLinkConfig) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{41}
}

func (x *PaymentLinkConfig) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PaymentLinkConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PaymentLinkConfig) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// Deprecated: Marked as deprecated in api/v1alpha1/integrations/service.proto.
func (x *PaymentLinkConfig) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

// Deprecated: Marked as deprecated in api/v1alpha1/integrations/service.proto.
func (x *PaymentLinkConfig) GetIntegrationId() integrations.IntegrationType {
	if x != nil {
		return x.IntegrationId
	}
	return integrations.IntegrationType(0)
}

// Deprecated: Marked as deprecated in api/v1alpha1/integrations/service.proto.
func (x *PaymentLinkConfig) GetVerificationMethodId() integrations.RequestMethod {
	if x != nil {
		return x.VerificationMethodId
	}
	return integrations.RequestMethod(0)
}

// Deprecated: Marked as deprecated in api/v1alpha1/integrations/service.proto.
func (x *PaymentLinkConfig) GetInvoiceMethodId() integrations.RequestMethod {
	if x != nil {
		return x.InvoiceMethodId
	}
	return integrations.RequestMethod(0)
}

// Deprecated: Marked as deprecated in api/v1alpha1/integrations/service.proto.
func (x *PaymentLinkConfig) GetPaymentMethodId() integrations.RequestMethod {
	if x != nil {
		return x.PaymentMethodId
	}
	return integrations.RequestMethod(0)
}

func (x *PaymentLinkConfig) GetNameMapping() map[string]string {
	if x != nil {
		return x.NameMapping
	}
	return nil
}

// Deprecated: Marked as deprecated in api/v1alpha1/integrations/service.proto.
func (x *PaymentLinkConfig) GetVerificationFields() []string {
	if x != nil {
		return x.VerificationFields
	}
	return nil
}

func (x *PaymentLinkConfig) GetPaymentPortalId() string {
	if x != nil {
		return x.PaymentPortalId
	}
	return ""
}

func (x *PaymentLinkConfig) GetCreatedOn() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedOn
	}
	return nil
}

func (x *PaymentLinkConfig) GetExpiryDays() int32 {
	if x != nil {
		return x.ExpiryDays
	}
	return 0
}

func (x *PaymentLinkConfig) GetLinksRefreshable() bool {
	if x != nil {
		return x.LinksRefreshable
	}
	return false
}

func (x *PaymentLinkConfig) GetRefreshLinkValidHours() float64 {
	if x != nil {
		return x.RefreshLinkValidHours
	}
	return 0
}

func (x *PaymentLinkConfig) GetMaxRefreshTimes() int32 {
	if x != nil {
		return x.MaxRefreshTimes
	}
	return 0
}

func (x *PaymentLinkConfig) GetVerificationRequest() *VerificationRequest {
	if x != nil {
		return x.VerificationRequest
	}
	return nil
}

func (x *PaymentLinkConfig) GetInvoiceRequest() *InvoiceRequest {
	if x != nil {
		return x.InvoiceRequest
	}
	return nil
}

func (x *PaymentLinkConfig) GetPaymentRequests() []*PaymentRequest {
	if x != nil {
		return x.PaymentRequests
	}
	return nil
}

func (x *PaymentLinkConfig) GetBaseData() map[string]*Value {
	if x != nil {
		return x.BaseData
	}
	return nil
}

func (x *PaymentLinkConfig) GetTemplates() *PaymentLinkConfigTemplates {
	if x != nil {
		return x.Templates
	}
	return nil
}

func (x *PaymentLinkConfig) GetPaymentProfileName() string {
	if x != nil {
		return x.PaymentProfileName
	}
	return ""
}

type PaymentLinkConfigTemplates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// template string like: "{{name}} thanks for paying {{amount}}"
	// it shows up on the receipt text sent after payment is taken
	// values are populated from what values we know from verification, or in the integration_config
	// so the link designer should not use data that will not be given to tcn at some point to validate a user.
	ReceiptSmsTemplate string `protobuf:"bytes,1,opt,name=receipt_sms_template,json=receiptSmsTemplate,proto3" json:"receipt_sms_template,omitempty"`
	// text shows up as from this phone number
	ReceiptSmsSourcePhone string `protobuf:"bytes,2,opt,name=receipt_sms_source_phone,json=receiptSmsSourcePhone,proto3" json:"receipt_sms_source_phone,omitempty"`
	// shows up in the email body, is a template string like above
	ReceiptEmailTemplate string `protobuf:"bytes,3,opt,name=receipt_email_template,json=receiptEmailTemplate,proto3" json:"receipt_email_template,omitempty"`
	// email shows up as from this address
	ReceiptEmailFromAddr string `protobuf:"bytes,4,opt,name=receipt_email_from_addr,json=receiptEmailFromAddr,proto3" json:"receipt_email_from_addr,omitempty"`
	// template string for the receipt shown in the ui
	ReceiptTemplate string `protobuf:"bytes,5,opt,name=receipt_template,json=receiptTemplate,proto3" json:"receipt_template,omitempty"`
	// template string for the invoice shown in the ui
	InvoiceTemplate string `protobuf:"bytes,6,opt,name=invoice_template,json=invoiceTemplate,proto3" json:"invoice_template,omitempty"`
}

func (x *PaymentLinkConfigTemplates) Reset() {
	*x = PaymentLinkConfigTemplates{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentLinkConfigTemplates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentLinkConfigTemplates) ProtoMessage() {}

func (x *PaymentLinkConfigTemplates) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentLinkConfigTemplates.ProtoReflect.Descriptor instead.
func (*PaymentLinkConfigTemplates) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{42}
}

func (x *PaymentLinkConfigTemplates) GetReceiptSmsTemplate() string {
	if x != nil {
		return x.ReceiptSmsTemplate
	}
	return ""
}

func (x *PaymentLinkConfigTemplates) GetReceiptSmsSourcePhone() string {
	if x != nil {
		return x.ReceiptSmsSourcePhone
	}
	return ""
}

func (x *PaymentLinkConfigTemplates) GetReceiptEmailTemplate() string {
	if x != nil {
		return x.ReceiptEmailTemplate
	}
	return ""
}

func (x *PaymentLinkConfigTemplates) GetReceiptEmailFromAddr() string {
	if x != nil {
		return x.ReceiptEmailFromAddr
	}
	return ""
}

func (x *PaymentLinkConfigTemplates) GetReceiptTemplate() string {
	if x != nil {
		return x.ReceiptTemplate
	}
	return ""
}

func (x *PaymentLinkConfigTemplates) GetInvoiceTemplate() string {
	if x != nil {
		return x.InvoiceTemplate
	}
	return ""
}

// VerificationRequest processes verifies
// the 'verification_fields' match in both an input payload, and the response
type VerificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the set of actions that need to happen to get a payload that can be used to verify against the verification_fields
	// the verification handler in the service will always populate this with a request containing
	// the integration_config_id data and static data from the user
	// each result will be given as a request the result of all previous responses, so order matters.
	VerificationRequests []*Request `protobuf:"bytes,1,rep,name=verification_requests,json=verificationRequests,proto3" json:"verification_requests,omitempty"`
	// the fields to verify against
	VerificationFields []*Parameter `protobuf:"bytes,2,rep,name=verification_fields,json=verificationFields,proto3" json:"verification_fields,omitempty"`
}

func (x *VerificationRequest) Reset() {
	*x = VerificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerificationRequest) ProtoMessage() {}

func (x *VerificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerificationRequest.ProtoReflect.Descriptor instead.
func (*VerificationRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{43}
}

func (x *VerificationRequest) GetVerificationRequests() []*Request {
	if x != nil {
		return x.VerificationRequests
	}
	return nil
}

func (x *VerificationRequest) GetVerificationFields() []*Parameter {
	if x != nil {
		return x.VerificationFields
	}
	return nil
}

type PaymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the field names the user is expected to fill out for this payment
	// the ui should display the parameter's display_name but send to the server the parameter name
	PaymentFields []*Parameter `protobuf:"bytes,5,rep,name=payment_fields,json=paymentFields,proto3" json:"payment_fields,omitempty"`
	// set of actions that need to happen to get a payload that can be used for the payment_request
	// the payment handler in the service will always populate this with a request containing
	// the integration_config_id data, but if that is not enough data for the payment the user is allowed to list out more requests here.
	// the results of all these method calls will be merged into one payload that is given to the payment_request.
	// each result will be given as a request the result of all previous responses, so order matters.
	PaymentRequestPayload []*Request `protobuf:"bytes,1,rep,name=payment_request_payload,json=paymentRequestPayload,proto3" json:"payment_request_payload,omitempty"`
	// the request to perform
	PaymentRequest *Request `protobuf:"bytes,2,opt,name=payment_request,json=paymentRequest,proto3" json:"payment_request,omitempty"`
	// a name for this request to show to the user.  "cc_payment", "ACH Payment" or something else
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// a description of this request to show to the user
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *PaymentRequest) Reset() {
	*x = PaymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentRequest) ProtoMessage() {}

func (x *PaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentRequest.ProtoReflect.Descriptor instead.
func (*PaymentRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{44}
}

func (x *PaymentRequest) GetPaymentFields() []*Parameter {
	if x != nil {
		return x.PaymentFields
	}
	return nil
}

func (x *PaymentRequest) GetPaymentRequestPayload() []*Request {
	if x != nil {
		return x.PaymentRequestPayload
	}
	return nil
}

func (x *PaymentRequest) GetPaymentRequest() *Request {
	if x != nil {
		return x.PaymentRequest
	}
	return nil
}

func (x *PaymentRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PaymentRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type InvoiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// set of actions that need to happen to get a payload that can be used for the invoice_request
	// the verification handler in the service will always populate this with a request with the data used in verifiation
	// but if that is not enough data for the payment the user is allowed to list out more requests here.
	// the results of all these method calls will be merged into one payload that is given to the invoice_request.
	// each result will be given as a request the result of all previous responses, so order matters.
	InvoiceRequestPayload []*Request `protobuf:"bytes,2,rep,name=invoice_request_payload,json=invoiceRequestPayload,proto3" json:"invoice_request_payload,omitempty"`
	InvoiceRequest        *Request   `protobuf:"bytes,3,opt,name=invoice_request,json=invoiceRequest,proto3" json:"invoice_request,omitempty"`
	// removes these keys from the response so they are not shown to the user
	FilterResponseKeys []string `protobuf:"bytes,4,rep,name=filter_response_keys,json=filterResponseKeys,proto3" json:"filter_response_keys,omitempty"`
}

func (x *InvoiceRequest) Reset() {
	*x = InvoiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvoiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvoiceRequest) ProtoMessage() {}

func (x *InvoiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvoiceRequest.ProtoReflect.Descriptor instead.
func (*InvoiceRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{45}
}

func (x *InvoiceRequest) GetInvoiceRequestPayload() []*Request {
	if x != nil {
		return x.InvoiceRequestPayload
	}
	return nil
}

func (x *InvoiceRequest) GetInvoiceRequest() *Request {
	if x != nil {
		return x.InvoiceRequest
	}
	return nil
}

func (x *InvoiceRequest) GetFilterResponseKeys() []string {
	if x != nil {
		return x.FilterResponseKeys
	}
	return nil
}

type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Val:
	//
	//	*Request_JourneyCollectionId
	//	*Request_MethodCall
	//	*Request_ConfigId
	Val isRequest_Val `protobuf_oneof:"val"`
	// add in this static data
	StaticData map[string]*Value `protobuf:"bytes,6,rep,name=static_data,json=staticData,proto3" json:"static_data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// rename the keys to the values in the response from 'val'
	RenameResponseKeys map[string]string `protobuf:"bytes,7,rep,name=rename_response_keys,json=renameResponseKeys,proto3" json:"rename_response_keys,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// reassigns the names in key to be the value's validation
	ReassignValidations map[string]*Validation `protobuf:"bytes,8,rep,name=reassign_validations,json=reassignValidations,proto3" json:"reassign_validations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{46}
}

func (m *Request) GetVal() isRequest_Val {
	if m != nil {
		return m.Val
	}
	return nil
}

func (x *Request) GetJourneyCollectionId() string {
	if x, ok := x.GetVal().(*Request_JourneyCollectionId); ok {
		return x.JourneyCollectionId
	}
	return ""
}

func (x *Request) GetMethodCall() *MethodCall {
	if x, ok := x.GetVal().(*Request_MethodCall); ok {
		return x.MethodCall
	}
	return nil
}

func (x *Request) GetConfigId() string {
	if x, ok := x.GetVal().(*Request_ConfigId); ok {
		return x.ConfigId
	}
	return ""
}

func (x *Request) GetStaticData() map[string]*Value {
	if x != nil {
		return x.StaticData
	}
	return nil
}

func (x *Request) GetRenameResponseKeys() map[string]string {
	if x != nil {
		return x.RenameResponseKeys
	}
	return nil
}

func (x *Request) GetReassignValidations() map[string]*Validation {
	if x != nil {
		return x.ReassignValidations
	}
	return nil
}

type isRequest_Val interface {
	isRequest_Val()
}

type Request_JourneyCollectionId struct {
	// look up the values from this journey collection
	JourneyCollectionId string `protobuf:"bytes,3,opt,name=journey_collection_id,json=journeyCollectionId,proto3,oneof"`
}

type Request_MethodCall struct {
	// call this method to get the data
	MethodCall *MethodCall `protobuf:"bytes,4,opt,name=method_call,json=methodCall,proto3,oneof"`
}

type Request_ConfigId struct {
	// look up data from this config
	ConfigId string `protobuf:"bytes,5,opt,name=config_id,json=configId,proto3,oneof"`
}

func (*Request_JourneyCollectionId) isRequest_Val() {}

func (*Request_MethodCall) isRequest_Val() {}

func (*Request_ConfigId) isRequest_Val() {}

// This type only exists because typescript can't handle
// a map with an enum as a value from another packages
// map<string, api.commons.integrations.Validation>
type Validation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enum integrations.Validation `protobuf:"varint,1,opt,name=enum,proto3,enum=api.commons.integrations.Validation" json:"enum,omitempty"`
}

func (x *Validation) Reset() {
	*x = Validation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Validation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Validation) ProtoMessage() {}

func (x *Validation) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Validation.ProtoReflect.Descriptor instead.
func (*Validation) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{47}
}

func (x *Validation) GetEnum() integrations.Validation {
	if x != nil {
		return x.Enum
	}
	return integrations.Validation(0)
}

type MethodCall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IntegrationId integrations.IntegrationType `protobuf:"varint,1,opt,name=integration_id,json=integrationId,proto3,enum=api.commons.integrations.IntegrationType" json:"integration_id,omitempty"`
	MethodId      integrations.RequestMethod   `protobuf:"varint,2,opt,name=method_id,json=methodId,proto3,enum=api.commons.integrations.RequestMethod" json:"method_id,omitempty"`
}

func (x *MethodCall) Reset() {
	*x = MethodCall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MethodCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MethodCall) ProtoMessage() {}

func (x *MethodCall) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MethodCall.ProtoReflect.Descriptor instead.
func (*MethodCall) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{48}
}

func (x *MethodCall) GetIntegrationId() integrations.IntegrationType {
	if x != nil {
		return x.IntegrationId
	}
	return integrations.IntegrationType(0)
}

func (x *MethodCall) GetMethodId() integrations.RequestMethod {
	if x != nil {
		return x.MethodId
	}
	return integrations.RequestMethod(0)
}

type PortalConfigs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []*PortalConfig `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *PortalConfigs) Reset() {
	*x = PortalConfigs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortalConfigs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortalConfigs) ProtoMessage() {}

func (x *PortalConfigs) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortalConfigs.ProtoReflect.Descriptor instead.
func (*PortalConfigs) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{49}
}

func (x *PortalConfigs) GetValues() []*PortalConfig {
	if x != nil {
		return x.Values
	}
	return nil
}

type ListPaymentLinkConfigsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListPaymentLinkConfigsReq) Reset() {
	*x = ListPaymentLinkConfigsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPaymentLinkConfigsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPaymentLinkConfigsReq) ProtoMessage() {}

func (x *ListPaymentLinkConfigsReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPaymentLinkConfigsReq.ProtoReflect.Descriptor instead.
func (*ListPaymentLinkConfigsReq) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{50}
}

type PaymentLinkConfigs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []*PaymentLinkConfig `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *PaymentLinkConfigs) Reset() {
	*x = PaymentLinkConfigs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentLinkConfigs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentLinkConfigs) ProtoMessage() {}

func (x *PaymentLinkConfigs) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentLinkConfigs.ProtoReflect.Descriptor instead.
func (*PaymentLinkConfigs) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{51}
}

func (x *PaymentLinkConfigs) GetValues() []*PaymentLinkConfig {
	if x != nil {
		return x.Values
	}
	return nil
}

type ListLinksReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListLinksReq) Reset() {
	*x = ListLinksReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLinksReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLinksReq) ProtoMessage() {}

func (x *ListLinksReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLinksReq.ProtoReflect.Descriptor instead.
func (*ListLinksReq) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{52}
}

type CreatePaymentPortalLinksReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the pk of link_config table that contains method we will be creating links for
	LinkConfigId string `protobuf:"bytes,3,opt,name=link_config_id,json=linkConfigId,proto3" json:"link_config_id,omitempty"`
	// when the link expires. blank means it never expires
	Expiry *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=expiry,proto3" json:"expiry,omitempty"`
	// each index represents one map of user data we need a link for
	// should contain the sms/email id that is going to use this link at "_task_id"
	UserData []*Task `protobuf:"bytes,5,rep,name=user_data,json=userData,proto3" json:"user_data,omitempty"`
}

func (x *CreatePaymentPortalLinksReq) Reset() {
	*x = CreatePaymentPortalLinksReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePaymentPortalLinksReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePaymentPortalLinksReq) ProtoMessage() {}

func (x *CreatePaymentPortalLinksReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePaymentPortalLinksReq.ProtoReflect.Descriptor instead.
func (*CreatePaymentPortalLinksReq) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{53}
}

func (x *CreatePaymentPortalLinksReq) GetLinkConfigId() string {
	if x != nil {
		return x.LinkConfigId
	}
	return ""
}

func (x *CreatePaymentPortalLinksReq) GetExpiry() *timestamppb.Timestamp {
	if x != nil {
		return x.Expiry
	}
	return nil
}

func (x *CreatePaymentPortalLinksReq) GetUserData() []*Task {
	if x != nil {
		return x.UserData
	}
	return nil
}

type CreatePaymentPortalLinksRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// each url maps to the same index on the request.user_data
	Urls []string `protobuf:"bytes,1,rep,name=urls,proto3" json:"urls,omitempty"`
}

func (x *CreatePaymentPortalLinksRes) Reset() {
	*x = CreatePaymentPortalLinksRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePaymentPortalLinksRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePaymentPortalLinksRes) ProtoMessage() {}

func (x *CreatePaymentPortalLinksRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePaymentPortalLinksRes.ProtoReflect.Descriptor instead.
func (*CreatePaymentPortalLinksRes) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{54}
}

func (x *CreatePaymentPortalLinksRes) GetUrls() []string {
	if x != nil {
		return x.Urls
	}
	return nil
}

type SummaryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// a num in YYYY format
	Year int32 `protobuf:"varint,3,opt,name=year,proto3" json:"year,omitempty"`
}

func (x *SummaryReq) Reset() {
	*x = SummaryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SummaryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SummaryReq) ProtoMessage() {}

func (x *SummaryReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SummaryReq.ProtoReflect.Descriptor instead.
func (*SummaryReq) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{55}
}

func (x *SummaryReq) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

type SummaryRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	YearSummary    *CalendarSummary   `protobuf:"bytes,1,opt,name=year_summary,json=yearSummary,proto3" json:"year_summary,omitempty"`
	MonthSummaries []*CalendarSummary `protobuf:"bytes,2,rep,name=month_summaries,json=monthSummaries,proto3" json:"month_summaries,omitempty"`
	WeekSummaries  []*CalendarSummary `protobuf:"bytes,3,rep,name=week_summaries,json=weekSummaries,proto3" json:"week_summaries,omitempty"`
}

func (x *SummaryRes) Reset() {
	*x = SummaryRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SummaryRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SummaryRes) ProtoMessage() {}

func (x *SummaryRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SummaryRes.ProtoReflect.Descriptor instead.
func (*SummaryRes) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{56}
}

func (x *SummaryRes) GetYearSummary() *CalendarSummary {
	if x != nil {
		return x.YearSummary
	}
	return nil
}

func (x *SummaryRes) GetMonthSummaries() []*CalendarSummary {
	if x != nil {
		return x.MonthSummaries
	}
	return nil
}

func (x *SummaryRes) GetWeekSummaries() []*CalendarSummary {
	if x != nil {
		return x.WeekSummaries
	}
	return nil
}

type CalendarSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// calendar_num is in either YYYY, MM, or WW format
	CalendarNum int32               `protobuf:"varint,1,opt,name=calendar_num,json=calendarNum,proto3" json:"calendar_num,omitempty"`
	Summary     *TransactionSummary `protobuf:"bytes,2,opt,name=summary,proto3" json:"summary,omitempty"`
	// an array of "pairs" with the integration type and it's transaction summary
	TypeSummaries []*IntegrationTypeSummary `protobuf:"bytes,3,rep,name=type_summaries,json=typeSummaries,proto3" json:"type_summaries,omitempty"`
}

func (x *CalendarSummary) Reset() {
	*x = CalendarSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalendarSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalendarSummary) ProtoMessage() {}

func (x *CalendarSummary) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalendarSummary.ProtoReflect.Descriptor instead.
func (*CalendarSummary) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{57}
}

func (x *CalendarSummary) GetCalendarNum() int32 {
	if x != nil {
		return x.CalendarNum
	}
	return 0
}

func (x *CalendarSummary) GetSummary() *TransactionSummary {
	if x != nil {
		return x.Summary
	}
	return nil
}

func (x *CalendarSummary) GetTypeSummaries() []*IntegrationTypeSummary {
	if x != nil {
		return x.TypeSummaries
	}
	return nil
}

type IntegrationTypeSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IntegrationType    integrations.IntegrationType `protobuf:"varint,1,opt,name=integration_type,json=integrationType,proto3,enum=api.commons.integrations.IntegrationType" json:"integration_type,omitempty"`
	IntegrationSummary *TransactionSummary          `protobuf:"bytes,2,opt,name=integration_summary,json=integrationSummary,proto3" json:"integration_summary,omitempty"`
}

func (x *IntegrationTypeSummary) Reset() {
	*x = IntegrationTypeSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntegrationTypeSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntegrationTypeSummary) ProtoMessage() {}

func (x *IntegrationTypeSummary) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntegrationTypeSummary.ProtoReflect.Descriptor instead.
func (*IntegrationTypeSummary) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{58}
}

func (x *IntegrationTypeSummary) GetIntegrationType() integrations.IntegrationType {
	if x != nil {
		return x.IntegrationType
	}
	return integrations.IntegrationType(0)
}

func (x *IntegrationTypeSummary) GetIntegrationSummary() *TransactionSummary {
	if x != nil {
		return x.IntegrationSummary
	}
	return nil
}

type TransactionSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalTransactionsAttempted int64   `protobuf:"varint,1,opt,name=total_transactions_attempted,json=totalTransactionsAttempted,proto3" json:"total_transactions_attempted,omitempty"`
	TotalTransactionsCompleted int64   `protobuf:"varint,2,opt,name=total_transactions_completed,json=totalTransactionsCompleted,proto3" json:"total_transactions_completed,omitempty"`
	TotalTransactionsFailed    int64   `protobuf:"varint,3,opt,name=total_transactions_failed,json=totalTransactionsFailed,proto3" json:"total_transactions_failed,omitempty"`
	TotalAmountCollected       float64 `protobuf:"fixed64,4,opt,name=total_amount_collected,json=totalAmountCollected,proto3" json:"total_amount_collected,omitempty"`
	AvgAmountCollected         float64 `protobuf:"fixed64,5,opt,name=avg_amount_collected,json=avgAmountCollected,proto3" json:"avg_amount_collected,omitempty"`
}

func (x *TransactionSummary) Reset() {
	*x = TransactionSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionSummary) ProtoMessage() {}

func (x *TransactionSummary) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionSummary.ProtoReflect.Descriptor instead.
func (*TransactionSummary) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{59}
}

func (x *TransactionSummary) GetTotalTransactionsAttempted() int64 {
	if x != nil {
		return x.TotalTransactionsAttempted
	}
	return 0
}

func (x *TransactionSummary) GetTotalTransactionsCompleted() int64 {
	if x != nil {
		return x.TotalTransactionsCompleted
	}
	return 0
}

func (x *TransactionSummary) GetTotalTransactionsFailed() int64 {
	if x != nil {
		return x.TotalTransactionsFailed
	}
	return 0
}

func (x *TransactionSummary) GetTotalAmountCollected() float64 {
	if x != nil {
		return x.TotalAmountCollected
	}
	return 0
}

func (x *TransactionSummary) GetAvgAmountCollected() float64 {
	if x != nil {
		return x.AvgAmountCollected
	}
	return 0
}

type ListIntegrationTemplatesByConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IntegrationConfigName string `protobuf:"bytes,2,opt,name=integration_config_name,json=integrationConfigName,proto3" json:"integration_config_name,omitempty"`
}

func (x *ListIntegrationTemplatesByConfigReq) Reset() {
	*x = ListIntegrationTemplatesByConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListIntegrationTemplatesByConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIntegrationTemplatesByConfigReq) ProtoMessage() {}

func (x *ListIntegrationTemplatesByConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIntegrationTemplatesByConfigReq.ProtoReflect.Descriptor instead.
func (*ListIntegrationTemplatesByConfigReq) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{60}
}

func (x *ListIntegrationTemplatesByConfigReq) GetIntegrationConfigName() string {
	if x != nil {
		return x.IntegrationConfigName
	}
	return ""
}

type ListIntegrationTemplatesByConfigRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IntegrationTemplates []*IntegrationTemplateInfo `protobuf:"bytes,1,rep,name=integration_templates,json=integrationTemplates,proto3" json:"integration_templates,omitempty"`
}

func (x *ListIntegrationTemplatesByConfigRes) Reset() {
	*x = ListIntegrationTemplatesByConfigRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListIntegrationTemplatesByConfigRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIntegrationTemplatesByConfigRes) ProtoMessage() {}

func (x *ListIntegrationTemplatesByConfigRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIntegrationTemplatesByConfigRes.ProtoReflect.Descriptor instead.
func (*ListIntegrationTemplatesByConfigRes) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{61}
}

func (x *ListIntegrationTemplatesByConfigRes) GetIntegrationTemplates() []*IntegrationTemplateInfo {
	if x != nil {
		return x.IntegrationTemplates
	}
	return nil
}

type IntegrationTemplateInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BroadcastTemplateSid int64  `protobuf:"varint,1,opt,name=broadcast_template_sid,json=broadcastTemplateSid,proto3" json:"broadcast_template_sid,omitempty"`
	TemplateName         string `protobuf:"bytes,2,opt,name=template_name,json=templateName,proto3" json:"template_name,omitempty"`
}

func (x *IntegrationTemplateInfo) Reset() {
	*x = IntegrationTemplateInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntegrationTemplateInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntegrationTemplateInfo) ProtoMessage() {}

func (x *IntegrationTemplateInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntegrationTemplateInfo.ProtoReflect.Descriptor instead.
func (*IntegrationTemplateInfo) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{62}
}

func (x *IntegrationTemplateInfo) GetBroadcastTemplateSid() int64 {
	if x != nil {
		return x.BroadcastTemplateSid
	}
	return 0
}

func (x *IntegrationTemplateInfo) GetTemplateName() string {
	if x != nil {
		return x.TemplateName
	}
	return ""
}

// DEPRECATED
type CopyPaymentLinkConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CopyPaymentLinkConfigReq) Reset() {
	*x = CopyPaymentLinkConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CopyPaymentLinkConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopyPaymentLinkConfigReq) ProtoMessage() {}

func (x *CopyPaymentLinkConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CopyPaymentLinkConfigReq.ProtoReflect.Descriptor instead.
func (*CopyPaymentLinkConfigReq) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{63}
}

func (x *CopyPaymentLinkConfigReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// DEPRECATED
type CopyPaymentLinkConfigRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewName string `protobuf:"bytes,1,opt,name=new_name,json=newName,proto3" json:"new_name,omitempty"`
}

func (x *CopyPaymentLinkConfigRes) Reset() {
	*x = CopyPaymentLinkConfigRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CopyPaymentLinkConfigRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopyPaymentLinkConfigRes) ProtoMessage() {}

func (x *CopyPaymentLinkConfigRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CopyPaymentLinkConfigRes.ProtoReflect.Descriptor instead.
func (*CopyPaymentLinkConfigRes) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{64}
}

func (x *CopyPaymentLinkConfigRes) GetNewName() string {
	if x != nil {
		return x.NewName
	}
	return ""
}

// DEPRECATED
type ProfileName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ProfileName) Reset() {
	*x = ProfileName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileName) ProtoMessage() {}

func (x *ProfileName) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileName.ProtoReflect.Descriptor instead.
func (*ProfileName) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{65}
}

func (x *ProfileName) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// DEPRECATED
type PaymentProfiles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []*PaymentProfile `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *PaymentProfiles) Reset() {
	*x = PaymentProfiles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentProfiles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentProfiles) ProtoMessage() {}

func (x *PaymentProfiles) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentProfiles.ProtoReflect.Descriptor instead.
func (*PaymentProfiles) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{66}
}

func (x *PaymentProfiles) GetValues() []*PaymentProfile {
	if x != nil {
		return x.Values
	}
	return nil
}

// DEPRECATED
type PaymentProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Verification string   `protobuf:"bytes,8,opt,name=verification,proto3" json:"verification,omitempty"`
	Invoice      string   `protobuf:"bytes,9,opt,name=invoice,proto3" json:"invoice,omitempty"`
	Payments     []string `protobuf:"bytes,10,rep,name=payments,proto3" json:"payments,omitempty"`
}

func (x *PaymentProfile) Reset() {
	*x = PaymentProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentProfile) ProtoMessage() {}

func (x *PaymentProfile) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentProfile.ProtoReflect.Descriptor instead.
func (*PaymentProfile) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{67}
}

func (x *PaymentProfile) GetVerification() string {
	if x != nil {
		return x.Verification
	}
	return ""
}

func (x *PaymentProfile) GetInvoice() string {
	if x != nil {
		return x.Invoice
	}
	return ""
}

func (x *PaymentProfile) GetPayments() []string {
	if x != nil {
		return x.Payments
	}
	return nil
}

// DEPRECATED
type UnknownField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the name of the field we are missing to make a complete payment link config
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// by default matches name
	// this is the name the user wants the field displayed as
	DisplayName string `protobuf:"bytes,5,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// the reason we need this field.
	// will point to an api call, or form that is listing the field as required
	ReasonNeeded string `protobuf:"bytes,2,opt,name=reason_needed,json=reasonNeeded,proto3" json:"reason_needed,omitempty"`
	// all the sources that are possible this field could come from
	// it is not allowed to give a provided field with a FieldSource
	// not in this list
	PotentialSources []integrations.FieldSource `protobuf:"varint,3,rep,packed,name=potential_sources,json=potentialSources,proto3,enum=api.commons.integrations.FieldSource" json:"potential_sources,omitempty"`
	// all the fields in here will be potential fields we could use from api calls, or config look ups
	// THIS COULD BE LEFT BLANK IF THE SERVER HAS NO SUGGESTIONS
	// none of these suggestions have to be used, the user can just "write in" a ProvidedField
	SuggestedFields []*ProvidedField `protobuf:"bytes,4,rep,name=suggested_fields,json=suggestedFields,proto3" json:"suggested_fields,omitempty"`
}

func (x *UnknownField) Reset() {
	*x = UnknownField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnknownField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnknownField) ProtoMessage() {}

func (x *UnknownField) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnknownField.ProtoReflect.Descriptor instead.
func (*UnknownField) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{68}
}

func (x *UnknownField) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UnknownField) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *UnknownField) GetReasonNeeded() string {
	if x != nil {
		return x.ReasonNeeded
	}
	return ""
}

func (x *UnknownField) GetPotentialSources() []integrations.FieldSource {
	if x != nil {
		return x.PotentialSources
	}
	return nil
}

func (x *UnknownField) GetSuggestedFields() []*ProvidedField {
	if x != nil {
		return x.SuggestedFields
	}
	return nil
}

// DEPRECATED
type ProvidedField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the name of the field as it was asked for in UnknownField.
	// This is the field the *server* is looking for, so it *must* be a field
	// that was in the UnknownField list on the Profile
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// by default matches name
	// this is the name the user wants the field displayed as
	DisplayName string `protobuf:"bytes,6,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// what name the field will be called in the original location
	// 'alt_name' can be left blank if it is the same as 'name'
	AltName string `protobuf:"bytes,2,opt,name=alt_name,json=altName,proto3" json:"alt_name,omitempty"`
	// what source provides this field?
	//   - provided info uploaded when creating the link
	//   - provided by the verification/invoice/payment config/journey data source
	//   - provided by the verification/invoice/payment api call
	ProvidedBy integrations.FieldSource `protobuf:"varint,3,opt,name=provided_by,json=providedBy,proto3,enum=api.commons.integrations.FieldSource" json:"provided_by,omitempty"`
	// here for future use.
	ProvidedByDetailsNum int32 `protobuf:"varint,4,opt,name=provided_by_details_num,json=providedByDetailsNum,proto3" json:"provided_by_details_num,omitempty"`
	// here for future use
	ProvidedByDetailsStr string `protobuf:"bytes,5,opt,name=provided_by_details_str,json=providedByDetailsStr,proto3" json:"provided_by_details_str,omitempty"`
}

func (x *ProvidedField) Reset() {
	*x = ProvidedField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProvidedField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProvidedField) ProtoMessage() {}

func (x *ProvidedField) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProvidedField.ProtoReflect.Descriptor instead.
func (*ProvidedField) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{69}
}

func (x *ProvidedField) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProvidedField) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *ProvidedField) GetAltName() string {
	if x != nil {
		return x.AltName
	}
	return ""
}

func (x *ProvidedField) GetProvidedBy() integrations.FieldSource {
	if x != nil {
		return x.ProvidedBy
	}
	return integrations.FieldSource(0)
}

func (x *ProvidedField) GetProvidedByDetailsNum() int32 {
	if x != nil {
		return x.ProvidedByDetailsNum
	}
	return 0
}

func (x *ProvidedField) GetProvidedByDetailsStr() string {
	if x != nil {
		return x.ProvidedByDetailsStr
	}
	return ""
}

type Values struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values map[string]*Value `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Values) Reset() {
	*x = Values{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Values) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Values) ProtoMessage() {}

func (x *Values) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Values.ProtoReflect.Descriptor instead.
func (*Values) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{70}
}

func (x *Values) GetValues() map[string]*Value {
	if x != nil {
		return x.Values
	}
	return nil
}

// kind of like a json value, but we don't support circular references
type Value struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Val:
	//
	//	*Value_StrVal
	//	*Value_NumVal
	//	*Value_BoolVal
	//	*Value_TimeVal
	//	*Value_CompVal
	//	*Value_IntVal
	Val isValue_Val `protobuf_oneof:"val"`
	// whether this value should be allowed to be stored
	Sensitive bool `protobuf:"varint,5,opt,name=sensitive,proto3" json:"sensitive,omitempty"`
	// what type of data value we *want* to validate as.
	// a value does *not* have to match the validation enum.
	// a value that does not match its validation enum is just invalid.
	Validation integrations.Validation `protobuf:"varint,8,opt,name=validation,proto3,enum=api.commons.integrations.Validation" json:"validation,omitempty"`
}

func (x *Value) Reset() {
	*x = Value{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Value) ProtoMessage() {}

func (x *Value) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Value.ProtoReflect.Descriptor instead.
func (*Value) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{71}
}

func (m *Value) GetVal() isValue_Val {
	if m != nil {
		return m.Val
	}
	return nil
}

func (x *Value) GetStrVal() string {
	if x, ok := x.GetVal().(*Value_StrVal); ok {
		return x.StrVal
	}
	return ""
}

func (x *Value) GetNumVal() float64 {
	if x, ok := x.GetVal().(*Value_NumVal); ok {
		return x.NumVal
	}
	return 0
}

func (x *Value) GetBoolVal() bool {
	if x, ok := x.GetVal().(*Value_BoolVal); ok {
		return x.BoolVal
	}
	return false
}

func (x *Value) GetTimeVal() *timestamppb.Timestamp {
	if x, ok := x.GetVal().(*Value_TimeVal); ok {
		return x.TimeVal
	}
	return nil
}

func (x *Value) GetCompVal() *CompositeVal {
	if x, ok := x.GetVal().(*Value_CompVal); ok {
		return x.CompVal
	}
	return nil
}

func (x *Value) GetIntVal() int64 {
	if x, ok := x.GetVal().(*Value_IntVal); ok {
		return x.IntVal
	}
	return 0
}

func (x *Value) GetSensitive() bool {
	if x != nil {
		return x.Sensitive
	}
	return false
}

func (x *Value) GetValidation() integrations.Validation {
	if x != nil {
		return x.Validation
	}
	return integrations.Validation(0)
}

type isValue_Val interface {
	isValue_Val()
}

type Value_StrVal struct {
	StrVal string `protobuf:"bytes,1,opt,name=str_val,json=strVal,proto3,oneof"`
}

type Value_NumVal struct {
	NumVal float64 `protobuf:"fixed64,2,opt,name=num_val,json=numVal,proto3,oneof"`
}

type Value_BoolVal struct {
	BoolVal bool `protobuf:"varint,3,opt,name=bool_val,json=boolVal,proto3,oneof"`
}

type Value_TimeVal struct {
	TimeVal *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=time_val,json=timeVal,proto3,oneof"`
}

type Value_CompVal struct {
	CompVal *CompositeVal `protobuf:"bytes,6,opt,name=comp_val,json=compVal,proto3,oneof"`
}

type Value_IntVal struct {
	IntVal int64 `protobuf:"varint,7,opt,name=int_val,json=intVal,proto3,oneof"`
}

func (*Value_StrVal) isValue_Val() {}

func (*Value_NumVal) isValue_Val() {}

func (*Value_BoolVal) isValue_Val() {}

func (*Value_TimeVal) isValue_Val() {}

func (*Value_CompVal) isValue_Val() {}

func (*Value_IntVal) isValue_Val() {}

// represents either a field name whose value needs to be looked up in the payload
// or a static string value
type FieldOrStr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Val:
	//
	//	*FieldOrStr_Field
	//	*FieldOrStr_StrVal
	Val isFieldOrStr_Val `protobuf_oneof:"val"`
}

func (x *FieldOrStr) Reset() {
	*x = FieldOrStr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldOrStr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldOrStr) ProtoMessage() {}

func (x *FieldOrStr) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldOrStr.ProtoReflect.Descriptor instead.
func (*FieldOrStr) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{72}
}

func (m *FieldOrStr) GetVal() isFieldOrStr_Val {
	if m != nil {
		return m.Val
	}
	return nil
}

func (x *FieldOrStr) GetField() string {
	if x, ok := x.GetVal().(*FieldOrStr_Field); ok {
		return x.Field
	}
	return ""
}

func (x *FieldOrStr) GetStrVal() string {
	if x, ok := x.GetVal().(*FieldOrStr_StrVal); ok {
		return x.StrVal
	}
	return ""
}

type isFieldOrStr_Val interface {
	isFieldOrStr_Val()
}

type FieldOrStr_Field struct {
	Field string `protobuf:"bytes,1,opt,name=field,proto3,oneof"`
}

type FieldOrStr_StrVal struct {
	StrVal string `protobuf:"bytes,2,opt,name=str_val,json=strVal,proto3,oneof"`
}

func (*FieldOrStr_Field) isFieldOrStr_Val() {}

func (*FieldOrStr_StrVal) isFieldOrStr_Val() {}

// represents the individual parts of a string, where some of the parts are
// fields in the payload, and other parts are static strings
// CompositeVal cannot handle circular references. Meaning you cannot have two
// values that contain fields of each other in the same payload.
// Fields that are not found when built into a string will throw an error
type CompositeVal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parts []*FieldOrStr `protobuf:"bytes,1,rep,name=parts,proto3" json:"parts,omitempty"`
}

func (x *CompositeVal) Reset() {
	*x = CompositeVal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompositeVal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompositeVal) ProtoMessage() {}

func (x *CompositeVal) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompositeVal.ProtoReflect.Descriptor instead.
func (*CompositeVal) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{73}
}

func (x *CompositeVal) GetParts() []*FieldOrStr {
	if x != nil {
		return x.Parts
	}
	return nil
}

type Condition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// json path to the result ex: path.to.the.0.result
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// what operation we are confirming
	Op integrations.CompareOperation `protobuf:"varint,2,opt,name=op,proto3,enum=api.commons.integrations.CompareOperation" json:"op,omitempty"`
	// we support comparing strings, numbers and bools
	Value *Value `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Condition) Reset() {
	*x = Condition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Condition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Condition) ProtoMessage() {}

func (x *Condition) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Condition.ProtoReflect.Descriptor instead.
func (*Condition) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{74}
}

func (x *Condition) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Condition) GetOp() integrations.CompareOperation {
	if x != nil {
		return x.Op
	}
	return integrations.CompareOperation(0)
}

func (x *Condition) GetValue() *Value {
	if x != nil {
		return x.Value
	}
	return nil
}

type IntegrationConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string                       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	IntegrationId integrations.IntegrationType `protobuf:"varint,4,opt,name=integration_id,json=integrationId,proto3,enum=api.commons.integrations.IntegrationType" json:"integration_id,omitempty"`
	Name          string                       `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                       `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	Params        *Values                      `protobuf:"bytes,9,opt,name=params,proto3" json:"params,omitempty"`
	Deleted       bool                         `protobuf:"varint,10,opt,name=deleted,proto3" json:"deleted,omitempty"`
	CreatedOn     *timestamppb.Timestamp       `protobuf:"bytes,11,opt,name=created_on,json=createdOn,proto3" json:"created_on,omitempty"`
	// alternative names that map to parameter names.
	Alias *MapString `protobuf:"bytes,13,opt,name=alias,proto3" json:"alias,omitempty"`
	// these conditions will be checked on the integration's response. If any evaluate to false, the integration method will fail
	Conds    *Conditions                `protobuf:"bytes,14,opt,name=conds,proto3" json:"conds,omitempty"`
	MethodId integrations.RequestMethod `protobuf:"varint,15,opt,name=method_id,json=methodId,proto3,enum=api.commons.integrations.RequestMethod" json:"method_id,omitempty"`
}

func (x *IntegrationConfig) Reset() {
	*x = IntegrationConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntegrationConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntegrationConfig) ProtoMessage() {}

func (x *IntegrationConfig) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntegrationConfig.ProtoReflect.Descriptor instead.
func (*IntegrationConfig) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{75}
}

func (x *IntegrationConfig) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *IntegrationConfig) GetIntegrationId() integrations.IntegrationType {
	if x != nil {
		return x.IntegrationId
	}
	return integrations.IntegrationType(0)
}

func (x *IntegrationConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *IntegrationConfig) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *IntegrationConfig) GetParams() *Values {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *IntegrationConfig) GetDeleted() bool {
	if x != nil {
		return x.Deleted
	}
	return false
}

func (x *IntegrationConfig) GetCreatedOn() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedOn
	}
	return nil
}

func (x *IntegrationConfig) GetAlias() *MapString {
	if x != nil {
		return x.Alias
	}
	return nil
}

func (x *IntegrationConfig) GetConds() *Conditions {
	if x != nil {
		return x.Conds
	}
	return nil
}

func (x *IntegrationConfig) GetMethodId() integrations.RequestMethod {
	if x != nil {
		return x.MethodId
	}
	return integrations.RequestMethod(0)
}

type IntegrationTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IntegrationTransactionId string                         `protobuf:"bytes,1,opt,name=integration_transaction_id,json=integrationTransactionId,proto3" json:"integration_transaction_id,omitempty"`
	TaskId                   string                         `protobuf:"bytes,4,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	IntegrationId            integrations.IntegrationType   `protobuf:"varint,5,opt,name=integration_id,json=integrationId,proto3,enum=api.commons.integrations.IntegrationType" json:"integration_id,omitempty"`       // integration used
	MethodId                 integrations.RequestMethod     `protobuf:"varint,6,opt,name=method_id,json=methodId,proto3,enum=api.commons.integrations.RequestMethod" json:"method_id,omitempty"`                        // external service method
	TransactionType          integrations.TransactionType   `protobuf:"varint,7,opt,name=transaction_type,json=transactionType,proto3,enum=api.commons.integrations.TransactionType" json:"transaction_type,omitempty"` // payment, data inquiry, etc.
	RequestSource            integrations.RequestSource     `protobuf:"varint,8,opt,name=request_source,json=requestSource,proto3,enum=api.commons.integrations.RequestSource" json:"request_source,omitempty"`         // email/web/sms/ivr/chat
	Result                   integrations.TransactionResult `protobuf:"varint,9,opt,name=result,proto3,enum=api.commons.integrations.TransactionResult" json:"result,omitempty"`                                        // success/failure
	AmountCollected          float64                        `protobuf:"fixed64,10,opt,name=amount_collected,json=amountCollected,proto3" json:"amount_collected,omitempty"`
	RequestData              *Values                        `protobuf:"bytes,11,opt,name=request_data,json=requestData,proto3" json:"request_data,omitempty"`
	ResponseData             *Values                        `protobuf:"bytes,12,opt,name=response_data,json=responseData,proto3" json:"response_data,omitempty"` // response from external service
	CreatedOn                *timestamppb.Timestamp         `protobuf:"bytes,13,opt,name=created_on,json=createdOn,proto3" json:"created_on,omitempty"`
	ConfigName               string                         `protobuf:"bytes,14,opt,name=config_name,json=configName,proto3" json:"config_name,omitempty"`
	Conds                    *Conditions                    `protobuf:"bytes,15,opt,name=conds,proto3" json:"conds,omitempty"`
}

func (x *IntegrationTransaction) Reset() {
	*x = IntegrationTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntegrationTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntegrationTransaction) ProtoMessage() {}

func (x *IntegrationTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntegrationTransaction.ProtoReflect.Descriptor instead.
func (*IntegrationTransaction) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{76}
}

func (x *IntegrationTransaction) GetIntegrationTransactionId() string {
	if x != nil {
		return x.IntegrationTransactionId
	}
	return ""
}

func (x *IntegrationTransaction) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *IntegrationTransaction) GetIntegrationId() integrations.IntegrationType {
	if x != nil {
		return x.IntegrationId
	}
	return integrations.IntegrationType(0)
}

func (x *IntegrationTransaction) GetMethodId() integrations.RequestMethod {
	if x != nil {
		return x.MethodId
	}
	return integrations.RequestMethod(0)
}

func (x *IntegrationTransaction) GetTransactionType() integrations.TransactionType {
	if x != nil {
		return x.TransactionType
	}
	return integrations.TransactionType(0)
}

func (x *IntegrationTransaction) GetRequestSource() integrations.RequestSource {
	if x != nil {
		return x.RequestSource
	}
	return integrations.RequestSource(0)
}

func (x *IntegrationTransaction) GetResult() integrations.TransactionResult {
	if x != nil {
		return x.Result
	}
	return integrations.TransactionResult(0)
}

func (x *IntegrationTransaction) GetAmountCollected() float64 {
	if x != nil {
		return x.AmountCollected
	}
	return 0
}

func (x *IntegrationTransaction) GetRequestData() *Values {
	if x != nil {
		return x.RequestData
	}
	return nil
}

func (x *IntegrationTransaction) GetResponseData() *Values {
	if x != nil {
		return x.ResponseData
	}
	return nil
}

func (x *IntegrationTransaction) GetCreatedOn() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedOn
	}
	return nil
}

func (x *IntegrationTransaction) GetConfigName() string {
	if x != nil {
		return x.ConfigName
	}
	return ""
}

func (x *IntegrationTransaction) GetConds() *Conditions {
	if x != nil {
		return x.Conds
	}
	return nil
}

type MapString struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values map[string]string `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *MapString) Reset() {
	*x = MapString{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapString) ProtoMessage() {}

func (x *MapString) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapString.ProtoReflect.Descriptor instead.
func (*MapString) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{77}
}

func (x *MapString) GetValues() map[string]string {
	if x != nil {
		return x.Values
	}
	return nil
}

type Conditions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []*Condition `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *Conditions) Reset() {
	*x = Conditions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Conditions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conditions) ProtoMessage() {}

func (x *Conditions) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conditions.ProtoReflect.Descriptor instead.
func (*Conditions) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{78}
}

func (x *Conditions) GetValues() []*Condition {
	if x != nil {
		return x.Values
	}
	return nil
}

type Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the data used to fetch info about this task when the user clicks on a link
	Values map[string]*Value `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// the sms_id, email_id, etc that can be used to identify what generated this link
	TaskId string `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	// the type of the source for this link. ex: Email, Sms, Chat
	Src integrations.RequestSource `protobuf:"varint,3,opt,name=src,proto3,enum=api.commons.integrations.RequestSource" json:"src,omitempty"`
}

func (x *Task) Reset() {
	*x = Task{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{79}
}

func (x *Task) GetValues() map[string]*Value {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *Task) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *Task) GetSrc() integrations.RequestSource {
	if x != nil {
		return x.Src
	}
	return integrations.RequestSource(0)
}

type PortalConfigId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *PortalConfigId) Reset() {
	*x = PortalConfigId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortalConfigId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortalConfigId) ProtoMessage() {}

func (x *PortalConfigId) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortalConfigId.ProtoReflect.Descriptor instead.
func (*PortalConfigId) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{80}
}

func (x *PortalConfigId) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// all these things will show up on the portal screen to the receiver of
// the link contact info should look like the company who is using the portal
// (not tcn)
type PortalConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,21,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,22,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,23,opt,name=description,proto3" json:"description,omitempty"`
	// link to pull up a chat with customer service
	ChatClientLink string `protobuf:"bytes,2,opt,name=chat_client_link,json=chatClientLink,proto3" json:"chat_client_link,omitempty"`
	ContactEmail   string `protobuf:"bytes,3,opt,name=contact_email,json=contactEmail,proto3" json:"contact_email,omitempty"`
	ContactPhone   string `protobuf:"bytes,4,opt,name=contact_phone,json=contactPhone,proto3" json:"contact_phone,omitempty"`
	PostalCode     string `protobuf:"bytes,5,opt,name=postal_code,json=postalCode,proto3" json:"postal_code,omitempty"`
	City           string `protobuf:"bytes,6,opt,name=city,proto3" json:"city,omitempty"`
	State          string `protobuf:"bytes,7,opt,name=state,proto3" json:"state,omitempty"`
	CompanyName    string `protobuf:"bytes,8,opt,name=company_name,json=companyName,proto3" json:"company_name,omitempty"`
	// is the logo used in the corner of the portal screen
	Logo []byte `protobuf:"bytes,13,opt,name=logo,proto3" json:"logo,omitempty"`
	// is the primary color used for the portal screen
	PrimaryColor string `protobuf:"bytes,14,opt,name=primary_color,json=primaryColor,proto3" json:"primary_color,omitempty"`
	// accent color used on the portal screen
	SecondaryColor string `protobuf:"bytes,15,opt,name=secondary_color,json=secondaryColor,proto3" json:"secondary_color,omitempty"`
	StreetAddress  string `protobuf:"bytes,19,opt,name=street_address,json=streetAddress,proto3" json:"street_address,omitempty"`
}

func (x *PortalConfig) Reset() {
	*x = PortalConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortalConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortalConfig) ProtoMessage() {}

func (x *PortalConfig) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortalConfig.ProtoReflect.Descriptor instead.
func (*PortalConfig) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{81}
}

func (x *PortalConfig) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PortalConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PortalConfig) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PortalConfig) GetChatClientLink() string {
	if x != nil {
		return x.ChatClientLink
	}
	return ""
}

func (x *PortalConfig) GetContactEmail() string {
	if x != nil {
		return x.ContactEmail
	}
	return ""
}

func (x *PortalConfig) GetContactPhone() string {
	if x != nil {
		return x.ContactPhone
	}
	return ""
}

func (x *PortalConfig) GetPostalCode() string {
	if x != nil {
		return x.PostalCode
	}
	return ""
}

func (x *PortalConfig) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *PortalConfig) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *PortalConfig) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

func (x *PortalConfig) GetLogo() []byte {
	if x != nil {
		return x.Logo
	}
	return nil
}

func (x *PortalConfig) GetPrimaryColor() string {
	if x != nil {
		return x.PrimaryColor
	}
	return ""
}

func (x *PortalConfig) GetSecondaryColor() string {
	if x != nil {
		return x.SecondaryColor
	}
	return ""
}

func (x *PortalConfig) GetStreetAddress() string {
	if x != nil {
		return x.StreetAddress
	}
	return ""
}

type PortalLinkId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *PortalLinkId) Reset() {
	*x = PortalLinkId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortalLinkId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortalLinkId) ProtoMessage() {}

func (x *PortalLinkId) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortalLinkId.ProtoReflect.Descriptor instead.
func (*PortalLinkId) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{82}
}

func (x *PortalLinkId) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type PortalLink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	PortalId string `protobuf:"bytes,4,opt,name=portal_id,json=portalId,proto3" json:"portal_id,omitempty"`
	// DONT USE
	//
	// Deprecated: Marked as deprecated in api/v1alpha1/integrations/service.proto.
	PluginInstanceId string                 `protobuf:"bytes,5,opt,name=plugin_instance_id,json=pluginInstanceId,proto3" json:"plugin_instance_id,omitempty"`
	PortalConfigId   string                 `protobuf:"bytes,6,opt,name=portal_config_id,json=portalConfigId,proto3" json:"portal_config_id,omitempty"`
	TaskId           string                 `protobuf:"bytes,7,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Data             map[string]*Value      `protobuf:"bytes,8,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Metadata         map[string]*Value      `protobuf:"bytes,9,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	LastEdited       *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=last_edited,json=lastEdited,proto3" json:"last_edited,omitempty"`
}

func (x *PortalLink) Reset() {
	*x = PortalLink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortalLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortalLink) ProtoMessage() {}

func (x *PortalLink) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortalLink.ProtoReflect.Descriptor instead.
func (*PortalLink) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{83}
}

func (x *PortalLink) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PortalLink) GetPortalId() string {
	if x != nil {
		return x.PortalId
	}
	return ""
}

// Deprecated: Marked as deprecated in api/v1alpha1/integrations/service.proto.
func (x *PortalLink) GetPluginInstanceId() string {
	if x != nil {
		return x.PluginInstanceId
	}
	return ""
}

func (x *PortalLink) GetPortalConfigId() string {
	if x != nil {
		return x.PortalConfigId
	}
	return ""
}

func (x *PortalLink) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *PortalLink) GetData() map[string]*Value {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *PortalLink) GetMetadata() map[string]*Value {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *PortalLink) GetLastEdited() *timestamppb.Timestamp {
	if x != nil {
		return x.LastEdited
	}
	return nil
}

type PortalId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *PortalId) Reset() {
	*x = PortalId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortalId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortalId) ProtoMessage() {}

func (x *PortalId) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortalId.ProtoReflect.Descriptor instead.
func (*PortalId) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{84}
}

func (x *PortalId) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Portal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string                 `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Name           string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Description    string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	PortalConfigId string                 `protobuf:"bytes,6,opt,name=portal_config_id,json=portalConfigId,proto3" json:"portal_config_id,omitempty"`
	PluginInstIds  []string               `protobuf:"bytes,7,rep,name=plugin_inst_ids,json=pluginInstIds,proto3" json:"plugin_inst_ids,omitempty"`
	Ptype          *PortalType            `protobuf:"bytes,8,opt,name=ptype,proto3" json:"ptype,omitempty"`
	LastEdited     *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=last_edited,json=lastEdited,proto3" json:"last_edited,omitempty"`
}

func (x *Portal) Reset() {
	*x = Portal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Portal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Portal) ProtoMessage() {}

func (x *Portal) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Portal.ProtoReflect.Descriptor instead.
func (*Portal) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{85}
}

func (x *Portal) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Portal) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Portal) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Portal) GetPortalConfigId() string {
	if x != nil {
		return x.PortalConfigId
	}
	return ""
}

func (x *Portal) GetPluginInstIds() []string {
	if x != nil {
		return x.PluginInstIds
	}
	return nil
}

func (x *Portal) GetPtype() *PortalType {
	if x != nil {
		return x.Ptype
	}
	return nil
}

func (x *Portal) GetLastEdited() *timestamppb.Timestamp {
	if x != nil {
		return x.LastEdited
	}
	return nil
}

type PortalText struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VerificationHeader string `protobuf:"bytes,1,opt,name=verification_header,json=verificationHeader,proto3" json:"verification_header,omitempty"`
	VerificationFooter string `protobuf:"bytes,2,opt,name=verification_footer,json=verificationFooter,proto3" json:"verification_footer,omitempty"`
	PaymentHeader      string `protobuf:"bytes,3,opt,name=payment_header,json=paymentHeader,proto3" json:"payment_header,omitempty"`
	PaymentFooter      string `protobuf:"bytes,4,opt,name=payment_footer,json=paymentFooter,proto3" json:"payment_footer,omitempty"`
	ReceiptHeader      string `protobuf:"bytes,5,opt,name=receipt_header,json=receiptHeader,proto3" json:"receipt_header,omitempty"`
	ReceiptFooter      string `protobuf:"bytes,6,opt,name=receipt_footer,json=receiptFooter,proto3" json:"receipt_footer,omitempty"`
	InvoiceHeader      string `protobuf:"bytes,7,opt,name=invoice_header,json=invoiceHeader,proto3" json:"invoice_header,omitempty"`
	InvoiceFooter      string `protobuf:"bytes,8,opt,name=invoice_footer,json=invoiceFooter,proto3" json:"invoice_footer,omitempty"`
}

func (x *PortalText) Reset() {
	*x = PortalText{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortalText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortalText) ProtoMessage() {}

func (x *PortalText) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortalText.ProtoReflect.Descriptor instead.
func (*PortalText) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{86}
}

func (x *PortalText) GetVerificationHeader() string {
	if x != nil {
		return x.VerificationHeader
	}
	return ""
}

func (x *PortalText) GetVerificationFooter() string {
	if x != nil {
		return x.VerificationFooter
	}
	return ""
}

func (x *PortalText) GetPaymentHeader() string {
	if x != nil {
		return x.PaymentHeader
	}
	return ""
}

func (x *PortalText) GetPaymentFooter() string {
	if x != nil {
		return x.PaymentFooter
	}
	return ""
}

func (x *PortalText) GetReceiptHeader() string {
	if x != nil {
		return x.ReceiptHeader
	}
	return ""
}

func (x *PortalText) GetReceiptFooter() string {
	if x != nil {
		return x.ReceiptFooter
	}
	return ""
}

func (x *PortalText) GetInvoiceHeader() string {
	if x != nil {
		return x.InvoiceHeader
	}
	return ""
}

func (x *PortalText) GetInvoiceFooter() string {
	if x != nil {
		return x.InvoiceFooter
	}
	return ""
}

type PortalType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//
	//	*PortalType_PaymentPortal
	//	*PortalType_IvrPortal
	Data isPortalType_Data `protobuf_oneof:"data"`
}

func (x *PortalType) Reset() {
	*x = PortalType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortalType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortalType) ProtoMessage() {}

func (x *PortalType) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortalType.ProtoReflect.Descriptor instead.
func (*PortalType) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{87}
}

func (m *PortalType) GetData() isPortalType_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *PortalType) GetPaymentPortal() *PaymentPortal {
	if x, ok := x.GetData().(*PortalType_PaymentPortal); ok {
		return x.PaymentPortal
	}
	return nil
}

func (x *PortalType) GetIvrPortal() *IVRPortal {
	if x, ok := x.GetData().(*PortalType_IvrPortal); ok {
		return x.IvrPortal
	}
	return nil
}

type isPortalType_Data interface {
	isPortalType_Data()
}

type PortalType_PaymentPortal struct {
	PaymentPortal *PaymentPortal `protobuf:"bytes,1,opt,name=payment_portal,json=paymentPortal,proto3,oneof"`
}

type PortalType_IvrPortal struct {
	// contains info needed for ivr payment
	IvrPortal *IVRPortal `protobuf:"bytes,2,opt,name=ivr_portal,json=ivrPortal,proto3,oneof"`
}

func (*PortalType_PaymentPortal) isPortalType_Data() {}

func (*PortalType_IvrPortal) isPortalType_Data() {}

type PaymentPortal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Verification *integrations.VerificationFlow `protobuf:"bytes,8,opt,name=verification,proto3" json:"verification,omitempty"`
	Invoice      *integrations.InvoiceFlow      `protobuf:"bytes,9,opt,name=invoice,proto3" json:"invoice,omitempty"`
	Payments     []*integrations.PaymentFlow    `protobuf:"bytes,10,rep,name=payments,proto3" json:"payments,omitempty"`
	PortalText   *PortalText                    `protobuf:"bytes,20,opt,name=portal_text,json=portalText,proto3" json:"portal_text,omitempty"`
}

func (x *PaymentPortal) Reset() {
	*x = PaymentPortal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentPortal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentPortal) ProtoMessage() {}

func (x *PaymentPortal) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentPortal.ProtoReflect.Descriptor instead.
func (*PaymentPortal) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{88}
}

func (x *PaymentPortal) GetVerification() *integrations.VerificationFlow {
	if x != nil {
		return x.Verification
	}
	return nil
}

func (x *PaymentPortal) GetInvoice() *integrations.InvoiceFlow {
	if x != nil {
		return x.Invoice
	}
	return nil
}

func (x *PaymentPortal) GetPayments() []*integrations.PaymentFlow {
	if x != nil {
		return x.Payments
	}
	return nil
}

func (x *PaymentPortal) GetPortalText() *PortalText {
	if x != nil {
		return x.PortalText
	}
	return nil
}

type IVRPortal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IVRPortal) Reset() {
	*x = IVRPortal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IVRPortal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IVRPortal) ProtoMessage() {}

func (x *IVRPortal) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IVRPortal.ProtoReflect.Descriptor instead.
func (*IVRPortal) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{89}
}

type PluginInstanceId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *PluginInstanceId) Reset() {
	*x = PluginInstanceId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginInstanceId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginInstanceId) ProtoMessage() {}

func (x *PluginInstanceId) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginInstanceId.ProtoReflect.Descriptor instead.
func (*PluginInstanceId) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{90}
}

func (x *PluginInstanceId) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type PluginInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// the plugin type name/label. Ex: 'Experian Payments'
	PluginDefinition string                     `protobuf:"bytes,6,opt,name=plugin_definition,json=pluginDefinition,proto3" json:"plugin_definition,omitempty"`
	Data             *Values                    `protobuf:"bytes,7,opt,name=data,proto3" json:"data,omitempty"`
	Metadata         *Values                    `protobuf:"bytes,10,opt,name=metadata,proto3" json:"metadata,omitempty"`
	LastEdited       *timestamppb.Timestamp     `protobuf:"bytes,9,opt,name=last_edited,json=lastEdited,proto3" json:"last_edited,omitempty"`
	MethodId         integrations.RequestMethod `protobuf:"varint,12,opt,name=method_id,json=methodId,proto3,enum=api.commons.integrations.RequestMethod" json:"method_id,omitempty"`
}

func (x *PluginInstance) Reset() {
	*x = PluginInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginInstance) ProtoMessage() {}

func (x *PluginInstance) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginInstance.ProtoReflect.Descriptor instead.
func (*PluginInstance) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{91}
}

func (x *PluginInstance) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PluginInstance) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PluginInstance) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PluginInstance) GetPluginDefinition() string {
	if x != nil {
		return x.PluginDefinition
	}
	return ""
}

func (x *PluginInstance) GetData() *Values {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *PluginInstance) GetMetadata() *Values {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *PluginInstance) GetLastEdited() *timestamppb.Timestamp {
	if x != nil {
		return x.LastEdited
	}
	return nil
}

func (x *PluginInstance) GetMethodId() integrations.RequestMethod {
	if x != nil {
		return x.MethodId
	}
	return integrations.RequestMethod(0)
}

// PortalLinkTransactionRow is all the metrics about a portal link,
// and how it was used in any integration transactions.
type PortalLinkTransactionRow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// all this from the PortalLink.Metadata map
	Views            int32                  `protobuf:"varint,1,opt,name=views,proto3" json:"views,omitempty"`
	VerifyAttempts   int32                  `protobuf:"varint,2,opt,name=verify_attempts,json=verifyAttempts,proto3" json:"verify_attempts,omitempty"`
	VerifySuccesses  int32                  `protobuf:"varint,3,opt,name=verify_successes,json=verifySuccesses,proto3" json:"verify_successes,omitempty"`
	PaymentAttempts  int32                  `protobuf:"varint,4,opt,name=payment_attempts,json=paymentAttempts,proto3" json:"payment_attempts,omitempty"`
	PaymentSuccesses int32                  `protobuf:"varint,5,opt,name=payment_successes,json=paymentSuccesses,proto3" json:"payment_successes,omitempty"`
	PaymentAmount    float64                `protobuf:"fixed64,6,opt,name=payment_amount,json=paymentAmount,proto3" json:"payment_amount,omitempty"`
	Date             *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=date,proto3" json:"date,omitempty"`
	// from PortalLink.Data map
	LinkData map[string]*Value `protobuf:"bytes,8,rep,name=link_data,json=linkData,proto3" json:"link_data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *PortalLinkTransactionRow) Reset() {
	*x = PortalLinkTransactionRow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortalLinkTransactionRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortalLinkTransactionRow) ProtoMessage() {}

func (x *PortalLinkTransactionRow) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortalLinkTransactionRow.ProtoReflect.Descriptor instead.
func (*PortalLinkTransactionRow) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{92}
}

func (x *PortalLinkTransactionRow) GetViews() int32 {
	if x != nil {
		return x.Views
	}
	return 0
}

func (x *PortalLinkTransactionRow) GetVerifyAttempts() int32 {
	if x != nil {
		return x.VerifyAttempts
	}
	return 0
}

func (x *PortalLinkTransactionRow) GetVerifySuccesses() int32 {
	if x != nil {
		return x.VerifySuccesses
	}
	return 0
}

func (x *PortalLinkTransactionRow) GetPaymentAttempts() int32 {
	if x != nil {
		return x.PaymentAttempts
	}
	return 0
}

func (x *PortalLinkTransactionRow) GetPaymentSuccesses() int32 {
	if x != nil {
		return x.PaymentSuccesses
	}
	return 0
}

func (x *PortalLinkTransactionRow) GetPaymentAmount() float64 {
	if x != nil {
		return x.PaymentAmount
	}
	return 0
}

func (x *PortalLinkTransactionRow) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *PortalLinkTransactionRow) GetLinkData() map[string]*Value {
	if x != nil {
		return x.LinkData
	}
	return nil
}

// GetPortalLinksByDateRangeReq gives a paginated view of portal links
type GetPortalLinksByDateRangeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId    string                     `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	RegionId string                     `protobuf:"bytes,2,opt,name=region_id,json=regionId,proto3" json:"region_id,omitempty"`
	Start    *timestamppb.Timestamp     `protobuf:"bytes,3,opt,name=start,proto3" json:"start,omitempty"`
	End      *timestamppb.Timestamp     `protobuf:"bytes,4,opt,name=end,proto3" json:"end,omitempty"`
	PageSize int32                      `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageNum  int32                      `protobuf:"varint,6,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`
	MethodId integrations.RequestMethod `protobuf:"varint,7,opt,name=method_id,json=methodId,proto3,enum=api.commons.integrations.RequestMethod" json:"method_id,omitempty"`
}

func (x *GetPortalLinksByDateRangeReq) Reset() {
	*x = GetPortalLinksByDateRangeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPortalLinksByDateRangeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPortalLinksByDateRangeReq) ProtoMessage() {}

func (x *GetPortalLinksByDateRangeReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPortalLinksByDateRangeReq.ProtoReflect.Descriptor instead.
func (*GetPortalLinksByDateRangeReq) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{93}
}

func (x *GetPortalLinksByDateRangeReq) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *GetPortalLinksByDateRangeReq) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

func (x *GetPortalLinksByDateRangeReq) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *GetPortalLinksByDateRangeReq) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *GetPortalLinksByDateRangeReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetPortalLinksByDateRangeReq) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *GetPortalLinksByDateRangeReq) GetMethodId() integrations.RequestMethod {
	if x != nil {
		return x.MethodId
	}
	return integrations.RequestMethod(0)
}

// GetPortalLinksByDateRangeRes returns a page of data
type GetPortalLinksByDateRangeRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rows []*PortalLinkTransactionRow `protobuf:"bytes,2,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *GetPortalLinksByDateRangeRes) Reset() {
	*x = GetPortalLinksByDateRangeRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPortalLinksByDateRangeRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPortalLinksByDateRangeRes) ProtoMessage() {}

func (x *GetPortalLinksByDateRangeRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_integrations_service_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPortalLinksByDateRangeRes.ProtoReflect.Descriptor instead.
func (*GetPortalLinksByDateRangeRes) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_integrations_service_proto_rawDescGZIP(), []int{94}
}

func (x *GetPortalLinksByDateRangeRes) GetRows() []*PortalLinkTransactionRow {
	if x != nil {
		return x.Rows
	}
	return nil
}

var File_api_v1alpha1_integrations_service_proto protoreflect.FileDescriptor

var file_api_v1alpha1_integrations_service_proto_rawDesc = []byte{
	0x0a, 0x27, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x17, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x61,
	0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x61, 0x70, 0x69, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2f, 0x70, 0x65, 0x72, 0x6d, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x17, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x4a, 0x6f, 0x75, 0x72,
	0x6e, 0x65, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x52, 0x65, 0x71, 0x22, 0x1a, 0x0a,
	0x18, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x6e, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x65, 0x79, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x52, 0x65, 0x71, 0x22, 0x5a, 0x0a, 0x12, 0x49, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x12,
	0x44, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x8f, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x71, 0x12, 0x50, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xef, 0x01, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x50, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39,
	0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x92, 0x01, 0x0a, 0x1a, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x12, 0x50, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xe5,
	0x03, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a,
	0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x50, 0x0a, 0x0e,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x73, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0d, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x44,
	0x0a, 0x09, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x49, 0x64, 0x12, 0x49, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x31, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x3a, 0x0a,
	0x05, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x05, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x1a, 0x5b, 0x0a, 0x0b, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x36, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa5, 0x02, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x43, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x25, 0x0a, 0x0e,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x1a, 0x59, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x36, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x56,
	0x0a, 0x10, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x12, 0x42, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0xa0, 0x03, 0x0a, 0x0f, 0x49, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x50,
	0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x73, 0x12, 0x5e, 0x0a, 0x0c, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x1a, 0x64, 0x0a, 0x10, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3a, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x85, 0x04, 0x0a, 0x0a, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x44, 0x0a, 0x09,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x49, 0x64, 0x12, 0x42, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x73, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06,
	0x74, 0x78, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3c, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x06, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x40, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x08,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x0e, 0x72, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x38, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x72, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x66, 0x0a, 0x12, 0x52, 0x75, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x3a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0xbc, 0x03, 0x0a, 0x09, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x42, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x12, 0x45, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x73, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0c, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x54, 0x65, 0x78,
	0x74, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x6c, 0x6f,
	0x63, 0x6b, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x44, 0x0a, 0x0a, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x5c, 0x0a, 0x1c, 0x47, 0x65, 0x74,
	0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x3c, 0x0a, 0x1a, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xc0, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x2c, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x03, 0x65, 0x6e, 0x64, 0x12, 0x44, 0x0a, 0x09, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x52, 0x08, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x49, 0x64, 0x22, 0x9b, 0x02, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x69, 0x65, 0x77, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x69, 0x65, 0x77, 0x73, 0x12, 0x27, 0x0a,
	0x0f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x5f, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x41, 0x74,
	0x74, 0x65, 0x6d, 0x70, 0x74, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65,
	0x73, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x74, 0x74,
	0x65, 0x6d, 0x70, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x73, 0x12, 0x2b, 0x0a, 0x11,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0x9f, 0x01, 0x0a, 0x22, 0x47, 0x65, 0x74,
	0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x30, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x12, 0x2c, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x62, 0x79, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x22, 0x9d, 0x0a, 0x0a, 0x1f, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x6f, 0x77, 0x12, 0x50,
	0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x29, 0x0a, 0x10, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x44, 0x0a, 0x09, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x54, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4e, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x6c, 0x6f, 0x77,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x6c, 0x6f,
	0x77, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67,
	0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61,
	0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x75, 0x0a, 0x0f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x62, 0x79, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x17, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x6f, 0x77, 0x2e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x07, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x12, 0x7d, 0x0a, 0x11, 0x72,
	0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x5f, 0x73, 0x75, 0x62, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x73,
	0x18, 0x13, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x50, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52,
	0x6f, 0x77, 0x2e, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x53, 0x75, 0x62, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x10, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x75,
	0x65, 0x53, 0x75, 0x62, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x23, 0x0a, 0x0d, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x68, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74,
	0x5f, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x12, 0x68, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x54, 0x72, 0x61, 0x66,
	0x66, 0x69, 0x63, 0x44, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x6c, 0x6f, 0x77, 0x65, 0x73,
	0x74, 0x5f, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6c, 0x6f, 0x77, 0x65, 0x73, 0x74, 0x54, 0x72, 0x61, 0x66,
	0x66, 0x69, 0x63, 0x44, 0x61, 0x74, 0x65, 0x12, 0x71, 0x0a, 0x0d, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x18, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4c,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x6f, 0x77, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x18, 0x19, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x1a, 0x40, 0x0a, 0x12, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x1a, 0x43, 0x0a, 0x15, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x53,
	0x75, 0x62, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3f, 0x0a, 0x11, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x78, 0x0a, 0x22, 0x47, 0x65,
	0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73,
	0x12, 0x52, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x3a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x49, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x6f, 0x77, 0x52, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x22, 0xe3, 0x03, 0x0a, 0x26, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12,
	0x30, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x12, 0x2c, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12,
	0x69, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x62, 0x79, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x4e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x6e, 0x75, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e,
	0x75, 0x6d, 0x12, 0x50, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x61,
	0x66, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x69, 0x64, 0x1a, 0x3a,
	0x0a, 0x0c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xe5, 0x03, 0x0a, 0x26, 0x47,
	0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x6f, 0x77, 0x12, 0x78, 0x0a, 0x0d, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x53, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x6f, 0x77, 0x2e,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12,
	0x6c, 0x0a, 0x09, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x4f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x6f, 0x77, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x08, 0x6c, 0x69, 0x6e, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2e, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x25, 0x0a,
	0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x3f, 0x0a, 0x11, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3b, 0x0a, 0x0d, 0x4c, 0x69, 0x6e, 0x6b, 0x44, 0x61, 0x74,
	0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0xb9, 0x01, 0x0a, 0x26, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x12, 0x5d, 0x0a,
	0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x41, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x6f, 0x77, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x14,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x73, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x6c, 0x61, 0x73, 0x74,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x64, 0x22, 0xc3,
	0x04, 0x0a, 0x20, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x35,
	0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e,
	0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x55, 0x0a, 0x10, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4f, 0x0a, 0x0e,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x0d,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x55, 0x0a,
	0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x4f, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x44, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74,
	0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61,
	0x73, 0x6b, 0x49, 0x64, 0x22, 0x79, 0x0a, 0x20, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x12, 0x55, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0x63, 0x0a, 0x0f, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x50, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x22, 0x55, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x44, 0x0a, 0x09, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x49, 0x64, 0x22, 0x67, 0x0a, 0x0f, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x54,
	0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x22, 0x5f, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x4e, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x58, 0x0a, 0x11, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x43, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x71, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x50, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x22, 0x87, 0x01, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x12, 0x50, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x29, 0x0a, 0x17,
	0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2c, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1c, 0x0a, 0x04, 0x4c, 0x6f, 0x67, 0x6f, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0xba, 0x01, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x72, 0x74,
	0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x52, 0x65, 0x71, 0x12, 0x41, 0x0a, 0x06,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x2e, 0x0a, 0x04, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x6d, 0x61, 0x73, 0x6b, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x22, 0x97, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x12, 0x41, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x49, 0x64, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x2e, 0x0a, 0x04, 0x6d, 0x61,
	0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x4d, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x6d, 0x61, 0x73, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x9a, 0x01, 0x0a, 0x15, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x71, 0x12, 0x41, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x52,
	0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x2e, 0x0a, 0x04, 0x6d, 0x61, 0x73, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73,
	0x6b, 0x52, 0x04, 0x6d, 0x61, 0x73, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x39, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x4c, 0x6f, 0x67, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x6c, 0x6f,
	0x67, 0x6f, 0x22, 0x22, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x4c,
	0x6f, 0x67, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x29, 0x0a, 0x0e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x69, 0x6e, 0x6b,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x69, 0x6e, 0x6b, 0x49,
	0x64, 0x22, 0x4b, 0x0a, 0x0e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x4c, 0x69, 0x6e, 0x6b,
	0x52, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x6e, 0x65, 0x77, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x6e, 0x65, 0x77, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x22, 0xaa,
	0x0c, 0x0a, 0x11, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0d, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x54, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x61, 0x0a, 0x16, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x42, 0x02, 0x18, 0x01, 0x52, 0x14, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x49, 0x64, 0x12, 0x57, 0x0a, 0x11,
	0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x69,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x42, 0x02, 0x18, 0x01, 0x52, 0x0f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x49, 0x64, 0x12, 0x57, 0x0a, 0x11, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0f, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x49, 0x64, 0x12, 0x60,
	0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x12, 0x33, 0x0a, 0x13, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x42, 0x02, 0x18,
	0x01, 0x52, 0x12, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x49,
	0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x6f, 0x6e, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x44, 0x61, 0x79, 0x73, 0x12, 0x2b, 0x0a,
	0x11, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x61, 0x62,
	0x6c, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x52,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x37, 0x0a, 0x18, 0x72, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x5f, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x01, 0x52, 0x15, 0x72, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x4c, 0x69, 0x6e, 0x6b, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x48, 0x6f,
	0x75, 0x72, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x61, 0x78, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f,
	0x6d, 0x61, 0x78, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12,
	0x61, 0x0a, 0x14, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x13, 0x76,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x52, 0x0a, 0x0f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x54, 0x0a, 0x10, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x16, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0f, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x57, 0x0a, 0x09,
	0x62, 0x61, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x17, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x3a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x62, 0x61, 0x73,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x53, 0x0a, 0x09, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x73, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x6b,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52,
	0x09, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x3e, 0x0a, 0x10,
	0x4e, 0x61, 0x6d, 0x65, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x5d, 0x0a, 0x0d,
	0x42, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x36, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xca, 0x02, 0x0a, 0x1a,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x70, 0x74, 0x5f, 0x73, 0x6d, 0x73, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70,
	0x74, 0x53, 0x6d, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x37, 0x0a, 0x18,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x5f, 0x73, 0x6d, 0x73, 0x5f, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x53, 0x6d, 0x73, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74,
	0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x17, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x66, 0x72, 0x6f,
	0x6d, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x70, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x64,
	0x64, 0x72, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x5f, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x70, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x29, 0x0a,
	0x10, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x22, 0xc5, 0x01, 0x0a, 0x13, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x57, 0x0a, 0x15, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x14, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x55, 0x0a, 0x13, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x12, 0x76, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x22, 0xbc, 0x02, 0x0a, 0x0e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x4b, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x12, 0x5a, 0x0a, 0x17, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x15, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x4b, 0x0a, 0x0f,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0xeb, 0x01, 0x0a, 0x0e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x5a, 0x0a, 0x17, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x15, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x4b,
	0x0a, 0x0f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0e, 0x69, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x6b,
	0x65, 0x79, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x22, 0xf9, 0x05,
	0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x15, 0x6a, 0x6f, 0x75,
	0x72, 0x6e, 0x65, 0x79, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x13, 0x6a, 0x6f, 0x75, 0x72,
	0x6e, 0x65, 0x79, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x48, 0x0a, 0x0b, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x43, 0x61, 0x6c, 0x6c, 0x48, 0x00, 0x52, 0x0a, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x1d, 0x0a, 0x09, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x12, 0x53, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x63, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x12, 0x6c, 0x0a,
	0x14, 0x72, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4b, 0x65,
	0x79, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x12, 0x72, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x6e, 0x0a, 0x14, 0x72,
	0x65, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65,
	0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x13, 0x72, 0x65, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x5f, 0x0a, 0x0f, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x36, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x45, 0x0a, 0x17,
	0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4b, 0x65,
	0x79, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x1a, 0x6d, 0x0a, 0x18, 0x52, 0x65, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x3b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x46, 0x0a, 0x0a, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x73, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x65, 0x6e, 0x75,
	0x6d, 0x22, 0xa4, 0x01, 0x0a, 0x0a, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x43, 0x61, 0x6c, 0x6c,
	0x12, 0x50, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x44, 0x0a, 0x09, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x73, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x08,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x49, 0x64, 0x22, 0x50, 0x0a, 0x0d, 0x50, 0x6f, 0x72, 0x74,
	0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x12, 0x3f, 0x0a, 0x06, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x1b, 0x0a, 0x19, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x73, 0x52, 0x65, 0x71, 0x22, 0x5a, 0x0a, 0x12, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x12, 0x44, 0x0a,
	0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x22, 0x0e, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x73,
	0x52, 0x65, 0x71, 0x22, 0xb5, 0x01, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x24, 0x0a, 0x0e, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x69, 0x6e,
	0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x06, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x12, 0x3c, 0x0a,
	0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x22, 0x31, 0x0a, 0x1b, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x72, 0x74,
	0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x72,
	0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x75, 0x72, 0x6c, 0x73, 0x22, 0x20,
	0x0a, 0x0a, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04,
	0x79, 0x65, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72,
	0x22, 0x83, 0x02, 0x0a, 0x0a, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x12,
	0x4d, 0x0a, 0x0c, 0x79, 0x65, 0x61, 0x72, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x52, 0x0b, 0x79, 0x65, 0x61, 0x72, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x53,
	0x0a, 0x0f, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x52, 0x0e, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x69, 0x65, 0x73, 0x12, 0x51, 0x0a, 0x0e, 0x77, 0x65, 0x65, 0x6b, 0x5f, 0x73, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x0d, 0x77, 0x65, 0x65, 0x6b, 0x53, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x69, 0x65, 0x73, 0x22, 0xd7, 0x01, 0x0a, 0x0f, 0x43, 0x61, 0x6c, 0x65, 0x6e,
	0x64, 0x61, 0x72, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61,
	0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x63, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x47, 0x0a,
	0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x07, 0x73,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x58, 0x0a, 0x0e, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x73,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x52, 0x0d, 0x74, 0x79, 0x70, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69, 0x65, 0x73,
	0x22, 0xce, 0x01, 0x0a, 0x16, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x54, 0x0a, 0x10, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x73, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x5e, 0x0a, 0x13, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x12, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x22, 0xbc, 0x02, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x40, 0x0a, 0x1c, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x61,
	0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1a,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x65, 0x64, 0x12, 0x40, 0x0a, 0x1c, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x1a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x3a, 0x0a, 0x19,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x17, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x16, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x14, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x30,
	0x0a, 0x14, 0x61, 0x76, 0x67, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x12, 0x61, 0x76,
	0x67, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x22, 0x5d, 0x0a, 0x23, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x42, 0x79, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x12, 0x36, 0x0a, 0x17, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x8e, 0x01, 0x0a, 0x23, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x42, 0x79, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x12, 0x67, 0x0a, 0x15, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x14, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73,
	0x22, 0x74, 0x0a, 0x17, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x34, 0x0a, 0x16, 0x62,
	0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x62, 0x72, 0x6f,
	0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x69,
	0x64, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x2a, 0x0a, 0x18, 0x43, 0x6f, 0x70, 0x79, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x35, 0x0a, 0x18, 0x43, 0x6f, 0x70, 0x79, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x12, 0x19,
	0x0a, 0x08, 0x6e, 0x65, 0x77, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6e, 0x65, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x21, 0x0a, 0x0b, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x54, 0x0a, 0x0f,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12,
	0x41, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x22, 0x6a, 0x0a, 0x0e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x93,
	0x02, 0x0a, 0x0c, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x5f, 0x6e, 0x65, 0x65, 0x64, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4e, 0x65, 0x65, 0x64, 0x65, 0x64, 0x12, 0x52, 0x0a, 0x11, 0x70,
	0x6f, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x10, 0x70,
	0x6f, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12,
	0x53, 0x0a, 0x10, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x64, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x52, 0x0f, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x65, 0x64, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x22, 0x97, 0x02, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x61, 0x6c, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x6c, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x46, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x64, 0x42, 0x79,
	0x12, 0x35, 0x0a, 0x17, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x5f,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x14, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x64, 0x42, 0x79, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x4e, 0x75, 0x6d, 0x12, 0x35, 0x0a, 0x17, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x5f, 0x73,
	0x74, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x64, 0x42, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x53, 0x74, 0x72, 0x22, 0xac,
	0x01, 0x0a, 0x06, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x45, 0x0a, 0x06, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x2e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x1a, 0x5b, 0x0a, 0x0b, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x36, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xdf, 0x02,
	0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x19, 0x0a, 0x07, 0x73, 0x74, 0x72, 0x5f, 0x76,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x72, 0x56,
	0x61, 0x6c, 0x12, 0x19, 0x0a, 0x07, 0x6e, 0x75, 0x6d, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x01, 0x48, 0x00, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x56, 0x61, 0x6c, 0x12, 0x1b, 0x0a,
	0x08, 0x62, 0x6f, 0x6f, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x48,
	0x00, 0x52, 0x07, 0x62, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x12, 0x37, 0x0a, 0x08, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65,
	0x56, 0x61, 0x6c, 0x12, 0x44, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x70, 0x5f, 0x76, 0x61, 0x6c, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x48, 0x00,
	0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x56, 0x61, 0x6c, 0x12, 0x19, 0x0a, 0x07, 0x69, 0x6e, 0x74,
	0x5f, 0x76, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x06, 0x69, 0x6e,
	0x74, 0x56, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x73, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69,
	0x76, 0x65, 0x12, 0x44, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x05, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x22,
	0x46, 0x0a, 0x0a, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x72, 0x53, 0x74, 0x72, 0x12, 0x16, 0x0a,
	0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x19, 0x0a, 0x07, 0x73, 0x74, 0x72, 0x5f, 0x76, 0x61, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x72, 0x56, 0x61, 0x6c,
	0x42, 0x05, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x4b, 0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x12, 0x3b, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x72, 0x53, 0x74, 0x72, 0x52, 0x05, 0x70,
	0x61, 0x72, 0x74, 0x73, 0x22, 0x91, 0x01, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x3a, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x72, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x02, 0x6f, 0x70,
	0x12, 0x36, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xfa, 0x03, 0x0a, 0x11, 0x49, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x50,
	0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x4f, 0x6e, 0x12, 0x3a, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x4d, 0x61, 0x70, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x05, 0x61, 0x6c, 0x69,
	0x61, 0x73, 0x12, 0x3b, 0x0a, 0x05, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x05, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12,
	0x44, 0x0a, 0x09, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x08, 0x6d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x49, 0x64, 0x22, 0xc4, 0x06, 0x0a, 0x16, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x3c, 0x0a, 0x1a, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x50, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x44, 0x0a, 0x09, 0x6d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x49, 0x64, 0x12,
	0x54, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4e, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x43, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x73, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x44, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x0b,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x46, 0x0a, 0x0d, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x6f,
	0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4f, 0x6e, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x3b, 0x0a, 0x05, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x05, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x90, 0x01, 0x0a,
	0x09, 0x4d, 0x61, 0x70, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x48, 0x0a, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4d, 0x61, 0x70, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x4a, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3c, 0x0a,
	0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0xfc, 0x01, 0x0a, 0x04,
	0x54, 0x61, 0x73, 0x6b, 0x12, 0x43, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73,
	0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b,
	0x49, 0x64, 0x12, 0x39, 0x0a, 0x03, 0x73, 0x72, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x03, 0x73, 0x72, 0x63, 0x1a, 0x5b, 0x0a,
	0x0b, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x36,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x20, 0x0a, 0x0e, 0x50, 0x6f,
	0x72, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xc5, 0x03, 0x0a,
	0x0c, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63,
	0x68, 0x61, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x23, 0x0a,
	0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x73, 0x74, 0x61,
	0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f,
	0x73, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x69,
	0x6d, 0x61, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x27,
	0x0a, 0x0f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61,
	0x72, 0x79, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x74, 0x72, 0x65, 0x65,
	0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4a, 0x04,
	0x08, 0x09, 0x10, 0x0d, 0x22, 0x1e, 0x0a, 0x0c, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x4c, 0x69,
	0x6e, 0x6b, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0xbb, 0x04, 0x0a, 0x0a, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x4c,
	0x69, 0x6e, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x49, 0x64,
	0x12, 0x30, 0x0a, 0x12, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01,
	0x52, 0x10, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x6f,
	0x72, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74,
	0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x4f, 0x0a, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x4c,
	0x69, 0x6e, 0x6b, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3b, 0x0a, 0x0b, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x6c, 0x61,
	0x73, 0x74, 0x45, 0x64, 0x69, 0x74, 0x65, 0x64, 0x1a, 0x59, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x36, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x1a, 0x5d, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x36, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x1a, 0x0a, 0x08, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x9a,
	0x02, 0x0a, 0x06, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x28, 0x0a, 0x10, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x6f, 0x72, 0x74, 0x61,
	0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0d, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x49, 0x64,
	0x73, 0x12, 0x3b, 0x0a, 0x05, 0x70, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x6f, 0x72,
	0x74, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x70, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3b,
	0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x65, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0a, 0x6c, 0x61, 0x73, 0x74, 0x45, 0x64, 0x69, 0x74, 0x65, 0x64, 0x22, 0xd8, 0x02, 0x0a, 0x0a,
	0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x12, 0x2f, 0x0a, 0x13, 0x76, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x13, 0x76,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x6f, 0x74,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x66,
	0x6f, 0x6f, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x46, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x70, 0x74, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x5f, 0x66, 0x6f, 0x6f,
	0x74, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x70, 0x74, 0x46, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12,
	0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x66, 0x6f, 0x6f, 0x74, 0x65,
	0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x46, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x22, 0xae, 0x01, 0x0a, 0x0a, 0x50, 0x6f, 0x72, 0x74, 0x61,
	0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x51, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x12, 0x45, 0x0a, 0x0a, 0x69, 0x76, 0x72, 0x5f,
	0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x49, 0x56, 0x52, 0x50, 0x6f, 0x72, 0x74,
	0x61, 0x6c, 0x48, 0x00, 0x52, 0x09, 0x69, 0x76, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x42,
	0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xab, 0x02, 0x0a, 0x0d, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x12, 0x4e, 0x0a, 0x0c, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x0c, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x07, 0x69, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x46, 0x6c, 0x6f,
	0x77, 0x52, 0x07, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x41, 0x0a, 0x08, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x46,
	0x6c, 0x6f, 0x77, 0x52, 0x08, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x46, 0x0a,
	0x0b, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50,
	0x6f, 0x72, 0x74, 0x61, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x52, 0x0a, 0x70, 0x6f, 0x72, 0x74, 0x61,
	0x6c, 0x54, 0x65, 0x78, 0x74, 0x22, 0x0b, 0x0a, 0x09, 0x49, 0x56, 0x52, 0x50, 0x6f, 0x72, 0x74,
	0x61, 0x6c, 0x22, 0x22, 0x0a, 0x10, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xfc, 0x02, 0x0a, 0x0e, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2b, 0x0a, 0x11, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x3d, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x3b, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x65,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x45, 0x64, 0x69, 0x74, 0x65, 0x64, 0x12,
	0x44, 0x0a, 0x09, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x08, 0x6d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x49, 0x64, 0x22, 0xf2, 0x03, 0x0a, 0x18, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c,
	0x4c, 0x69, 0x6e, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x6f, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x69, 0x65, 0x77, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x76, 0x69, 0x65, 0x77, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x76, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x5f, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74,
	0x73, 0x12, 0x29, 0x0a, 0x10, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x5f, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x10,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41,
	0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x10, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x5e, 0x0a, 0x09, 0x6c,
	0x69, 0x6e, 0x6b, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x41,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x61,
	0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x6f, 0x77, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x08, 0x6c, 0x69, 0x6e, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x5d, 0x0a, 0x0d, 0x4c,
	0x69, 0x6e, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x36,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xb0, 0x02, 0x0a, 0x1c, 0x47,
	0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x42, 0x79, 0x44,
	0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x6f,
	0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x30, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x12, 0x2c, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x44, 0x0a, 0x09, 0x6d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x49, 0x64, 0x22, 0x67, 0x0a,
	0x1c, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x42,
	0x79, 0x44, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x12, 0x47, 0x0a,
	0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x4c, 0x69,
	0x6e, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x77,
	0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x32, 0x8a, 0x24, 0x0a, 0x0c, 0x49, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x90, 0x01, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x73, 0x22, 0x37, 0xba, 0xb8, 0x91, 0x02, 0x05, 0x0a, 0x03, 0x08, 0x94, 0x0a, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x27, 0x3a, 0x01, 0x2a, 0x22, 0x22, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0xd2, 0x01, 0x0a, 0x19, 0x47,
	0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x1a, 0x31, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x49, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x49, 0xba, 0xb8, 0x91, 0x02, 0x05, 0x0a, 0x03, 0x08, 0x94, 0x0a,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x39, 0x3a, 0x01, 0x2a, 0x22, 0x34, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x67, 0x65, 0x74, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0xf0, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x12, 0x3d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x3d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65,
	0x73, 0x22, 0x4f, 0xba, 0xb8, 0x91, 0x02, 0x05, 0x0a, 0x03, 0x08, 0x94, 0x0a, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x3f, 0x3a, 0x01, 0x2a, 0x22, 0x3a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x67, 0x65, 0x74, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x12, 0x80, 0x02, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x41, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x1a, 0x41, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73,
	0x22, 0x53, 0xba, 0xb8, 0x91, 0x02, 0x05, 0x0a, 0x03, 0x08, 0x94, 0x0a, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x43, 0x3a, 0x01, 0x2a, 0x22, 0x3e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x67, 0x65, 0x74, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x64, 0x61, 0x74, 0x61, 0x12, 0xc7, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x33, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x1a, 0x33, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x22, 0x44, 0xba, 0xb8, 0x91, 0x02, 0x05,
	0x0a, 0x03, 0x08, 0x94, 0x0a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x34, 0x3a, 0x01, 0x2a, 0x22, 0x2f,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x67, 0x65, 0x74, 0x61, 0x67,
	0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0xd8, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x4c, 0x69, 0x6e,
	0x6b, 0x73, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x37, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x72,
	0x74, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x37, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b,
	0x73, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x22,
	0x49, 0xba, 0xb8, 0x91, 0x02, 0x05, 0x0a, 0x03, 0x08, 0x94, 0x0a, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x39, 0x3a, 0x01, 0x2a, 0x22, 0x34, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x67, 0x65, 0x74, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x62,
	0x79, 0x64, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x12, 0xb2, 0x01, 0x0a, 0x17, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x47, 0xba, 0xb8, 0x91, 0x02, 0x05, 0x0a, 0x03, 0x08,
	0x94, 0x0a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x37, 0x3a, 0x01, 0x2a, 0x22, 0x32, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0xbe, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x32, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x2c, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x44, 0xba, 0xb8, 0x91, 0x02,
	0x05, 0x0a, 0x03, 0x08, 0x94, 0x0a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x34, 0x3a, 0x01, 0x2a, 0x22,
	0x2f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x67, 0x65, 0x74, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0xbb, 0x01, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x35, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x47, 0xba, 0xb8, 0x91, 0x02, 0x05, 0x0a, 0x03, 0x08, 0x94,
	0x0a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x37, 0x3a, 0x01, 0x2a, 0x22, 0x32, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x75, 0x64, 0x70, 0x61, 0x74, 0x65, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0xbb,
	0x01, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x35, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x71, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x47, 0xba, 0xb8, 0x91, 0x02, 0x05, 0x0a, 0x03, 0x08, 0x94, 0x0a, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x37, 0x3a, 0x01, 0x2a, 0x22, 0x32, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0xa3, 0x01, 0x0a,
	0x10, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x73,
	0x22, 0x40, 0xba, 0xb8, 0x91, 0x02, 0x05, 0x0a, 0x03, 0x08, 0x94, 0x0a, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x30, 0x3a, 0x01, 0x2a, 0x22, 0x2b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0xdc, 0x01, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x12, 0x38, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x38, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x22, 0x4a, 0xba, 0xb8, 0x91, 0x02, 0x05, 0x0a, 0x03, 0x08, 0x94,
	0x0a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3a, 0x3a, 0x01, 0x2a, 0x22, 0x35, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x12, 0xb9, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x65,
	0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x12, 0x30, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x65, 0x79,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x2d, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x22, 0x42, 0xba, 0xb8, 0x91, 0x02, 0x05,
	0x0a, 0x03, 0x08, 0x94, 0x0a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x32, 0x3a, 0x01, 0x2a, 0x22, 0x2d,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x6a,
	0x6f, 0x75, 0x72, 0x6e, 0x65, 0x79, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x12, 0xc2, 0x01,
	0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x6e, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x65, 0x79,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x12, 0x33, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x6e, 0x4a, 0x6f, 0x75, 0x72, 0x6e,
	0x65, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x2d, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x22, 0x45, 0xba, 0xb8, 0x91,
	0x02, 0x05, 0x0a, 0x03, 0x08, 0x94, 0x0a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x35, 0x3a, 0x01, 0x2a,
	0x22, 0x30, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x6c, 0x69, 0x73,
	0x74, 0x6e, 0x6f, 0x6e, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x65, 0x79, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x73, 0x12, 0xa3, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x72,
	0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x42, 0xba, 0xb8, 0x91, 0x02, 0x05, 0x0a, 0x03, 0x08, 0x94, 0x0a,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x32, 0x3a, 0x01, 0x2a, 0x22, 0x2d, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x61, 0x6c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0xb1, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x12, 0x2f,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x6f, 0x72, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x52, 0x65, 0x71, 0x1a,
	0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x6f, 0x72, 0x74,
	0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x22, 0x41, 0xba, 0xb8, 0x91, 0x02, 0x05,
	0x0a, 0x03, 0x08, 0x94, 0x0a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x31, 0x3a, 0x01, 0x2a, 0x22, 0x2c,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x70,
	0x6f, 0x72, 0x74, 0x61, 0x6c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x12, 0xa3, 0x01, 0x0a,
	0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x20, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x42,
	0xba, 0xb8, 0x91, 0x02, 0x05, 0x0a, 0x03, 0x08, 0x94, 0x0a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x32,
	0x3a, 0x01, 0x2a, 0x22, 0x2d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0xaa, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x3f,
	0xba, 0xb8, 0x91, 0x02, 0x05, 0x0a, 0x03, 0x08, 0x94, 0x0a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2f,
	0x3a, 0x01, 0x2a, 0x22, 0x2a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x67, 0x65, 0x74, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0xac, 0x01, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x30, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x42, 0xba, 0xb8, 0x91, 0x02,
	0x05, 0x0a, 0x03, 0x08, 0x94, 0x0a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x32, 0x3a, 0x01, 0x2a, 0x22,
	0x2d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0xa6,
	0x01, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x4c,
	0x6f, 0x67, 0x6f, 0x12, 0x2e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x4c, 0x6f, 0x67, 0x6f,
	0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x40, 0xba, 0xb8, 0x91, 0x02, 0x05, 0x0a, 0x03, 0x08, 0x94,
	0x0a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x30, 0x3a, 0x01, 0x2a, 0x22, 0x2b, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x61, 0x6c, 0x6c, 0x6f, 0x67, 0x6f, 0x12, 0x9c, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x50,
	0x6f, 0x72, 0x74, 0x61, 0x6c, 0x4c, 0x6f, 0x67, 0x6f, 0x12, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x4c,
	0x6f, 0x67, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x4c, 0x6f, 0x67, 0x6f, 0x22, 0x3d, 0xba, 0xb8, 0x91, 0x02, 0x05, 0x0a, 0x03,
	0x08, 0x94, 0x0a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x3a, 0x01, 0x2a, 0x22, 0x28, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x67, 0x65, 0x74, 0x70, 0x6f, 0x72, 0x74,
	0x61, 0x6c, 0x6c, 0x6f, 0x67, 0x6f, 0x12, 0xd4, 0x01, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x4c, 0x69,
	0x6e, 0x6b, 0x73, 0x12, 0x36, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x72,
	0x74, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x36, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x73,
	0x52, 0x65, 0x73, 0x22, 0x48, 0xba, 0xb8, 0x91, 0x02, 0x05, 0x0a, 0x03, 0x08, 0x94, 0x0a, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x38, 0x3a, 0x01, 0x2a, 0x22, 0x33, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x90, 0x01,
	0x0a, 0x07, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x1a, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x53, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x22, 0x37, 0xba, 0xb8, 0x91, 0x02, 0x05, 0x0a, 0x03,
	0x08, 0x94, 0x0a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x3a, 0x01, 0x2a, 0x22, 0x22, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x12, 0xf0, 0x01, 0x0a, 0x20, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x42, 0x79, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x3e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x73, 0x22, 0x4c, 0xba, 0xb8, 0x91, 0x02, 0x05, 0x0a, 0x03, 0x08, 0x94,
	0x0a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3c, 0x3a, 0x01, 0x2a, 0x22, 0x37, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x62, 0x79, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x42, 0xe9, 0x01, 0x0a, 0x1d, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x74, 0x63, 0x6e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x61, 0x70, 0x69, 0x2d, 0x67,
	0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0xa2, 0x02, 0x03, 0x41, 0x56,
	0x49, 0xaa, 0x02, 0x19, 0x41, 0x70, 0x69, 0x2e, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0xca, 0x02, 0x19,
	0x41, 0x70, 0x69, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x5c, 0x49, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0xe2, 0x02, 0x25, 0x41, 0x70, 0x69, 0x5c,
	0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x5c, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0xea, 0x02, 0x1b, 0x41, 0x70, 0x69, 0x3a, 0x3a, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x3a, 0x3a, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_v1alpha1_integrations_service_proto_rawDescOnce sync.Once
	file_api_v1alpha1_integrations_service_proto_rawDescData = file_api_v1alpha1_integrations_service_proto_rawDesc
)

func file_api_v1alpha1_integrations_service_proto_rawDescGZIP() []byte {
	file_api_v1alpha1_integrations_service_proto_rawDescOnce.Do(func() {
		file_api_v1alpha1_integrations_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v1alpha1_integrations_service_proto_rawDescData)
	})
	return file_api_v1alpha1_integrations_service_proto_rawDescData
}

var file_api_v1alpha1_integrations_service_proto_msgTypes = make([]protoimpl.MessageInfo, 116)
var file_api_v1alpha1_integrations_service_proto_goTypes = []interface{}{
	(*ListJourneyConfigsReq)(nil),                  // 0: api.v1alpha1.integrations.ListJourneyConfigsReq
	(*ListNonJourneyConfigsReq)(nil),               // 1: api.v1alpha1.integrations.ListNonJourneyConfigsReq
	(*IntegrationConfigs)(nil),                     // 2: api.v1alpha1.integrations.IntegrationConfigs
	(*GetIntegrationConfigReq)(nil),                // 3: api.v1alpha1.integrations.GetIntegrationConfigReq
	(*UpdateIntegrationConfigReq)(nil),             // 4: api.v1alpha1.integrations.UpdateIntegrationConfigReq
	(*DeleteIntegrationConfigReq)(nil),             // 5: api.v1alpha1.integrations.DeleteIntegrationConfigReq
	(*ProcessReq)(nil),                             // 6: api.v1alpha1.integrations.ProcessReq
	(*ProcessRes)(nil),                             // 7: api.v1alpha1.integrations.ProcessRes
	(*IntegrationInfos)(nil),                       // 8: api.v1alpha1.integrations.IntegrationInfos
	(*IntegrationInfo)(nil),                        // 9: api.v1alpha1.integrations.IntegrationInfo
	(*MethodInfo)(nil),                             // 10: api.v1alpha1.integrations.MethodInfo
	(*Parameter)(nil),                              // 11: api.v1alpha1.integrations.Parameter
	(*Empty)(nil),                                  // 12: api.v1alpha1.integrations.Empty
	(*GetIntegrationTransactionReq)(nil),           // 13: api.v1alpha1.integrations.GetIntegrationTransactionReq
	(*GetAggregatedMetadataReq)(nil),               // 14: api.v1alpha1.integrations.GetAggregatedMetadataReq
	(*GetAggregatedMetadataRes)(nil),               // 15: api.v1alpha1.integrations.GetAggregatedMetadataRes
	(*GetIntegrationTransactionReportReq)(nil),     // 16: api.v1alpha1.integrations.GetIntegrationTransactionReportReq
	(*IntegrationTransactionReportRow)(nil),        // 17: api.v1alpha1.integrations.IntegrationTransactionReportRow
	(*GetIntegrationTransactionReportRes)(nil),     // 18: api.v1alpha1.integrations.GetIntegrationTransactionReportRes
	(*GetIntegrationTransactionReportDataReq)(nil), // 19: api.v1alpha1.integrations.GetIntegrationTransactionReportDataReq
	(*GetIntegrationTransactionReportDataRow)(nil), // 20: api.v1alpha1.integrations.GetIntegrationTransactionReportDataRow
	(*GetIntegrationTransactionReportDataRes)(nil), // 21: api.v1alpha1.integrations.GetIntegrationTransactionReportDataRes
	(*SearchIntegrationTransactionsReq)(nil),       // 22: api.v1alpha1.integrations.SearchIntegrationTransactionsReq
	(*SearchIntegrationTransactionsRes)(nil),       // 23: api.v1alpha1.integrations.SearchIntegrationTransactionsRes
	(*IntegrationType)(nil),                        // 24: api.v1alpha1.integrations.IntegrationType
	(*RequestMethod)(nil),                          // 25: api.v1alpha1.integrations.RequestMethod
	(*TransactionType)(nil),                        // 26: api.v1alpha1.integrations.TransactionType
	(*RequestSource)(nil),                          // 27: api.v1alpha1.integrations.RequestSource
	(*TransactionResult)(nil),                      // 28: api.v1alpha1.integrations.TransactionResult
	(*ListIntegrationConfigNamesReq)(nil),          // 29: api.v1alpha1.integrations.ListIntegrationConfigNamesReq
	(*ListIntegrationConfigNamesRes)(nil),          // 30: api.v1alpha1.integrations.ListIntegrationConfigNamesRes
	(*GetPaymentLinkConfigReq)(nil),                // 31: api.v1alpha1.integrations.GetPaymentLinkConfigReq
	(*DeletePaymentLinkConfigReq)(nil),             // 32: api.v1alpha1.integrations.DeletePaymentLinkConfigReq
	(*Logo)(nil),                                   // 33: api.v1alpha1.integrations.Logo
	(*ListPortalConfigsReq)(nil),                   // 34: api.v1alpha1.integrations.ListPortalConfigsReq
	(*GetPortalConfigReq)(nil),                     // 35: api.v1alpha1.integrations.GetPortalConfigReq
	(*DeletePortalConfigReq)(nil),                  // 36: api.v1alpha1.integrations.DeletePortalConfigReq
	(*UpdatePortalLogoReq)(nil),                    // 37: api.v1alpha1.integrations.UpdatePortalLogoReq
	(*GetPortalLogoReq)(nil),                       // 38: api.v1alpha1.integrations.GetPortalLogoReq
	(*RefreshLinkReq)(nil),                         // 39: api.v1alpha1.integrations.RefreshLinkReq
	(*RefreshLinkRes)(nil),                         // 40: api.v1alpha1.integrations.RefreshLinkRes
	(*PaymentLinkConfig)(nil),                      // 41: api.v1alpha1.integrations.PaymentLinkConfig
	(*PaymentLinkConfigTemplates)(nil),             // 42: api.v1alpha1.integrations.PaymentLinkConfigTemplates
	(*VerificationRequest)(nil),                    // 43: api.v1alpha1.integrations.VerificationRequest
	(*PaymentRequest)(nil),                         // 44: api.v1alpha1.integrations.PaymentRequest
	(*InvoiceRequest)(nil),                         // 45: api.v1alpha1.integrations.InvoiceRequest
	(*Request)(nil),                                // 46: api.v1alpha1.integrations.Request
	(*Validation)(nil),                             // 47: api.v1alpha1.integrations.Validation
	(*MethodCall)(nil),                             // 48: api.v1alpha1.integrations.MethodCall
	(*PortalConfigs)(nil),                          // 49: api.v1alpha1.integrations.PortalConfigs
	(*ListPaymentLinkConfigsReq)(nil),              // 50: api.v1alpha1.integrations.ListPaymentLinkConfigsReq
	(*PaymentLinkConfigs)(nil),                     // 51: api.v1alpha1.integrations.PaymentLinkConfigs
	(*ListLinksReq)(nil),                           // 52: api.v1alpha1.integrations.ListLinksReq
	(*CreatePaymentPortalLinksReq)(nil),            // 53: api.v1alpha1.integrations.CreatePaymentPortalLinksReq
	(*CreatePaymentPortalLinksRes)(nil),            // 54: api.v1alpha1.integrations.CreatePaymentPortalLinksRes
	(*SummaryReq)(nil),                             // 55: api.v1alpha1.integrations.SummaryReq
	(*SummaryRes)(nil),                             // 56: api.v1alpha1.integrations.SummaryRes
	(*CalendarSummary)(nil),                        // 57: api.v1alpha1.integrations.CalendarSummary
	(*IntegrationTypeSummary)(nil),                 // 58: api.v1alpha1.integrations.IntegrationTypeSummary
	(*TransactionSummary)(nil),                     // 59: api.v1alpha1.integrations.TransactionSummary
	(*ListIntegrationTemplatesByConfigReq)(nil),    // 60: api.v1alpha1.integrations.ListIntegrationTemplatesByConfigReq
	(*ListIntegrationTemplatesByConfigRes)(nil),    // 61: api.v1alpha1.integrations.ListIntegrationTemplatesByConfigRes
	(*IntegrationTemplateInfo)(nil),                // 62: api.v1alpha1.integrations.IntegrationTemplateInfo
	(*CopyPaymentLinkConfigReq)(nil),               // 63: api.v1alpha1.integrations.CopyPaymentLinkConfigReq
	(*CopyPaymentLinkConfigRes)(nil),               // 64: api.v1alpha1.integrations.CopyPaymentLinkConfigRes
	(*ProfileName)(nil),                            // 65: api.v1alpha1.integrations.ProfileName
	(*PaymentProfiles)(nil),                        // 66: api.v1alpha1.integrations.PaymentProfiles
	(*PaymentProfile)(nil),                         // 67: api.v1alpha1.integrations.PaymentProfile
	(*UnknownField)(nil),                           // 68: api.v1alpha1.integrations.UnknownField
	(*ProvidedField)(nil),                          // 69: api.v1alpha1.integrations.ProvidedField
	(*Values)(nil),                                 // 70: api.v1alpha1.integrations.Values
	(*Value)(nil),                                  // 71: api.v1alpha1.integrations.Value
	(*FieldOrStr)(nil),                             // 72: api.v1alpha1.integrations.FieldOrStr
	(*CompositeVal)(nil),                           // 73: api.v1alpha1.integrations.CompositeVal
	(*Condition)(nil),                              // 74: api.v1alpha1.integrations.Condition
	(*IntegrationConfig)(nil),                      // 75: api.v1alpha1.integrations.IntegrationConfig
	(*IntegrationTransaction)(nil),                 // 76: api.v1alpha1.integrations.IntegrationTransaction
	(*MapString)(nil),                              // 77: api.v1alpha1.integrations.MapString
	(*Conditions)(nil),                             // 78: api.v1alpha1.integrations.Conditions
	(*Task)(nil),                                   // 79: api.v1alpha1.integrations.Task
	(*PortalConfigId)(nil),                         // 80: api.v1alpha1.integrations.PortalConfigId
	(*PortalConfig)(nil),                           // 81: api.v1alpha1.integrations.PortalConfig
	(*PortalLinkId)(nil),                           // 82: api.v1alpha1.integrations.PortalLinkId
	(*PortalLink)(nil),                             // 83: api.v1alpha1.integrations.PortalLink
	(*PortalId)(nil),                               // 84: api.v1alpha1.integrations.PortalId
	(*Portal)(nil),                                 // 85: api.v1alpha1.integrations.Portal
	(*PortalText)(nil),                             // 86: api.v1alpha1.integrations.PortalText
	(*PortalType)(nil),                             // 87: api.v1alpha1.integrations.PortalType
	(*PaymentPortal)(nil),                          // 88: api.v1alpha1.integrations.PaymentPortal
	(*IVRPortal)(nil),                              // 89: api.v1alpha1.integrations.IVRPortal
	(*PluginInstanceId)(nil),                       // 90: api.v1alpha1.integrations.PluginInstanceId
	(*PluginInstance)(nil),                         // 91: api.v1alpha1.integrations.PluginInstance
	(*PortalLinkTransactionRow)(nil),               // 92: api.v1alpha1.integrations.PortalLinkTransactionRow
	(*GetPortalLinksByDateRangeReq)(nil),           // 93: api.v1alpha1.integrations.GetPortalLinksByDateRangeReq
	(*GetPortalLinksByDateRangeRes)(nil),           // 94: api.v1alpha1.integrations.GetPortalLinksByDateRangeRes
	nil,                                            // 95: api.v1alpha1.integrations.ProcessReq.ParamsEntry
	nil,                                            // 96: api.v1alpha1.integrations.ProcessRes.DataEntry
	nil,                                            // 97: api.v1alpha1.integrations.IntegrationInfo.GroupParamsEntry
	nil,                                            // 98: api.v1alpha1.integrations.MethodInfo.RuntimeParamsEntry
	nil,                                            // 99: api.v1alpha1.integrations.IntegrationTransactionReportRow.GroupByValuesEntry
	nil,                                            // 100: api.v1alpha1.integrations.IntegrationTransactionReportRow.RevenueSubtotalsEntry
	nil,                                            // 101: api.v1alpha1.integrations.IntegrationTransactionReportRow.CountMetricsEntry
	nil,                                            // 102: api.v1alpha1.integrations.GetIntegrationTransactionReportDataReq.GroupByEntry
	nil,                                            // 103: api.v1alpha1.integrations.GetIntegrationTransactionReportDataRow.CountMetricsEntry
	nil,                                            // 104: api.v1alpha1.integrations.GetIntegrationTransactionReportDataRow.LinkDataEntry
	nil,                                            // 105: api.v1alpha1.integrations.PaymentLinkConfig.NameMappingEntry
	nil,                                            // 106: api.v1alpha1.integrations.PaymentLinkConfig.BaseDataEntry
	nil,                                            // 107: api.v1alpha1.integrations.Request.StaticDataEntry
	nil,                                            // 108: api.v1alpha1.integrations.Request.RenameResponseKeysEntry
	nil,                                            // 109: api.v1alpha1.integrations.Request.ReassignValidationsEntry
	nil,                                            // 110: api.v1alpha1.integrations.Values.ValuesEntry
	nil,                                            // 111: api.v1alpha1.integrations.MapString.ValuesEntry
	nil,                                            // 112: api.v1alpha1.integrations.Task.ValuesEntry
	nil,                                            // 113: api.v1alpha1.integrations.PortalLink.DataEntry
	nil,                                            // 114: api.v1alpha1.integrations.PortalLink.MetadataEntry
	nil,                                            // 115: api.v1alpha1.integrations.PortalLinkTransactionRow.LinkDataEntry
	(integrations.IntegrationType)(0),              // 116: api.commons.integrations.IntegrationType
	(integrations.RequestMethod)(0),                // 117: api.commons.integrations.RequestMethod
	(integrations.TransactionType)(0),              // 118: api.commons.integrations.TransactionType
	(integrations.ValueType)(0),                    // 119: api.commons.integrations.ValueType
	(integrations.Validation)(0),                   // 120: api.commons.integrations.Validation
	(*timestamppb.Timestamp)(nil),                  // 121: google.protobuf.Timestamp
	(integrations.RequestSource)(0),                // 122: api.commons.integrations.RequestSource
	(integrations.TransactionResult)(0),            // 123: api.commons.integrations.TransactionResult
	(*fieldmaskpb.FieldMask)(nil),                  // 124: google.protobuf.FieldMask
	(integrations.FieldSource)(0),                  // 125: api.commons.integrations.FieldSource
	(integrations.CompareOperation)(0),             // 126: api.commons.integrations.CompareOperation
	(*integrations.VerificationFlow)(nil),          // 127: api.commons.integrations.VerificationFlow
	(*integrations.InvoiceFlow)(nil),               // 128: api.commons.integrations.InvoiceFlow
	(*integrations.PaymentFlow)(nil),               // 129: api.commons.integrations.PaymentFlow
}
var file_api_v1alpha1_integrations_service_proto_depIdxs = []int32{
	75,  // 0: api.v1alpha1.integrations.IntegrationConfigs.values:type_name -> api.v1alpha1.integrations.IntegrationConfig
	116, // 1: api.v1alpha1.integrations.GetIntegrationConfigReq.integration_id:type_name -> api.commons.integrations.IntegrationType
	116, // 2: api.v1alpha1.integrations.UpdateIntegrationConfigReq.integration_id:type_name -> api.commons.integrations.IntegrationType
	70,  // 3: api.v1alpha1.integrations.UpdateIntegrationConfigReq.params:type_name -> api.v1alpha1.integrations.Values
	116, // 4: api.v1alpha1.integrations.DeleteIntegrationConfigReq.integration_id:type_name -> api.commons.integrations.IntegrationType
	116, // 5: api.v1alpha1.integrations.ProcessReq.integration_id:type_name -> api.commons.integrations.IntegrationType
	117, // 6: api.v1alpha1.integrations.ProcessReq.method_id:type_name -> api.commons.integrations.RequestMethod
	95,  // 7: api.v1alpha1.integrations.ProcessReq.params:type_name -> api.v1alpha1.integrations.ProcessReq.ParamsEntry
	74,  // 8: api.v1alpha1.integrations.ProcessReq.conds:type_name -> api.v1alpha1.integrations.Condition
	96,  // 9: api.v1alpha1.integrations.ProcessRes.data:type_name -> api.v1alpha1.integrations.ProcessRes.DataEntry
	9,   // 10: api.v1alpha1.integrations.IntegrationInfos.values:type_name -> api.v1alpha1.integrations.IntegrationInfo
	116, // 11: api.v1alpha1.integrations.IntegrationInfo.integration_id:type_name -> api.commons.integrations.IntegrationType
	10,  // 12: api.v1alpha1.integrations.IntegrationInfo.methods:type_name -> api.v1alpha1.integrations.MethodInfo
	97,  // 13: api.v1alpha1.integrations.IntegrationInfo.group_params:type_name -> api.v1alpha1.integrations.IntegrationInfo.GroupParamsEntry
	117, // 14: api.v1alpha1.integrations.MethodInfo.method_id:type_name -> api.commons.integrations.RequestMethod
	118, // 15: api.v1alpha1.integrations.MethodInfo.tx_type:type_name -> api.commons.integrations.TransactionType
	11,  // 16: api.v1alpha1.integrations.MethodInfo.params:type_name -> api.v1alpha1.integrations.Parameter
	11,  // 17: api.v1alpha1.integrations.MethodInfo.response:type_name -> api.v1alpha1.integrations.Parameter
	98,  // 18: api.v1alpha1.integrations.MethodInfo.runtime_params:type_name -> api.v1alpha1.integrations.MethodInfo.RuntimeParamsEntry
	119, // 19: api.v1alpha1.integrations.Parameter.param_type:type_name -> api.commons.integrations.ValueType
	71,  // 20: api.v1alpha1.integrations.Parameter.default_value:type_name -> api.v1alpha1.integrations.Value
	120, // 21: api.v1alpha1.integrations.Parameter.validation:type_name -> api.commons.integrations.Validation
	121, // 22: api.v1alpha1.integrations.GetAggregatedMetadataReq.start:type_name -> google.protobuf.Timestamp
	121, // 23: api.v1alpha1.integrations.GetAggregatedMetadataReq.end:type_name -> google.protobuf.Timestamp
	117, // 24: api.v1alpha1.integrations.GetAggregatedMetadataReq.method_id:type_name -> api.commons.integrations.RequestMethod
	121, // 25: api.v1alpha1.integrations.GetIntegrationTransactionReportReq.start:type_name -> google.protobuf.Timestamp
	121, // 26: api.v1alpha1.integrations.GetIntegrationTransactionReportReq.end:type_name -> google.protobuf.Timestamp
	116, // 27: api.v1alpha1.integrations.IntegrationTransactionReportRow.integration_id:type_name -> api.commons.integrations.IntegrationType
	117, // 28: api.v1alpha1.integrations.IntegrationTransactionReportRow.method_id:type_name -> api.commons.integrations.RequestMethod
	118, // 29: api.v1alpha1.integrations.IntegrationTransactionReportRow.transaction_type:type_name -> api.commons.integrations.TransactionType
	122, // 30: api.v1alpha1.integrations.IntegrationTransactionReportRow.request_source:type_name -> api.commons.integrations.RequestSource
	99,  // 31: api.v1alpha1.integrations.IntegrationTransactionReportRow.group_by_values:type_name -> api.v1alpha1.integrations.IntegrationTransactionReportRow.GroupByValuesEntry
	100, // 32: api.v1alpha1.integrations.IntegrationTransactionReportRow.revenue_subtotals:type_name -> api.v1alpha1.integrations.IntegrationTransactionReportRow.RevenueSubtotalsEntry
	101, // 33: api.v1alpha1.integrations.IntegrationTransactionReportRow.count_metrics:type_name -> api.v1alpha1.integrations.IntegrationTransactionReportRow.CountMetricsEntry
	17,  // 34: api.v1alpha1.integrations.GetIntegrationTransactionReportRes.values:type_name -> api.v1alpha1.integrations.IntegrationTransactionReportRow
	121, // 35: api.v1alpha1.integrations.GetIntegrationTransactionReportDataReq.start:type_name -> google.protobuf.Timestamp
	121, // 36: api.v1alpha1.integrations.GetIntegrationTransactionReportDataReq.end:type_name -> google.protobuf.Timestamp
	102, // 37: api.v1alpha1.integrations.GetIntegrationTransactionReportDataReq.group_by:type_name -> api.v1alpha1.integrations.GetIntegrationTransactionReportDataReq.GroupByEntry
	116, // 38: api.v1alpha1.integrations.GetIntegrationTransactionReportDataReq.integration_id:type_name -> api.commons.integrations.IntegrationType
	103, // 39: api.v1alpha1.integrations.GetIntegrationTransactionReportDataRow.count_metrics:type_name -> api.v1alpha1.integrations.GetIntegrationTransactionReportDataRow.CountMetricsEntry
	104, // 40: api.v1alpha1.integrations.GetIntegrationTransactionReportDataRow.link_data:type_name -> api.v1alpha1.integrations.GetIntegrationTransactionReportDataRow.LinkDataEntry
	121, // 41: api.v1alpha1.integrations.GetIntegrationTransactionReportDataRow.date:type_name -> google.protobuf.Timestamp
	20,  // 42: api.v1alpha1.integrations.GetIntegrationTransactionReportDataRes.entities:type_name -> api.v1alpha1.integrations.GetIntegrationTransactionReportDataRow
	121, // 43: api.v1alpha1.integrations.SearchIntegrationTransactionsReq.start_date:type_name -> google.protobuf.Timestamp
	121, // 44: api.v1alpha1.integrations.SearchIntegrationTransactionsReq.end_date:type_name -> google.protobuf.Timestamp
	24,  // 45: api.v1alpha1.integrations.SearchIntegrationTransactionsReq.integration_type:type_name -> api.v1alpha1.integrations.IntegrationType
	25,  // 46: api.v1alpha1.integrations.SearchIntegrationTransactionsReq.request_method:type_name -> api.v1alpha1.integrations.RequestMethod
	26,  // 47: api.v1alpha1.integrations.SearchIntegrationTransactionsReq.transaction_type:type_name -> api.v1alpha1.integrations.TransactionType
	27,  // 48: api.v1alpha1.integrations.SearchIntegrationTransactionsReq.request_source:type_name -> api.v1alpha1.integrations.RequestSource
	28,  // 49: api.v1alpha1.integrations.SearchIntegrationTransactionsReq.result:type_name -> api.v1alpha1.integrations.TransactionResult
	76,  // 50: api.v1alpha1.integrations.SearchIntegrationTransactionsRes.transactions:type_name -> api.v1alpha1.integrations.IntegrationTransaction
	116, // 51: api.v1alpha1.integrations.IntegrationType.integration_id:type_name -> api.commons.integrations.IntegrationType
	117, // 52: api.v1alpha1.integrations.RequestMethod.method_id:type_name -> api.commons.integrations.RequestMethod
	118, // 53: api.v1alpha1.integrations.TransactionType.transaction_type:type_name -> api.commons.integrations.TransactionType
	122, // 54: api.v1alpha1.integrations.RequestSource.request_source:type_name -> api.commons.integrations.RequestSource
	123, // 55: api.v1alpha1.integrations.TransactionResult.result:type_name -> api.commons.integrations.TransactionResult
	116, // 56: api.v1alpha1.integrations.ListIntegrationConfigNamesReq.integration_id:type_name -> api.commons.integrations.IntegrationType
	116, // 57: api.v1alpha1.integrations.ListIntegrationConfigNamesRes.integration_id:type_name -> api.commons.integrations.IntegrationType
	80,  // 58: api.v1alpha1.integrations.ListPortalConfigsReq.entity:type_name -> api.v1alpha1.integrations.PortalConfigId
	124, // 59: api.v1alpha1.integrations.ListPortalConfigsReq.mask:type_name -> google.protobuf.FieldMask
	80,  // 60: api.v1alpha1.integrations.GetPortalConfigReq.entity:type_name -> api.v1alpha1.integrations.PortalConfigId
	124, // 61: api.v1alpha1.integrations.GetPortalConfigReq.mask:type_name -> google.protobuf.FieldMask
	80,  // 62: api.v1alpha1.integrations.DeletePortalConfigReq.entity:type_name -> api.v1alpha1.integrations.PortalConfigId
	124, // 63: api.v1alpha1.integrations.DeletePortalConfigReq.mask:type_name -> google.protobuf.FieldMask
	121, // 64: api.v1alpha1.integrations.RefreshLinkRes.new_expiry:type_name -> google.protobuf.Timestamp
	116, // 65: api.v1alpha1.integrations.PaymentLinkConfig.integration_id:type_name -> api.commons.integrations.IntegrationType
	117, // 66: api.v1alpha1.integrations.PaymentLinkConfig.verification_method_id:type_name -> api.commons.integrations.RequestMethod
	117, // 67: api.v1alpha1.integrations.PaymentLinkConfig.invoice_method_id:type_name -> api.commons.integrations.RequestMethod
	117, // 68: api.v1alpha1.integrations.PaymentLinkConfig.payment_method_id:type_name -> api.commons.integrations.RequestMethod
	105, // 69: api.v1alpha1.integrations.PaymentLinkConfig.name_mapping:type_name -> api.v1alpha1.integrations.PaymentLinkConfig.NameMappingEntry
	121, // 70: api.v1alpha1.integrations.PaymentLinkConfig.created_on:type_name -> google.protobuf.Timestamp
	43,  // 71: api.v1alpha1.integrations.PaymentLinkConfig.verification_request:type_name -> api.v1alpha1.integrations.VerificationRequest
	45,  // 72: api.v1alpha1.integrations.PaymentLinkConfig.invoice_request:type_name -> api.v1alpha1.integrations.InvoiceRequest
	44,  // 73: api.v1alpha1.integrations.PaymentLinkConfig.payment_requests:type_name -> api.v1alpha1.integrations.PaymentRequest
	106, // 74: api.v1alpha1.integrations.PaymentLinkConfig.base_data:type_name -> api.v1alpha1.integrations.PaymentLinkConfig.BaseDataEntry
	42,  // 75: api.v1alpha1.integrations.PaymentLinkConfig.templates:type_name -> api.v1alpha1.integrations.PaymentLinkConfigTemplates
	46,  // 76: api.v1alpha1.integrations.VerificationRequest.verification_requests:type_name -> api.v1alpha1.integrations.Request
	11,  // 77: api.v1alpha1.integrations.VerificationRequest.verification_fields:type_name -> api.v1alpha1.integrations.Parameter
	11,  // 78: api.v1alpha1.integrations.PaymentRequest.payment_fields:type_name -> api.v1alpha1.integrations.Parameter
	46,  // 79: api.v1alpha1.integrations.PaymentRequest.payment_request_payload:type_name -> api.v1alpha1.integrations.Request
	46,  // 80: api.v1alpha1.integrations.PaymentRequest.payment_request:type_name -> api.v1alpha1.integrations.Request
	46,  // 81: api.v1alpha1.integrations.InvoiceRequest.invoice_request_payload:type_name -> api.v1alpha1.integrations.Request
	46,  // 82: api.v1alpha1.integrations.InvoiceRequest.invoice_request:type_name -> api.v1alpha1.integrations.Request
	48,  // 83: api.v1alpha1.integrations.Request.method_call:type_name -> api.v1alpha1.integrations.MethodCall
	107, // 84: api.v1alpha1.integrations.Request.static_data:type_name -> api.v1alpha1.integrations.Request.StaticDataEntry
	108, // 85: api.v1alpha1.integrations.Request.rename_response_keys:type_name -> api.v1alpha1.integrations.Request.RenameResponseKeysEntry
	109, // 86: api.v1alpha1.integrations.Request.reassign_validations:type_name -> api.v1alpha1.integrations.Request.ReassignValidationsEntry
	120, // 87: api.v1alpha1.integrations.Validation.enum:type_name -> api.commons.integrations.Validation
	116, // 88: api.v1alpha1.integrations.MethodCall.integration_id:type_name -> api.commons.integrations.IntegrationType
	117, // 89: api.v1alpha1.integrations.MethodCall.method_id:type_name -> api.commons.integrations.RequestMethod
	81,  // 90: api.v1alpha1.integrations.PortalConfigs.values:type_name -> api.v1alpha1.integrations.PortalConfig
	41,  // 91: api.v1alpha1.integrations.PaymentLinkConfigs.values:type_name -> api.v1alpha1.integrations.PaymentLinkConfig
	121, // 92: api.v1alpha1.integrations.CreatePaymentPortalLinksReq.expiry:type_name -> google.protobuf.Timestamp
	79,  // 93: api.v1alpha1.integrations.CreatePaymentPortalLinksReq.user_data:type_name -> api.v1alpha1.integrations.Task
	57,  // 94: api.v1alpha1.integrations.SummaryRes.year_summary:type_name -> api.v1alpha1.integrations.CalendarSummary
	57,  // 95: api.v1alpha1.integrations.SummaryRes.month_summaries:type_name -> api.v1alpha1.integrations.CalendarSummary
	57,  // 96: api.v1alpha1.integrations.SummaryRes.week_summaries:type_name -> api.v1alpha1.integrations.CalendarSummary
	59,  // 97: api.v1alpha1.integrations.CalendarSummary.summary:type_name -> api.v1alpha1.integrations.TransactionSummary
	58,  // 98: api.v1alpha1.integrations.CalendarSummary.type_summaries:type_name -> api.v1alpha1.integrations.IntegrationTypeSummary
	116, // 99: api.v1alpha1.integrations.IntegrationTypeSummary.integration_type:type_name -> api.commons.integrations.IntegrationType
	59,  // 100: api.v1alpha1.integrations.IntegrationTypeSummary.integration_summary:type_name -> api.v1alpha1.integrations.TransactionSummary
	62,  // 101: api.v1alpha1.integrations.ListIntegrationTemplatesByConfigRes.integration_templates:type_name -> api.v1alpha1.integrations.IntegrationTemplateInfo
	67,  // 102: api.v1alpha1.integrations.PaymentProfiles.values:type_name -> api.v1alpha1.integrations.PaymentProfile
	125, // 103: api.v1alpha1.integrations.UnknownField.potential_sources:type_name -> api.commons.integrations.FieldSource
	69,  // 104: api.v1alpha1.integrations.UnknownField.suggested_fields:type_name -> api.v1alpha1.integrations.ProvidedField
	125, // 105: api.v1alpha1.integrations.ProvidedField.provided_by:type_name -> api.commons.integrations.FieldSource
	110, // 106: api.v1alpha1.integrations.Values.values:type_name -> api.v1alpha1.integrations.Values.ValuesEntry
	121, // 107: api.v1alpha1.integrations.Value.time_val:type_name -> google.protobuf.Timestamp
	73,  // 108: api.v1alpha1.integrations.Value.comp_val:type_name -> api.v1alpha1.integrations.CompositeVal
	120, // 109: api.v1alpha1.integrations.Value.validation:type_name -> api.commons.integrations.Validation
	72,  // 110: api.v1alpha1.integrations.CompositeVal.parts:type_name -> api.v1alpha1.integrations.FieldOrStr
	126, // 111: api.v1alpha1.integrations.Condition.op:type_name -> api.commons.integrations.CompareOperation
	71,  // 112: api.v1alpha1.integrations.Condition.value:type_name -> api.v1alpha1.integrations.Value
	116, // 113: api.v1alpha1.integrations.IntegrationConfig.integration_id:type_name -> api.commons.integrations.IntegrationType
	70,  // 114: api.v1alpha1.integrations.IntegrationConfig.params:type_name -> api.v1alpha1.integrations.Values
	121, // 115: api.v1alpha1.integrations.IntegrationConfig.created_on:type_name -> google.protobuf.Timestamp
	77,  // 116: api.v1alpha1.integrations.IntegrationConfig.alias:type_name -> api.v1alpha1.integrations.MapString
	78,  // 117: api.v1alpha1.integrations.IntegrationConfig.conds:type_name -> api.v1alpha1.integrations.Conditions
	117, // 118: api.v1alpha1.integrations.IntegrationConfig.method_id:type_name -> api.commons.integrations.RequestMethod
	116, // 119: api.v1alpha1.integrations.IntegrationTransaction.integration_id:type_name -> api.commons.integrations.IntegrationType
	117, // 120: api.v1alpha1.integrations.IntegrationTransaction.method_id:type_name -> api.commons.integrations.RequestMethod
	118, // 121: api.v1alpha1.integrations.IntegrationTransaction.transaction_type:type_name -> api.commons.integrations.TransactionType
	122, // 122: api.v1alpha1.integrations.IntegrationTransaction.request_source:type_name -> api.commons.integrations.RequestSource
	123, // 123: api.v1alpha1.integrations.IntegrationTransaction.result:type_name -> api.commons.integrations.TransactionResult
	70,  // 124: api.v1alpha1.integrations.IntegrationTransaction.request_data:type_name -> api.v1alpha1.integrations.Values
	70,  // 125: api.v1alpha1.integrations.IntegrationTransaction.response_data:type_name -> api.v1alpha1.integrations.Values
	121, // 126: api.v1alpha1.integrations.IntegrationTransaction.created_on:type_name -> google.protobuf.Timestamp
	78,  // 127: api.v1alpha1.integrations.IntegrationTransaction.conds:type_name -> api.v1alpha1.integrations.Conditions
	111, // 128: api.v1alpha1.integrations.MapString.values:type_name -> api.v1alpha1.integrations.MapString.ValuesEntry
	74,  // 129: api.v1alpha1.integrations.Conditions.values:type_name -> api.v1alpha1.integrations.Condition
	112, // 130: api.v1alpha1.integrations.Task.values:type_name -> api.v1alpha1.integrations.Task.ValuesEntry
	122, // 131: api.v1alpha1.integrations.Task.src:type_name -> api.commons.integrations.RequestSource
	113, // 132: api.v1alpha1.integrations.PortalLink.data:type_name -> api.v1alpha1.integrations.PortalLink.DataEntry
	114, // 133: api.v1alpha1.integrations.PortalLink.metadata:type_name -> api.v1alpha1.integrations.PortalLink.MetadataEntry
	121, // 134: api.v1alpha1.integrations.PortalLink.last_edited:type_name -> google.protobuf.Timestamp
	87,  // 135: api.v1alpha1.integrations.Portal.ptype:type_name -> api.v1alpha1.integrations.PortalType
	121, // 136: api.v1alpha1.integrations.Portal.last_edited:type_name -> google.protobuf.Timestamp
	88,  // 137: api.v1alpha1.integrations.PortalType.payment_portal:type_name -> api.v1alpha1.integrations.PaymentPortal
	89,  // 138: api.v1alpha1.integrations.PortalType.ivr_portal:type_name -> api.v1alpha1.integrations.IVRPortal
	127, // 139: api.v1alpha1.integrations.PaymentPortal.verification:type_name -> api.commons.integrations.VerificationFlow
	128, // 140: api.v1alpha1.integrations.PaymentPortal.invoice:type_name -> api.commons.integrations.InvoiceFlow
	129, // 141: api.v1alpha1.integrations.PaymentPortal.payments:type_name -> api.commons.integrations.PaymentFlow
	86,  // 142: api.v1alpha1.integrations.PaymentPortal.portal_text:type_name -> api.v1alpha1.integrations.PortalText
	70,  // 143: api.v1alpha1.integrations.PluginInstance.data:type_name -> api.v1alpha1.integrations.Values
	70,  // 144: api.v1alpha1.integrations.PluginInstance.metadata:type_name -> api.v1alpha1.integrations.Values
	121, // 145: api.v1alpha1.integrations.PluginInstance.last_edited:type_name -> google.protobuf.Timestamp
	117, // 146: api.v1alpha1.integrations.PluginInstance.method_id:type_name -> api.commons.integrations.RequestMethod
	121, // 147: api.v1alpha1.integrations.PortalLinkTransactionRow.date:type_name -> google.protobuf.Timestamp
	115, // 148: api.v1alpha1.integrations.PortalLinkTransactionRow.link_data:type_name -> api.v1alpha1.integrations.PortalLinkTransactionRow.LinkDataEntry
	121, // 149: api.v1alpha1.integrations.GetPortalLinksByDateRangeReq.start:type_name -> google.protobuf.Timestamp
	121, // 150: api.v1alpha1.integrations.GetPortalLinksByDateRangeReq.end:type_name -> google.protobuf.Timestamp
	117, // 151: api.v1alpha1.integrations.GetPortalLinksByDateRangeReq.method_id:type_name -> api.commons.integrations.RequestMethod
	92,  // 152: api.v1alpha1.integrations.GetPortalLinksByDateRangeRes.rows:type_name -> api.v1alpha1.integrations.PortalLinkTransactionRow
	71,  // 153: api.v1alpha1.integrations.ProcessReq.ParamsEntry.value:type_name -> api.v1alpha1.integrations.Value
	71,  // 154: api.v1alpha1.integrations.ProcessRes.DataEntry.value:type_name -> api.v1alpha1.integrations.Value
	11,  // 155: api.v1alpha1.integrations.IntegrationInfo.GroupParamsEntry.value:type_name -> api.v1alpha1.integrations.Parameter
	11,  // 156: api.v1alpha1.integrations.MethodInfo.RuntimeParamsEntry.value:type_name -> api.v1alpha1.integrations.Parameter
	71,  // 157: api.v1alpha1.integrations.PaymentLinkConfig.BaseDataEntry.value:type_name -> api.v1alpha1.integrations.Value
	71,  // 158: api.v1alpha1.integrations.Request.StaticDataEntry.value:type_name -> api.v1alpha1.integrations.Value
	47,  // 159: api.v1alpha1.integrations.Request.ReassignValidationsEntry.value:type_name -> api.v1alpha1.integrations.Validation
	71,  // 160: api.v1alpha1.integrations.Values.ValuesEntry.value:type_name -> api.v1alpha1.integrations.Value
	71,  // 161: api.v1alpha1.integrations.Task.ValuesEntry.value:type_name -> api.v1alpha1.integrations.Value
	71,  // 162: api.v1alpha1.integrations.PortalLink.DataEntry.value:type_name -> api.v1alpha1.integrations.Value
	71,  // 163: api.v1alpha1.integrations.PortalLink.MetadataEntry.value:type_name -> api.v1alpha1.integrations.Value
	71,  // 164: api.v1alpha1.integrations.PortalLinkTransactionRow.LinkDataEntry.value:type_name -> api.v1alpha1.integrations.Value
	6,   // 165: api.v1alpha1.integrations.Integrations.Process:input_type -> api.v1alpha1.integrations.ProcessReq
	13,  // 166: api.v1alpha1.integrations.Integrations.GetIntegrationTransaction:input_type -> api.v1alpha1.integrations.GetIntegrationTransactionReq
	16,  // 167: api.v1alpha1.integrations.Integrations.GetIntegrationTransactionReport:input_type -> api.v1alpha1.integrations.GetIntegrationTransactionReportReq
	19,  // 168: api.v1alpha1.integrations.Integrations.GetIntegrationTransactionReportData:input_type -> api.v1alpha1.integrations.GetIntegrationTransactionReportDataReq
	14,  // 169: api.v1alpha1.integrations.Integrations.GetAggregatedMetadata:input_type -> api.v1alpha1.integrations.GetAggregatedMetadataReq
	93,  // 170: api.v1alpha1.integrations.Integrations.GetPortalLinksByDateRange:input_type -> api.v1alpha1.integrations.GetPortalLinksByDateRangeReq
	75,  // 171: api.v1alpha1.integrations.Integrations.CreateIntegrationConfig:input_type -> api.v1alpha1.integrations.IntegrationConfig
	3,   // 172: api.v1alpha1.integrations.Integrations.GetIntegrationConfig:input_type -> api.v1alpha1.integrations.GetIntegrationConfigReq
	4,   // 173: api.v1alpha1.integrations.Integrations.UpdateIntegrationConfig:input_type -> api.v1alpha1.integrations.UpdateIntegrationConfigReq
	5,   // 174: api.v1alpha1.integrations.Integrations.DeleteIntegrationConfig:input_type -> api.v1alpha1.integrations.DeleteIntegrationConfigReq
	12,  // 175: api.v1alpha1.integrations.Integrations.ListIntegrations:input_type -> api.v1alpha1.integrations.Empty
	29,  // 176: api.v1alpha1.integrations.Integrations.ListIntegrationConfigNames:input_type -> api.v1alpha1.integrations.ListIntegrationConfigNamesReq
	0,   // 177: api.v1alpha1.integrations.Integrations.ListJourneyConfigs:input_type -> api.v1alpha1.integrations.ListJourneyConfigsReq
	1,   // 178: api.v1alpha1.integrations.Integrations.ListNonJourneyConfigs:input_type -> api.v1alpha1.integrations.ListNonJourneyConfigsReq
	81,  // 179: api.v1alpha1.integrations.Integrations.CreatePortalConfig:input_type -> api.v1alpha1.integrations.PortalConfig
	34,  // 180: api.v1alpha1.integrations.Integrations.ListPortalConfigs:input_type -> api.v1alpha1.integrations.ListPortalConfigsReq
	81,  // 181: api.v1alpha1.integrations.Integrations.UpdatePortalConfig:input_type -> api.v1alpha1.integrations.PortalConfig
	35,  // 182: api.v1alpha1.integrations.Integrations.GetPortalConfig:input_type -> api.v1alpha1.integrations.GetPortalConfigReq
	36,  // 183: api.v1alpha1.integrations.Integrations.DeletePortalConfig:input_type -> api.v1alpha1.integrations.DeletePortalConfigReq
	37,  // 184: api.v1alpha1.integrations.Integrations.UpdatePortalLogo:input_type -> api.v1alpha1.integrations.UpdatePortalLogoReq
	38,  // 185: api.v1alpha1.integrations.Integrations.GetPortalLogo:input_type -> api.v1alpha1.integrations.GetPortalLogoReq
	53,  // 186: api.v1alpha1.integrations.Integrations.CreatePaymentPortalLinks:input_type -> api.v1alpha1.integrations.CreatePaymentPortalLinksReq
	55,  // 187: api.v1alpha1.integrations.Integrations.Summary:input_type -> api.v1alpha1.integrations.SummaryReq
	60,  // 188: api.v1alpha1.integrations.Integrations.ListIntegrationTemplatesByConfig:input_type -> api.v1alpha1.integrations.ListIntegrationTemplatesByConfigReq
	7,   // 189: api.v1alpha1.integrations.Integrations.Process:output_type -> api.v1alpha1.integrations.ProcessRes
	76,  // 190: api.v1alpha1.integrations.Integrations.GetIntegrationTransaction:output_type -> api.v1alpha1.integrations.IntegrationTransaction
	18,  // 191: api.v1alpha1.integrations.Integrations.GetIntegrationTransactionReport:output_type -> api.v1alpha1.integrations.GetIntegrationTransactionReportRes
	21,  // 192: api.v1alpha1.integrations.Integrations.GetIntegrationTransactionReportData:output_type -> api.v1alpha1.integrations.GetIntegrationTransactionReportDataRes
	15,  // 193: api.v1alpha1.integrations.Integrations.GetAggregatedMetadata:output_type -> api.v1alpha1.integrations.GetAggregatedMetadataRes
	94,  // 194: api.v1alpha1.integrations.Integrations.GetPortalLinksByDateRange:output_type -> api.v1alpha1.integrations.GetPortalLinksByDateRangeRes
	12,  // 195: api.v1alpha1.integrations.Integrations.CreateIntegrationConfig:output_type -> api.v1alpha1.integrations.Empty
	75,  // 196: api.v1alpha1.integrations.Integrations.GetIntegrationConfig:output_type -> api.v1alpha1.integrations.IntegrationConfig
	12,  // 197: api.v1alpha1.integrations.Integrations.UpdateIntegrationConfig:output_type -> api.v1alpha1.integrations.Empty
	12,  // 198: api.v1alpha1.integrations.Integrations.DeleteIntegrationConfig:output_type -> api.v1alpha1.integrations.Empty
	8,   // 199: api.v1alpha1.integrations.Integrations.ListIntegrations:output_type -> api.v1alpha1.integrations.IntegrationInfos
	30,  // 200: api.v1alpha1.integrations.Integrations.ListIntegrationConfigNames:output_type -> api.v1alpha1.integrations.ListIntegrationConfigNamesRes
	2,   // 201: api.v1alpha1.integrations.Integrations.ListJourneyConfigs:output_type -> api.v1alpha1.integrations.IntegrationConfigs
	2,   // 202: api.v1alpha1.integrations.Integrations.ListNonJourneyConfigs:output_type -> api.v1alpha1.integrations.IntegrationConfigs
	12,  // 203: api.v1alpha1.integrations.Integrations.CreatePortalConfig:output_type -> api.v1alpha1.integrations.Empty
	49,  // 204: api.v1alpha1.integrations.Integrations.ListPortalConfigs:output_type -> api.v1alpha1.integrations.PortalConfigs
	12,  // 205: api.v1alpha1.integrations.Integrations.UpdatePortalConfig:output_type -> api.v1alpha1.integrations.Empty
	81,  // 206: api.v1alpha1.integrations.Integrations.GetPortalConfig:output_type -> api.v1alpha1.integrations.PortalConfig
	12,  // 207: api.v1alpha1.integrations.Integrations.DeletePortalConfig:output_type -> api.v1alpha1.integrations.Empty
	12,  // 208: api.v1alpha1.integrations.Integrations.UpdatePortalLogo:output_type -> api.v1alpha1.integrations.Empty
	33,  // 209: api.v1alpha1.integrations.Integrations.GetPortalLogo:output_type -> api.v1alpha1.integrations.Logo
	54,  // 210: api.v1alpha1.integrations.Integrations.CreatePaymentPortalLinks:output_type -> api.v1alpha1.integrations.CreatePaymentPortalLinksRes
	56,  // 211: api.v1alpha1.integrations.Integrations.Summary:output_type -> api.v1alpha1.integrations.SummaryRes
	61,  // 212: api.v1alpha1.integrations.Integrations.ListIntegrationTemplatesByConfig:output_type -> api.v1alpha1.integrations.ListIntegrationTemplatesByConfigRes
	189, // [189:213] is the sub-list for method output_type
	165, // [165:189] is the sub-list for method input_type
	165, // [165:165] is the sub-list for extension type_name
	165, // [165:165] is the sub-list for extension extendee
	0,   // [0:165] is the sub-list for field type_name
}

func init() { file_api_v1alpha1_integrations_service_proto_init() }
func file_api_v1alpha1_integrations_service_proto_init() {
	if File_api_v1alpha1_integrations_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_v1alpha1_integrations_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListJourneyConfigsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNonJourneyConfigsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntegrationConfigs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIntegrationConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateIntegrationConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteIntegrationConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntegrationInfos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntegrationInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MethodInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Parameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIntegrationTransactionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAggregatedMetadataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAggregatedMetadataRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIntegrationTransactionReportReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntegrationTransactionReportRow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIntegrationTransactionReportRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIntegrationTransactionReportDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIntegrationTransactionReportDataRow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIntegrationTransactionReportDataRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchIntegrationTransactionsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchIntegrationTransactionsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntegrationType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestMethod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListIntegrationConfigNamesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListIntegrationConfigNamesRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPaymentLinkConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePaymentLinkConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Logo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPortalConfigsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPortalConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePortalConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePortalLogoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPortalLogoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshLinkReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshLinkRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentLinkConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentLinkConfigTemplates); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvoiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Validation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MethodCall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortalConfigs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPaymentLinkConfigsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentLinkConfigs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLinksReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePaymentPortalLinksReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePaymentPortalLinksRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SummaryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SummaryRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalendarSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntegrationTypeSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListIntegrationTemplatesByConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListIntegrationTemplatesByConfigRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntegrationTemplateInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CopyPaymentLinkConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CopyPaymentLinkConfigRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentProfiles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnknownField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProvidedField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Values); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Value); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldOrStr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompositeVal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Condition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntegrationConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntegrationTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapString); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Conditions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortalConfigId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortalConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortalLinkId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortalLink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortalId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Portal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortalText); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortalType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentPortal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IVRPortal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginInstanceId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortalLinkTransactionRow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPortalLinksByDateRangeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_integrations_service_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPortalLinksByDateRangeRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_v1alpha1_integrations_service_proto_msgTypes[46].OneofWrappers = []interface{}{
		(*Request_JourneyCollectionId)(nil),
		(*Request_MethodCall)(nil),
		(*Request_ConfigId)(nil),
	}
	file_api_v1alpha1_integrations_service_proto_msgTypes[71].OneofWrappers = []interface{}{
		(*Value_StrVal)(nil),
		(*Value_NumVal)(nil),
		(*Value_BoolVal)(nil),
		(*Value_TimeVal)(nil),
		(*Value_CompVal)(nil),
		(*Value_IntVal)(nil),
	}
	file_api_v1alpha1_integrations_service_proto_msgTypes[72].OneofWrappers = []interface{}{
		(*FieldOrStr_Field)(nil),
		(*FieldOrStr_StrVal)(nil),
	}
	file_api_v1alpha1_integrations_service_proto_msgTypes[87].OneofWrappers = []interface{}{
		(*PortalType_PaymentPortal)(nil),
		(*PortalType_IvrPortal)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v1alpha1_integrations_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   116,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v1alpha1_integrations_service_proto_goTypes,
		DependencyIndexes: file_api_v1alpha1_integrations_service_proto_depIdxs,
		MessageInfos:      file_api_v1alpha1_integrations_service_proto_msgTypes,
	}.Build()
	File_api_v1alpha1_integrations_service_proto = out.File
	file_api_v1alpha1_integrations_service_proto_rawDesc = nil
	file_api_v1alpha1_integrations_service_proto_goTypes = nil
	file_api_v1alpha1_integrations_service_proto_depIdxs = nil
}
