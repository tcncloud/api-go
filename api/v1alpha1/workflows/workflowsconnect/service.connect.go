// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: api/v1alpha1/workflows/service.proto

package workflowsconnect

import (
	context "context"
	errors "errors"
	connect_go "github.com/bufbuild/connect-go"
	workflows "github.com/tcncloud/api-go/api/v1alpha1/workflows"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect_go.IsAtLeastVersion0_1_0

const (
	// WorkflowsDefinitionServiceName is the fully-qualified name of the WorkflowsDefinitionService
	// service.
	WorkflowsDefinitionServiceName = "api.v1alpha1.workflows.WorkflowsDefinitionService"
)

// These constants are the fully-qualified names of the RPCs defined in this package. They're
// exposed at runtime as Spec.Procedure and as the final two segments of the HTTP route.
//
// Note that these are different from the fully-qualified method names used by
// google.golang.org/protobuf/reflect/protoreflect. To convert from these constants to
// reflection-formatted method names, remove the leading slash and convert the remaining slash to a
// period.
const (
	// WorkflowsDefinitionServiceListFlowDefinitionsProcedure is the fully-qualified name of the
	// WorkflowsDefinitionService's ListFlowDefinitions RPC.
	WorkflowsDefinitionServiceListFlowDefinitionsProcedure = "/api.v1alpha1.workflows.WorkflowsDefinitionService/ListFlowDefinitions"
	// WorkflowsDefinitionServiceSaveFlowDefinitionProcedure is the fully-qualified name of the
	// WorkflowsDefinitionService's SaveFlowDefinition RPC.
	WorkflowsDefinitionServiceSaveFlowDefinitionProcedure = "/api.v1alpha1.workflows.WorkflowsDefinitionService/SaveFlowDefinition"
	// WorkflowsDefinitionServiceGetFlowDefinitionProcedure is the fully-qualified name of the
	// WorkflowsDefinitionService's GetFlowDefinition RPC.
	WorkflowsDefinitionServiceGetFlowDefinitionProcedure = "/api.v1alpha1.workflows.WorkflowsDefinitionService/GetFlowDefinition"
	// WorkflowsDefinitionServiceDeleteFlowDefinitionProcedure is the fully-qualified name of the
	// WorkflowsDefinitionService's DeleteFlowDefinition RPC.
	WorkflowsDefinitionServiceDeleteFlowDefinitionProcedure = "/api.v1alpha1.workflows.WorkflowsDefinitionService/DeleteFlowDefinition"
)

// WorkflowsDefinitionServiceClient is a client for the
// api.v1alpha1.workflows.WorkflowsDefinitionService service.
type WorkflowsDefinitionServiceClient interface {
	// ListFlowDefinitions lists flow definitions
	ListFlowDefinitions(context.Context, *connect_go.Request[workflows.ListFlowDefinitionsRequest]) (*connect_go.Response[workflows.ListFlowDefinitionsResponse], error)
	// SaveFlowDefinition creates or updates a flow definition
	SaveFlowDefinition(context.Context, *connect_go.Request[workflows.SaveFlowDefinitionRequest]) (*connect_go.Response[workflows.SaveFlowDefinitionResponse], error)
	// GetFlowDefinition gets a flow definition
	GetFlowDefinition(context.Context, *connect_go.Request[workflows.GetFlowDefinitionRequest]) (*connect_go.Response[workflows.GetFlowDefinitionResponse], error)
	// DeleteFlowDefinition deletes a flow definition
	DeleteFlowDefinition(context.Context, *connect_go.Request[workflows.DeleteFlowDefinitionRequest]) (*connect_go.Response[workflows.DeleteFlowDefinitionResponse], error)
}

// NewWorkflowsDefinitionServiceClient constructs a client for the
// api.v1alpha1.workflows.WorkflowsDefinitionService service. By default, it uses the Connect
// protocol with the binary Protobuf Codec, asks for gzipped responses, and sends uncompressed
// requests. To use the gRPC or gRPC-Web protocols, supply the connect.WithGRPC() or
// connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewWorkflowsDefinitionServiceClient(httpClient connect_go.HTTPClient, baseURL string, opts ...connect_go.ClientOption) WorkflowsDefinitionServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	return &workflowsDefinitionServiceClient{
		listFlowDefinitions: connect_go.NewClient[workflows.ListFlowDefinitionsRequest, workflows.ListFlowDefinitionsResponse](
			httpClient,
			baseURL+WorkflowsDefinitionServiceListFlowDefinitionsProcedure,
			opts...,
		),
		saveFlowDefinition: connect_go.NewClient[workflows.SaveFlowDefinitionRequest, workflows.SaveFlowDefinitionResponse](
			httpClient,
			baseURL+WorkflowsDefinitionServiceSaveFlowDefinitionProcedure,
			opts...,
		),
		getFlowDefinition: connect_go.NewClient[workflows.GetFlowDefinitionRequest, workflows.GetFlowDefinitionResponse](
			httpClient,
			baseURL+WorkflowsDefinitionServiceGetFlowDefinitionProcedure,
			opts...,
		),
		deleteFlowDefinition: connect_go.NewClient[workflows.DeleteFlowDefinitionRequest, workflows.DeleteFlowDefinitionResponse](
			httpClient,
			baseURL+WorkflowsDefinitionServiceDeleteFlowDefinitionProcedure,
			opts...,
		),
	}
}

// workflowsDefinitionServiceClient implements WorkflowsDefinitionServiceClient.
type workflowsDefinitionServiceClient struct {
	listFlowDefinitions  *connect_go.Client[workflows.ListFlowDefinitionsRequest, workflows.ListFlowDefinitionsResponse]
	saveFlowDefinition   *connect_go.Client[workflows.SaveFlowDefinitionRequest, workflows.SaveFlowDefinitionResponse]
	getFlowDefinition    *connect_go.Client[workflows.GetFlowDefinitionRequest, workflows.GetFlowDefinitionResponse]
	deleteFlowDefinition *connect_go.Client[workflows.DeleteFlowDefinitionRequest, workflows.DeleteFlowDefinitionResponse]
}

// ListFlowDefinitions calls api.v1alpha1.workflows.WorkflowsDefinitionService.ListFlowDefinitions.
func (c *workflowsDefinitionServiceClient) ListFlowDefinitions(ctx context.Context, req *connect_go.Request[workflows.ListFlowDefinitionsRequest]) (*connect_go.Response[workflows.ListFlowDefinitionsResponse], error) {
	return c.listFlowDefinitions.CallUnary(ctx, req)
}

// SaveFlowDefinition calls api.v1alpha1.workflows.WorkflowsDefinitionService.SaveFlowDefinition.
func (c *workflowsDefinitionServiceClient) SaveFlowDefinition(ctx context.Context, req *connect_go.Request[workflows.SaveFlowDefinitionRequest]) (*connect_go.Response[workflows.SaveFlowDefinitionResponse], error) {
	return c.saveFlowDefinition.CallUnary(ctx, req)
}

// GetFlowDefinition calls api.v1alpha1.workflows.WorkflowsDefinitionService.GetFlowDefinition.
func (c *workflowsDefinitionServiceClient) GetFlowDefinition(ctx context.Context, req *connect_go.Request[workflows.GetFlowDefinitionRequest]) (*connect_go.Response[workflows.GetFlowDefinitionResponse], error) {
	return c.getFlowDefinition.CallUnary(ctx, req)
}

// DeleteFlowDefinition calls
// api.v1alpha1.workflows.WorkflowsDefinitionService.DeleteFlowDefinition.
func (c *workflowsDefinitionServiceClient) DeleteFlowDefinition(ctx context.Context, req *connect_go.Request[workflows.DeleteFlowDefinitionRequest]) (*connect_go.Response[workflows.DeleteFlowDefinitionResponse], error) {
	return c.deleteFlowDefinition.CallUnary(ctx, req)
}

// WorkflowsDefinitionServiceHandler is an implementation of the
// api.v1alpha1.workflows.WorkflowsDefinitionService service.
type WorkflowsDefinitionServiceHandler interface {
	// ListFlowDefinitions lists flow definitions
	ListFlowDefinitions(context.Context, *connect_go.Request[workflows.ListFlowDefinitionsRequest]) (*connect_go.Response[workflows.ListFlowDefinitionsResponse], error)
	// SaveFlowDefinition creates or updates a flow definition
	SaveFlowDefinition(context.Context, *connect_go.Request[workflows.SaveFlowDefinitionRequest]) (*connect_go.Response[workflows.SaveFlowDefinitionResponse], error)
	// GetFlowDefinition gets a flow definition
	GetFlowDefinition(context.Context, *connect_go.Request[workflows.GetFlowDefinitionRequest]) (*connect_go.Response[workflows.GetFlowDefinitionResponse], error)
	// DeleteFlowDefinition deletes a flow definition
	DeleteFlowDefinition(context.Context, *connect_go.Request[workflows.DeleteFlowDefinitionRequest]) (*connect_go.Response[workflows.DeleteFlowDefinitionResponse], error)
}

// NewWorkflowsDefinitionServiceHandler builds an HTTP handler from the service implementation. It
// returns the path on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewWorkflowsDefinitionServiceHandler(svc WorkflowsDefinitionServiceHandler, opts ...connect_go.HandlerOption) (string, http.Handler) {
	workflowsDefinitionServiceListFlowDefinitionsHandler := connect_go.NewUnaryHandler(
		WorkflowsDefinitionServiceListFlowDefinitionsProcedure,
		svc.ListFlowDefinitions,
		opts...,
	)
	workflowsDefinitionServiceSaveFlowDefinitionHandler := connect_go.NewUnaryHandler(
		WorkflowsDefinitionServiceSaveFlowDefinitionProcedure,
		svc.SaveFlowDefinition,
		opts...,
	)
	workflowsDefinitionServiceGetFlowDefinitionHandler := connect_go.NewUnaryHandler(
		WorkflowsDefinitionServiceGetFlowDefinitionProcedure,
		svc.GetFlowDefinition,
		opts...,
	)
	workflowsDefinitionServiceDeleteFlowDefinitionHandler := connect_go.NewUnaryHandler(
		WorkflowsDefinitionServiceDeleteFlowDefinitionProcedure,
		svc.DeleteFlowDefinition,
		opts...,
	)
	return "/api.v1alpha1.workflows.WorkflowsDefinitionService/", http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		switch r.URL.Path {
		case WorkflowsDefinitionServiceListFlowDefinitionsProcedure:
			workflowsDefinitionServiceListFlowDefinitionsHandler.ServeHTTP(w, r)
		case WorkflowsDefinitionServiceSaveFlowDefinitionProcedure:
			workflowsDefinitionServiceSaveFlowDefinitionHandler.ServeHTTP(w, r)
		case WorkflowsDefinitionServiceGetFlowDefinitionProcedure:
			workflowsDefinitionServiceGetFlowDefinitionHandler.ServeHTTP(w, r)
		case WorkflowsDefinitionServiceDeleteFlowDefinitionProcedure:
			workflowsDefinitionServiceDeleteFlowDefinitionHandler.ServeHTTP(w, r)
		default:
			http.NotFound(w, r)
		}
	})
}

// UnimplementedWorkflowsDefinitionServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedWorkflowsDefinitionServiceHandler struct{}

func (UnimplementedWorkflowsDefinitionServiceHandler) ListFlowDefinitions(context.Context, *connect_go.Request[workflows.ListFlowDefinitionsRequest]) (*connect_go.Response[workflows.ListFlowDefinitionsResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v1alpha1.workflows.WorkflowsDefinitionService.ListFlowDefinitions is not implemented"))
}

func (UnimplementedWorkflowsDefinitionServiceHandler) SaveFlowDefinition(context.Context, *connect_go.Request[workflows.SaveFlowDefinitionRequest]) (*connect_go.Response[workflows.SaveFlowDefinitionResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v1alpha1.workflows.WorkflowsDefinitionService.SaveFlowDefinition is not implemented"))
}

func (UnimplementedWorkflowsDefinitionServiceHandler) GetFlowDefinition(context.Context, *connect_go.Request[workflows.GetFlowDefinitionRequest]) (*connect_go.Response[workflows.GetFlowDefinitionResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v1alpha1.workflows.WorkflowsDefinitionService.GetFlowDefinition is not implemented"))
}

func (UnimplementedWorkflowsDefinitionServiceHandler) DeleteFlowDefinition(context.Context, *connect_go.Request[workflows.DeleteFlowDefinitionRequest]) (*connect_go.Response[workflows.DeleteFlowDefinitionResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v1alpha1.workflows.WorkflowsDefinitionService.DeleteFlowDefinition is not implemented"))
}
