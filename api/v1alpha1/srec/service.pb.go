// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: api/v1alpha1/srec/service.proto

package srec

import (
	_ "github.com/tcncloud/api-go/annotations"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ListScreenRecordingsRequest is a request for listing screen recordings.
type ListScreenRecordingsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optional. The number of screen recordings to include in a single response. When not
	// provided this defaults to 100.
	PageSize uint32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Optional. The next_page_token returned from a previous List request, if any.
	// When provided all other request fields are ignored.
	PageToken     string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListScreenRecordingsRequest) Reset() {
	*x = ListScreenRecordingsRequest{}
	mi := &file_api_v1alpha1_srec_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListScreenRecordingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListScreenRecordingsRequest) ProtoMessage() {}

func (x *ListScreenRecordingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_srec_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListScreenRecordingsRequest.ProtoReflect.Descriptor instead.
func (*ListScreenRecordingsRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_srec_service_proto_rawDescGZIP(), []int{0}
}

func (x *ListScreenRecordingsRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListScreenRecordingsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

// ListScreenRecordingsResponse is a response for listing screen recordings.
type ListScreenRecordingsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Token to retrieve the next page of screen recordings, or empty if there are no
	// more screen recordings in the list.
	NextPageToken string `protobuf:"bytes,1,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	// List of screen recordings which contains at most one request page_size.
	Recordings    []*ScreenRecording `protobuf:"bytes,2,rep,name=recordings,proto3" json:"recordings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListScreenRecordingsResponse) Reset() {
	*x = ListScreenRecordingsResponse{}
	mi := &file_api_v1alpha1_srec_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListScreenRecordingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListScreenRecordingsResponse) ProtoMessage() {}

func (x *ListScreenRecordingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_srec_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListScreenRecordingsResponse.ProtoReflect.Descriptor instead.
func (*ListScreenRecordingsResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_srec_service_proto_rawDescGZIP(), []int{1}
}

func (x *ListScreenRecordingsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListScreenRecordingsResponse) GetRecordings() []*ScreenRecording {
	if x != nil {
		return x.Recordings
	}
	return nil
}

// ScreenRecording is a resource in the SREC API.
type ScreenRecording struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Output only. The unique id of this screen recording.
	SessionId int64 `protobuf:"varint,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	// Required. The agent first name.
	AgentFirstName string `protobuf:"bytes,3,opt,name=agent_first_name,json=agentFirstName,proto3" json:"agent_first_name,omitempty"`
	// Required. The agent last name.
	AgentLastName string `protobuf:"bytes,4,opt,name=agent_last_name,json=agentLastName,proto3" json:"agent_last_name,omitempty"`
	// Required. Start time is the start time of the screen recording.
	StartTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// Required. Audio time in milliseconds.
	AudioTime uint32 `protobuf:"varint,6,opt,name=audio_time,json=audioTime,proto3" json:"audio_time,omitempty"`
	// Required. Audio bytes of the screen recording.
	AudioBytes    int64 `protobuf:"varint,7,opt,name=audio_bytes,json=audioBytes,proto3" json:"audio_bytes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScreenRecording) Reset() {
	*x = ScreenRecording{}
	mi := &file_api_v1alpha1_srec_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScreenRecording) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScreenRecording) ProtoMessage() {}

func (x *ScreenRecording) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_srec_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScreenRecording.ProtoReflect.Descriptor instead.
func (*ScreenRecording) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_srec_service_proto_rawDescGZIP(), []int{2}
}

func (x *ScreenRecording) GetSessionId() int64 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

func (x *ScreenRecording) GetAgentFirstName() string {
	if x != nil {
		return x.AgentFirstName
	}
	return ""
}

func (x *ScreenRecording) GetAgentLastName() string {
	if x != nil {
		return x.AgentLastName
	}
	return ""
}

func (x *ScreenRecording) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *ScreenRecording) GetAudioTime() uint32 {
	if x != nil {
		return x.AudioTime
	}
	return 0
}

func (x *ScreenRecording) GetAudioBytes() int64 {
	if x != nil {
		return x.AudioBytes
	}
	return 0
}

// GetScreenRecordingURLRequest is a request for getting a screen recording url.
type GetScreenRecordingURLRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The session id of this screen recording. Must be non empty.
	SessionId     int64 `protobuf:"varint,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetScreenRecordingURLRequest) Reset() {
	*x = GetScreenRecordingURLRequest{}
	mi := &file_api_v1alpha1_srec_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetScreenRecordingURLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScreenRecordingURLRequest) ProtoMessage() {}

func (x *GetScreenRecordingURLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_srec_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScreenRecordingURLRequest.ProtoReflect.Descriptor instead.
func (*GetScreenRecordingURLRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_srec_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetScreenRecordingURLRequest) GetSessionId() int64 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

// GetScreenRecordingURLResponse is a response for getting a screen recording url.
type GetScreenRecordingURLResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The url for the screen recording.
	Url           string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetScreenRecordingURLResponse) Reset() {
	*x = GetScreenRecordingURLResponse{}
	mi := &file_api_v1alpha1_srec_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetScreenRecordingURLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScreenRecordingURLResponse) ProtoMessage() {}

func (x *GetScreenRecordingURLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_srec_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScreenRecordingURLResponse.ProtoReflect.Descriptor instead.
func (*GetScreenRecordingURLResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_srec_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetScreenRecordingURLResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// DeleteScreenRecordingRequest is a request for deleting a screen recording.
type DeleteScreenRecordingRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The unique id of the screen recording to be deleted.
	SessionId     int64 `protobuf:"varint,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteScreenRecordingRequest) Reset() {
	*x = DeleteScreenRecordingRequest{}
	mi := &file_api_v1alpha1_srec_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteScreenRecordingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteScreenRecordingRequest) ProtoMessage() {}

func (x *DeleteScreenRecordingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_srec_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteScreenRecordingRequest.ProtoReflect.Descriptor instead.
func (*DeleteScreenRecordingRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_srec_service_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteScreenRecordingRequest) GetSessionId() int64 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

// DeleteScreenRecordingResponse is a response for deleting a screen recording.
type DeleteScreenRecordingResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteScreenRecordingResponse) Reset() {
	*x = DeleteScreenRecordingResponse{}
	mi := &file_api_v1alpha1_srec_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteScreenRecordingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteScreenRecordingResponse) ProtoMessage() {}

func (x *DeleteScreenRecordingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_srec_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteScreenRecordingResponse.ProtoReflect.Descriptor instead.
func (*DeleteScreenRecordingResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_srec_service_proto_rawDescGZIP(), []int{6}
}

var File_api_v1alpha1_srec_service_proto protoreflect.FileDescriptor

const file_api_v1alpha1_srec_service_proto_rawDesc = "" +
	"\n" +
	"\x1fapi/v1alpha1/srec/service.proto\x12\x11api.v1alpha1.srec\x1a\x17annotations/authz.proto\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"Y\n" +
	"\x1bListScreenRecordingsRequest\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\rR\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tR\tpageToken\"\x8a\x01\n" +
	"\x1cListScreenRecordingsResponse\x12&\n" +
	"\x0fnext_page_token\x18\x01 \x01(\tR\rnextPageToken\x12B\n" +
	"\n" +
	"recordings\x18\x02 \x03(\v2\".api.v1alpha1.srec.ScreenRecordingR\n" +
	"recordings\"\xfd\x01\n" +
	"\x0fScreenRecording\x12\x1d\n" +
	"\n" +
	"session_id\x18\x02 \x01(\x03R\tsessionId\x12(\n" +
	"\x10agent_first_name\x18\x03 \x01(\tR\x0eagentFirstName\x12&\n" +
	"\x0fagent_last_name\x18\x04 \x01(\tR\ragentLastName\x129\n" +
	"\n" +
	"start_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x12\x1d\n" +
	"\n" +
	"audio_time\x18\x06 \x01(\rR\taudioTime\x12\x1f\n" +
	"\vaudio_bytes\x18\a \x01(\x03R\n" +
	"audioBytes\"=\n" +
	"\x1cGetScreenRecordingURLRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x02 \x01(\x03R\tsessionId\"1\n" +
	"\x1dGetScreenRecordingURLResponse\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\"=\n" +
	"\x1cDeleteScreenRecordingRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\x03R\tsessionId\"\x1f\n" +
	"\x1dDeleteScreenRecordingResponse2\xc5\x04\n" +
	"\x04Srec\x12\xba\x01\n" +
	"\x14ListScreenRecordings\x12..api.v1alpha1.srec.ListScreenRecordingsRequest\x1a/.api.v1alpha1.srec.ListScreenRecordingsResponse\"A\xba\xb8\x91\x02\x05\n" +
	"\x03\b\xf9\x03\x82\xd3\xe4\x93\x021:\x01*\",/api/v1alpha1/srec/srec/listscreenrecordings\x12\xbe\x01\n" +
	"\x15GetScreenRecordingURL\x12/.api.v1alpha1.srec.GetScreenRecordingURLRequest\x1a0.api.v1alpha1.srec.GetScreenRecordingURLResponse\"B\xba\xb8\x91\x02\x05\n" +
	"\x03\b\xf9\x03\x82\xd3\xe4\x93\x022:\x01*\"-/api/v1alpha1/srec/srec/getscreenrecordingurl\x12\xbe\x01\n" +
	"\x15DeleteScreenRecording\x12/.api.v1alpha1.srec.DeleteScreenRecordingRequest\x1a0.api.v1alpha1.srec.DeleteScreenRecordingResponse\"B\xba\xb8\x91\x02\x05\n" +
	"\x03\b\xfb\x03\x82\xd3\xe4\x93\x022:\x01*\"-/api/v1alpha1/srec/srec/deletescreenrecordingB\xb9\x01\n" +
	"\x15com.api.v1alpha1.srecB\fServiceProtoP\x01Z,github.com/tcncloud/api-go/api/v1alpha1/srec\xa2\x02\x03AVS\xaa\x02\x11Api.V1alpha1.Srec\xca\x02\x11Api\\V1alpha1\\Srec\xe2\x02\x1dApi\\V1alpha1\\Srec\\GPBMetadata\xea\x02\x13Api::V1alpha1::Srecb\x06proto3"

var (
	file_api_v1alpha1_srec_service_proto_rawDescOnce sync.Once
	file_api_v1alpha1_srec_service_proto_rawDescData []byte
)

func file_api_v1alpha1_srec_service_proto_rawDescGZIP() []byte {
	file_api_v1alpha1_srec_service_proto_rawDescOnce.Do(func() {
		file_api_v1alpha1_srec_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_v1alpha1_srec_service_proto_rawDesc), len(file_api_v1alpha1_srec_service_proto_rawDesc)))
	})
	return file_api_v1alpha1_srec_service_proto_rawDescData
}

var file_api_v1alpha1_srec_service_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_api_v1alpha1_srec_service_proto_goTypes = []any{
	(*ListScreenRecordingsRequest)(nil),   // 0: api.v1alpha1.srec.ListScreenRecordingsRequest
	(*ListScreenRecordingsResponse)(nil),  // 1: api.v1alpha1.srec.ListScreenRecordingsResponse
	(*ScreenRecording)(nil),               // 2: api.v1alpha1.srec.ScreenRecording
	(*GetScreenRecordingURLRequest)(nil),  // 3: api.v1alpha1.srec.GetScreenRecordingURLRequest
	(*GetScreenRecordingURLResponse)(nil), // 4: api.v1alpha1.srec.GetScreenRecordingURLResponse
	(*DeleteScreenRecordingRequest)(nil),  // 5: api.v1alpha1.srec.DeleteScreenRecordingRequest
	(*DeleteScreenRecordingResponse)(nil), // 6: api.v1alpha1.srec.DeleteScreenRecordingResponse
	(*timestamppb.Timestamp)(nil),         // 7: google.protobuf.Timestamp
}
var file_api_v1alpha1_srec_service_proto_depIdxs = []int32{
	2, // 0: api.v1alpha1.srec.ListScreenRecordingsResponse.recordings:type_name -> api.v1alpha1.srec.ScreenRecording
	7, // 1: api.v1alpha1.srec.ScreenRecording.start_time:type_name -> google.protobuf.Timestamp
	0, // 2: api.v1alpha1.srec.Srec.ListScreenRecordings:input_type -> api.v1alpha1.srec.ListScreenRecordingsRequest
	3, // 3: api.v1alpha1.srec.Srec.GetScreenRecordingURL:input_type -> api.v1alpha1.srec.GetScreenRecordingURLRequest
	5, // 4: api.v1alpha1.srec.Srec.DeleteScreenRecording:input_type -> api.v1alpha1.srec.DeleteScreenRecordingRequest
	1, // 5: api.v1alpha1.srec.Srec.ListScreenRecordings:output_type -> api.v1alpha1.srec.ListScreenRecordingsResponse
	4, // 6: api.v1alpha1.srec.Srec.GetScreenRecordingURL:output_type -> api.v1alpha1.srec.GetScreenRecordingURLResponse
	6, // 7: api.v1alpha1.srec.Srec.DeleteScreenRecording:output_type -> api.v1alpha1.srec.DeleteScreenRecordingResponse
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_api_v1alpha1_srec_service_proto_init() }
func file_api_v1alpha1_srec_service_proto_init() {
	if File_api_v1alpha1_srec_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_v1alpha1_srec_service_proto_rawDesc), len(file_api_v1alpha1_srec_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v1alpha1_srec_service_proto_goTypes,
		DependencyIndexes: file_api_v1alpha1_srec_service_proto_depIdxs,
		MessageInfos:      file_api_v1alpha1_srec_service_proto_msgTypes,
	}.Build()
	File_api_v1alpha1_srec_service_proto = out.File
	file_api_v1alpha1_srec_service_proto_goTypes = nil
	file_api_v1alpha1_srec_service_proto_depIdxs = nil
}
