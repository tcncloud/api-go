// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        (unknown)
// source: api/v1alpha1/org/labels/entities.proto

package labels

import (
	commons "github.com/tcncloud/api-go/api/commons"
	org "github.com/tcncloud/api-go/api/commons/org"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request message for the CreateLabel rpc.
type CreateLabelRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The label object that will be created
	Label         *org.Label `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateLabelRequest) Reset() {
	*x = CreateLabelRequest{}
	mi := &file_api_v1alpha1_org_labels_entities_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateLabelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLabelRequest) ProtoMessage() {}

func (x *CreateLabelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_org_labels_entities_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLabelRequest.ProtoReflect.Descriptor instead.
func (*CreateLabelRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_org_labels_entities_proto_rawDescGZIP(), []int{0}
}

func (x *CreateLabelRequest) GetLabel() *org.Label {
	if x != nil {
		return x.Label
	}
	return nil
}

// Response message for the CreateLabel rpc.
type CreateLabelResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the created label
	LabelId       string `protobuf:"bytes,1,opt,name=label_id,json=labelId,proto3" json:"label_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateLabelResponse) Reset() {
	*x = CreateLabelResponse{}
	mi := &file_api_v1alpha1_org_labels_entities_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateLabelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLabelResponse) ProtoMessage() {}

func (x *CreateLabelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_org_labels_entities_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLabelResponse.ProtoReflect.Descriptor instead.
func (*CreateLabelResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_org_labels_entities_proto_rawDescGZIP(), []int{1}
}

func (x *CreateLabelResponse) GetLabelId() string {
	if x != nil {
		return x.LabelId
	}
	return ""
}

// Request message for the UpdateLabel rpc.
type UpdateLabelRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The label object that will be updated
	Label *org.Label `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	// The field to be updated
	FieldMask     *fieldmaskpb.FieldMask `protobuf:"bytes,3,opt,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateLabelRequest) Reset() {
	*x = UpdateLabelRequest{}
	mi := &file_api_v1alpha1_org_labels_entities_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateLabelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLabelRequest) ProtoMessage() {}

func (x *UpdateLabelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_org_labels_entities_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLabelRequest.ProtoReflect.Descriptor instead.
func (*UpdateLabelRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_org_labels_entities_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateLabelRequest) GetLabel() *org.Label {
	if x != nil {
		return x.Label
	}
	return nil
}

func (x *UpdateLabelRequest) GetFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

// Response message for the UpdateLabel rpc.
type UpdateLabelResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The updated resource
	Label         *org.Label `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateLabelResponse) Reset() {
	*x = UpdateLabelResponse{}
	mi := &file_api_v1alpha1_org_labels_entities_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateLabelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLabelResponse) ProtoMessage() {}

func (x *UpdateLabelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_org_labels_entities_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLabelResponse.ProtoReflect.Descriptor instead.
func (*UpdateLabelResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_org_labels_entities_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateLabelResponse) GetLabel() *org.Label {
	if x != nil {
		return x.Label
	}
	return nil
}

// Request message for the GetLabel rpc.
type GetLabelRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The label id to get the label
	LabelId       string `protobuf:"bytes,1,opt,name=label_id,json=labelId,proto3" json:"label_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLabelRequest) Reset() {
	*x = GetLabelRequest{}
	mi := &file_api_v1alpha1_org_labels_entities_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLabelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLabelRequest) ProtoMessage() {}

func (x *GetLabelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_org_labels_entities_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLabelRequest.ProtoReflect.Descriptor instead.
func (*GetLabelRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_org_labels_entities_proto_rawDescGZIP(), []int{4}
}

func (x *GetLabelRequest) GetLabelId() string {
	if x != nil {
		return x.LabelId
	}
	return ""
}

// Response message for the GetLabel rpc.
type GetLabelResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The label that was requested
	Label         *org.Label `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLabelResponse) Reset() {
	*x = GetLabelResponse{}
	mi := &file_api_v1alpha1_org_labels_entities_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLabelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLabelResponse) ProtoMessage() {}

func (x *GetLabelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_org_labels_entities_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLabelResponse.ProtoReflect.Descriptor instead.
func (*GetLabelResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_org_labels_entities_proto_rawDescGZIP(), []int{5}
}

func (x *GetLabelResponse) GetLabel() *org.Label {
	if x != nil {
		return x.Label
	}
	return nil
}

// Request message for the ListLabels rpc.
type ListLabelsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListLabelsRequest) Reset() {
	*x = ListLabelsRequest{}
	mi := &file_api_v1alpha1_org_labels_entities_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListLabelsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLabelsRequest) ProtoMessage() {}

func (x *ListLabelsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_org_labels_entities_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLabelsRequest.ProtoReflect.Descriptor instead.
func (*ListLabelsRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_org_labels_entities_proto_rawDescGZIP(), []int{6}
}

// Response message for the ListLabels rpc.
type ListLabelsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The labels for the users organization
	Label         []*org.Label `protobuf:"bytes,1,rep,name=label,proto3" json:"label,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListLabelsResponse) Reset() {
	*x = ListLabelsResponse{}
	mi := &file_api_v1alpha1_org_labels_entities_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListLabelsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLabelsResponse) ProtoMessage() {}

func (x *ListLabelsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_org_labels_entities_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLabelsResponse.ProtoReflect.Descriptor instead.
func (*ListLabelsResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_org_labels_entities_proto_rawDescGZIP(), []int{7}
}

func (x *ListLabelsResponse) GetLabel() []*org.Label {
	if x != nil {
		return x.Label
	}
	return nil
}

// Request message for the DeleteLabel rpc.
type DeleteLabelRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The label id to delete the label
	LabelId       string `protobuf:"bytes,1,opt,name=label_id,json=labelId,proto3" json:"label_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteLabelRequest) Reset() {
	*x = DeleteLabelRequest{}
	mi := &file_api_v1alpha1_org_labels_entities_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteLabelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLabelRequest) ProtoMessage() {}

func (x *DeleteLabelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_org_labels_entities_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLabelRequest.ProtoReflect.Descriptor instead.
func (*DeleteLabelRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_org_labels_entities_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteLabelRequest) GetLabelId() string {
	if x != nil {
		return x.LabelId
	}
	return ""
}

// Response message for the DeleteLabel rpc.
type DeleteLabelResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteLabelResponse) Reset() {
	*x = DeleteLabelResponse{}
	mi := &file_api_v1alpha1_org_labels_entities_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteLabelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLabelResponse) ProtoMessage() {}

func (x *DeleteLabelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_org_labels_entities_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLabelResponse.ProtoReflect.Descriptor instead.
func (*DeleteLabelResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_org_labels_entities_proto_rawDescGZIP(), []int{9}
}

// Request message for the AttachLabel rpc.
type AttachLabelRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The label id to attach to the entity
	LabelId string `protobuf:"bytes,1,opt,name=label_id,json=labelId,proto3" json:"label_id,omitempty"`
	// The ID of the entity that is being labeled
	EntityId string `protobuf:"bytes,2,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	// The given entity type to attach the label to
	EntityType    commons.LabeledEntity `protobuf:"varint,3,opt,name=entity_type,json=entityType,proto3,enum=api.commons.LabeledEntity" json:"entity_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AttachLabelRequest) Reset() {
	*x = AttachLabelRequest{}
	mi := &file_api_v1alpha1_org_labels_entities_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttachLabelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachLabelRequest) ProtoMessage() {}

func (x *AttachLabelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_org_labels_entities_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachLabelRequest.ProtoReflect.Descriptor instead.
func (*AttachLabelRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_org_labels_entities_proto_rawDescGZIP(), []int{10}
}

func (x *AttachLabelRequest) GetLabelId() string {
	if x != nil {
		return x.LabelId
	}
	return ""
}

func (x *AttachLabelRequest) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

func (x *AttachLabelRequest) GetEntityType() commons.LabeledEntity {
	if x != nil {
		return x.EntityType
	}
	return commons.LabeledEntity(0)
}

// Response message for the AttachLabel rpc.
type AttachLabelResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AttachLabelResponse) Reset() {
	*x = AttachLabelResponse{}
	mi := &file_api_v1alpha1_org_labels_entities_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttachLabelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachLabelResponse) ProtoMessage() {}

func (x *AttachLabelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_org_labels_entities_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachLabelResponse.ProtoReflect.Descriptor instead.
func (*AttachLabelResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_org_labels_entities_proto_rawDescGZIP(), []int{11}
}

// Request message for the DetachLabel rpc.
type DetachLabelRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The label id to detach from the entity
	LabelId string `protobuf:"bytes,1,opt,name=label_id,json=labelId,proto3" json:"label_id,omitempty"`
	// The ID of the entity that will have the label detached
	EntityId string `protobuf:"bytes,2,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	// The entity type to detach the label from
	EntityType    commons.LabeledEntity `protobuf:"varint,3,opt,name=entity_type,json=entityType,proto3,enum=api.commons.LabeledEntity" json:"entity_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DetachLabelRequest) Reset() {
	*x = DetachLabelRequest{}
	mi := &file_api_v1alpha1_org_labels_entities_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetachLabelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetachLabelRequest) ProtoMessage() {}

func (x *DetachLabelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_org_labels_entities_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetachLabelRequest.ProtoReflect.Descriptor instead.
func (*DetachLabelRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_org_labels_entities_proto_rawDescGZIP(), []int{12}
}

func (x *DetachLabelRequest) GetLabelId() string {
	if x != nil {
		return x.LabelId
	}
	return ""
}

func (x *DetachLabelRequest) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

func (x *DetachLabelRequest) GetEntityType() commons.LabeledEntity {
	if x != nil {
		return x.EntityType
	}
	return commons.LabeledEntity(0)
}

// Response message for the DetachLabel rpc.
type DetachLabelResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DetachLabelResponse) Reset() {
	*x = DetachLabelResponse{}
	mi := &file_api_v1alpha1_org_labels_entities_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetachLabelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetachLabelResponse) ProtoMessage() {}

func (x *DetachLabelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_org_labels_entities_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetachLabelResponse.ProtoReflect.Descriptor instead.
func (*DetachLabelResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_org_labels_entities_proto_rawDescGZIP(), []int{13}
}

// Request message for the GetLabeledEntityMapRequest rpc.
type GetLabeledEntityMapRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The entity type to get back
	EntityType    commons.LabeledEntity `protobuf:"varint,1,opt,name=entity_type,json=entityType,proto3,enum=api.commons.LabeledEntity" json:"entity_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLabeledEntityMapRequest) Reset() {
	*x = GetLabeledEntityMapRequest{}
	mi := &file_api_v1alpha1_org_labels_entities_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLabeledEntityMapRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLabeledEntityMapRequest) ProtoMessage() {}

func (x *GetLabeledEntityMapRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_org_labels_entities_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLabeledEntityMapRequest.ProtoReflect.Descriptor instead.
func (*GetLabeledEntityMapRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_org_labels_entities_proto_rawDescGZIP(), []int{14}
}

func (x *GetLabeledEntityMapRequest) GetEntityType() commons.LabeledEntity {
	if x != nil {
		return x.EntityType
	}
	return commons.LabeledEntity(0)
}

// Response message for the GetLabeledEntityMapResponse rpc.
type GetLabeledEntityMapResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The map of entity ID to its attached labels
	EntityMap     map[string]*GetLabeledEntityMapResponse_EntityLabels `protobuf:"bytes,1,rep,name=entity_map,json=entityMap,proto3" json:"entity_map,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLabeledEntityMapResponse) Reset() {
	*x = GetLabeledEntityMapResponse{}
	mi := &file_api_v1alpha1_org_labels_entities_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLabeledEntityMapResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLabeledEntityMapResponse) ProtoMessage() {}

func (x *GetLabeledEntityMapResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_org_labels_entities_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLabeledEntityMapResponse.ProtoReflect.Descriptor instead.
func (*GetLabeledEntityMapResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_org_labels_entities_proto_rawDescGZIP(), []int{15}
}

func (x *GetLabeledEntityMapResponse) GetEntityMap() map[string]*GetLabeledEntityMapResponse_EntityLabels {
	if x != nil {
		return x.EntityMap
	}
	return nil
}

// AssignLabelsRequest is the message for the AssignLabelsRequest RPC.
type AssignLabelsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Ids of labels getting assigned to a permission group.
	LabelIds []string `protobuf:"bytes,1,rep,name=label_ids,json=labelIds,proto3" json:"label_ids,omitempty"`
	// Id of the permission group to be assigned labels.
	PermissionGroupId string `protobuf:"bytes,2,opt,name=permission_group_id,json=permissionGroupId,proto3" json:"permission_group_id,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *AssignLabelsRequest) Reset() {
	*x = AssignLabelsRequest{}
	mi := &file_api_v1alpha1_org_labels_entities_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignLabelsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignLabelsRequest) ProtoMessage() {}

func (x *AssignLabelsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_org_labels_entities_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignLabelsRequest.ProtoReflect.Descriptor instead.
func (*AssignLabelsRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_org_labels_entities_proto_rawDescGZIP(), []int{16}
}

func (x *AssignLabelsRequest) GetLabelIds() []string {
	if x != nil {
		return x.LabelIds
	}
	return nil
}

func (x *AssignLabelsRequest) GetPermissionGroupId() string {
	if x != nil {
		return x.PermissionGroupId
	}
	return ""
}

// Response message for the AssignLabelsResponse RPC.
type AssignLabelsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AssignLabelsResponse) Reset() {
	*x = AssignLabelsResponse{}
	mi := &file_api_v1alpha1_org_labels_entities_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignLabelsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignLabelsResponse) ProtoMessage() {}

func (x *AssignLabelsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_org_labels_entities_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignLabelsResponse.ProtoReflect.Descriptor instead.
func (*AssignLabelsResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_org_labels_entities_proto_rawDescGZIP(), []int{17}
}

// Request message for the RevokeLabelsRequest RPC.
type RevokeLabelsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Ids of labels getting revoked from a permission group.
	LabelIds []string `protobuf:"bytes,1,rep,name=label_ids,json=labelIds,proto3" json:"label_ids,omitempty"`
	// Id of the permission group to have labels revoked.
	PermissionGroupId string `protobuf:"bytes,2,opt,name=permission_group_id,json=permissionGroupId,proto3" json:"permission_group_id,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *RevokeLabelsRequest) Reset() {
	*x = RevokeLabelsRequest{}
	mi := &file_api_v1alpha1_org_labels_entities_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RevokeLabelsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeLabelsRequest) ProtoMessage() {}

func (x *RevokeLabelsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_org_labels_entities_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeLabelsRequest.ProtoReflect.Descriptor instead.
func (*RevokeLabelsRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_org_labels_entities_proto_rawDescGZIP(), []int{18}
}

func (x *RevokeLabelsRequest) GetLabelIds() []string {
	if x != nil {
		return x.LabelIds
	}
	return nil
}

func (x *RevokeLabelsRequest) GetPermissionGroupId() string {
	if x != nil {
		return x.PermissionGroupId
	}
	return ""
}

// Response message for the RevokeLabelsResponse RPC.
type RevokeLabelsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RevokeLabelsResponse) Reset() {
	*x = RevokeLabelsResponse{}
	mi := &file_api_v1alpha1_org_labels_entities_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RevokeLabelsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeLabelsResponse) ProtoMessage() {}

func (x *RevokeLabelsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_org_labels_entities_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeLabelsResponse.ProtoReflect.Descriptor instead.
func (*RevokeLabelsResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_org_labels_entities_proto_rawDescGZIP(), []int{19}
}

type GetLabeledEntityMapResponse_EntityLabels struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Attached labels of a given entity
	Labels        []*org.Label `protobuf:"bytes,1,rep,name=labels,proto3" json:"labels,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLabeledEntityMapResponse_EntityLabels) Reset() {
	*x = GetLabeledEntityMapResponse_EntityLabels{}
	mi := &file_api_v1alpha1_org_labels_entities_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLabeledEntityMapResponse_EntityLabels) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLabeledEntityMapResponse_EntityLabels) ProtoMessage() {}

func (x *GetLabeledEntityMapResponse_EntityLabels) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_org_labels_entities_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLabeledEntityMapResponse_EntityLabels.ProtoReflect.Descriptor instead.
func (*GetLabeledEntityMapResponse_EntityLabels) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_org_labels_entities_proto_rawDescGZIP(), []int{15, 1}
}

func (x *GetLabeledEntityMapResponse_EntityLabels) GetLabels() []*org.Label {
	if x != nil {
		return x.Labels
	}
	return nil
}

var File_api_v1alpha1_org_labels_entities_proto protoreflect.FileDescriptor

var file_api_v1alpha1_org_labels_entities_proto_rawDesc = string([]byte{
	0x0a, 0x26, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x6f,
	0x72, 0x67, 0x2f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x1a, 0x18, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2f, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x61, 0x70, 0x69,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2f, 0x6f, 0x72, 0x67, 0x2f, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x42, 0x0a, 0x12, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2c, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x6f,
	0x72, 0x67, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22,
	0x30, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49,
	0x64, 0x22, 0x7d, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x05,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x39, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d,
	0x61, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b,
	0x22, 0x43, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x05,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x2c, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x49, 0x64, 0x22, 0x40, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x05,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x13, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x42, 0x0a, 0x12, 0x4c, 0x69,
	0x73, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2c, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x6f, 0x72,
	0x67, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x2f,
	0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x22,
	0x15, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x89, 0x01, 0x0a, 0x12, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x65, 0x64,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x15, 0x0a, 0x13, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x89, 0x01, 0x0a, 0x12, 0x44, 0x65,
	0x74, 0x61, 0x63, 0x68, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x22, 0x15, 0x0a, 0x13, 0x44, 0x65, 0x74, 0x61, 0x63, 0x68, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x59, 0x0a, 0x1a,
	0x47, 0x65, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x4d, 0x61, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x0b, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0a, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x22, 0xc2, 0x02, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x65, 0x64,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x70, 0x1a, 0x7f, 0x0a, 0x0e, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x57, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x6f, 0x72,
	0x67, 0x2e, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x70, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3e, 0x0a, 0x0c,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x2e, 0x0a, 0x06,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x22, 0x62, 0x0a, 0x13,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x73,
	0x12, 0x2e, 0x0a, 0x13, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x22, 0x16, 0x0a, 0x14, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x62, 0x0a, 0x13, 0x52, 0x65, 0x76, 0x6f,
	0x6b, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x73, 0x12, 0x2e, 0x0a, 0x13,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x16, 0x0a, 0x14,
	0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0xe0, 0x01, 0x0a, 0x1b, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x42, 0x0d, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x74, 0x63, 0x6e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x61, 0x70, 0x69, 0x2d, 0x67,
	0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x6f,
	0x72, 0x67, 0x2f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0xa2, 0x02, 0x04, 0x41, 0x56, 0x4f, 0x4c,
	0xaa, 0x02, 0x17, 0x41, 0x70, 0x69, 0x2e, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x4f, 0x72, 0x67, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0xca, 0x02, 0x17, 0x41, 0x70, 0x69,
	0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x5c, 0x4f, 0x72, 0x67, 0x5c, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0xe2, 0x02, 0x23, 0x41, 0x70, 0x69, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x5c, 0x4f, 0x72, 0x67, 0x5c, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x5c, 0x47,
	0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x1a, 0x41, 0x70, 0x69,
	0x3a, 0x3a, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x3a, 0x3a, 0x4f, 0x72, 0x67, 0x3a,
	0x3a, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_api_v1alpha1_org_labels_entities_proto_rawDescOnce sync.Once
	file_api_v1alpha1_org_labels_entities_proto_rawDescData []byte
)

func file_api_v1alpha1_org_labels_entities_proto_rawDescGZIP() []byte {
	file_api_v1alpha1_org_labels_entities_proto_rawDescOnce.Do(func() {
		file_api_v1alpha1_org_labels_entities_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_v1alpha1_org_labels_entities_proto_rawDesc), len(file_api_v1alpha1_org_labels_entities_proto_rawDesc)))
	})
	return file_api_v1alpha1_org_labels_entities_proto_rawDescData
}

var file_api_v1alpha1_org_labels_entities_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_api_v1alpha1_org_labels_entities_proto_goTypes = []any{
	(*CreateLabelRequest)(nil),                       // 0: api.v1alpha1.org.labels.CreateLabelRequest
	(*CreateLabelResponse)(nil),                      // 1: api.v1alpha1.org.labels.CreateLabelResponse
	(*UpdateLabelRequest)(nil),                       // 2: api.v1alpha1.org.labels.UpdateLabelRequest
	(*UpdateLabelResponse)(nil),                      // 3: api.v1alpha1.org.labels.UpdateLabelResponse
	(*GetLabelRequest)(nil),                          // 4: api.v1alpha1.org.labels.GetLabelRequest
	(*GetLabelResponse)(nil),                         // 5: api.v1alpha1.org.labels.GetLabelResponse
	(*ListLabelsRequest)(nil),                        // 6: api.v1alpha1.org.labels.ListLabelsRequest
	(*ListLabelsResponse)(nil),                       // 7: api.v1alpha1.org.labels.ListLabelsResponse
	(*DeleteLabelRequest)(nil),                       // 8: api.v1alpha1.org.labels.DeleteLabelRequest
	(*DeleteLabelResponse)(nil),                      // 9: api.v1alpha1.org.labels.DeleteLabelResponse
	(*AttachLabelRequest)(nil),                       // 10: api.v1alpha1.org.labels.AttachLabelRequest
	(*AttachLabelResponse)(nil),                      // 11: api.v1alpha1.org.labels.AttachLabelResponse
	(*DetachLabelRequest)(nil),                       // 12: api.v1alpha1.org.labels.DetachLabelRequest
	(*DetachLabelResponse)(nil),                      // 13: api.v1alpha1.org.labels.DetachLabelResponse
	(*GetLabeledEntityMapRequest)(nil),               // 14: api.v1alpha1.org.labels.GetLabeledEntityMapRequest
	(*GetLabeledEntityMapResponse)(nil),              // 15: api.v1alpha1.org.labels.GetLabeledEntityMapResponse
	(*AssignLabelsRequest)(nil),                      // 16: api.v1alpha1.org.labels.AssignLabelsRequest
	(*AssignLabelsResponse)(nil),                     // 17: api.v1alpha1.org.labels.AssignLabelsResponse
	(*RevokeLabelsRequest)(nil),                      // 18: api.v1alpha1.org.labels.RevokeLabelsRequest
	(*RevokeLabelsResponse)(nil),                     // 19: api.v1alpha1.org.labels.RevokeLabelsResponse
	nil,                                              // 20: api.v1alpha1.org.labels.GetLabeledEntityMapResponse.EntityMapEntry
	(*GetLabeledEntityMapResponse_EntityLabels)(nil), // 21: api.v1alpha1.org.labels.GetLabeledEntityMapResponse.EntityLabels
	(*org.Label)(nil),                                // 22: api.commons.org.Label
	(*fieldmaskpb.FieldMask)(nil),                    // 23: google.protobuf.FieldMask
	(commons.LabeledEntity)(0),                       // 24: api.commons.LabeledEntity
}
var file_api_v1alpha1_org_labels_entities_proto_depIdxs = []int32{
	22, // 0: api.v1alpha1.org.labels.CreateLabelRequest.label:type_name -> api.commons.org.Label
	22, // 1: api.v1alpha1.org.labels.UpdateLabelRequest.label:type_name -> api.commons.org.Label
	23, // 2: api.v1alpha1.org.labels.UpdateLabelRequest.field_mask:type_name -> google.protobuf.FieldMask
	22, // 3: api.v1alpha1.org.labels.UpdateLabelResponse.label:type_name -> api.commons.org.Label
	22, // 4: api.v1alpha1.org.labels.GetLabelResponse.label:type_name -> api.commons.org.Label
	22, // 5: api.v1alpha1.org.labels.ListLabelsResponse.label:type_name -> api.commons.org.Label
	24, // 6: api.v1alpha1.org.labels.AttachLabelRequest.entity_type:type_name -> api.commons.LabeledEntity
	24, // 7: api.v1alpha1.org.labels.DetachLabelRequest.entity_type:type_name -> api.commons.LabeledEntity
	24, // 8: api.v1alpha1.org.labels.GetLabeledEntityMapRequest.entity_type:type_name -> api.commons.LabeledEntity
	20, // 9: api.v1alpha1.org.labels.GetLabeledEntityMapResponse.entity_map:type_name -> api.v1alpha1.org.labels.GetLabeledEntityMapResponse.EntityMapEntry
	21, // 10: api.v1alpha1.org.labels.GetLabeledEntityMapResponse.EntityMapEntry.value:type_name -> api.v1alpha1.org.labels.GetLabeledEntityMapResponse.EntityLabels
	22, // 11: api.v1alpha1.org.labels.GetLabeledEntityMapResponse.EntityLabels.labels:type_name -> api.commons.org.Label
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_api_v1alpha1_org_labels_entities_proto_init() }
func file_api_v1alpha1_org_labels_entities_proto_init() {
	if File_api_v1alpha1_org_labels_entities_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_v1alpha1_org_labels_entities_proto_rawDesc), len(file_api_v1alpha1_org_labels_entities_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_v1alpha1_org_labels_entities_proto_goTypes,
		DependencyIndexes: file_api_v1alpha1_org_labels_entities_proto_depIdxs,
		MessageInfos:      file_api_v1alpha1_org_labels_entities_proto_msgTypes,
	}.Build()
	File_api_v1alpha1_org_labels_entities_proto = out.File
	file_api_v1alpha1_org_labels_entities_proto_goTypes = nil
	file_api_v1alpha1_org_labels_entities_proto_depIdxs = nil
}
