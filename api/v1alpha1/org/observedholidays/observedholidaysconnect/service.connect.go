// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: api/v1alpha1/org/observedholidays/service.proto

package observedholidaysconnect

import (
	context "context"
	errors "errors"
	connect_go "github.com/bufbuild/connect-go"
	observedholidays "github.com/tcncloud/api-go/api/v1alpha1/org/observedholidays"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect_go.IsAtLeastVersion0_1_0

const (
	// ObservedHolidaysServiceName is the fully-qualified name of the ObservedHolidaysService service.
	ObservedHolidaysServiceName = "api.v1alpha1.org.observedholidays.ObservedHolidaysService"
)

// These constants are the fully-qualified names of the RPCs defined in this package. They're
// exposed at runtime as Spec.Procedure and as the final two segments of the HTTP route.
//
// Note that these are different from the fully-qualified method names used by
// google.golang.org/protobuf/reflect/protoreflect. To convert from these constants to
// reflection-formatted method names, remove the leading slash and convert the remaining slash to a
// period.
const (
	// ObservedHolidaysServiceListObservedHolidaysProcedure is the fully-qualified name of the
	// ObservedHolidaysService's ListObservedHolidays RPC.
	ObservedHolidaysServiceListObservedHolidaysProcedure = "/api.v1alpha1.org.observedholidays.ObservedHolidaysService/ListObservedHolidays"
	// ObservedHolidaysServiceGetObservedHolidaysProcedure is the fully-qualified name of the
	// ObservedHolidaysService's GetObservedHolidays RPC.
	ObservedHolidaysServiceGetObservedHolidaysProcedure = "/api.v1alpha1.org.observedholidays.ObservedHolidaysService/GetObservedHolidays"
	// ObservedHolidaysServiceSetObservedHolidaysProcedure is the fully-qualified name of the
	// ObservedHolidaysService's SetObservedHolidays RPC.
	ObservedHolidaysServiceSetObservedHolidaysProcedure = "/api.v1alpha1.org.observedholidays.ObservedHolidaysService/SetObservedHolidays"
	// ObservedHolidaysServiceAddToObservedHolidaysProcedure is the fully-qualified name of the
	// ObservedHolidaysService's AddToObservedHolidays RPC.
	ObservedHolidaysServiceAddToObservedHolidaysProcedure = "/api.v1alpha1.org.observedholidays.ObservedHolidaysService/AddToObservedHolidays"
	// ObservedHolidaysServiceRemoveObservedHolidaysProcedure is the fully-qualified name of the
	// ObservedHolidaysService's RemoveObservedHolidays RPC.
	ObservedHolidaysServiceRemoveObservedHolidaysProcedure = "/api.v1alpha1.org.observedholidays.ObservedHolidaysService/RemoveObservedHolidays"
	// ObservedHolidaysServiceUpdateObservedHolidaysInfoProcedure is the fully-qualified name of the
	// ObservedHolidaysService's UpdateObservedHolidaysInfo RPC.
	ObservedHolidaysServiceUpdateObservedHolidaysInfoProcedure = "/api.v1alpha1.org.observedholidays.ObservedHolidaysService/UpdateObservedHolidaysInfo"
	// ObservedHolidaysServiceDeleteObservedHolidaysProcedure is the fully-qualified name of the
	// ObservedHolidaysService's DeleteObservedHolidays RPC.
	ObservedHolidaysServiceDeleteObservedHolidaysProcedure = "/api.v1alpha1.org.observedholidays.ObservedHolidaysService/DeleteObservedHolidays"
	// ObservedHolidaysServiceEvaluateObservedHolidaysProcedure is the fully-qualified name of the
	// ObservedHolidaysService's EvaluateObservedHolidays RPC.
	ObservedHolidaysServiceEvaluateObservedHolidaysProcedure = "/api.v1alpha1.org.observedholidays.ObservedHolidaysService/EvaluateObservedHolidays"
)

// ObservedHolidaysServiceClient is a client for the
// api.v1alpha1.org.observedholidays.ObservedHolidaysService service.
type ObservedHolidaysServiceClient interface {
	// ListObservedHolidays returns all ObservedHolidays for an Org.
	ListObservedHolidays(context.Context, *connect_go.Request[observedholidays.ListObservedHolidaysRequest]) (*connect_go.Response[observedholidays.ListObservedHolidaysResponse], error)
	// GetObservedHolidays returns the ObservedHolidays for the ID.
	GetObservedHolidays(context.Context, *connect_go.Request[observedholidays.GetObservedHolidaysRequest]) (*connect_go.Response[observedholidays.GetObservedHolidaysResponse], error)
	// SetObservedHolidays creates a new ObservedHolidays for an Org.
	SetObservedHolidays(context.Context, *connect_go.Request[observedholidays.SetObservedHolidaysRequest]) (*connect_go.Response[observedholidays.SetObservedHolidaysResponse], error)
	// AddToObservedHolidays adds a new ObservedHolidays for an Org.
	AddToObservedHolidays(context.Context, *connect_go.Request[observedholidays.AddToObservedHolidaysRequest]) (*connect_go.Response[observedholidays.AddToObservedHolidaysResponse], error)
	// RemoveObservedHolidays removes an existing ObservedHolidays from an Org.
	RemoveObservedHolidays(context.Context, *connect_go.Request[observedholidays.RemoveFromObservedHolidaysRequest]) (*connect_go.Response[observedholidays.RemoveFromObservedHolidaysResponse], error)
	// UpdateObservedHolidaysInfo updates the general info for a specified ObservedHolidays.
	UpdateObservedHolidaysInfo(context.Context, *connect_go.Request[observedholidays.UpdateObservedHolidaysInfoRequest]) (*connect_go.Response[observedholidays.UpdateObservedHolidaysInfoResponse], error)
	// DeleteObservedHolidays deletes an existing ObservedHolidays.
	DeleteObservedHolidays(context.Context, *connect_go.Request[observedholidays.DeleteObservedHolidaysRequest]) (*connect_go.Response[observedholidays.DeleteObservedHolidaysResponse], error)
	// EvaluateObservedHolidays evaluates the ObservedHolidays.
	EvaluateObservedHolidays(context.Context, *connect_go.Request[observedholidays.EvaluateObservedHolidaysRequest]) (*connect_go.Response[observedholidays.EvaluateObservedHolidaysResponse], error)
}

// NewObservedHolidaysServiceClient constructs a client for the
// api.v1alpha1.org.observedholidays.ObservedHolidaysService service. By default, it uses the
// Connect protocol with the binary Protobuf Codec, asks for gzipped responses, and sends
// uncompressed requests. To use the gRPC or gRPC-Web protocols, supply the connect.WithGRPC() or
// connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewObservedHolidaysServiceClient(httpClient connect_go.HTTPClient, baseURL string, opts ...connect_go.ClientOption) ObservedHolidaysServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	return &observedHolidaysServiceClient{
		listObservedHolidays: connect_go.NewClient[observedholidays.ListObservedHolidaysRequest, observedholidays.ListObservedHolidaysResponse](
			httpClient,
			baseURL+ObservedHolidaysServiceListObservedHolidaysProcedure,
			opts...,
		),
		getObservedHolidays: connect_go.NewClient[observedholidays.GetObservedHolidaysRequest, observedholidays.GetObservedHolidaysResponse](
			httpClient,
			baseURL+ObservedHolidaysServiceGetObservedHolidaysProcedure,
			opts...,
		),
		setObservedHolidays: connect_go.NewClient[observedholidays.SetObservedHolidaysRequest, observedholidays.SetObservedHolidaysResponse](
			httpClient,
			baseURL+ObservedHolidaysServiceSetObservedHolidaysProcedure,
			opts...,
		),
		addToObservedHolidays: connect_go.NewClient[observedholidays.AddToObservedHolidaysRequest, observedholidays.AddToObservedHolidaysResponse](
			httpClient,
			baseURL+ObservedHolidaysServiceAddToObservedHolidaysProcedure,
			opts...,
		),
		removeObservedHolidays: connect_go.NewClient[observedholidays.RemoveFromObservedHolidaysRequest, observedholidays.RemoveFromObservedHolidaysResponse](
			httpClient,
			baseURL+ObservedHolidaysServiceRemoveObservedHolidaysProcedure,
			opts...,
		),
		updateObservedHolidaysInfo: connect_go.NewClient[observedholidays.UpdateObservedHolidaysInfoRequest, observedholidays.UpdateObservedHolidaysInfoResponse](
			httpClient,
			baseURL+ObservedHolidaysServiceUpdateObservedHolidaysInfoProcedure,
			opts...,
		),
		deleteObservedHolidays: connect_go.NewClient[observedholidays.DeleteObservedHolidaysRequest, observedholidays.DeleteObservedHolidaysResponse](
			httpClient,
			baseURL+ObservedHolidaysServiceDeleteObservedHolidaysProcedure,
			opts...,
		),
		evaluateObservedHolidays: connect_go.NewClient[observedholidays.EvaluateObservedHolidaysRequest, observedholidays.EvaluateObservedHolidaysResponse](
			httpClient,
			baseURL+ObservedHolidaysServiceEvaluateObservedHolidaysProcedure,
			opts...,
		),
	}
}

// observedHolidaysServiceClient implements ObservedHolidaysServiceClient.
type observedHolidaysServiceClient struct {
	listObservedHolidays       *connect_go.Client[observedholidays.ListObservedHolidaysRequest, observedholidays.ListObservedHolidaysResponse]
	getObservedHolidays        *connect_go.Client[observedholidays.GetObservedHolidaysRequest, observedholidays.GetObservedHolidaysResponse]
	setObservedHolidays        *connect_go.Client[observedholidays.SetObservedHolidaysRequest, observedholidays.SetObservedHolidaysResponse]
	addToObservedHolidays      *connect_go.Client[observedholidays.AddToObservedHolidaysRequest, observedholidays.AddToObservedHolidaysResponse]
	removeObservedHolidays     *connect_go.Client[observedholidays.RemoveFromObservedHolidaysRequest, observedholidays.RemoveFromObservedHolidaysResponse]
	updateObservedHolidaysInfo *connect_go.Client[observedholidays.UpdateObservedHolidaysInfoRequest, observedholidays.UpdateObservedHolidaysInfoResponse]
	deleteObservedHolidays     *connect_go.Client[observedholidays.DeleteObservedHolidaysRequest, observedholidays.DeleteObservedHolidaysResponse]
	evaluateObservedHolidays   *connect_go.Client[observedholidays.EvaluateObservedHolidaysRequest, observedholidays.EvaluateObservedHolidaysResponse]
}

// ListObservedHolidays calls
// api.v1alpha1.org.observedholidays.ObservedHolidaysService.ListObservedHolidays.
func (c *observedHolidaysServiceClient) ListObservedHolidays(ctx context.Context, req *connect_go.Request[observedholidays.ListObservedHolidaysRequest]) (*connect_go.Response[observedholidays.ListObservedHolidaysResponse], error) {
	return c.listObservedHolidays.CallUnary(ctx, req)
}

// GetObservedHolidays calls
// api.v1alpha1.org.observedholidays.ObservedHolidaysService.GetObservedHolidays.
func (c *observedHolidaysServiceClient) GetObservedHolidays(ctx context.Context, req *connect_go.Request[observedholidays.GetObservedHolidaysRequest]) (*connect_go.Response[observedholidays.GetObservedHolidaysResponse], error) {
	return c.getObservedHolidays.CallUnary(ctx, req)
}

// SetObservedHolidays calls
// api.v1alpha1.org.observedholidays.ObservedHolidaysService.SetObservedHolidays.
func (c *observedHolidaysServiceClient) SetObservedHolidays(ctx context.Context, req *connect_go.Request[observedholidays.SetObservedHolidaysRequest]) (*connect_go.Response[observedholidays.SetObservedHolidaysResponse], error) {
	return c.setObservedHolidays.CallUnary(ctx, req)
}

// AddToObservedHolidays calls
// api.v1alpha1.org.observedholidays.ObservedHolidaysService.AddToObservedHolidays.
func (c *observedHolidaysServiceClient) AddToObservedHolidays(ctx context.Context, req *connect_go.Request[observedholidays.AddToObservedHolidaysRequest]) (*connect_go.Response[observedholidays.AddToObservedHolidaysResponse], error) {
	return c.addToObservedHolidays.CallUnary(ctx, req)
}

// RemoveObservedHolidays calls
// api.v1alpha1.org.observedholidays.ObservedHolidaysService.RemoveObservedHolidays.
func (c *observedHolidaysServiceClient) RemoveObservedHolidays(ctx context.Context, req *connect_go.Request[observedholidays.RemoveFromObservedHolidaysRequest]) (*connect_go.Response[observedholidays.RemoveFromObservedHolidaysResponse], error) {
	return c.removeObservedHolidays.CallUnary(ctx, req)
}

// UpdateObservedHolidaysInfo calls
// api.v1alpha1.org.observedholidays.ObservedHolidaysService.UpdateObservedHolidaysInfo.
func (c *observedHolidaysServiceClient) UpdateObservedHolidaysInfo(ctx context.Context, req *connect_go.Request[observedholidays.UpdateObservedHolidaysInfoRequest]) (*connect_go.Response[observedholidays.UpdateObservedHolidaysInfoResponse], error) {
	return c.updateObservedHolidaysInfo.CallUnary(ctx, req)
}

// DeleteObservedHolidays calls
// api.v1alpha1.org.observedholidays.ObservedHolidaysService.DeleteObservedHolidays.
func (c *observedHolidaysServiceClient) DeleteObservedHolidays(ctx context.Context, req *connect_go.Request[observedholidays.DeleteObservedHolidaysRequest]) (*connect_go.Response[observedholidays.DeleteObservedHolidaysResponse], error) {
	return c.deleteObservedHolidays.CallUnary(ctx, req)
}

// EvaluateObservedHolidays calls
// api.v1alpha1.org.observedholidays.ObservedHolidaysService.EvaluateObservedHolidays.
func (c *observedHolidaysServiceClient) EvaluateObservedHolidays(ctx context.Context, req *connect_go.Request[observedholidays.EvaluateObservedHolidaysRequest]) (*connect_go.Response[observedholidays.EvaluateObservedHolidaysResponse], error) {
	return c.evaluateObservedHolidays.CallUnary(ctx, req)
}

// ObservedHolidaysServiceHandler is an implementation of the
// api.v1alpha1.org.observedholidays.ObservedHolidaysService service.
type ObservedHolidaysServiceHandler interface {
	// ListObservedHolidays returns all ObservedHolidays for an Org.
	ListObservedHolidays(context.Context, *connect_go.Request[observedholidays.ListObservedHolidaysRequest]) (*connect_go.Response[observedholidays.ListObservedHolidaysResponse], error)
	// GetObservedHolidays returns the ObservedHolidays for the ID.
	GetObservedHolidays(context.Context, *connect_go.Request[observedholidays.GetObservedHolidaysRequest]) (*connect_go.Response[observedholidays.GetObservedHolidaysResponse], error)
	// SetObservedHolidays creates a new ObservedHolidays for an Org.
	SetObservedHolidays(context.Context, *connect_go.Request[observedholidays.SetObservedHolidaysRequest]) (*connect_go.Response[observedholidays.SetObservedHolidaysResponse], error)
	// AddToObservedHolidays adds a new ObservedHolidays for an Org.
	AddToObservedHolidays(context.Context, *connect_go.Request[observedholidays.AddToObservedHolidaysRequest]) (*connect_go.Response[observedholidays.AddToObservedHolidaysResponse], error)
	// RemoveObservedHolidays removes an existing ObservedHolidays from an Org.
	RemoveObservedHolidays(context.Context, *connect_go.Request[observedholidays.RemoveFromObservedHolidaysRequest]) (*connect_go.Response[observedholidays.RemoveFromObservedHolidaysResponse], error)
	// UpdateObservedHolidaysInfo updates the general info for a specified ObservedHolidays.
	UpdateObservedHolidaysInfo(context.Context, *connect_go.Request[observedholidays.UpdateObservedHolidaysInfoRequest]) (*connect_go.Response[observedholidays.UpdateObservedHolidaysInfoResponse], error)
	// DeleteObservedHolidays deletes an existing ObservedHolidays.
	DeleteObservedHolidays(context.Context, *connect_go.Request[observedholidays.DeleteObservedHolidaysRequest]) (*connect_go.Response[observedholidays.DeleteObservedHolidaysResponse], error)
	// EvaluateObservedHolidays evaluates the ObservedHolidays.
	EvaluateObservedHolidays(context.Context, *connect_go.Request[observedholidays.EvaluateObservedHolidaysRequest]) (*connect_go.Response[observedholidays.EvaluateObservedHolidaysResponse], error)
}

// NewObservedHolidaysServiceHandler builds an HTTP handler from the service implementation. It
// returns the path on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewObservedHolidaysServiceHandler(svc ObservedHolidaysServiceHandler, opts ...connect_go.HandlerOption) (string, http.Handler) {
	observedHolidaysServiceListObservedHolidaysHandler := connect_go.NewUnaryHandler(
		ObservedHolidaysServiceListObservedHolidaysProcedure,
		svc.ListObservedHolidays,
		opts...,
	)
	observedHolidaysServiceGetObservedHolidaysHandler := connect_go.NewUnaryHandler(
		ObservedHolidaysServiceGetObservedHolidaysProcedure,
		svc.GetObservedHolidays,
		opts...,
	)
	observedHolidaysServiceSetObservedHolidaysHandler := connect_go.NewUnaryHandler(
		ObservedHolidaysServiceSetObservedHolidaysProcedure,
		svc.SetObservedHolidays,
		opts...,
	)
	observedHolidaysServiceAddToObservedHolidaysHandler := connect_go.NewUnaryHandler(
		ObservedHolidaysServiceAddToObservedHolidaysProcedure,
		svc.AddToObservedHolidays,
		opts...,
	)
	observedHolidaysServiceRemoveObservedHolidaysHandler := connect_go.NewUnaryHandler(
		ObservedHolidaysServiceRemoveObservedHolidaysProcedure,
		svc.RemoveObservedHolidays,
		opts...,
	)
	observedHolidaysServiceUpdateObservedHolidaysInfoHandler := connect_go.NewUnaryHandler(
		ObservedHolidaysServiceUpdateObservedHolidaysInfoProcedure,
		svc.UpdateObservedHolidaysInfo,
		opts...,
	)
	observedHolidaysServiceDeleteObservedHolidaysHandler := connect_go.NewUnaryHandler(
		ObservedHolidaysServiceDeleteObservedHolidaysProcedure,
		svc.DeleteObservedHolidays,
		opts...,
	)
	observedHolidaysServiceEvaluateObservedHolidaysHandler := connect_go.NewUnaryHandler(
		ObservedHolidaysServiceEvaluateObservedHolidaysProcedure,
		svc.EvaluateObservedHolidays,
		opts...,
	)
	return "/api.v1alpha1.org.observedholidays.ObservedHolidaysService/", http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		switch r.URL.Path {
		case ObservedHolidaysServiceListObservedHolidaysProcedure:
			observedHolidaysServiceListObservedHolidaysHandler.ServeHTTP(w, r)
		case ObservedHolidaysServiceGetObservedHolidaysProcedure:
			observedHolidaysServiceGetObservedHolidaysHandler.ServeHTTP(w, r)
		case ObservedHolidaysServiceSetObservedHolidaysProcedure:
			observedHolidaysServiceSetObservedHolidaysHandler.ServeHTTP(w, r)
		case ObservedHolidaysServiceAddToObservedHolidaysProcedure:
			observedHolidaysServiceAddToObservedHolidaysHandler.ServeHTTP(w, r)
		case ObservedHolidaysServiceRemoveObservedHolidaysProcedure:
			observedHolidaysServiceRemoveObservedHolidaysHandler.ServeHTTP(w, r)
		case ObservedHolidaysServiceUpdateObservedHolidaysInfoProcedure:
			observedHolidaysServiceUpdateObservedHolidaysInfoHandler.ServeHTTP(w, r)
		case ObservedHolidaysServiceDeleteObservedHolidaysProcedure:
			observedHolidaysServiceDeleteObservedHolidaysHandler.ServeHTTP(w, r)
		case ObservedHolidaysServiceEvaluateObservedHolidaysProcedure:
			observedHolidaysServiceEvaluateObservedHolidaysHandler.ServeHTTP(w, r)
		default:
			http.NotFound(w, r)
		}
	})
}

// UnimplementedObservedHolidaysServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedObservedHolidaysServiceHandler struct{}

func (UnimplementedObservedHolidaysServiceHandler) ListObservedHolidays(context.Context, *connect_go.Request[observedholidays.ListObservedHolidaysRequest]) (*connect_go.Response[observedholidays.ListObservedHolidaysResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v1alpha1.org.observedholidays.ObservedHolidaysService.ListObservedHolidays is not implemented"))
}

func (UnimplementedObservedHolidaysServiceHandler) GetObservedHolidays(context.Context, *connect_go.Request[observedholidays.GetObservedHolidaysRequest]) (*connect_go.Response[observedholidays.GetObservedHolidaysResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v1alpha1.org.observedholidays.ObservedHolidaysService.GetObservedHolidays is not implemented"))
}

func (UnimplementedObservedHolidaysServiceHandler) SetObservedHolidays(context.Context, *connect_go.Request[observedholidays.SetObservedHolidaysRequest]) (*connect_go.Response[observedholidays.SetObservedHolidaysResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v1alpha1.org.observedholidays.ObservedHolidaysService.SetObservedHolidays is not implemented"))
}

func (UnimplementedObservedHolidaysServiceHandler) AddToObservedHolidays(context.Context, *connect_go.Request[observedholidays.AddToObservedHolidaysRequest]) (*connect_go.Response[observedholidays.AddToObservedHolidaysResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v1alpha1.org.observedholidays.ObservedHolidaysService.AddToObservedHolidays is not implemented"))
}

func (UnimplementedObservedHolidaysServiceHandler) RemoveObservedHolidays(context.Context, *connect_go.Request[observedholidays.RemoveFromObservedHolidaysRequest]) (*connect_go.Response[observedholidays.RemoveFromObservedHolidaysResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v1alpha1.org.observedholidays.ObservedHolidaysService.RemoveObservedHolidays is not implemented"))
}

func (UnimplementedObservedHolidaysServiceHandler) UpdateObservedHolidaysInfo(context.Context, *connect_go.Request[observedholidays.UpdateObservedHolidaysInfoRequest]) (*connect_go.Response[observedholidays.UpdateObservedHolidaysInfoResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v1alpha1.org.observedholidays.ObservedHolidaysService.UpdateObservedHolidaysInfo is not implemented"))
}

func (UnimplementedObservedHolidaysServiceHandler) DeleteObservedHolidays(context.Context, *connect_go.Request[observedholidays.DeleteObservedHolidaysRequest]) (*connect_go.Response[observedholidays.DeleteObservedHolidaysResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v1alpha1.org.observedholidays.ObservedHolidaysService.DeleteObservedHolidays is not implemented"))
}

func (UnimplementedObservedHolidaysServiceHandler) EvaluateObservedHolidays(context.Context, *connect_go.Request[observedholidays.EvaluateObservedHolidaysRequest]) (*connect_go.Response[observedholidays.EvaluateObservedHolidaysResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v1alpha1.org.observedholidays.ObservedHolidaysService.EvaluateObservedHolidays is not implemented"))
}
