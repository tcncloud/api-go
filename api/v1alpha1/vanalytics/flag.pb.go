// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: api/v1alpha1/vanalytics/flag.proto

package vanalytics

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CreateFlagRequest is a request for creating a flag.
type CreateFlagRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The flag resource to create.
	Flag          *Flag `protobuf:"bytes,1,opt,name=flag,proto3" json:"flag,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateFlagRequest) Reset() {
	*x = CreateFlagRequest{}
	mi := &file_api_v1alpha1_vanalytics_flag_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateFlagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFlagRequest) ProtoMessage() {}

func (x *CreateFlagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_vanalytics_flag_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFlagRequest.ProtoReflect.Descriptor instead.
func (*CreateFlagRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_vanalytics_flag_proto_rawDescGZIP(), []int{0}
}

func (x *CreateFlagRequest) GetFlag() *Flag {
	if x != nil {
		return x.Flag
	}
	return nil
}

// ListFlagsRequest is a request for listing flags.
type ListFlagsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optional. The number of flags to include in a single response. When not
	// provided this defaults to 100.
	PageSize uint32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Optional. The order by which flags will be listed. Follows sql order by
	// syntax. When not provided the order defaults to "name".
	// Supported order by includes:
	//   - (name)
	//   - (name desc)
	OrderBy string `protobuf:"bytes,3,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	// Optional. The next_page_token returned from a previous List request, if any.
	// When provided all other request fields are ignored.
	PageToken string `protobuf:"bytes,4,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Types that are valid to be assigned to Where:
	//
	//	*ListFlagsRequest_FilterSid
	Where isListFlagsRequest_Where `protobuf_oneof:"where"`
	// Optional. Lists flags which have given flag sids.
	FlagSids []int64 `protobuf:"varint,6,rep,packed,name=flag_sids,json=flagSids,proto3" json:"flag_sids,omitempty"`
	// Optional. Field mask which determines which flag reads will be read and
	// included in the response.
	ReadMask *fieldmaskpb.FieldMask `protobuf:"bytes,7,opt,name=read_mask,json=readMask,proto3" json:"read_mask,omitempty"`
	// Optional. Listed flags must have one of the provided names.
	Names []string `protobuf:"bytes,8,rep,name=names,proto3" json:"names,omitempty"`
	// Optional. Listed flags must have one of the provided priorities.
	Priorities []int32 `protobuf:"varint,9,rep,packed,name=priorities,proto3" json:"priorities,omitempty"`
	// Optional. Filter by flags that require a review. This does not mean
	// that the flag has/hasn't been reviewed. This is whether it requires one.
	MustReview []bool `protobuf:"varint,10,rep,packed,name=must_review,json=mustReview,proto3" json:"must_review,omitempty"`
	// Optional. Filter by flags that send notifications.
	MustNotify    []bool `protobuf:"varint,11,rep,packed,name=must_notify,json=mustNotify,proto3" json:"must_notify,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListFlagsRequest) Reset() {
	*x = ListFlagsRequest{}
	mi := &file_api_v1alpha1_vanalytics_flag_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFlagsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFlagsRequest) ProtoMessage() {}

func (x *ListFlagsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_vanalytics_flag_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFlagsRequest.ProtoReflect.Descriptor instead.
func (*ListFlagsRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_vanalytics_flag_proto_rawDescGZIP(), []int{1}
}

func (x *ListFlagsRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListFlagsRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

func (x *ListFlagsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListFlagsRequest) GetWhere() isListFlagsRequest_Where {
	if x != nil {
		return x.Where
	}
	return nil
}

func (x *ListFlagsRequest) GetFilterSid() int64 {
	if x != nil {
		if x, ok := x.Where.(*ListFlagsRequest_FilterSid); ok {
			return x.FilterSid
		}
	}
	return 0
}

func (x *ListFlagsRequest) GetFlagSids() []int64 {
	if x != nil {
		return x.FlagSids
	}
	return nil
}

func (x *ListFlagsRequest) GetReadMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.ReadMask
	}
	return nil
}

func (x *ListFlagsRequest) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

func (x *ListFlagsRequest) GetPriorities() []int32 {
	if x != nil {
		return x.Priorities
	}
	return nil
}

func (x *ListFlagsRequest) GetMustReview() []bool {
	if x != nil {
		return x.MustReview
	}
	return nil
}

func (x *ListFlagsRequest) GetMustNotify() []bool {
	if x != nil {
		return x.MustNotify
	}
	return nil
}

type isListFlagsRequest_Where interface {
	isListFlagsRequest_Where()
}

type ListFlagsRequest_FilterSid struct {
	// Optional. Lists flags which are associated with given filter sid.
	FilterSid int64 `protobuf:"varint,5,opt,name=filter_sid,json=filterSid,proto3,oneof"`
}

func (*ListFlagsRequest_FilterSid) isListFlagsRequest_Where() {}

// ListFlagsResponse is a response for listing flags.
type ListFlagsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Token to retrieve the next page of flags, or empty if there are no
	// more flags in the list.
	NextPageToken string `protobuf:"bytes,1,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	// List of flags which contains at most one request page_size.
	Flags []*Flag `protobuf:"bytes,2,rep,name=flags,proto3" json:"flags,omitempty"`
	// Total number of flags.
	Total         uint64 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListFlagsResponse) Reset() {
	*x = ListFlagsResponse{}
	mi := &file_api_v1alpha1_vanalytics_flag_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFlagsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFlagsResponse) ProtoMessage() {}

func (x *ListFlagsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_vanalytics_flag_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFlagsResponse.ProtoReflect.Descriptor instead.
func (*ListFlagsResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_vanalytics_flag_proto_rawDescGZIP(), []int{2}
}

func (x *ListFlagsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListFlagsResponse) GetFlags() []*Flag {
	if x != nil {
		return x.Flags
	}
	return nil
}

func (x *ListFlagsResponse) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

// UpdateFlagRequest is a request for updating a flag.
type UpdateFlagRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the flag to be updated.
	FlagSid int64 `protobuf:"varint,1,opt,name=flag_sid,json=flagSid,proto3" json:"flag_sid,omitempty"`
	// The flag resource to update.
	Flag *Flag `protobuf:"bytes,2,opt,name=flag,proto3" json:"flag,omitempty"`
	// Optional. update_mask contains a list of paths to be updated. Possible paths include
	// name, review_group_id, notify_group_id, and priority. If no update_mask
	// is provided it defaults to using all paths.
	UpdateMask    *fieldmaskpb.FieldMask `protobuf:"bytes,3,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateFlagRequest) Reset() {
	*x = UpdateFlagRequest{}
	mi := &file_api_v1alpha1_vanalytics_flag_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateFlagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFlagRequest) ProtoMessage() {}

func (x *UpdateFlagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_vanalytics_flag_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFlagRequest.ProtoReflect.Descriptor instead.
func (*UpdateFlagRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_vanalytics_flag_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateFlagRequest) GetFlagSid() int64 {
	if x != nil {
		return x.FlagSid
	}
	return 0
}

func (x *UpdateFlagRequest) GetFlag() *Flag {
	if x != nil {
		return x.Flag
	}
	return nil
}

func (x *UpdateFlagRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

// DeleteFlagRequest is a request for deleting a flag.
type DeleteFlagRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The unique id of the flag to be deleted.
	FlagSid int64 `protobuf:"varint,1,opt,name=flag_sid,json=flagSid,proto3" json:"flag_sid,omitempty"`
	// Optional. Return the flag that was deleted.
	Return        bool `protobuf:"varint,3,opt,name=return,proto3" json:"return,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteFlagRequest) Reset() {
	*x = DeleteFlagRequest{}
	mi := &file_api_v1alpha1_vanalytics_flag_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFlagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFlagRequest) ProtoMessage() {}

func (x *DeleteFlagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_vanalytics_flag_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFlagRequest.ProtoReflect.Descriptor instead.
func (*DeleteFlagRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_vanalytics_flag_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteFlagRequest) GetFlagSid() int64 {
	if x != nil {
		return x.FlagSid
	}
	return 0
}

func (x *DeleteFlagRequest) GetReturn() bool {
	if x != nil {
		return x.Return
	}
	return false
}

// DeleteFlagResponse is a response for deleting a flag.
type DeleteFlagResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optional. The flag that was deleted.
	Flag          *Flag `protobuf:"bytes,1,opt,name=flag,proto3" json:"flag,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteFlagResponse) Reset() {
	*x = DeleteFlagResponse{}
	mi := &file_api_v1alpha1_vanalytics_flag_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFlagResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFlagResponse) ProtoMessage() {}

func (x *DeleteFlagResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_vanalytics_flag_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFlagResponse.ProtoReflect.Descriptor instead.
func (*DeleteFlagResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_vanalytics_flag_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteFlagResponse) GetFlag() *Flag {
	if x != nil {
		return x.Flag
	}
	return nil
}

// GetFlagRequest is a request for getting a flag.
type GetFlagRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Where:
	//
	//	*GetFlagRequest_Name
	//	*GetFlagRequest_FlagSid
	Where         isGetFlagRequest_Where `protobuf_oneof:"where"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFlagRequest) Reset() {
	*x = GetFlagRequest{}
	mi := &file_api_v1alpha1_vanalytics_flag_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFlagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFlagRequest) ProtoMessage() {}

func (x *GetFlagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_vanalytics_flag_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFlagRequest.ProtoReflect.Descriptor instead.
func (*GetFlagRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_vanalytics_flag_proto_rawDescGZIP(), []int{6}
}

func (x *GetFlagRequest) GetWhere() isGetFlagRequest_Where {
	if x != nil {
		return x.Where
	}
	return nil
}

func (x *GetFlagRequest) GetName() string {
	if x != nil {
		if x, ok := x.Where.(*GetFlagRequest_Name); ok {
			return x.Name
		}
	}
	return ""
}

func (x *GetFlagRequest) GetFlagSid() int64 {
	if x != nil {
		if x, ok := x.Where.(*GetFlagRequest_FlagSid); ok {
			return x.FlagSid
		}
	}
	return 0
}

type isGetFlagRequest_Where interface {
	isGetFlagRequest_Where()
}

type GetFlagRequest_Name struct {
	// The name of the flag.
	Name string `protobuf:"bytes,2,opt,name=name,proto3,oneof"`
}

type GetFlagRequest_FlagSid struct {
	// The unique id of the flag.
	FlagSid int64 `protobuf:"varint,3,opt,name=flag_sid,json=flagSid,proto3,oneof"`
}

func (*GetFlagRequest_Name) isGetFlagRequest_Where() {}

func (*GetFlagRequest_FlagSid) isGetFlagRequest_Where() {}

// Flag is a resource in the Vanalytics API.
type Flag struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Output only. The unique id of this flag.
	FlagSid int64 `protobuf:"varint,1,opt,name=flag_sid,json=flagSid,proto3" json:"flag_sid,omitempty"`
	// Required. The name of this flag. Must be non empty and unique across all
	// flags within an organization.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Optional. The org permission group id which users must have in order to
	// to review flagged transcripts. When not provided flagged transcripts will
	// not require review.
	ReviewGroupId string `protobuf:"bytes,4,opt,name=review_group_id,json=reviewGroupId,proto3" json:"review_group_id,omitempty"`
	// Optional. The notify group id for this flag.
	NotifyGroupId string `protobuf:"bytes,5,opt,name=notify_group_id,json=notifyGroupId,proto3" json:"notify_group_id,omitempty"`
	// Optional. The priority of the flag. Defaults to 0.
	Priority int32 `protobuf:"varint,6,opt,name=priority,proto3" json:"priority,omitempty"`
	// Output only. The version of this flag.
	Version int64 `protobuf:"varint,7,opt,name=version,proto3" json:"version,omitempty"`
	// Output only. Filters associated with this flag.
	Filters []*Filter `protobuf:"bytes,8,rep,name=filters,proto3" json:"filters,omitempty"`
	// Output only. Determines whether this flag must be reviewed.
	MustReview bool `protobuf:"varint,9,opt,name=must_review,json=mustReview,proto3" json:"must_review,omitempty"`
	// Output only. Determines whether this flag must be notified.
	MustNotify bool `protobuf:"varint,10,opt,name=must_notify,json=mustNotify,proto3" json:"must_notify,omitempty"`
	// Required. Boolean expression of filters which a transcript must match
	// for this flag to be applied.
	BoolExpr *Flag_BoolExpr `protobuf:"bytes,11,opt,name=bool_expr,json=boolExpr,proto3" json:"bool_expr,omitempty"`
	// Optional. Specifies dncl lists to update
	// if a transcript is flagged.
	DnclList      []*DnclList `protobuf:"bytes,12,rep,name=dncl_list,json=dnclList,proto3" json:"dncl_list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Flag) Reset() {
	*x = Flag{}
	mi := &file_api_v1alpha1_vanalytics_flag_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Flag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Flag) ProtoMessage() {}

func (x *Flag) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_vanalytics_flag_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Flag.ProtoReflect.Descriptor instead.
func (*Flag) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_vanalytics_flag_proto_rawDescGZIP(), []int{7}
}

func (x *Flag) GetFlagSid() int64 {
	if x != nil {
		return x.FlagSid
	}
	return 0
}

func (x *Flag) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Flag) GetReviewGroupId() string {
	if x != nil {
		return x.ReviewGroupId
	}
	return ""
}

func (x *Flag) GetNotifyGroupId() string {
	if x != nil {
		return x.NotifyGroupId
	}
	return ""
}

func (x *Flag) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *Flag) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Flag) GetFilters() []*Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *Flag) GetMustReview() bool {
	if x != nil {
		return x.MustReview
	}
	return false
}

func (x *Flag) GetMustNotify() bool {
	if x != nil {
		return x.MustNotify
	}
	return false
}

func (x *Flag) GetBoolExpr() *Flag_BoolExpr {
	if x != nil {
		return x.BoolExpr
	}
	return nil
}

func (x *Flag) GetDnclList() []*DnclList {
	if x != nil {
		return x.DnclList
	}
	return nil
}

// BoolExpr defines a boolean expression of filters.
type Flag_BoolExpr struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optional. Boolean and operator.
	And []*Flag_BoolExpr `protobuf:"bytes,1,rep,name=and,proto3" json:"and,omitempty"`
	// Optional. Boolean or operator.
	Or []*Flag_BoolExpr `protobuf:"bytes,2,rep,name=or,proto3" json:"or,omitempty"`
	// Optional. Filter to match.
	Filter *Flag_BoolExpr_Filter `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	// Optional. Boolean not operator.
	Not           *Flag_BoolExpr `protobuf:"bytes,4,opt,name=not,proto3" json:"not,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Flag_BoolExpr) Reset() {
	*x = Flag_BoolExpr{}
	mi := &file_api_v1alpha1_vanalytics_flag_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Flag_BoolExpr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Flag_BoolExpr) ProtoMessage() {}

func (x *Flag_BoolExpr) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_vanalytics_flag_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Flag_BoolExpr.ProtoReflect.Descriptor instead.
func (*Flag_BoolExpr) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_vanalytics_flag_proto_rawDescGZIP(), []int{7, 0}
}

func (x *Flag_BoolExpr) GetAnd() []*Flag_BoolExpr {
	if x != nil {
		return x.And
	}
	return nil
}

func (x *Flag_BoolExpr) GetOr() []*Flag_BoolExpr {
	if x != nil {
		return x.Or
	}
	return nil
}

func (x *Flag_BoolExpr) GetFilter() *Flag_BoolExpr_Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *Flag_BoolExpr) GetNot() *Flag_BoolExpr {
	if x != nil {
		return x.Not
	}
	return nil
}

// Filter defines a filter.
type Flag_BoolExpr_Filter struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. Filter sid.
	FilterSid     int64 `protobuf:"varint,1,opt,name=filter_sid,json=filterSid,proto3" json:"filter_sid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Flag_BoolExpr_Filter) Reset() {
	*x = Flag_BoolExpr_Filter{}
	mi := &file_api_v1alpha1_vanalytics_flag_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Flag_BoolExpr_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Flag_BoolExpr_Filter) ProtoMessage() {}

func (x *Flag_BoolExpr_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_vanalytics_flag_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Flag_BoolExpr_Filter.ProtoReflect.Descriptor instead.
func (*Flag_BoolExpr_Filter) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_vanalytics_flag_proto_rawDescGZIP(), []int{7, 0, 0}
}

func (x *Flag_BoolExpr_Filter) GetFilterSid() int64 {
	if x != nil {
		return x.FilterSid
	}
	return 0
}

var File_api_v1alpha1_vanalytics_flag_proto protoreflect.FileDescriptor

const file_api_v1alpha1_vanalytics_flag_proto_rawDesc = "" +
	"\n" +
	"\"api/v1alpha1/vanalytics/flag.proto\x12\x17api.v1alpha1.vanalytics\x1a'api/v1alpha1/vanalytics/dncl_list.proto\x1a$api/v1alpha1/vanalytics/filter.proto\x1a google/protobuf/field_mask.proto\"F\n" +
	"\x11CreateFlagRequest\x121\n" +
	"\x04flag\x18\x01 \x01(\v2\x1d.api.v1alpha1.vanalytics.FlagR\x04flag\"\xe1\x02\n" +
	"\x10ListFlagsRequest\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\rR\bpageSize\x12\x19\n" +
	"\border_by\x18\x03 \x01(\tR\aorderBy\x12\x1d\n" +
	"\n" +
	"page_token\x18\x04 \x01(\tR\tpageToken\x12\x1f\n" +
	"\n" +
	"filter_sid\x18\x05 \x01(\x03H\x00R\tfilterSid\x12\x1b\n" +
	"\tflag_sids\x18\x06 \x03(\x03R\bflagSids\x127\n" +
	"\tread_mask\x18\a \x01(\v2\x1a.google.protobuf.FieldMaskR\breadMask\x12\x14\n" +
	"\x05names\x18\b \x03(\tR\x05names\x12\x1e\n" +
	"\n" +
	"priorities\x18\t \x03(\x05R\n" +
	"priorities\x12\x1f\n" +
	"\vmust_review\x18\n" +
	" \x03(\bR\n" +
	"mustReview\x12\x1f\n" +
	"\vmust_notify\x18\v \x03(\bR\n" +
	"mustNotifyB\a\n" +
	"\x05where\"\x86\x01\n" +
	"\x11ListFlagsResponse\x12&\n" +
	"\x0fnext_page_token\x18\x01 \x01(\tR\rnextPageToken\x123\n" +
	"\x05flags\x18\x02 \x03(\v2\x1d.api.v1alpha1.vanalytics.FlagR\x05flags\x12\x14\n" +
	"\x05total\x18\x03 \x01(\x04R\x05total\"\x9e\x01\n" +
	"\x11UpdateFlagRequest\x12\x19\n" +
	"\bflag_sid\x18\x01 \x01(\x03R\aflagSid\x121\n" +
	"\x04flag\x18\x02 \x01(\v2\x1d.api.v1alpha1.vanalytics.FlagR\x04flag\x12;\n" +
	"\vupdate_mask\x18\x03 \x01(\v2\x1a.google.protobuf.FieldMaskR\n" +
	"updateMask\"F\n" +
	"\x11DeleteFlagRequest\x12\x19\n" +
	"\bflag_sid\x18\x01 \x01(\x03R\aflagSid\x12\x16\n" +
	"\x06return\x18\x03 \x01(\bR\x06return\"G\n" +
	"\x12DeleteFlagResponse\x121\n" +
	"\x04flag\x18\x01 \x01(\v2\x1d.api.v1alpha1.vanalytics.FlagR\x04flag\"L\n" +
	"\x0eGetFlagRequest\x12\x14\n" +
	"\x04name\x18\x02 \x01(\tH\x00R\x04name\x12\x1b\n" +
	"\bflag_sid\x18\x03 \x01(\x03H\x00R\aflagSidB\a\n" +
	"\x05where\"\xe6\x05\n" +
	"\x04Flag\x12\x19\n" +
	"\bflag_sid\x18\x01 \x01(\x03R\aflagSid\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12&\n" +
	"\x0freview_group_id\x18\x04 \x01(\tR\rreviewGroupId\x12&\n" +
	"\x0fnotify_group_id\x18\x05 \x01(\tR\rnotifyGroupId\x12\x1a\n" +
	"\bpriority\x18\x06 \x01(\x05R\bpriority\x12\x18\n" +
	"\aversion\x18\a \x01(\x03R\aversion\x129\n" +
	"\afilters\x18\b \x03(\v2\x1f.api.v1alpha1.vanalytics.FilterR\afilters\x12\x1f\n" +
	"\vmust_review\x18\t \x01(\bR\n" +
	"mustReview\x12\x1f\n" +
	"\vmust_notify\x18\n" +
	" \x01(\bR\n" +
	"mustNotify\x12C\n" +
	"\tbool_expr\x18\v \x01(\v2&.api.v1alpha1.vanalytics.Flag.BoolExprR\bboolExpr\x12>\n" +
	"\tdncl_list\x18\f \x03(\v2!.api.v1alpha1.vanalytics.DnclListR\bdnclList\x1a\xa6\x02\n" +
	"\bBoolExpr\x128\n" +
	"\x03and\x18\x01 \x03(\v2&.api.v1alpha1.vanalytics.Flag.BoolExprR\x03and\x126\n" +
	"\x02or\x18\x02 \x03(\v2&.api.v1alpha1.vanalytics.Flag.BoolExprR\x02or\x12E\n" +
	"\x06filter\x18\x03 \x01(\v2-.api.v1alpha1.vanalytics.Flag.BoolExpr.FilterR\x06filter\x128\n" +
	"\x03not\x18\x04 \x01(\v2&.api.v1alpha1.vanalytics.Flag.BoolExprR\x03not\x1a'\n" +
	"\x06Filter\x12\x1d\n" +
	"\n" +
	"filter_sid\x18\x01 \x01(\x03R\tfilterSidB\xda\x01\n" +
	"\x1bcom.api.v1alpha1.vanalyticsB\tFlagProtoP\x01Z2github.com/tcncloud/api-go/api/v1alpha1/vanalytics\xa2\x02\x03AVV\xaa\x02\x17Api.V1alpha1.Vanalytics\xca\x02\x17Api\\V1alpha1\\Vanalytics\xe2\x02#Api\\V1alpha1\\Vanalytics\\GPBMetadata\xea\x02\x19Api::V1alpha1::Vanalyticsb\x06proto3"

var (
	file_api_v1alpha1_vanalytics_flag_proto_rawDescOnce sync.Once
	file_api_v1alpha1_vanalytics_flag_proto_rawDescData []byte
)

func file_api_v1alpha1_vanalytics_flag_proto_rawDescGZIP() []byte {
	file_api_v1alpha1_vanalytics_flag_proto_rawDescOnce.Do(func() {
		file_api_v1alpha1_vanalytics_flag_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_v1alpha1_vanalytics_flag_proto_rawDesc), len(file_api_v1alpha1_vanalytics_flag_proto_rawDesc)))
	})
	return file_api_v1alpha1_vanalytics_flag_proto_rawDescData
}

var file_api_v1alpha1_vanalytics_flag_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_api_v1alpha1_vanalytics_flag_proto_goTypes = []any{
	(*CreateFlagRequest)(nil),     // 0: api.v1alpha1.vanalytics.CreateFlagRequest
	(*ListFlagsRequest)(nil),      // 1: api.v1alpha1.vanalytics.ListFlagsRequest
	(*ListFlagsResponse)(nil),     // 2: api.v1alpha1.vanalytics.ListFlagsResponse
	(*UpdateFlagRequest)(nil),     // 3: api.v1alpha1.vanalytics.UpdateFlagRequest
	(*DeleteFlagRequest)(nil),     // 4: api.v1alpha1.vanalytics.DeleteFlagRequest
	(*DeleteFlagResponse)(nil),    // 5: api.v1alpha1.vanalytics.DeleteFlagResponse
	(*GetFlagRequest)(nil),        // 6: api.v1alpha1.vanalytics.GetFlagRequest
	(*Flag)(nil),                  // 7: api.v1alpha1.vanalytics.Flag
	(*Flag_BoolExpr)(nil),         // 8: api.v1alpha1.vanalytics.Flag.BoolExpr
	(*Flag_BoolExpr_Filter)(nil),  // 9: api.v1alpha1.vanalytics.Flag.BoolExpr.Filter
	(*fieldmaskpb.FieldMask)(nil), // 10: google.protobuf.FieldMask
	(*Filter)(nil),                // 11: api.v1alpha1.vanalytics.Filter
	(*DnclList)(nil),              // 12: api.v1alpha1.vanalytics.DnclList
}
var file_api_v1alpha1_vanalytics_flag_proto_depIdxs = []int32{
	7,  // 0: api.v1alpha1.vanalytics.CreateFlagRequest.flag:type_name -> api.v1alpha1.vanalytics.Flag
	10, // 1: api.v1alpha1.vanalytics.ListFlagsRequest.read_mask:type_name -> google.protobuf.FieldMask
	7,  // 2: api.v1alpha1.vanalytics.ListFlagsResponse.flags:type_name -> api.v1alpha1.vanalytics.Flag
	7,  // 3: api.v1alpha1.vanalytics.UpdateFlagRequest.flag:type_name -> api.v1alpha1.vanalytics.Flag
	10, // 4: api.v1alpha1.vanalytics.UpdateFlagRequest.update_mask:type_name -> google.protobuf.FieldMask
	7,  // 5: api.v1alpha1.vanalytics.DeleteFlagResponse.flag:type_name -> api.v1alpha1.vanalytics.Flag
	11, // 6: api.v1alpha1.vanalytics.Flag.filters:type_name -> api.v1alpha1.vanalytics.Filter
	8,  // 7: api.v1alpha1.vanalytics.Flag.bool_expr:type_name -> api.v1alpha1.vanalytics.Flag.BoolExpr
	12, // 8: api.v1alpha1.vanalytics.Flag.dncl_list:type_name -> api.v1alpha1.vanalytics.DnclList
	8,  // 9: api.v1alpha1.vanalytics.Flag.BoolExpr.and:type_name -> api.v1alpha1.vanalytics.Flag.BoolExpr
	8,  // 10: api.v1alpha1.vanalytics.Flag.BoolExpr.or:type_name -> api.v1alpha1.vanalytics.Flag.BoolExpr
	9,  // 11: api.v1alpha1.vanalytics.Flag.BoolExpr.filter:type_name -> api.v1alpha1.vanalytics.Flag.BoolExpr.Filter
	8,  // 12: api.v1alpha1.vanalytics.Flag.BoolExpr.not:type_name -> api.v1alpha1.vanalytics.Flag.BoolExpr
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_api_v1alpha1_vanalytics_flag_proto_init() }
func file_api_v1alpha1_vanalytics_flag_proto_init() {
	if File_api_v1alpha1_vanalytics_flag_proto != nil {
		return
	}
	file_api_v1alpha1_vanalytics_dncl_list_proto_init()
	file_api_v1alpha1_vanalytics_filter_proto_init()
	file_api_v1alpha1_vanalytics_flag_proto_msgTypes[1].OneofWrappers = []any{
		(*ListFlagsRequest_FilterSid)(nil),
	}
	file_api_v1alpha1_vanalytics_flag_proto_msgTypes[6].OneofWrappers = []any{
		(*GetFlagRequest_Name)(nil),
		(*GetFlagRequest_FlagSid)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_v1alpha1_vanalytics_flag_proto_rawDesc), len(file_api_v1alpha1_vanalytics_flag_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_v1alpha1_vanalytics_flag_proto_goTypes,
		DependencyIndexes: file_api_v1alpha1_vanalytics_flag_proto_depIdxs,
		MessageInfos:      file_api_v1alpha1_vanalytics_flag_proto_msgTypes,
	}.Build()
	File_api_v1alpha1_vanalytics_flag_proto = out.File
	file_api_v1alpha1_vanalytics_flag_proto_goTypes = nil
	file_api_v1alpha1_vanalytics_flag_proto_depIdxs = nil
}
