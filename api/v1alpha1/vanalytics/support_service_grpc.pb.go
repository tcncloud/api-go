// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             (unknown)
// source: api/v1alpha1/vanalytics/support_service.proto

package vanalytics

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	VanalyticsSupport_DeleteFlagTranscript_FullMethodName = "/api.v1alpha1.vanalytics.VanalyticsSupport/DeleteFlagTranscript"
	VanalyticsSupport_SearchByOrgId_FullMethodName        = "/api.v1alpha1.vanalytics.VanalyticsSupport/SearchByOrgId"
)

// VanalyticsSupportClient is the client API for VanalyticsSupport service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type VanalyticsSupportClient interface {
	// DeleteFlagTranscript deletes a flag transcript.
	DeleteFlagTranscript(ctx context.Context, in *DeleteFlagTranscriptRequest, opts ...grpc.CallOption) (*DeleteFlagTranscriptResponse, error)
	// SearchByOrgId searches transcripts for a specific org.
	SearchByOrgId(ctx context.Context, in *SearchByOrgIdRequest, opts ...grpc.CallOption) (*SearchResponse, error)
}

type vanalyticsSupportClient struct {
	cc grpc.ClientConnInterface
}

func NewVanalyticsSupportClient(cc grpc.ClientConnInterface) VanalyticsSupportClient {
	return &vanalyticsSupportClient{cc}
}

func (c *vanalyticsSupportClient) DeleteFlagTranscript(ctx context.Context, in *DeleteFlagTranscriptRequest, opts ...grpc.CallOption) (*DeleteFlagTranscriptResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(DeleteFlagTranscriptResponse)
	err := c.cc.Invoke(ctx, VanalyticsSupport_DeleteFlagTranscript_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vanalyticsSupportClient) SearchByOrgId(ctx context.Context, in *SearchByOrgIdRequest, opts ...grpc.CallOption) (*SearchResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(SearchResponse)
	err := c.cc.Invoke(ctx, VanalyticsSupport_SearchByOrgId_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// VanalyticsSupportServer is the server API for VanalyticsSupport service.
// All implementations must embed UnimplementedVanalyticsSupportServer
// for forward compatibility.
type VanalyticsSupportServer interface {
	// DeleteFlagTranscript deletes a flag transcript.
	DeleteFlagTranscript(context.Context, *DeleteFlagTranscriptRequest) (*DeleteFlagTranscriptResponse, error)
	// SearchByOrgId searches transcripts for a specific org.
	SearchByOrgId(context.Context, *SearchByOrgIdRequest) (*SearchResponse, error)
	mustEmbedUnimplementedVanalyticsSupportServer()
}

// UnimplementedVanalyticsSupportServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedVanalyticsSupportServer struct{}

func (UnimplementedVanalyticsSupportServer) DeleteFlagTranscript(context.Context, *DeleteFlagTranscriptRequest) (*DeleteFlagTranscriptResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteFlagTranscript not implemented")
}
func (UnimplementedVanalyticsSupportServer) SearchByOrgId(context.Context, *SearchByOrgIdRequest) (*SearchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchByOrgId not implemented")
}
func (UnimplementedVanalyticsSupportServer) mustEmbedUnimplementedVanalyticsSupportServer() {}
func (UnimplementedVanalyticsSupportServer) testEmbeddedByValue()                           {}

// UnsafeVanalyticsSupportServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to VanalyticsSupportServer will
// result in compilation errors.
type UnsafeVanalyticsSupportServer interface {
	mustEmbedUnimplementedVanalyticsSupportServer()
}

func RegisterVanalyticsSupportServer(s grpc.ServiceRegistrar, srv VanalyticsSupportServer) {
	// If the following call pancis, it indicates UnimplementedVanalyticsSupportServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&VanalyticsSupport_ServiceDesc, srv)
}

func _VanalyticsSupport_DeleteFlagTranscript_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteFlagTranscriptRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VanalyticsSupportServer).DeleteFlagTranscript(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: VanalyticsSupport_DeleteFlagTranscript_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VanalyticsSupportServer).DeleteFlagTranscript(ctx, req.(*DeleteFlagTranscriptRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VanalyticsSupport_SearchByOrgId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchByOrgIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VanalyticsSupportServer).SearchByOrgId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: VanalyticsSupport_SearchByOrgId_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VanalyticsSupportServer).SearchByOrgId(ctx, req.(*SearchByOrgIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// VanalyticsSupport_ServiceDesc is the grpc.ServiceDesc for VanalyticsSupport service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var VanalyticsSupport_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "api.v1alpha1.vanalytics.VanalyticsSupport",
	HandlerType: (*VanalyticsSupportServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DeleteFlagTranscript",
			Handler:    _VanalyticsSupport_DeleteFlagTranscript_Handler,
		},
		{
			MethodName: "SearchByOrgId",
			Handler:    _VanalyticsSupport_SearchByOrgId_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/v1alpha1/vanalytics/support_service.proto",
}
