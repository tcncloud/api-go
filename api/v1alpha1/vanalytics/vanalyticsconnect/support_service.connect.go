// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: api/v1alpha1/vanalytics/support_service.proto

package vanalyticsconnect

import (
	context "context"
	errors "errors"
	connect_go "github.com/bufbuild/connect-go"
	vanalytics "github.com/tcncloud/api-go/api/v1alpha1/vanalytics"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect_go.IsAtLeastVersion0_1_0

const (
	// VanalyticsSupportName is the fully-qualified name of the VanalyticsSupport service.
	VanalyticsSupportName = "api.v1alpha1.vanalytics.VanalyticsSupport"
)

// These constants are the fully-qualified names of the RPCs defined in this package. They're
// exposed at runtime as Spec.Procedure and as the final two segments of the HTTP route.
//
// Note that these are different from the fully-qualified method names used by
// google.golang.org/protobuf/reflect/protoreflect. To convert from these constants to
// reflection-formatted method names, remove the leading slash and convert the remaining slash to a
// period.
const (
	// VanalyticsSupportDeleteFlagTranscriptProcedure is the fully-qualified name of the
	// VanalyticsSupport's DeleteFlagTranscript RPC.
	VanalyticsSupportDeleteFlagTranscriptProcedure = "/api.v1alpha1.vanalytics.VanalyticsSupport/DeleteFlagTranscript"
	// VanalyticsSupportSearchByOrgIdProcedure is the fully-qualified name of the VanalyticsSupport's
	// SearchByOrgId RPC.
	VanalyticsSupportSearchByOrgIdProcedure = "/api.v1alpha1.vanalytics.VanalyticsSupport/SearchByOrgId"
)

// VanalyticsSupportClient is a client for the api.v1alpha1.vanalytics.VanalyticsSupport service.
type VanalyticsSupportClient interface {
	// DeleteFlagTranscript deletes a flag transcript.
	DeleteFlagTranscript(context.Context, *connect_go.Request[vanalytics.DeleteFlagTranscriptRequest]) (*connect_go.Response[vanalytics.DeleteFlagTranscriptResponse], error)
	// SearchByOrgId searches transcripts for a specific org.
	SearchByOrgId(context.Context, *connect_go.Request[vanalytics.SearchByOrgIdRequest]) (*connect_go.Response[vanalytics.SearchResponse], error)
}

// NewVanalyticsSupportClient constructs a client for the api.v1alpha1.vanalytics.VanalyticsSupport
// service. By default, it uses the Connect protocol with the binary Protobuf Codec, asks for
// gzipped responses, and sends uncompressed requests. To use the gRPC or gRPC-Web protocols, supply
// the connect.WithGRPC() or connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewVanalyticsSupportClient(httpClient connect_go.HTTPClient, baseURL string, opts ...connect_go.ClientOption) VanalyticsSupportClient {
	baseURL = strings.TrimRight(baseURL, "/")
	return &vanalyticsSupportClient{
		deleteFlagTranscript: connect_go.NewClient[vanalytics.DeleteFlagTranscriptRequest, vanalytics.DeleteFlagTranscriptResponse](
			httpClient,
			baseURL+VanalyticsSupportDeleteFlagTranscriptProcedure,
			opts...,
		),
		searchByOrgId: connect_go.NewClient[vanalytics.SearchByOrgIdRequest, vanalytics.SearchResponse](
			httpClient,
			baseURL+VanalyticsSupportSearchByOrgIdProcedure,
			opts...,
		),
	}
}

// vanalyticsSupportClient implements VanalyticsSupportClient.
type vanalyticsSupportClient struct {
	deleteFlagTranscript *connect_go.Client[vanalytics.DeleteFlagTranscriptRequest, vanalytics.DeleteFlagTranscriptResponse]
	searchByOrgId        *connect_go.Client[vanalytics.SearchByOrgIdRequest, vanalytics.SearchResponse]
}

// DeleteFlagTranscript calls api.v1alpha1.vanalytics.VanalyticsSupport.DeleteFlagTranscript.
func (c *vanalyticsSupportClient) DeleteFlagTranscript(ctx context.Context, req *connect_go.Request[vanalytics.DeleteFlagTranscriptRequest]) (*connect_go.Response[vanalytics.DeleteFlagTranscriptResponse], error) {
	return c.deleteFlagTranscript.CallUnary(ctx, req)
}

// SearchByOrgId calls api.v1alpha1.vanalytics.VanalyticsSupport.SearchByOrgId.
func (c *vanalyticsSupportClient) SearchByOrgId(ctx context.Context, req *connect_go.Request[vanalytics.SearchByOrgIdRequest]) (*connect_go.Response[vanalytics.SearchResponse], error) {
	return c.searchByOrgId.CallUnary(ctx, req)
}

// VanalyticsSupportHandler is an implementation of the api.v1alpha1.vanalytics.VanalyticsSupport
// service.
type VanalyticsSupportHandler interface {
	// DeleteFlagTranscript deletes a flag transcript.
	DeleteFlagTranscript(context.Context, *connect_go.Request[vanalytics.DeleteFlagTranscriptRequest]) (*connect_go.Response[vanalytics.DeleteFlagTranscriptResponse], error)
	// SearchByOrgId searches transcripts for a specific org.
	SearchByOrgId(context.Context, *connect_go.Request[vanalytics.SearchByOrgIdRequest]) (*connect_go.Response[vanalytics.SearchResponse], error)
}

// NewVanalyticsSupportHandler builds an HTTP handler from the service implementation. It returns
// the path on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewVanalyticsSupportHandler(svc VanalyticsSupportHandler, opts ...connect_go.HandlerOption) (string, http.Handler) {
	vanalyticsSupportDeleteFlagTranscriptHandler := connect_go.NewUnaryHandler(
		VanalyticsSupportDeleteFlagTranscriptProcedure,
		svc.DeleteFlagTranscript,
		opts...,
	)
	vanalyticsSupportSearchByOrgIdHandler := connect_go.NewUnaryHandler(
		VanalyticsSupportSearchByOrgIdProcedure,
		svc.SearchByOrgId,
		opts...,
	)
	return "/api.v1alpha1.vanalytics.VanalyticsSupport/", http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		switch r.URL.Path {
		case VanalyticsSupportDeleteFlagTranscriptProcedure:
			vanalyticsSupportDeleteFlagTranscriptHandler.ServeHTTP(w, r)
		case VanalyticsSupportSearchByOrgIdProcedure:
			vanalyticsSupportSearchByOrgIdHandler.ServeHTTP(w, r)
		default:
			http.NotFound(w, r)
		}
	})
}

// UnimplementedVanalyticsSupportHandler returns CodeUnimplemented from all methods.
type UnimplementedVanalyticsSupportHandler struct{}

func (UnimplementedVanalyticsSupportHandler) DeleteFlagTranscript(context.Context, *connect_go.Request[vanalytics.DeleteFlagTranscriptRequest]) (*connect_go.Response[vanalytics.DeleteFlagTranscriptResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v1alpha1.vanalytics.VanalyticsSupport.DeleteFlagTranscript is not implemented"))
}

func (UnimplementedVanalyticsSupportHandler) SearchByOrgId(context.Context, *connect_go.Request[vanalytics.SearchByOrgIdRequest]) (*connect_go.Response[vanalytics.SearchResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v1alpha1.vanalytics.VanalyticsSupport.SearchByOrgId is not implemented"))
}
