// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: api/v1alpha1/tickets/ticket.proto

package tickets

import (
	commons "github.com/tcncloud/api-go/api/commons"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ActionTypes int32

const (
	// NA
	ActionTypes_NA ActionTypes = 0
	// CALLBACK
	ActionTypes_Callback ActionTypes = 1
	// EMAIBACK
	ActionTypes_Emailback ActionTypes = 2
	// SMSBACK
	ActionTypes_Smsback ActionTypes = 3
)

// Enum value maps for ActionTypes.
var (
	ActionTypes_name = map[int32]string{
		0: "NA",
		1: "Callback",
		2: "Emailback",
		3: "Smsback",
	}
	ActionTypes_value = map[string]int32{
		"NA":        0,
		"Callback":  1,
		"Emailback": 2,
		"Smsback":   3,
	}
)

func (x ActionTypes) Enum() *ActionTypes {
	p := new(ActionTypes)
	*p = x
	return p
}

func (x ActionTypes) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActionTypes) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1alpha1_tickets_ticket_proto_enumTypes[0].Descriptor()
}

func (ActionTypes) Type() protoreflect.EnumType {
	return &file_api_v1alpha1_tickets_ticket_proto_enumTypes[0]
}

func (x ActionTypes) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActionTypes.Descriptor instead.
func (ActionTypes) EnumDescriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{0}
}

type SLAConditions int32

const (
	// NA
	SLAConditions_None SLAConditions = 0
	// Respond
	SLAConditions_Respond SLAConditions = 1
	// Resolve
	SLAConditions_Resolve SLAConditions = 2
)

// Enum value maps for SLAConditions.
var (
	SLAConditions_name = map[int32]string{
		0: "None",
		1: "Respond",
		2: "Resolve",
	}
	SLAConditions_value = map[string]int32{
		"None":    0,
		"Respond": 1,
		"Resolve": 2,
	}
)

func (x SLAConditions) Enum() *SLAConditions {
	p := new(SLAConditions)
	*p = x
	return p
}

func (x SLAConditions) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SLAConditions) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1alpha1_tickets_ticket_proto_enumTypes[1].Descriptor()
}

func (SLAConditions) Type() protoreflect.EnumType {
	return &file_api_v1alpha1_tickets_ticket_proto_enumTypes[1]
}

func (x SLAConditions) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SLAConditions.Descriptor instead.
func (SLAConditions) EnumDescriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{1}
}

type PingReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PingReq) Reset() {
	*x = PingReq{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingReq) ProtoMessage() {}

func (x *PingReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingReq.ProtoReflect.Descriptor instead.
func (*PingReq) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{0}
}

type PingRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PingRes) Reset() {
	*x = PingRes{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRes) ProtoMessage() {}

func (x *PingRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRes.ProtoReflect.Descriptor instead.
func (*PingRes) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{1}
}

// CreateTicketReq - Request for CreateTicket
type CreateTicketReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// title of the ticket to be created.
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// description of the ticket
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// the enabled project sid. project must have been enabled/imported from omni.project.project_sid to tickets_db.ticket_project.project_sid
	ProjectSid int64 `protobuf:"varint,3,opt,name=project_sid,json=projectSid,proto3" json:"project_sid,omitempty"`
	// ticket due date
	DueDate *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=due_date,json=dueDate,proto3" json:"due_date,omitempty"`
	// A list of conversation context meatadatgit stata
	Metadata []*commons.Metadata `protobuf:"bytes,9,rep,name=metadata,proto3" json:"metadata,omitempty"`
	// A list of skills assotiated with a ticket
	//
	// Deprecated: Marked as deprecated in api/v1alpha1/tickets/ticket.proto.
	TicketSkills []*commons.Skills `protobuf:"bytes,10,rep,name=ticket_skills,json=ticketSkills,proto3" json:"ticket_skills,omitempty"`
	// Status - Ticket status : 1 open, 2 doing, 3 close etc
	Status int64 `protobuf:"varint,11,opt,name=status,proto3" json:"status,omitempty"`
	// A list of sla assotiated with a ticket
	TicketSla  []*commons.Sla `protobuf:"bytes,12,rep,name=ticket_sla,json=ticketSla,proto3" json:"ticket_sla,omitempty"`
	AssignSelf bool           `protobuf:"varint,13,opt,name=assign_self,json=assignSelf,proto3" json:"assign_self,omitempty"`
	// Deprecated: Marked as deprecated in api/v1alpha1/tickets/ticket.proto.
	AssignOther  string                  `protobuf:"bytes,14,opt,name=assign_other,json=assignOther,proto3" json:"assign_other,omitempty"`
	TicketAction []*commons.TicketAction `protobuf:"bytes,15,rep,name=ticket_action,json=ticketAction,proto3" json:"ticket_action,omitempty"`
	// assignee list
	TicketAssignee []string `protobuf:"bytes,16,rep,name=ticket_assignee,json=ticketAssignee,proto3" json:"ticket_assignee,omitempty"`
	ContactEntryId int64    `protobuf:"varint,17,opt,name=contact_entry_id,json=contactEntryId,proto3" json:"contact_entry_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreateTicketReq) Reset() {
	*x = CreateTicketReq{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTicketReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTicketReq) ProtoMessage() {}

func (x *CreateTicketReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTicketReq.ProtoReflect.Descriptor instead.
func (*CreateTicketReq) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{2}
}

func (x *CreateTicketReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateTicketReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateTicketReq) GetProjectSid() int64 {
	if x != nil {
		return x.ProjectSid
	}
	return 0
}

func (x *CreateTicketReq) GetDueDate() *timestamppb.Timestamp {
	if x != nil {
		return x.DueDate
	}
	return nil
}

func (x *CreateTicketReq) GetMetadata() []*commons.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Deprecated: Marked as deprecated in api/v1alpha1/tickets/ticket.proto.
func (x *CreateTicketReq) GetTicketSkills() []*commons.Skills {
	if x != nil {
		return x.TicketSkills
	}
	return nil
}

func (x *CreateTicketReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CreateTicketReq) GetTicketSla() []*commons.Sla {
	if x != nil {
		return x.TicketSla
	}
	return nil
}

func (x *CreateTicketReq) GetAssignSelf() bool {
	if x != nil {
		return x.AssignSelf
	}
	return false
}

// Deprecated: Marked as deprecated in api/v1alpha1/tickets/ticket.proto.
func (x *CreateTicketReq) GetAssignOther() string {
	if x != nil {
		return x.AssignOther
	}
	return ""
}

func (x *CreateTicketReq) GetTicketAction() []*commons.TicketAction {
	if x != nil {
		return x.TicketAction
	}
	return nil
}

func (x *CreateTicketReq) GetTicketAssignee() []string {
	if x != nil {
		return x.TicketAssignee
	}
	return nil
}

func (x *CreateTicketReq) GetContactEntryId() int64 {
	if x != nil {
		return x.ContactEntryId
	}
	return 0
}

type CreateTicketTemplateRequest struct {
	state          protoimpl.MessageState  `protogen:"open.v1"`
	TicketTemplate *commons.TicketTemplate `protobuf:"bytes,1,opt,name=ticket_template,json=ticketTemplate,proto3" json:"ticket_template,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreateTicketTemplateRequest) Reset() {
	*x = CreateTicketTemplateRequest{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTicketTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTicketTemplateRequest) ProtoMessage() {}

func (x *CreateTicketTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTicketTemplateRequest.ProtoReflect.Descriptor instead.
func (*CreateTicketTemplateRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{3}
}

func (x *CreateTicketTemplateRequest) GetTicketTemplate() *commons.TicketTemplate {
	if x != nil {
		return x.TicketTemplate
	}
	return nil
}

type CreateTicketTemplateResponse struct {
	state          protoimpl.MessageState  `protogen:"open.v1"`
	TicketTemplate *commons.TicketTemplate `protobuf:"bytes,1,opt,name=ticket_template,json=ticketTemplate,proto3" json:"ticket_template,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreateTicketTemplateResponse) Reset() {
	*x = CreateTicketTemplateResponse{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTicketTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTicketTemplateResponse) ProtoMessage() {}

func (x *CreateTicketTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTicketTemplateResponse.ProtoReflect.Descriptor instead.
func (*CreateTicketTemplateResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{4}
}

func (x *CreateTicketTemplateResponse) GetTicketTemplate() *commons.TicketTemplate {
	if x != nil {
		return x.TicketTemplate
	}
	return nil
}

type EditTicketTemplateRequest struct {
	state            protoimpl.MessageState  `protogen:"open.v1"`
	TicketTemplateId int64                   `protobuf:"varint,1,opt,name=ticket_template_id,json=ticketTemplateId,proto3" json:"ticket_template_id,omitempty"`
	EditValue        *commons.TicketTemplate `protobuf:"bytes,2,opt,name=edit_value,json=editValue,proto3" json:"edit_value,omitempty"`
	EditedFieldsMask *fieldmaskpb.FieldMask  `protobuf:"bytes,3,opt,name=edited_fields_mask,json=editedFieldsMask,proto3" json:"edited_fields_mask,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *EditTicketTemplateRequest) Reset() {
	*x = EditTicketTemplateRequest{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditTicketTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditTicketTemplateRequest) ProtoMessage() {}

func (x *EditTicketTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditTicketTemplateRequest.ProtoReflect.Descriptor instead.
func (*EditTicketTemplateRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{5}
}

func (x *EditTicketTemplateRequest) GetTicketTemplateId() int64 {
	if x != nil {
		return x.TicketTemplateId
	}
	return 0
}

func (x *EditTicketTemplateRequest) GetEditValue() *commons.TicketTemplate {
	if x != nil {
		return x.EditValue
	}
	return nil
}

func (x *EditTicketTemplateRequest) GetEditedFieldsMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.EditedFieldsMask
	}
	return nil
}

type EditTicketTemplateResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Deprecated: Marked as deprecated in api/v1alpha1/tickets/ticket.proto.
	IsEdited      bool `protobuf:"varint,1,opt,name=is_edited,json=isEdited,proto3" json:"is_edited,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EditTicketTemplateResponse) Reset() {
	*x = EditTicketTemplateResponse{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditTicketTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditTicketTemplateResponse) ProtoMessage() {}

func (x *EditTicketTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditTicketTemplateResponse.ProtoReflect.Descriptor instead.
func (*EditTicketTemplateResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{6}
}

// Deprecated: Marked as deprecated in api/v1alpha1/tickets/ticket.proto.
func (x *EditTicketTemplateResponse) GetIsEdited() bool {
	if x != nil {
		return x.IsEdited
	}
	return false
}

type ListTicketTemplateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Deprecated: Marked as deprecated in api/v1alpha1/tickets/ticket.proto.
	TicketTemplateId int64 `protobuf:"varint,1,opt,name=ticket_template_id,json=ticketTemplateId,proto3" json:"ticket_template_id,omitempty"`
	// Deprecated: Marked as deprecated in api/v1alpha1/tickets/ticket.proto.
	ProjectId int64 `protobuf:"varint,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// List values based on TemplateId OR ProjectId. If no mask is sent, return all template's based on ORG Id
	RequestMask       *fieldmaskpb.FieldMask `protobuf:"bytes,3,opt,name=request_mask,json=requestMask,proto3" json:"request_mask,omitempty"`
	TemplateId        int64                  `protobuf:"varint,4,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	TemplateProjectId int64                  `protobuf:"varint,5,opt,name=template_project_id,json=templateProjectId,proto3" json:"template_project_id,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ListTicketTemplateRequest) Reset() {
	*x = ListTicketTemplateRequest{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTicketTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTicketTemplateRequest) ProtoMessage() {}

func (x *ListTicketTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTicketTemplateRequest.ProtoReflect.Descriptor instead.
func (*ListTicketTemplateRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{7}
}

// Deprecated: Marked as deprecated in api/v1alpha1/tickets/ticket.proto.
func (x *ListTicketTemplateRequest) GetTicketTemplateId() int64 {
	if x != nil {
		return x.TicketTemplateId
	}
	return 0
}

// Deprecated: Marked as deprecated in api/v1alpha1/tickets/ticket.proto.
func (x *ListTicketTemplateRequest) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ListTicketTemplateRequest) GetRequestMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.RequestMask
	}
	return nil
}

func (x *ListTicketTemplateRequest) GetTemplateId() int64 {
	if x != nil {
		return x.TemplateId
	}
	return 0
}

func (x *ListTicketTemplateRequest) GetTemplateProjectId() int64 {
	if x != nil {
		return x.TemplateProjectId
	}
	return 0
}

type ListTicketTemplateResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Deprecated: Marked as deprecated in api/v1alpha1/tickets/ticket.proto.
	EnabledTemplates      []*commons.ListTemplate          `protobuf:"bytes,1,rep,name=enabled_templates,json=enabledTemplates,proto3" json:"enabled_templates,omitempty"`
	TicketProjectTemplate []*commons.TicketProjectTemplate `protobuf:"bytes,2,rep,name=ticket_project_template,json=ticketProjectTemplate,proto3" json:"ticket_project_template,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *ListTicketTemplateResponse) Reset() {
	*x = ListTicketTemplateResponse{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTicketTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTicketTemplateResponse) ProtoMessage() {}

func (x *ListTicketTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTicketTemplateResponse.ProtoReflect.Descriptor instead.
func (*ListTicketTemplateResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{8}
}

// Deprecated: Marked as deprecated in api/v1alpha1/tickets/ticket.proto.
func (x *ListTicketTemplateResponse) GetEnabledTemplates() []*commons.ListTemplate {
	if x != nil {
		return x.EnabledTemplates
	}
	return nil
}

func (x *ListTicketTemplateResponse) GetTicketProjectTemplate() []*commons.TicketProjectTemplate {
	if x != nil {
		return x.TicketProjectTemplate
	}
	return nil
}

// AssignProjectTemplate
type AssignProjectTemplateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Deprecated: Marked as deprecated in api/v1alpha1/tickets/ticket.proto.
	ProjectTemplate     *commons.AssignProjectTemplate `protobuf:"bytes,1,opt,name=project_template,json=projectTemplate,proto3" json:"project_template,omitempty"`
	ProjectId           int64                          `protobuf:"varint,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	TemplateDescription []*commons.TemplateDescription `protobuf:"bytes,3,rep,name=template_description,json=templateDescription,proto3" json:"template_description,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *AssignProjectTemplateRequest) Reset() {
	*x = AssignProjectTemplateRequest{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignProjectTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignProjectTemplateRequest) ProtoMessage() {}

func (x *AssignProjectTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignProjectTemplateRequest.ProtoReflect.Descriptor instead.
func (*AssignProjectTemplateRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{9}
}

// Deprecated: Marked as deprecated in api/v1alpha1/tickets/ticket.proto.
func (x *AssignProjectTemplateRequest) GetProjectTemplate() *commons.AssignProjectTemplate {
	if x != nil {
		return x.ProjectTemplate
	}
	return nil
}

func (x *AssignProjectTemplateRequest) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *AssignProjectTemplateRequest) GetTemplateDescription() []*commons.TemplateDescription {
	if x != nil {
		return x.TemplateDescription
	}
	return nil
}

type AssignProjectTemplateResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Deprecated: Marked as deprecated in api/v1alpha1/tickets/ticket.proto.
	IsAssigned    bool `protobuf:"varint,1,opt,name=is_assigned,json=isAssigned,proto3" json:"is_assigned,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AssignProjectTemplateResponse) Reset() {
	*x = AssignProjectTemplateResponse{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignProjectTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignProjectTemplateResponse) ProtoMessage() {}

func (x *AssignProjectTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignProjectTemplateResponse.ProtoReflect.Descriptor instead.
func (*AssignProjectTemplateResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{10}
}

// Deprecated: Marked as deprecated in api/v1alpha1/tickets/ticket.proto.
func (x *AssignProjectTemplateResponse) GetIsAssigned() bool {
	if x != nil {
		return x.IsAssigned
	}
	return false
}

// CreateTicketRes - Response from CreateTicket BE API
type CreateTicketRes struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Returns the created ticket row in the response
	Ticket        *commons.Ticket `protobuf:"bytes,1,opt,name=ticket,proto3" json:"ticket,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTicketRes) Reset() {
	*x = CreateTicketRes{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTicketRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTicketRes) ProtoMessage() {}

func (x *CreateTicketRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTicketRes.ProtoReflect.Descriptor instead.
func (*CreateTicketRes) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{11}
}

func (x *CreateTicketRes) GetTicket() *commons.Ticket {
	if x != nil {
		return x.Ticket
	}
	return nil
}

// Request all the Action Types
type GetActionTypeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetActionTypeRequest) Reset() {
	*x = GetActionTypeRequest{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetActionTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActionTypeRequest) ProtoMessage() {}

func (x *GetActionTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActionTypeRequest.ProtoReflect.Descriptor instead.
func (*GetActionTypeRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{12}
}

// Returns all the Action Types
type GetActionTypeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ActionType    []*commons.ActionType  `protobuf:"bytes,1,rep,name=action_type,json=actionType,proto3" json:"action_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetActionTypeResponse) Reset() {
	*x = GetActionTypeResponse{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetActionTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActionTypeResponse) ProtoMessage() {}

func (x *GetActionTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActionTypeResponse.ProtoReflect.Descriptor instead.
func (*GetActionTypeResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{13}
}

func (x *GetActionTypeResponse) GetActionType() []*commons.ActionType {
	if x != nil {
		return x.ActionType
	}
	return nil
}

// Reqiest For Phone Number Validation - Mobile/Other/Invalid
//
// Deprecated: Marked as deprecated in api/v1alpha1/tickets/ticket.proto.
type GetPhoneNumberTypeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PhoneNumber   string                 `protobuf:"bytes,1,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPhoneNumberTypeRequest) Reset() {
	*x = GetPhoneNumberTypeRequest{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPhoneNumberTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPhoneNumberTypeRequest) ProtoMessage() {}

func (x *GetPhoneNumberTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPhoneNumberTypeRequest.ProtoReflect.Descriptor instead.
func (*GetPhoneNumberTypeRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{14}
}

func (x *GetPhoneNumberTypeRequest) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

// Deprecated: Marked as deprecated in api/v1alpha1/tickets/ticket.proto.
type GetPhoneNumberTypeResponse struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	PhoneType     commons.PhoneNumberType `protobuf:"varint,1,opt,name=phone_type,json=phoneType,proto3,enum=api.commons.PhoneNumberType" json:"phone_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPhoneNumberTypeResponse) Reset() {
	*x = GetPhoneNumberTypeResponse{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPhoneNumberTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPhoneNumberTypeResponse) ProtoMessage() {}

func (x *GetPhoneNumberTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPhoneNumberTypeResponse.ProtoReflect.Descriptor instead.
func (*GetPhoneNumberTypeResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{15}
}

func (x *GetPhoneNumberTypeResponse) GetPhoneType() commons.PhoneNumberType {
	if x != nil {
		return x.PhoneType
	}
	return commons.PhoneNumberType(0)
}

// EditTicketReq - Request for EditTicketReq
//
// Deprecated: Marked as deprecated in api/v1alpha1/tickets/ticket.proto.
type EditTicketReq struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	TicketSid int64                  `protobuf:"varint,1,opt,name=ticket_sid,json=ticketSid,proto3" json:"ticket_sid,omitempty"`
	// The comment text
	EditValue     *commons.EditAttribute `protobuf:"bytes,2,opt,name=edit_value,json=editValue,proto3" json:"edit_value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EditTicketReq) Reset() {
	*x = EditTicketReq{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditTicketReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditTicketReq) ProtoMessage() {}

func (x *EditTicketReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditTicketReq.ProtoReflect.Descriptor instead.
func (*EditTicketReq) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{16}
}

func (x *EditTicketReq) GetTicketSid() int64 {
	if x != nil {
		return x.TicketSid
	}
	return 0
}

func (x *EditTicketReq) GetEditValue() *commons.EditAttribute {
	if x != nil {
		return x.EditValue
	}
	return nil
}

// EditMaskTicketReq - Request for EditMaskTicket
// EditTicketReq would be deprecated
type EditMaskTicketReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Ticket Id
	//
	// Deprecated: Marked as deprecated in api/v1alpha1/tickets/ticket.proto.
	TicketSid int64 `protobuf:"varint,1,opt,name=ticket_sid,json=ticketSid,proto3" json:"ticket_sid,omitempty"`
	// Ticket Object
	EditValue *commons.Ticket `protobuf:"bytes,2,opt,name=edit_value,json=editValue,proto3" json:"edit_value,omitempty"`
	// Field to be edited in DB
	EditedFieldsMask []*fieldmaskpb.FieldMask `protobuf:"bytes,3,rep,name=edited_fields_mask,json=editedFieldsMask,proto3" json:"edited_fields_mask,omitempty"`
	// ticket_code
	TicketCode     string `protobuf:"bytes,4,opt,name=ticket_code,json=ticketCode,proto3" json:"ticket_code,omitempty"`
	ContactEntryId int64  `protobuf:"varint,5,opt,name=contact_entry_id,json=contactEntryId,proto3" json:"contact_entry_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *EditMaskTicketReq) Reset() {
	*x = EditMaskTicketReq{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditMaskTicketReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditMaskTicketReq) ProtoMessage() {}

func (x *EditMaskTicketReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditMaskTicketReq.ProtoReflect.Descriptor instead.
func (*EditMaskTicketReq) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{17}
}

// Deprecated: Marked as deprecated in api/v1alpha1/tickets/ticket.proto.
func (x *EditMaskTicketReq) GetTicketSid() int64 {
	if x != nil {
		return x.TicketSid
	}
	return 0
}

func (x *EditMaskTicketReq) GetEditValue() *commons.Ticket {
	if x != nil {
		return x.EditValue
	}
	return nil
}

func (x *EditMaskTicketReq) GetEditedFieldsMask() []*fieldmaskpb.FieldMask {
	if x != nil {
		return x.EditedFieldsMask
	}
	return nil
}

func (x *EditMaskTicketReq) GetTicketCode() string {
	if x != nil {
		return x.TicketCode
	}
	return ""
}

func (x *EditMaskTicketReq) GetContactEntryId() int64 {
	if x != nil {
		return x.ContactEntryId
	}
	return 0
}

// EditMaskTicketRes - Response for EditMaskTicketReq
// EditTicketRes would be deprecated
type EditMaskTicketRes struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Deprecated: Marked as deprecated in api/v1alpha1/tickets/ticket.proto.
	IsEdited      bool `protobuf:"varint,1,opt,name=is_edited,json=isEdited,proto3" json:"is_edited,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EditMaskTicketRes) Reset() {
	*x = EditMaskTicketRes{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditMaskTicketRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditMaskTicketRes) ProtoMessage() {}

func (x *EditMaskTicketRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditMaskTicketRes.ProtoReflect.Descriptor instead.
func (*EditMaskTicketRes) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{18}
}

// Deprecated: Marked as deprecated in api/v1alpha1/tickets/ticket.proto.
func (x *EditMaskTicketRes) GetIsEdited() bool {
	if x != nil {
		return x.IsEdited
	}
	return false
}

// ListAllocatedTicketRes -
//
// Deprecated: Marked as deprecated in api/v1alpha1/tickets/ticket.proto.
type ListAllocatedTicketRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TicketSid     []int64                `protobuf:"varint,1,rep,packed,name=ticket_sid,json=ticketSid,proto3" json:"ticket_sid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAllocatedTicketRes) Reset() {
	*x = ListAllocatedTicketRes{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAllocatedTicketRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAllocatedTicketRes) ProtoMessage() {}

func (x *ListAllocatedTicketRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAllocatedTicketRes.ProtoReflect.Descriptor instead.
func (*ListAllocatedTicketRes) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{19}
}

func (x *ListAllocatedTicketRes) GetTicketSid() []int64 {
	if x != nil {
		return x.TicketSid
	}
	return nil
}

// ListAllocatedTicketReq -
//
// Deprecated: Marked as deprecated in api/v1alpha1/tickets/ticket.proto.
type ListAllocatedTicketReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAllocatedTicketReq) Reset() {
	*x = ListAllocatedTicketReq{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAllocatedTicketReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAllocatedTicketReq) ProtoMessage() {}

func (x *ListAllocatedTicketReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAllocatedTicketReq.ProtoReflect.Descriptor instead.
func (*ListAllocatedTicketReq) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{20}
}

// ListAgentTicketsResponse -
type ListAgentTicketsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ticket        []*commons.Ticket      `protobuf:"bytes,1,rep,name=ticket,proto3" json:"ticket,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAgentTicketsResponse) Reset() {
	*x = ListAgentTicketsResponse{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAgentTicketsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAgentTicketsResponse) ProtoMessage() {}

func (x *ListAgentTicketsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAgentTicketsResponse.ProtoReflect.Descriptor instead.
func (*ListAgentTicketsResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{21}
}

func (x *ListAgentTicketsResponse) GetTicket() []*commons.Ticket {
	if x != nil {
		return x.Ticket
	}
	return nil
}

// ListAgentTicketsRequest -
type ListAgentTicketsRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	SelectFieldMask *fieldmaskpb.FieldMask `protobuf:"bytes,1,opt,name=select_field_mask,json=selectFieldMask,proto3" json:"select_field_mask,omitempty"` //defines the ticket fields to be returned
	FilterMask      *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=filter_mask,json=filterMask,proto3" json:"filter_mask,omitempty"`                  //defines the search by field
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ListAgentTicketsRequest) Reset() {
	*x = ListAgentTicketsRequest{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAgentTicketsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAgentTicketsRequest) ProtoMessage() {}

func (x *ListAgentTicketsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAgentTicketsRequest.ProtoReflect.Descriptor instead.
func (*ListAgentTicketsRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{22}
}

func (x *ListAgentTicketsRequest) GetSelectFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.SelectFieldMask
	}
	return nil
}

func (x *ListAgentTicketsRequest) GetFilterMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.FilterMask
	}
	return nil
}

// ListAvailableAgentTicketsResponse -
type ListAvailableAgentTicketsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Deprecated: Marked as deprecated in api/v1alpha1/tickets/ticket.proto.
	TicketSid     []int64           `protobuf:"varint,1,rep,packed,name=ticket_sid,json=ticketSid,proto3" json:"ticket_sid,omitempty"`
	Ticket        []*commons.Ticket `protobuf:"bytes,2,rep,name=ticket,proto3" json:"ticket,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAvailableAgentTicketsResponse) Reset() {
	*x = ListAvailableAgentTicketsResponse{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAvailableAgentTicketsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAvailableAgentTicketsResponse) ProtoMessage() {}

func (x *ListAvailableAgentTicketsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAvailableAgentTicketsResponse.ProtoReflect.Descriptor instead.
func (*ListAvailableAgentTicketsResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{23}
}

// Deprecated: Marked as deprecated in api/v1alpha1/tickets/ticket.proto.
func (x *ListAvailableAgentTicketsResponse) GetTicketSid() []int64 {
	if x != nil {
		return x.TicketSid
	}
	return nil
}

func (x *ListAvailableAgentTicketsResponse) GetTicket() []*commons.Ticket {
	if x != nil {
		return x.Ticket
	}
	return nil
}

// ListAvailableAgentTicketsRequest -
type ListAvailableAgentTicketsRequest struct {
	state           protoimpl.MessageState  `protogen:"open.v1"`
	SelectFieldMask *fieldmaskpb.FieldMask  `protobuf:"bytes,1,opt,name=select_field_mask,json=selectFieldMask,proto3" json:"select_field_mask,omitempty"` //defines the ticket fields to be returned
	AvailableFilter *AvailableTicketsFilter `protobuf:"bytes,2,opt,name=available_filter,json=availableFilter,proto3" json:"available_filter,omitempty"`
	AgentViewLimit  int64                   `protobuf:"varint,3,opt,name=agent_view_limit,json=agentViewLimit,proto3" json:"agent_view_limit,omitempty"` //agent profile setting
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ListAvailableAgentTicketsRequest) Reset() {
	*x = ListAvailableAgentTicketsRequest{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAvailableAgentTicketsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAvailableAgentTicketsRequest) ProtoMessage() {}

func (x *ListAvailableAgentTicketsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAvailableAgentTicketsRequest.ProtoReflect.Descriptor instead.
func (*ListAvailableAgentTicketsRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{24}
}

func (x *ListAvailableAgentTicketsRequest) GetSelectFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.SelectFieldMask
	}
	return nil
}

func (x *ListAvailableAgentTicketsRequest) GetAvailableFilter() *AvailableTicketsFilter {
	if x != nil {
		return x.AvailableFilter
	}
	return nil
}

func (x *ListAvailableAgentTicketsRequest) GetAgentViewLimit() int64 {
	if x != nil {
		return x.AgentViewLimit
	}
	return 0
}

// AvailableTicketsFilter
type AvailableTicketsFilter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AgentSkillId  []string               `protobuf:"bytes,1,rep,name=agent_skill_id,json=agentSkillId,proto3" json:"agent_skill_id,omitempty"` //list of agent's skills
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AvailableTicketsFilter) Reset() {
	*x = AvailableTicketsFilter{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AvailableTicketsFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvailableTicketsFilter) ProtoMessage() {}

func (x *AvailableTicketsFilter) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvailableTicketsFilter.ProtoReflect.Descriptor instead.
func (*AvailableTicketsFilter) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{25}
}

func (x *AvailableTicketsFilter) GetAgentSkillId() []string {
	if x != nil {
		return x.AgentSkillId
	}
	return nil
}

// EditTicketRes - Response for EditTicketReq
//
// Deprecated: Marked as deprecated in api/v1alpha1/tickets/ticket.proto.
type EditTicketRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsEdited      bool                   `protobuf:"varint,1,opt,name=is_edited,json=isEdited,proto3" json:"is_edited,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EditTicketRes) Reset() {
	*x = EditTicketRes{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditTicketRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditTicketRes) ProtoMessage() {}

func (x *EditTicketRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditTicketRes.ProtoReflect.Descriptor instead.
func (*EditTicketRes) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{26}
}

func (x *EditTicketRes) GetIsEdited() bool {
	if x != nil {
		return x.IsEdited
	}
	return false
}

// ListTicketsReq
type ListTicketsReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTicketsReq) Reset() {
	*x = ListTicketsReq{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTicketsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTicketsReq) ProtoMessage() {}

func (x *ListTicketsReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTicketsReq.ProtoReflect.Descriptor instead.
func (*ListTicketsReq) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{27}
}

type ListTicketsRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tickets       []*commons.Ticket      `protobuf:"bytes,1,rep,name=tickets,proto3" json:"tickets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTicketsRes) Reset() {
	*x = ListTicketsRes{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTicketsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTicketsRes) ProtoMessage() {}

func (x *ListTicketsRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTicketsRes.ProtoReflect.Descriptor instead.
func (*ListTicketsRes) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{28}
}

func (x *ListTicketsRes) GetTickets() []*commons.Ticket {
	if x != nil {
		return x.Tickets
	}
	return nil
}

// AssignTicketReq
//
// Deprecated: Marked as deprecated in api/v1alpha1/tickets/ticket.proto.
type AssignTicketReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TicketSid     int64                  `protobuf:"varint,1,opt,name=ticket_sid,json=ticketSid,proto3" json:"ticket_sid,omitempty"`
	AssigneeList  string                 `protobuf:"bytes,2,opt,name=assignee_list,json=assigneeList,proto3" json:"assignee_list,omitempty"`
	AssignedId    string                 `protobuf:"bytes,3,opt,name=assigned_id,json=assignedId,proto3" json:"assigned_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AssignTicketReq) Reset() {
	*x = AssignTicketReq{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignTicketReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignTicketReq) ProtoMessage() {}

func (x *AssignTicketReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignTicketReq.ProtoReflect.Descriptor instead.
func (*AssignTicketReq) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{29}
}

func (x *AssignTicketReq) GetTicketSid() int64 {
	if x != nil {
		return x.TicketSid
	}
	return 0
}

func (x *AssignTicketReq) GetAssigneeList() string {
	if x != nil {
		return x.AssigneeList
	}
	return ""
}

func (x *AssignTicketReq) GetAssignedId() string {
	if x != nil {
		return x.AssignedId
	}
	return ""
}

// AssignTicketRes
//
// Deprecated: Marked as deprecated in api/v1alpha1/tickets/ticket.proto.
type AssignTicketRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TicketSid     int64                  `protobuf:"varint,1,opt,name=ticket_sid,json=ticketSid,proto3" json:"ticket_sid,omitempty"`
	AssigneeList  string                 `protobuf:"bytes,2,opt,name=assignee_list,json=assigneeList,proto3" json:"assignee_list,omitempty"`
	AssignedId    string                 `protobuf:"bytes,3,opt,name=assigned_id,json=assignedId,proto3" json:"assigned_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AssignTicketRes) Reset() {
	*x = AssignTicketRes{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignTicketRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignTicketRes) ProtoMessage() {}

func (x *AssignTicketRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignTicketRes.ProtoReflect.Descriptor instead.
func (*AssignTicketRes) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{30}
}

func (x *AssignTicketRes) GetTicketSid() int64 {
	if x != nil {
		return x.TicketSid
	}
	return 0
}

func (x *AssignTicketRes) GetAssigneeList() string {
	if x != nil {
		return x.AssigneeList
	}
	return ""
}

func (x *AssignTicketRes) GetAssignedId() string {
	if x != nil {
		return x.AssignedId
	}
	return ""
}

// ViewTicketReq -
type ViewTicketReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Deprecated: Marked as deprecated in api/v1alpha1/tickets/ticket.proto.
	TicketSid int64 `protobuf:"varint,1,opt,name=ticket_sid,json=ticketSid,proto3" json:"ticket_sid,omitempty"`
	// ticket_code
	TicketCode    string `protobuf:"bytes,2,opt,name=ticket_code,json=ticketCode,proto3" json:"ticket_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ViewTicketReq) Reset() {
	*x = ViewTicketReq{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ViewTicketReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewTicketReq) ProtoMessage() {}

func (x *ViewTicketReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewTicketReq.ProtoReflect.Descriptor instead.
func (*ViewTicketReq) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{31}
}

// Deprecated: Marked as deprecated in api/v1alpha1/tickets/ticket.proto.
func (x *ViewTicketReq) GetTicketSid() int64 {
	if x != nil {
		return x.TicketSid
	}
	return 0
}

func (x *ViewTicketReq) GetTicketCode() string {
	if x != nil {
		return x.TicketCode
	}
	return ""
}

// ViewTicketRes -
type ViewTicketRes struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Ticket        *commons.Ticket         `protobuf:"bytes,1,opt,name=ticket,proto3" json:"ticket,omitempty"`     // ticket details
	Comments      []*commons.Comment      `protobuf:"bytes,2,rep,name=comments,proto3" json:"comments,omitempty"` // comments
	ReplyComment  []*commons.ReplyComment `protobuf:"bytes,3,rep,name=reply_comment,json=replyComment,proto3" json:"reply_comment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ViewTicketRes) Reset() {
	*x = ViewTicketRes{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ViewTicketRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewTicketRes) ProtoMessage() {}

func (x *ViewTicketRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewTicketRes.ProtoReflect.Descriptor instead.
func (*ViewTicketRes) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{32}
}

func (x *ViewTicketRes) GetTicket() *commons.Ticket {
	if x != nil {
		return x.Ticket
	}
	return nil
}

func (x *ViewTicketRes) GetComments() []*commons.Comment {
	if x != nil {
		return x.Comments
	}
	return nil
}

func (x *ViewTicketRes) GetReplyComment() []*commons.ReplyComment {
	if x != nil {
		return x.ReplyComment
	}
	return nil
}

// Create CommentReq  - Create Comment Request From Client
type CreateCommentReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Deprecated: Marked as deprecated in api/v1alpha1/tickets/ticket.proto.
	TicketSid int64 `protobuf:"varint,1,opt,name=ticket_sid,json=ticketSid,proto3" json:"ticket_sid,omitempty"`
	// description of the comment
	Comment string `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
	// ticket_code
	TicketCode    string `protobuf:"bytes,3,opt,name=ticket_code,json=ticketCode,proto3" json:"ticket_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCommentReq) Reset() {
	*x = CreateCommentReq{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCommentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCommentReq) ProtoMessage() {}

func (x *CreateCommentReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCommentReq.ProtoReflect.Descriptor instead.
func (*CreateCommentReq) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{33}
}

// Deprecated: Marked as deprecated in api/v1alpha1/tickets/ticket.proto.
func (x *CreateCommentReq) GetTicketSid() int64 {
	if x != nil {
		return x.TicketSid
	}
	return 0
}

func (x *CreateCommentReq) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *CreateCommentReq) GetTicketCode() string {
	if x != nil {
		return x.TicketCode
	}
	return ""
}

// CreateCommenttRes - Response from CreateComment BE API
type CreateCommentRes struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Returns the created comment row in the response
	Comment       *commons.Comment `protobuf:"bytes,1,opt,name=comment,proto3" json:"comment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCommentRes) Reset() {
	*x = CreateCommentRes{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCommentRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCommentRes) ProtoMessage() {}

func (x *CreateCommentRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCommentRes.ProtoReflect.Descriptor instead.
func (*CreateCommentRes) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{34}
}

func (x *CreateCommentRes) GetComment() *commons.Comment {
	if x != nil {
		return x.Comment
	}
	return nil
}

// CloseTicketReq - Close Ticket Request Messages
type CloseTicketReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ticket Id of the ticket which needs to be closed
	//
	// Deprecated: Marked as deprecated in api/v1alpha1/tickets/ticket.proto.
	TicketSid int64 `protobuf:"varint,1,opt,name=ticket_sid,json=ticketSid,proto3" json:"ticket_sid,omitempty"`
	// description of the comment
	Comment string `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
	// from status of the ticket
	//
	// Deprecated: Marked as deprecated in api/v1alpha1/tickets/ticket.proto.
	FromStatus int64 `protobuf:"varint,3,opt,name=from_status,json=fromStatus,proto3" json:"from_status,omitempty"`
	// ticket_code
	TicketCode    string `protobuf:"bytes,4,opt,name=ticket_code,json=ticketCode,proto3" json:"ticket_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloseTicketReq) Reset() {
	*x = CloseTicketReq{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloseTicketReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseTicketReq) ProtoMessage() {}

func (x *CloseTicketReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseTicketReq.ProtoReflect.Descriptor instead.
func (*CloseTicketReq) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{35}
}

// Deprecated: Marked as deprecated in api/v1alpha1/tickets/ticket.proto.
func (x *CloseTicketReq) GetTicketSid() int64 {
	if x != nil {
		return x.TicketSid
	}
	return 0
}

func (x *CloseTicketReq) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

// Deprecated: Marked as deprecated in api/v1alpha1/tickets/ticket.proto.
func (x *CloseTicketReq) GetFromStatus() int64 {
	if x != nil {
		return x.FromStatus
	}
	return 0
}

func (x *CloseTicketReq) GetTicketCode() string {
	if x != nil {
		return x.TicketCode
	}
	return ""
}

// CloseTicketRes - Close Ticket Response Messages
type CloseTicketRes struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Deprecated: Marked as deprecated in api/v1alpha1/tickets/ticket.proto.
	IsStatus      bool `protobuf:"varint,1,opt,name=is_status,json=isStatus,proto3" json:"is_status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloseTicketRes) Reset() {
	*x = CloseTicketRes{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloseTicketRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseTicketRes) ProtoMessage() {}

func (x *CloseTicketRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseTicketRes.ProtoReflect.Descriptor instead.
func (*CloseTicketRes) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{36}
}

// Deprecated: Marked as deprecated in api/v1alpha1/tickets/ticket.proto.
func (x *CloseTicketRes) GetIsStatus() bool {
	if x != nil {
		return x.IsStatus
	}
	return false
}

// Create CreateSlaReq  - Create Sla Request From Client
type CreateSlaReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// sla_sid of the sla to be created.
	SlaSid int64 `protobuf:"varint,1,opt,name=sla_sid,json=slaSid,proto3" json:"sla_sid,omitempty"`
	// name of the sla
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// description of the sla
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// sla interval
	//
	// Deprecated: Marked as deprecated in api/v1alpha1/tickets/ticket.proto.
	Interval int64 `protobuf:"varint,4,opt,name=interval,proto3" json:"interval,omitempty"`
	// SLA Duration
	Duration      *commons.Duration `protobuf:"bytes,5,opt,name=duration,proto3" json:"duration,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSlaReq) Reset() {
	*x = CreateSlaReq{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSlaReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSlaReq) ProtoMessage() {}

func (x *CreateSlaReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSlaReq.ProtoReflect.Descriptor instead.
func (*CreateSlaReq) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{37}
}

func (x *CreateSlaReq) GetSlaSid() int64 {
	if x != nil {
		return x.SlaSid
	}
	return 0
}

func (x *CreateSlaReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateSlaReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// Deprecated: Marked as deprecated in api/v1alpha1/tickets/ticket.proto.
func (x *CreateSlaReq) GetInterval() int64 {
	if x != nil {
		return x.Interval
	}
	return 0
}

func (x *CreateSlaReq) GetDuration() *commons.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

// CreateSlaRes - Response from CreateSla BE API
type CreateSlaRes struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Returns the created sla row in the response
	Sla           *commons.TicketSla `protobuf:"bytes,1,opt,name=sla,proto3" json:"sla,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSlaRes) Reset() {
	*x = CreateSlaRes{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSlaRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSlaRes) ProtoMessage() {}

func (x *CreateSlaRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSlaRes.ProtoReflect.Descriptor instead.
func (*CreateSlaRes) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{38}
}

func (x *CreateSlaRes) GetSla() *commons.TicketSla {
	if x != nil {
		return x.Sla
	}
	return nil
}

// ListSlaReq -
type ListSlaReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSlaReq) Reset() {
	*x = ListSlaReq{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSlaReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSlaReq) ProtoMessage() {}

func (x *ListSlaReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSlaReq.ProtoReflect.Descriptor instead.
func (*ListSlaReq) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{39}
}

// ListSlaRes -
type ListSlaRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TicketsSla    []*commons.TicketSla   `protobuf:"bytes,1,rep,name=ticketsSla,proto3" json:"ticketsSla,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSlaRes) Reset() {
	*x = ListSlaRes{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSlaRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSlaRes) ProtoMessage() {}

func (x *ListSlaRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSlaRes.ProtoReflect.Descriptor instead.
func (*ListSlaRes) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{40}
}

func (x *ListSlaRes) GetTicketsSla() []*commons.TicketSla {
	if x != nil {
		return x.TicketsSla
	}
	return nil
}

// UpdateSlaReq -
type UpdateSlaReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// sla_sid of the sla to be created.
	SlaSid int64 `protobuf:"varint,1,opt,name=sla_sid,json=slaSid,proto3" json:"sla_sid,omitempty"`
	// sla is_active
	IsActive      int64 `protobuf:"varint,2,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSlaReq) Reset() {
	*x = UpdateSlaReq{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSlaReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSlaReq) ProtoMessage() {}

func (x *UpdateSlaReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSlaReq.ProtoReflect.Descriptor instead.
func (*UpdateSlaReq) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{41}
}

func (x *UpdateSlaReq) GetSlaSid() int64 {
	if x != nil {
		return x.SlaSid
	}
	return 0
}

func (x *UpdateSlaReq) GetIsActive() int64 {
	if x != nil {
		return x.IsActive
	}
	return 0
}

// ListSlaRes -
type UpdateSlaRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TicketsSla    *commons.TicketSla     `protobuf:"bytes,1,opt,name=ticketsSla,proto3" json:"ticketsSla,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSlaRes) Reset() {
	*x = UpdateSlaRes{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSlaRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSlaRes) ProtoMessage() {}

func (x *UpdateSlaRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSlaRes.ProtoReflect.Descriptor instead.
func (*UpdateSlaRes) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{42}
}

func (x *UpdateSlaRes) GetTicketsSla() *commons.TicketSla {
	if x != nil {
		return x.TicketsSla
	}
	return nil
}

// ListSlaConditionReq -
type ListSlaConditionReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSlaConditionReq) Reset() {
	*x = ListSlaConditionReq{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSlaConditionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSlaConditionReq) ProtoMessage() {}

func (x *ListSlaConditionReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSlaConditionReq.ProtoReflect.Descriptor instead.
func (*ListSlaConditionReq) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{43}
}

// ListSlaConditionRes -
type ListSlaConditionRes struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	SlaCondition  []*commons.SlaConditions `protobuf:"bytes,1,rep,name=slaCondition,proto3" json:"slaCondition,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSlaConditionRes) Reset() {
	*x = ListSlaConditionRes{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSlaConditionRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSlaConditionRes) ProtoMessage() {}

func (x *ListSlaConditionRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSlaConditionRes.ProtoReflect.Descriptor instead.
func (*ListSlaConditionRes) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{44}
}

func (x *ListSlaConditionRes) GetSlaCondition() []*commons.SlaConditions {
	if x != nil {
		return x.SlaCondition
	}
	return nil
}

// ReplyCommentReq - Reply Comment Request Messages
type ReplyCommentReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The snowflake id of a comment row in ticket_comment.
	CommentSid int64 `protobuf:"varint,1,opt,name=comment_sid,json=commentSid,proto3" json:"comment_sid,omitempty"`
	// The ticket reference where the comment was added.
	//
	// Deprecated: Marked as deprecated in api/v1alpha1/tickets/ticket.proto.
	TicketSid int64 `protobuf:"varint,2,opt,name=ticket_sid,json=ticketSid,proto3" json:"ticket_sid,omitempty"`
	// The comment text
	Reply string `protobuf:"bytes,3,opt,name=reply,proto3" json:"reply,omitempty"`
	// commenter by id
	CreatedById string `protobuf:"bytes,4,opt,name=created_by_id,json=createdById,proto3" json:"created_by_id,omitempty"` // used in creating comment
	// ticket_code
	TicketCode    string `protobuf:"bytes,5,opt,name=ticket_code,json=ticketCode,proto3" json:"ticket_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplyCommentReq) Reset() {
	*x = ReplyCommentReq{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplyCommentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyCommentReq) ProtoMessage() {}

func (x *ReplyCommentReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyCommentReq.ProtoReflect.Descriptor instead.
func (*ReplyCommentReq) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{45}
}

func (x *ReplyCommentReq) GetCommentSid() int64 {
	if x != nil {
		return x.CommentSid
	}
	return 0
}

// Deprecated: Marked as deprecated in api/v1alpha1/tickets/ticket.proto.
func (x *ReplyCommentReq) GetTicketSid() int64 {
	if x != nil {
		return x.TicketSid
	}
	return 0
}

func (x *ReplyCommentReq) GetReply() string {
	if x != nil {
		return x.Reply
	}
	return ""
}

func (x *ReplyCommentReq) GetCreatedById() string {
	if x != nil {
		return x.CreatedById
	}
	return ""
}

func (x *ReplyCommentReq) GetTicketCode() string {
	if x != nil {
		return x.TicketCode
	}
	return ""
}

// ReplyCommentRes - Reply Comment Response Messages
type ReplyCommentRes struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Returns boolen true OR False in the response
	IsCreated     *commons.ConfirmReplyComment `protobuf:"bytes,1,opt,name=is_created,json=isCreated,proto3" json:"is_created,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplyCommentRes) Reset() {
	*x = ReplyCommentRes{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplyCommentRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyCommentRes) ProtoMessage() {}

func (x *ReplyCommentRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyCommentRes.ProtoReflect.Descriptor instead.
func (*ReplyCommentRes) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{46}
}

func (x *ReplyCommentRes) GetIsCreated() *commons.ConfirmReplyComment {
	if x != nil {
		return x.IsCreated
	}
	return nil
}

// CreateSelfAssignReq -
//
// Deprecated: Marked as deprecated in api/v1alpha1/tickets/ticket.proto.
type CreateSelfAssignReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TicketSid     int64                  `protobuf:"varint,1,opt,name=ticket_sid,json=ticketSid,proto3" json:"ticket_sid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSelfAssignReq) Reset() {
	*x = CreateSelfAssignReq{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSelfAssignReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSelfAssignReq) ProtoMessage() {}

func (x *CreateSelfAssignReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSelfAssignReq.ProtoReflect.Descriptor instead.
func (*CreateSelfAssignReq) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{47}
}

func (x *CreateSelfAssignReq) GetTicketSid() int64 {
	if x != nil {
		return x.TicketSid
	}
	return 0
}

// CreateSelfAssignRes -
//
// Deprecated: Marked as deprecated in api/v1alpha1/tickets/ticket.proto.
type CreateSelfAssignRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsAssigned    bool                   `protobuf:"varint,1,opt,name=is_assigned,json=isAssigned,proto3" json:"is_assigned,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSelfAssignRes) Reset() {
	*x = CreateSelfAssignRes{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSelfAssignRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSelfAssignRes) ProtoMessage() {}

func (x *CreateSelfAssignRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSelfAssignRes.ProtoReflect.Descriptor instead.
func (*CreateSelfAssignRes) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{48}
}

func (x *CreateSelfAssignRes) GetIsAssigned() bool {
	if x != nil {
		return x.IsAssigned
	}
	return false
}

// ListSkillsRequest - request message
type ListSkillsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSkillsRequest) Reset() {
	*x = ListSkillsRequest{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSkillsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSkillsRequest) ProtoMessage() {}

func (x *ListSkillsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSkillsRequest.ProtoReflect.Descriptor instead.
func (*ListSkillsRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{49}
}

// ListSkillsResponse - response message wraps p3 skills Id and name
type ListSkillsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Skills        []*Skill               `protobuf:"bytes,1,rep,name=skills,proto3" json:"skills,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSkillsResponse) Reset() {
	*x = ListSkillsResponse{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSkillsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSkillsResponse) ProtoMessage() {}

func (x *ListSkillsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSkillsResponse.ProtoReflect.Descriptor instead.
func (*ListSkillsResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{50}
}

func (x *ListSkillsResponse) GetSkills() []*Skill {
	if x != nil {
		return x.Skills
	}
	return nil
}

type Skill struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SkillId       string                 `protobuf:"bytes,1,opt,name=skill_id,json=skillId,proto3" json:"skill_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Skill) Reset() {
	*x = Skill{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Skill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Skill) ProtoMessage() {}

func (x *Skill) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Skill.ProtoReflect.Descriptor instead.
func (*Skill) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{51}
}

func (x *Skill) GetSkillId() string {
	if x != nil {
		return x.SkillId
	}
	return ""
}

func (x *Skill) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// ListUsersRequest - Users request message
type ListUsersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUsersRequest) Reset() {
	*x = ListUsersRequest{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsersRequest) ProtoMessage() {}

func (x *ListUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsersRequest.ProtoReflect.Descriptor instead.
func (*ListUsersRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{52}
}

// ListUsersResponse - response wraps userId, first_name, last_name
type ListUsersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Users         []*User                `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUsersResponse) Reset() {
	*x = ListUsersResponse{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsersResponse) ProtoMessage() {}

func (x *ListUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsersResponse.ProtoReflect.Descriptor instead.
func (*ListUsersResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{53}
}

func (x *ListUsersResponse) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

type User struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FirstName     string                 `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName      string                 `protobuf:"bytes,3,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	IsActive      bool                   `protobuf:"varint,4,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *User) Reset() {
	*x = User{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{54}
}

func (x *User) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *User) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *User) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *User) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

type CreateTicketActionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TicketAction  *commons.TicketAction  `protobuf:"bytes,1,opt,name=ticket_action,json=ticketAction,proto3" json:"ticket_action,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTicketActionRequest) Reset() {
	*x = CreateTicketActionRequest{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTicketActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTicketActionRequest) ProtoMessage() {}

func (x *CreateTicketActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTicketActionRequest.ProtoReflect.Descriptor instead.
func (*CreateTicketActionRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{55}
}

func (x *CreateTicketActionRequest) GetTicketAction() *commons.TicketAction {
	if x != nil {
		return x.TicketAction
	}
	return nil
}

type CreateTicketActionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TicketAction  *commons.TicketAction  `protobuf:"bytes,1,opt,name=ticket_action,json=ticketAction,proto3" json:"ticket_action,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTicketActionResponse) Reset() {
	*x = CreateTicketActionResponse{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTicketActionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTicketActionResponse) ProtoMessage() {}

func (x *CreateTicketActionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTicketActionResponse.ProtoReflect.Descriptor instead.
func (*CreateTicketActionResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{56}
}

func (x *CreateTicketActionResponse) GetTicketAction() *commons.TicketAction {
	if x != nil {
		return x.TicketAction
	}
	return nil
}

type CloseTicketActionRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TicketActionId int64                  `protobuf:"varint,1,opt,name=ticket_action_id,json=ticketActionId,proto3" json:"ticket_action_id,omitempty"`
	// Deprecated: Marked as deprecated in api/v1alpha1/tickets/ticket.proto.
	TicketId int64 `protobuf:"varint,2,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	// Deprecated: Marked as deprecated in api/v1alpha1/tickets/ticket.proto.
	Comment string `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`
	// ticket_code
	TicketCode    string `protobuf:"bytes,4,opt,name=ticket_code,json=ticketCode,proto3" json:"ticket_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloseTicketActionRequest) Reset() {
	*x = CloseTicketActionRequest{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloseTicketActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseTicketActionRequest) ProtoMessage() {}

func (x *CloseTicketActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseTicketActionRequest.ProtoReflect.Descriptor instead.
func (*CloseTicketActionRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{57}
}

func (x *CloseTicketActionRequest) GetTicketActionId() int64 {
	if x != nil {
		return x.TicketActionId
	}
	return 0
}

// Deprecated: Marked as deprecated in api/v1alpha1/tickets/ticket.proto.
func (x *CloseTicketActionRequest) GetTicketId() int64 {
	if x != nil {
		return x.TicketId
	}
	return 0
}

// Deprecated: Marked as deprecated in api/v1alpha1/tickets/ticket.proto.
func (x *CloseTicketActionRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *CloseTicketActionRequest) GetTicketCode() string {
	if x != nil {
		return x.TicketCode
	}
	return ""
}

type CloseTicketActionResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Deprecated: Marked as deprecated in api/v1alpha1/tickets/ticket.proto.
	IsClosed      bool `protobuf:"varint,1,opt,name=is_closed,json=isClosed,proto3" json:"is_closed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloseTicketActionResponse) Reset() {
	*x = CloseTicketActionResponse{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloseTicketActionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseTicketActionResponse) ProtoMessage() {}

func (x *CloseTicketActionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseTicketActionResponse.ProtoReflect.Descriptor instead.
func (*CloseTicketActionResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{58}
}

// Deprecated: Marked as deprecated in api/v1alpha1/tickets/ticket.proto.
func (x *CloseTicketActionResponse) GetIsClosed() bool {
	if x != nil {
		return x.IsClosed
	}
	return false
}

// Deprecated: Marked as deprecated in api/v1alpha1/tickets/ticket.proto.
type AssignTicketActionRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TicketActionId int64                  `protobuf:"varint,1,opt,name=ticket_action_id,json=ticketActionId,proto3" json:"ticket_action_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AssignTicketActionRequest) Reset() {
	*x = AssignTicketActionRequest{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignTicketActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignTicketActionRequest) ProtoMessage() {}

func (x *AssignTicketActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignTicketActionRequest.ProtoReflect.Descriptor instead.
func (*AssignTicketActionRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{59}
}

func (x *AssignTicketActionRequest) GetTicketActionId() int64 {
	if x != nil {
		return x.TicketActionId
	}
	return 0
}

// Deprecated: Marked as deprecated in api/v1alpha1/tickets/ticket.proto.
type AssignTicketActionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsAssigned    bool                   `protobuf:"varint,1,opt,name=is_assigned,json=isAssigned,proto3" json:"is_assigned,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AssignTicketActionResponse) Reset() {
	*x = AssignTicketActionResponse{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignTicketActionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignTicketActionResponse) ProtoMessage() {}

func (x *AssignTicketActionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignTicketActionResponse.ProtoReflect.Descriptor instead.
func (*AssignTicketActionResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{60}
}

func (x *AssignTicketActionResponse) GetIsAssigned() bool {
	if x != nil {
		return x.IsAssigned
	}
	return false
}

// Deprecated: Marked as deprecated in api/v1alpha1/tickets/ticket.proto.
type ChangeTicketStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TicketId      int64                  `protobuf:"varint,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	StatusId      int64                  `protobuf:"varint,2,opt,name=status_id,json=statusId,proto3" json:"status_id,omitempty"`
	TicketStatus  commons.TicketStatus   `protobuf:"varint,3,opt,name=ticket_status,json=ticketStatus,proto3,enum=api.commons.TicketStatus" json:"ticket_status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeTicketStatusRequest) Reset() {
	*x = ChangeTicketStatusRequest{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeTicketStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeTicketStatusRequest) ProtoMessage() {}

func (x *ChangeTicketStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeTicketStatusRequest.ProtoReflect.Descriptor instead.
func (*ChangeTicketStatusRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{61}
}

func (x *ChangeTicketStatusRequest) GetTicketId() int64 {
	if x != nil {
		return x.TicketId
	}
	return 0
}

func (x *ChangeTicketStatusRequest) GetStatusId() int64 {
	if x != nil {
		return x.StatusId
	}
	return 0
}

func (x *ChangeTicketStatusRequest) GetTicketStatus() commons.TicketStatus {
	if x != nil {
		return x.TicketStatus
	}
	return commons.TicketStatus(0)
}

// Deprecated: Marked as deprecated in api/v1alpha1/tickets/ticket.proto.
type ChangeTicketStatusResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	IsStatusEdited bool                   `protobuf:"varint,1,opt,name=is_status_edited,json=isStatusEdited,proto3" json:"is_status_edited,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ChangeTicketStatusResponse) Reset() {
	*x = ChangeTicketStatusResponse{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeTicketStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeTicketStatusResponse) ProtoMessage() {}

func (x *ChangeTicketStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeTicketStatusResponse.ProtoReflect.Descriptor instead.
func (*ChangeTicketStatusResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{62}
}

func (x *ChangeTicketStatusResponse) GetIsStatusEdited() bool {
	if x != nil {
		return x.IsStatusEdited
	}
	return false
}

type AddEntityRefRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EntityRef     *EntityRef             `protobuf:"bytes,1,opt,name=entity_ref,json=entityRef,proto3" json:"entity_ref,omitempty"` //be able to assign entity ref to a ticket
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddEntityRefRequest) Reset() {
	*x = AddEntityRefRequest{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddEntityRefRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddEntityRefRequest) ProtoMessage() {}

func (x *AddEntityRefRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddEntityRefRequest.ProtoReflect.Descriptor instead.
func (*AddEntityRefRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{63}
}

func (x *AddEntityRefRequest) GetEntityRef() *EntityRef {
	if x != nil {
		return x.EntityRef
	}
	return nil
}

type AddEntityRefResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddEntityRefResponse) Reset() {
	*x = AddEntityRefResponse{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddEntityRefResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddEntityRefResponse) ProtoMessage() {}

func (x *AddEntityRefResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddEntityRefResponse.ProtoReflect.Descriptor instead.
func (*AddEntityRefResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{64}
}

type ListEntityRefsByTicketRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TicketCode    string                 `protobuf:"bytes,1,opt,name=ticket_code,json=ticketCode,proto3" json:"ticket_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListEntityRefsByTicketRequest) Reset() {
	*x = ListEntityRefsByTicketRequest{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListEntityRefsByTicketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEntityRefsByTicketRequest) ProtoMessage() {}

func (x *ListEntityRefsByTicketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEntityRefsByTicketRequest.ProtoReflect.Descriptor instead.
func (*ListEntityRefsByTicketRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{65}
}

func (x *ListEntityRefsByTicketRequest) GetTicketCode() string {
	if x != nil {
		return x.TicketCode
	}
	return ""
}

type ListEntityRefsByTicketResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EntityRef     []*EntityRef           `protobuf:"bytes,1,rep,name=entity_ref,json=entityRef,proto3" json:"entity_ref,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListEntityRefsByTicketResponse) Reset() {
	*x = ListEntityRefsByTicketResponse{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListEntityRefsByTicketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEntityRefsByTicketResponse) ProtoMessage() {}

func (x *ListEntityRefsByTicketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEntityRefsByTicketResponse.ProtoReflect.Descriptor instead.
func (*ListEntityRefsByTicketResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{66}
}

func (x *ListEntityRefsByTicketResponse) GetEntityRef() []*EntityRef {
	if x != nil {
		return x.EntityRef
	}
	return nil
}

type ListTicketsByEntityRefRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uri           string                 `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"` //uri that uniquely identifies any entity associated with a ticket
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTicketsByEntityRefRequest) Reset() {
	*x = ListTicketsByEntityRefRequest{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTicketsByEntityRefRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTicketsByEntityRefRequest) ProtoMessage() {}

func (x *ListTicketsByEntityRefRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTicketsByEntityRefRequest.ProtoReflect.Descriptor instead.
func (*ListTicketsByEntityRefRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{67}
}

func (x *ListTicketsByEntityRefRequest) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

type ListTicketsByEntityRefResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tickets       []*commons.Ticket      `protobuf:"bytes,1,rep,name=tickets,proto3" json:"tickets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTicketsByEntityRefResponse) Reset() {
	*x = ListTicketsByEntityRefResponse{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTicketsByEntityRefResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTicketsByEntityRefResponse) ProtoMessage() {}

func (x *ListTicketsByEntityRefResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTicketsByEntityRefResponse.ProtoReflect.Descriptor instead.
func (*ListTicketsByEntityRefResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{68}
}

func (x *ListTicketsByEntityRefResponse) GetTickets() []*commons.Ticket {
	if x != nil {
		return x.Tickets
	}
	return nil
}

// CreateCustomFieldRequest
type CreateCustomFieldRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ticket_code
	TicketCode string `protobuf:"bytes,1,opt,name=ticket_code,json=ticketCode,proto3" json:"ticket_code,omitempty"`
	// project_id
	ProjectId int64 `protobuf:"varint,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// repeated custom fields
	CustomField   []*commons.CustomField `protobuf:"bytes,3,rep,name=custom_field,json=customField,proto3" json:"custom_field,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCustomFieldRequest) Reset() {
	*x = CreateCustomFieldRequest{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCustomFieldRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCustomFieldRequest) ProtoMessage() {}

func (x *CreateCustomFieldRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCustomFieldRequest.ProtoReflect.Descriptor instead.
func (*CreateCustomFieldRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{69}
}

func (x *CreateCustomFieldRequest) GetTicketCode() string {
	if x != nil {
		return x.TicketCode
	}
	return ""
}

func (x *CreateCustomFieldRequest) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *CreateCustomFieldRequest) GetCustomField() []*commons.CustomField {
	if x != nil {
		return x.CustomField
	}
	return nil
}

// CreateCustomFieldResponse
type CreateCustomFieldResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ticket_code
	TicketCode string `protobuf:"bytes,1,opt,name=ticket_code,json=ticketCode,proto3" json:"ticket_code,omitempty"`
	// project_id
	ProjectId int64 `protobuf:"varint,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// repeated custom fields
	CustomField   []*commons.CustomField `protobuf:"bytes,3,rep,name=custom_field,json=customField,proto3" json:"custom_field,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCustomFieldResponse) Reset() {
	*x = CreateCustomFieldResponse{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCustomFieldResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCustomFieldResponse) ProtoMessage() {}

func (x *CreateCustomFieldResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCustomFieldResponse.ProtoReflect.Descriptor instead.
func (*CreateCustomFieldResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{70}
}

func (x *CreateCustomFieldResponse) GetTicketCode() string {
	if x != nil {
		return x.TicketCode
	}
	return ""
}

func (x *CreateCustomFieldResponse) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *CreateCustomFieldResponse) GetCustomField() []*commons.CustomField {
	if x != nil {
		return x.CustomField
	}
	return nil
}

// EditCustomFieldRequest -
type EditCustomFieldRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ticket_code
	TicketCode string `protobuf:"bytes,1,opt,name=ticket_code,json=ticketCode,proto3" json:"ticket_code,omitempty"`
	// project_id
	ProjectId int64 `protobuf:"varint,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// repeated custom fields
	EditValue     []*commons.CustomField `protobuf:"bytes,3,rep,name=edit_value,json=editValue,proto3" json:"edit_value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EditCustomFieldRequest) Reset() {
	*x = EditCustomFieldRequest{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[71]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditCustomFieldRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditCustomFieldRequest) ProtoMessage() {}

func (x *EditCustomFieldRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[71]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditCustomFieldRequest.ProtoReflect.Descriptor instead.
func (*EditCustomFieldRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{71}
}

func (x *EditCustomFieldRequest) GetTicketCode() string {
	if x != nil {
		return x.TicketCode
	}
	return ""
}

func (x *EditCustomFieldRequest) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *EditCustomFieldRequest) GetEditValue() []*commons.CustomField {
	if x != nil {
		return x.EditValue
	}
	return nil
}

// EditCustomFieldResponse -
type EditCustomFieldResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ticket_code
	TicketCode string `protobuf:"bytes,1,opt,name=ticket_code,json=ticketCode,proto3" json:"ticket_code,omitempty"`
	// project_id
	ProjectId int64 `protobuf:"varint,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// repeated custom fields
	EditedCustomField []*commons.CustomField `protobuf:"bytes,3,rep,name=edited_custom_field,json=editedCustomField,proto3" json:"edited_custom_field,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *EditCustomFieldResponse) Reset() {
	*x = EditCustomFieldResponse{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[72]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditCustomFieldResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditCustomFieldResponse) ProtoMessage() {}

func (x *EditCustomFieldResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[72]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditCustomFieldResponse.ProtoReflect.Descriptor instead.
func (*EditCustomFieldResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{72}
}

func (x *EditCustomFieldResponse) GetTicketCode() string {
	if x != nil {
		return x.TicketCode
	}
	return ""
}

func (x *EditCustomFieldResponse) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *EditCustomFieldResponse) GetEditedCustomField() []*commons.CustomField {
	if x != nil {
		return x.EditedCustomField
	}
	return nil
}

// ListCustomFieldsRequest
type ListCustomFieldsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ticket_code
	TicketCode string `protobuf:"bytes,1,opt,name=ticket_code,json=ticketCode,proto3" json:"ticket_code,omitempty"`
	// project_id
	ProjectId     int64 `protobuf:"varint,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCustomFieldsRequest) Reset() {
	*x = ListCustomFieldsRequest{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[73]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCustomFieldsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCustomFieldsRequest) ProtoMessage() {}

func (x *ListCustomFieldsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[73]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCustomFieldsRequest.ProtoReflect.Descriptor instead.
func (*ListCustomFieldsRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{73}
}

func (x *ListCustomFieldsRequest) GetTicketCode() string {
	if x != nil {
		return x.TicketCode
	}
	return ""
}

func (x *ListCustomFieldsRequest) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

// ListCustomFieldsResponse -
type ListCustomFieldsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ticket_code
	TicketCode string `protobuf:"bytes,1,opt,name=ticket_code,json=ticketCode,proto3" json:"ticket_code,omitempty"`
	// project_id
	ProjectId int64 `protobuf:"varint,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// list of custom sfields
	CustomFields  []*commons.CustomField `protobuf:"bytes,3,rep,name=custom_fields,json=customFields,proto3" json:"custom_fields,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCustomFieldsResponse) Reset() {
	*x = ListCustomFieldsResponse{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[74]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCustomFieldsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCustomFieldsResponse) ProtoMessage() {}

func (x *ListCustomFieldsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[74]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCustomFieldsResponse.ProtoReflect.Descriptor instead.
func (*ListCustomFieldsResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{74}
}

func (x *ListCustomFieldsResponse) GetTicketCode() string {
	if x != nil {
		return x.TicketCode
	}
	return ""
}

func (x *ListCustomFieldsResponse) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ListCustomFieldsResponse) GetCustomFields() []*commons.CustomField {
	if x != nil {
		return x.CustomFields
	}
	return nil
}

// should this be in a separate folder / file
type EntityRef struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrgId         string                 `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	RegionId      string                 `protobuf:"bytes,2,opt,name=region_id,json=regionId,proto3" json:"region_id,omitempty"`
	TicketCode    string                 `protobuf:"bytes,3,opt,name=ticket_code,json=ticketCode,proto3" json:"ticket_code,omitempty"`
	Uri           string                 `protobuf:"bytes,4,opt,name=uri,proto3" json:"uri,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EntityRef) Reset() {
	*x = EntityRef{}
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[75]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EntityRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityRef) ProtoMessage() {}

func (x *EntityRef) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_tickets_ticket_proto_msgTypes[75]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityRef.ProtoReflect.Descriptor instead.
func (*EntityRef) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP(), []int{75}
}

func (x *EntityRef) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *EntityRef) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

func (x *EntityRef) GetTicketCode() string {
	if x != nil {
		return x.TicketCode
	}
	return ""
}

func (x *EntityRef) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

var File_api_v1alpha1_tickets_ticket_proto protoreflect.FileDescriptor

const file_api_v1alpha1_tickets_ticket_proto_rawDesc = "" +
	"\n" +
	"!api/v1alpha1/tickets/ticket.proto\x12\x14api.v1alpha1.tickets\x1a\x19api/commons/tickets.proto\x1a google/protobuf/field_mask.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\t\n" +
	"\aPingReq\"\t\n" +
	"\aPingRes\"\xbe\x04\n" +
	"\x0fCreateTicketReq\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12#\n" +
	"\vproject_sid\x18\x03 \x01(\x03B\x020\x01R\n" +
	"projectSid\x125\n" +
	"\bdue_date\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\adueDate\x121\n" +
	"\bmetadata\x18\t \x03(\v2\x15.api.commons.MetadataR\bmetadata\x12<\n" +
	"\rticket_skills\x18\n" +
	" \x03(\v2\x13.api.commons.SkillsB\x02\x18\x01R\fticketSkills\x12\x16\n" +
	"\x06status\x18\v \x01(\x03R\x06status\x12/\n" +
	"\n" +
	"ticket_sla\x18\f \x03(\v2\x10.api.commons.SlaR\tticketSla\x12\x1f\n" +
	"\vassign_self\x18\r \x01(\bR\n" +
	"assignSelf\x12%\n" +
	"\fassign_other\x18\x0e \x01(\tB\x02\x18\x01R\vassignOther\x12>\n" +
	"\rticket_action\x18\x0f \x03(\v2\x19.api.commons.TicketActionR\fticketAction\x12'\n" +
	"\x0fticket_assignee\x18\x10 \x03(\tR\x0eticketAssignee\x12,\n" +
	"\x10contact_entry_id\x18\x11 \x01(\x03B\x020\x01R\x0econtactEntryId\"c\n" +
	"\x1bCreateTicketTemplateRequest\x12D\n" +
	"\x0fticket_template\x18\x01 \x01(\v2\x1b.api.commons.TicketTemplateR\x0eticketTemplate\"d\n" +
	"\x1cCreateTicketTemplateResponse\x12D\n" +
	"\x0fticket_template\x18\x01 \x01(\v2\x1b.api.commons.TicketTemplateR\x0eticketTemplate\"\xd3\x01\n" +
	"\x19EditTicketTemplateRequest\x120\n" +
	"\x12ticket_template_id\x18\x01 \x01(\x03B\x020\x01R\x10ticketTemplateId\x12:\n" +
	"\n" +
	"edit_value\x18\x02 \x01(\v2\x1b.api.commons.TicketTemplateR\teditValue\x12H\n" +
	"\x12edited_fields_mask\x18\x03 \x01(\v2\x1a.google.protobuf.FieldMaskR\x10editedFieldsMask\"=\n" +
	"\x1aEditTicketTemplateResponse\x12\x1f\n" +
	"\tis_edited\x18\x01 \x01(\bB\x02\x18\x01R\bisEdited\"\x88\x02\n" +
	"\x19ListTicketTemplateRequest\x120\n" +
	"\x12ticket_template_id\x18\x01 \x01(\x03B\x02\x18\x01R\x10ticketTemplateId\x12!\n" +
	"\n" +
	"project_id\x18\x02 \x01(\x03B\x02\x18\x01R\tprojectId\x12=\n" +
	"\frequest_mask\x18\x03 \x01(\v2\x1a.google.protobuf.FieldMaskR\vrequestMask\x12#\n" +
	"\vtemplate_id\x18\x04 \x01(\x03B\x020\x01R\n" +
	"templateId\x122\n" +
	"\x13template_project_id\x18\x05 \x01(\x03B\x020\x01R\x11templateProjectId\"\xc4\x01\n" +
	"\x1aListTicketTemplateResponse\x12J\n" +
	"\x11enabled_templates\x18\x01 \x03(\v2\x19.api.commons.ListTemplateB\x02\x18\x01R\x10enabledTemplates\x12Z\n" +
	"\x17ticket_project_template\x18\x02 \x03(\v2\".api.commons.TicketProjectTemplateR\x15ticketProjectTemplate\"\xe9\x01\n" +
	"\x1cAssignProjectTemplateRequest\x12Q\n" +
	"\x10project_template\x18\x01 \x01(\v2\".api.commons.AssignProjectTemplateB\x02\x18\x01R\x0fprojectTemplate\x12!\n" +
	"\n" +
	"project_id\x18\x02 \x01(\x03B\x020\x01R\tprojectId\x12S\n" +
	"\x14template_description\x18\x03 \x03(\v2 .api.commons.TemplateDescriptionR\x13templateDescription\"D\n" +
	"\x1dAssignProjectTemplateResponse\x12#\n" +
	"\vis_assigned\x18\x01 \x01(\bB\x02\x18\x01R\n" +
	"isAssigned\">\n" +
	"\x0fCreateTicketRes\x12+\n" +
	"\x06ticket\x18\x01 \x01(\v2\x13.api.commons.TicketR\x06ticket\"\x16\n" +
	"\x14GetActionTypeRequest\"Q\n" +
	"\x15GetActionTypeResponse\x128\n" +
	"\vaction_type\x18\x01 \x03(\v2\x17.api.commons.ActionTypeR\n" +
	"actionType\"B\n" +
	"\x19GetPhoneNumberTypeRequest\x12!\n" +
	"\fphone_number\x18\x01 \x01(\tR\vphoneNumber:\x02\x18\x01\"]\n" +
	"\x1aGetPhoneNumberTypeResponse\x12;\n" +
	"\n" +
	"phone_type\x18\x01 \x01(\x0e2\x1c.api.commons.PhoneNumberTypeR\tphoneType:\x02\x18\x01\"q\n" +
	"\rEditTicketReq\x12!\n" +
	"\n" +
	"ticket_sid\x18\x01 \x01(\x03B\x020\x01R\tticketSid\x129\n" +
	"\n" +
	"edit_value\x18\x02 \x01(\v2\x1a.api.commons.EditAttributeR\teditValue:\x02\x18\x01\"\x85\x02\n" +
	"\x11EditMaskTicketReq\x12#\n" +
	"\n" +
	"ticket_sid\x18\x01 \x01(\x03B\x04\x18\x010\x01R\tticketSid\x122\n" +
	"\n" +
	"edit_value\x18\x02 \x01(\v2\x13.api.commons.TicketR\teditValue\x12H\n" +
	"\x12edited_fields_mask\x18\x03 \x03(\v2\x1a.google.protobuf.FieldMaskR\x10editedFieldsMask\x12\x1f\n" +
	"\vticket_code\x18\x04 \x01(\tR\n" +
	"ticketCode\x12,\n" +
	"\x10contact_entry_id\x18\x05 \x01(\x03B\x020\x01R\x0econtactEntryId\"4\n" +
	"\x11EditMaskTicketRes\x12\x1f\n" +
	"\tis_edited\x18\x01 \x01(\bB\x02\x18\x01R\bisEdited\"?\n" +
	"\x16ListAllocatedTicketRes\x12!\n" +
	"\n" +
	"ticket_sid\x18\x01 \x03(\x03B\x020\x01R\tticketSid:\x02\x18\x01\"\x1c\n" +
	"\x16ListAllocatedTicketReq:\x02\x18\x01\"G\n" +
	"\x18ListAgentTicketsResponse\x12+\n" +
	"\x06ticket\x18\x01 \x03(\v2\x13.api.commons.TicketR\x06ticket\"\x9e\x01\n" +
	"\x17ListAgentTicketsRequest\x12F\n" +
	"\x11select_field_mask\x18\x01 \x01(\v2\x1a.google.protobuf.FieldMaskR\x0fselectFieldMask\x12;\n" +
	"\vfilter_mask\x18\x02 \x01(\v2\x1a.google.protobuf.FieldMaskR\n" +
	"filterMask\"u\n" +
	"!ListAvailableAgentTicketsResponse\x12#\n" +
	"\n" +
	"ticket_sid\x18\x01 \x03(\x03B\x04\x18\x010\x01R\tticketSid\x12+\n" +
	"\x06ticket\x18\x02 \x03(\v2\x13.api.commons.TicketR\x06ticket\"\xed\x01\n" +
	" ListAvailableAgentTicketsRequest\x12F\n" +
	"\x11select_field_mask\x18\x01 \x01(\v2\x1a.google.protobuf.FieldMaskR\x0fselectFieldMask\x12W\n" +
	"\x10available_filter\x18\x02 \x01(\v2,.api.v1alpha1.tickets.AvailableTicketsFilterR\x0favailableFilter\x12(\n" +
	"\x10agent_view_limit\x18\x03 \x01(\x03R\x0eagentViewLimit\">\n" +
	"\x16AvailableTicketsFilter\x12$\n" +
	"\x0eagent_skill_id\x18\x01 \x03(\tR\fagentSkillId\"0\n" +
	"\rEditTicketRes\x12\x1b\n" +
	"\tis_edited\x18\x01 \x01(\bR\bisEdited:\x02\x18\x01\"\x10\n" +
	"\x0eListTicketsReq\"?\n" +
	"\x0eListTicketsRes\x12-\n" +
	"\atickets\x18\x01 \x03(\v2\x13.api.commons.TicketR\atickets\"~\n" +
	"\x0fAssignTicketReq\x12!\n" +
	"\n" +
	"ticket_sid\x18\x01 \x01(\x03B\x020\x01R\tticketSid\x12#\n" +
	"\rassignee_list\x18\x02 \x01(\tR\fassigneeList\x12\x1f\n" +
	"\vassigned_id\x18\x03 \x01(\tR\n" +
	"assignedId:\x02\x18\x01\"~\n" +
	"\x0fAssignTicketRes\x12!\n" +
	"\n" +
	"ticket_sid\x18\x01 \x01(\x03B\x020\x01R\tticketSid\x12#\n" +
	"\rassignee_list\x18\x02 \x01(\tR\fassigneeList\x12\x1f\n" +
	"\vassigned_id\x18\x03 \x01(\tR\n" +
	"assignedId:\x02\x18\x01\"U\n" +
	"\rViewTicketReq\x12#\n" +
	"\n" +
	"ticket_sid\x18\x01 \x01(\x03B\x04\x18\x010\x01R\tticketSid\x12\x1f\n" +
	"\vticket_code\x18\x02 \x01(\tR\n" +
	"ticketCode\"\xae\x01\n" +
	"\rViewTicketRes\x12+\n" +
	"\x06ticket\x18\x01 \x01(\v2\x13.api.commons.TicketR\x06ticket\x120\n" +
	"\bcomments\x18\x02 \x03(\v2\x14.api.commons.CommentR\bcomments\x12>\n" +
	"\rreply_comment\x18\x03 \x03(\v2\x19.api.commons.ReplyCommentR\freplyComment\"r\n" +
	"\x10CreateCommentReq\x12#\n" +
	"\n" +
	"ticket_sid\x18\x01 \x01(\x03B\x04\x18\x010\x01R\tticketSid\x12\x18\n" +
	"\acomment\x18\x02 \x01(\tR\acomment\x12\x1f\n" +
	"\vticket_code\x18\x03 \x01(\tR\n" +
	"ticketCode\"B\n" +
	"\x10CreateCommentRes\x12.\n" +
	"\acomment\x18\x01 \x01(\v2\x14.api.commons.CommentR\acomment\"\x97\x01\n" +
	"\x0eCloseTicketReq\x12#\n" +
	"\n" +
	"ticket_sid\x18\x01 \x01(\x03B\x04\x18\x010\x01R\tticketSid\x12\x18\n" +
	"\acomment\x18\x02 \x01(\tR\acomment\x12%\n" +
	"\vfrom_status\x18\x03 \x01(\x03B\x04\x18\x010\x01R\n" +
	"fromStatus\x12\x1f\n" +
	"\vticket_code\x18\x04 \x01(\tR\n" +
	"ticketCode\"1\n" +
	"\x0eCloseTicketRes\x12\x1f\n" +
	"\tis_status\x18\x01 \x01(\bB\x02\x18\x01R\bisStatus\"\xb4\x01\n" +
	"\fCreateSlaReq\x12\x1b\n" +
	"\asla_sid\x18\x01 \x01(\x03B\x020\x01R\x06slaSid\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x1e\n" +
	"\binterval\x18\x04 \x01(\x03B\x02\x18\x01R\binterval\x121\n" +
	"\bduration\x18\x05 \x01(\v2\x15.api.commons.DurationR\bduration\"8\n" +
	"\fCreateSlaRes\x12(\n" +
	"\x03sla\x18\x01 \x01(\v2\x16.api.commons.TicketSlaR\x03sla\"\f\n" +
	"\n" +
	"ListSlaReq\"D\n" +
	"\n" +
	"ListSlaRes\x126\n" +
	"\n" +
	"ticketsSla\x18\x01 \x03(\v2\x16.api.commons.TicketSlaR\n" +
	"ticketsSla\"H\n" +
	"\fUpdateSlaReq\x12\x1b\n" +
	"\asla_sid\x18\x01 \x01(\x03B\x020\x01R\x06slaSid\x12\x1b\n" +
	"\tis_active\x18\x02 \x01(\x03R\bisActive\"F\n" +
	"\fUpdateSlaRes\x126\n" +
	"\n" +
	"ticketsSla\x18\x01 \x01(\v2\x16.api.commons.TicketSlaR\n" +
	"ticketsSla\"\x15\n" +
	"\x13ListSlaConditionReq\"U\n" +
	"\x13ListSlaConditionRes\x12>\n" +
	"\fslaCondition\x18\x01 \x03(\v2\x1a.api.commons.SlaConditionsR\fslaCondition\"\xb6\x01\n" +
	"\x0fReplyCommentReq\x12#\n" +
	"\vcomment_sid\x18\x01 \x01(\x03B\x020\x01R\n" +
	"commentSid\x12#\n" +
	"\n" +
	"ticket_sid\x18\x02 \x01(\x03B\x04\x18\x010\x01R\tticketSid\x12\x14\n" +
	"\x05reply\x18\x03 \x01(\tR\x05reply\x12\"\n" +
	"\rcreated_by_id\x18\x04 \x01(\tR\vcreatedById\x12\x1f\n" +
	"\vticket_code\x18\x05 \x01(\tR\n" +
	"ticketCode\"R\n" +
	"\x0fReplyCommentRes\x12?\n" +
	"\n" +
	"is_created\x18\x01 \x01(\v2 .api.commons.ConfirmReplyCommentR\tisCreated\"<\n" +
	"\x13CreateSelfAssignReq\x12!\n" +
	"\n" +
	"ticket_sid\x18\x01 \x01(\x03B\x020\x01R\tticketSid:\x02\x18\x01\":\n" +
	"\x13CreateSelfAssignRes\x12\x1f\n" +
	"\vis_assigned\x18\x01 \x01(\bR\n" +
	"isAssigned:\x02\x18\x01\"\x13\n" +
	"\x11ListSkillsRequest\"I\n" +
	"\x12ListSkillsResponse\x123\n" +
	"\x06skills\x18\x01 \x03(\v2\x1b.api.v1alpha1.tickets.SkillR\x06skills\"6\n" +
	"\x05Skill\x12\x19\n" +
	"\bskill_id\x18\x01 \x01(\tR\askillId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\"\x12\n" +
	"\x10ListUsersRequest\"E\n" +
	"\x11ListUsersResponse\x120\n" +
	"\x05users\x18\x01 \x03(\v2\x1a.api.v1alpha1.tickets.UserR\x05users\"x\n" +
	"\x04User\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1d\n" +
	"\n" +
	"first_name\x18\x02 \x01(\tR\tfirstName\x12\x1b\n" +
	"\tlast_name\x18\x03 \x01(\tR\blastName\x12\x1b\n" +
	"\tis_active\x18\x04 \x01(\bR\bisActive\"[\n" +
	"\x19CreateTicketActionRequest\x12>\n" +
	"\rticket_action\x18\x01 \x01(\v2\x19.api.commons.TicketActionR\fticketAction\"\\\n" +
	"\x1aCreateTicketActionResponse\x12>\n" +
	"\rticket_action\x18\x01 \x01(\v2\x19.api.commons.TicketActionR\fticketAction\"\xaa\x01\n" +
	"\x18CloseTicketActionRequest\x12,\n" +
	"\x10ticket_action_id\x18\x01 \x01(\x03B\x020\x01R\x0eticketActionId\x12!\n" +
	"\tticket_id\x18\x02 \x01(\x03B\x04\x18\x010\x01R\bticketId\x12\x1c\n" +
	"\acomment\x18\x03 \x01(\tB\x02\x18\x01R\acomment\x12\x1f\n" +
	"\vticket_code\x18\x04 \x01(\tR\n" +
	"ticketCode\"<\n" +
	"\x19CloseTicketActionResponse\x12\x1f\n" +
	"\tis_closed\x18\x01 \x01(\bB\x02\x18\x01R\bisClosed\"M\n" +
	"\x19AssignTicketActionRequest\x12,\n" +
	"\x10ticket_action_id\x18\x01 \x01(\x03B\x020\x01R\x0eticketActionId:\x02\x18\x01\"A\n" +
	"\x1aAssignTicketActionResponse\x12\x1f\n" +
	"\vis_assigned\x18\x01 \x01(\bR\n" +
	"isAssigned:\x02\x18\x01\"\xa1\x01\n" +
	"\x19ChangeTicketStatusRequest\x12\x1f\n" +
	"\tticket_id\x18\x01 \x01(\x03B\x020\x01R\bticketId\x12\x1f\n" +
	"\tstatus_id\x18\x02 \x01(\x03B\x020\x01R\bstatusId\x12>\n" +
	"\rticket_status\x18\x03 \x01(\x0e2\x19.api.commons.TicketStatusR\fticketStatus:\x02\x18\x01\"J\n" +
	"\x1aChangeTicketStatusResponse\x12(\n" +
	"\x10is_status_edited\x18\x01 \x01(\bR\x0eisStatusEdited:\x02\x18\x01\"U\n" +
	"\x13AddEntityRefRequest\x12>\n" +
	"\n" +
	"entity_ref\x18\x01 \x01(\v2\x1f.api.v1alpha1.tickets.EntityRefR\tentityRef\"\x16\n" +
	"\x14AddEntityRefResponse\"@\n" +
	"\x1dListEntityRefsByTicketRequest\x12\x1f\n" +
	"\vticket_code\x18\x01 \x01(\tR\n" +
	"ticketCode\"`\n" +
	"\x1eListEntityRefsByTicketResponse\x12>\n" +
	"\n" +
	"entity_ref\x18\x01 \x03(\v2\x1f.api.v1alpha1.tickets.EntityRefR\tentityRef\"1\n" +
	"\x1dListTicketsByEntityRefRequest\x12\x10\n" +
	"\x03uri\x18\x01 \x01(\tR\x03uri\"O\n" +
	"\x1eListTicketsByEntityRefResponse\x12-\n" +
	"\atickets\x18\x01 \x03(\v2\x13.api.commons.TicketR\atickets\"\x9b\x01\n" +
	"\x18CreateCustomFieldRequest\x12\x1f\n" +
	"\vticket_code\x18\x01 \x01(\tR\n" +
	"ticketCode\x12!\n" +
	"\n" +
	"project_id\x18\x02 \x01(\x03B\x020\x01R\tprojectId\x12;\n" +
	"\fcustom_field\x18\x03 \x03(\v2\x18.api.commons.CustomFieldR\vcustomField\"\x9c\x01\n" +
	"\x19CreateCustomFieldResponse\x12\x1f\n" +
	"\vticket_code\x18\x01 \x01(\tR\n" +
	"ticketCode\x12!\n" +
	"\n" +
	"project_id\x18\x02 \x01(\x03B\x020\x01R\tprojectId\x12;\n" +
	"\fcustom_field\x18\x03 \x03(\v2\x18.api.commons.CustomFieldR\vcustomField\"\x95\x01\n" +
	"\x16EditCustomFieldRequest\x12\x1f\n" +
	"\vticket_code\x18\x01 \x01(\tR\n" +
	"ticketCode\x12!\n" +
	"\n" +
	"project_id\x18\x02 \x01(\x03B\x020\x01R\tprojectId\x127\n" +
	"\n" +
	"edit_value\x18\x03 \x03(\v2\x18.api.commons.CustomFieldR\teditValue\"\xa7\x01\n" +
	"\x17EditCustomFieldResponse\x12\x1f\n" +
	"\vticket_code\x18\x01 \x01(\tR\n" +
	"ticketCode\x12!\n" +
	"\n" +
	"project_id\x18\x02 \x01(\x03B\x020\x01R\tprojectId\x12H\n" +
	"\x13edited_custom_field\x18\x03 \x03(\v2\x18.api.commons.CustomFieldR\x11editedCustomField\"]\n" +
	"\x17ListCustomFieldsRequest\x12\x1f\n" +
	"\vticket_code\x18\x01 \x01(\tR\n" +
	"ticketCode\x12!\n" +
	"\n" +
	"project_id\x18\x02 \x01(\x03B\x020\x01R\tprojectId\"\x9d\x01\n" +
	"\x18ListCustomFieldsResponse\x12\x1f\n" +
	"\vticket_code\x18\x01 \x01(\tR\n" +
	"ticketCode\x12!\n" +
	"\n" +
	"project_id\x18\x02 \x01(\x03B\x020\x01R\tprojectId\x12=\n" +
	"\rcustom_fields\x18\x03 \x03(\v2\x18.api.commons.CustomFieldR\fcustomFields\"r\n" +
	"\tEntityRef\x12\x15\n" +
	"\x06org_id\x18\x01 \x01(\tR\x05orgId\x12\x1b\n" +
	"\tregion_id\x18\x02 \x01(\tR\bregionId\x12\x1f\n" +
	"\vticket_code\x18\x03 \x01(\tR\n" +
	"ticketCode\x12\x10\n" +
	"\x03uri\x18\x04 \x01(\tR\x03uri*?\n" +
	"\vActionTypes\x12\x06\n" +
	"\x02NA\x10\x00\x12\f\n" +
	"\bCallback\x10\x01\x12\r\n" +
	"\tEmailback\x10\x02\x12\v\n" +
	"\aSmsback\x10\x03*3\n" +
	"\rSLAConditions\x12\b\n" +
	"\x04None\x10\x00\x12\v\n" +
	"\aRespond\x10\x01\x12\v\n" +
	"\aResolve\x10\x02B\xca\x01\n" +
	"\x18com.api.v1alpha1.ticketsB\vTicketProtoP\x01Z/github.com/tcncloud/api-go/api/v1alpha1/tickets\xa2\x02\x03AVT\xaa\x02\x14Api.V1alpha1.Tickets\xca\x02\x14Api\\V1alpha1\\Tickets\xe2\x02 Api\\V1alpha1\\Tickets\\GPBMetadata\xea\x02\x16Api::V1alpha1::Ticketsb\x06proto3"

var (
	file_api_v1alpha1_tickets_ticket_proto_rawDescOnce sync.Once
	file_api_v1alpha1_tickets_ticket_proto_rawDescData []byte
)

func file_api_v1alpha1_tickets_ticket_proto_rawDescGZIP() []byte {
	file_api_v1alpha1_tickets_ticket_proto_rawDescOnce.Do(func() {
		file_api_v1alpha1_tickets_ticket_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_v1alpha1_tickets_ticket_proto_rawDesc), len(file_api_v1alpha1_tickets_ticket_proto_rawDesc)))
	})
	return file_api_v1alpha1_tickets_ticket_proto_rawDescData
}

var file_api_v1alpha1_tickets_ticket_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_api_v1alpha1_tickets_ticket_proto_msgTypes = make([]protoimpl.MessageInfo, 76)
var file_api_v1alpha1_tickets_ticket_proto_goTypes = []any{
	(ActionTypes)(0),                          // 0: api.v1alpha1.tickets.ActionTypes
	(SLAConditions)(0),                        // 1: api.v1alpha1.tickets.SLAConditions
	(*PingReq)(nil),                           // 2: api.v1alpha1.tickets.PingReq
	(*PingRes)(nil),                           // 3: api.v1alpha1.tickets.PingRes
	(*CreateTicketReq)(nil),                   // 4: api.v1alpha1.tickets.CreateTicketReq
	(*CreateTicketTemplateRequest)(nil),       // 5: api.v1alpha1.tickets.CreateTicketTemplateRequest
	(*CreateTicketTemplateResponse)(nil),      // 6: api.v1alpha1.tickets.CreateTicketTemplateResponse
	(*EditTicketTemplateRequest)(nil),         // 7: api.v1alpha1.tickets.EditTicketTemplateRequest
	(*EditTicketTemplateResponse)(nil),        // 8: api.v1alpha1.tickets.EditTicketTemplateResponse
	(*ListTicketTemplateRequest)(nil),         // 9: api.v1alpha1.tickets.ListTicketTemplateRequest
	(*ListTicketTemplateResponse)(nil),        // 10: api.v1alpha1.tickets.ListTicketTemplateResponse
	(*AssignProjectTemplateRequest)(nil),      // 11: api.v1alpha1.tickets.AssignProjectTemplateRequest
	(*AssignProjectTemplateResponse)(nil),     // 12: api.v1alpha1.tickets.AssignProjectTemplateResponse
	(*CreateTicketRes)(nil),                   // 13: api.v1alpha1.tickets.CreateTicketRes
	(*GetActionTypeRequest)(nil),              // 14: api.v1alpha1.tickets.GetActionTypeRequest
	(*GetActionTypeResponse)(nil),             // 15: api.v1alpha1.tickets.GetActionTypeResponse
	(*GetPhoneNumberTypeRequest)(nil),         // 16: api.v1alpha1.tickets.GetPhoneNumberTypeRequest
	(*GetPhoneNumberTypeResponse)(nil),        // 17: api.v1alpha1.tickets.GetPhoneNumberTypeResponse
	(*EditTicketReq)(nil),                     // 18: api.v1alpha1.tickets.EditTicketReq
	(*EditMaskTicketReq)(nil),                 // 19: api.v1alpha1.tickets.EditMaskTicketReq
	(*EditMaskTicketRes)(nil),                 // 20: api.v1alpha1.tickets.EditMaskTicketRes
	(*ListAllocatedTicketRes)(nil),            // 21: api.v1alpha1.tickets.ListAllocatedTicketRes
	(*ListAllocatedTicketReq)(nil),            // 22: api.v1alpha1.tickets.ListAllocatedTicketReq
	(*ListAgentTicketsResponse)(nil),          // 23: api.v1alpha1.tickets.ListAgentTicketsResponse
	(*ListAgentTicketsRequest)(nil),           // 24: api.v1alpha1.tickets.ListAgentTicketsRequest
	(*ListAvailableAgentTicketsResponse)(nil), // 25: api.v1alpha1.tickets.ListAvailableAgentTicketsResponse
	(*ListAvailableAgentTicketsRequest)(nil),  // 26: api.v1alpha1.tickets.ListAvailableAgentTicketsRequest
	(*AvailableTicketsFilter)(nil),            // 27: api.v1alpha1.tickets.AvailableTicketsFilter
	(*EditTicketRes)(nil),                     // 28: api.v1alpha1.tickets.EditTicketRes
	(*ListTicketsReq)(nil),                    // 29: api.v1alpha1.tickets.ListTicketsReq
	(*ListTicketsRes)(nil),                    // 30: api.v1alpha1.tickets.ListTicketsRes
	(*AssignTicketReq)(nil),                   // 31: api.v1alpha1.tickets.AssignTicketReq
	(*AssignTicketRes)(nil),                   // 32: api.v1alpha1.tickets.AssignTicketRes
	(*ViewTicketReq)(nil),                     // 33: api.v1alpha1.tickets.ViewTicketReq
	(*ViewTicketRes)(nil),                     // 34: api.v1alpha1.tickets.ViewTicketRes
	(*CreateCommentReq)(nil),                  // 35: api.v1alpha1.tickets.CreateCommentReq
	(*CreateCommentRes)(nil),                  // 36: api.v1alpha1.tickets.CreateCommentRes
	(*CloseTicketReq)(nil),                    // 37: api.v1alpha1.tickets.CloseTicketReq
	(*CloseTicketRes)(nil),                    // 38: api.v1alpha1.tickets.CloseTicketRes
	(*CreateSlaReq)(nil),                      // 39: api.v1alpha1.tickets.CreateSlaReq
	(*CreateSlaRes)(nil),                      // 40: api.v1alpha1.tickets.CreateSlaRes
	(*ListSlaReq)(nil),                        // 41: api.v1alpha1.tickets.ListSlaReq
	(*ListSlaRes)(nil),                        // 42: api.v1alpha1.tickets.ListSlaRes
	(*UpdateSlaReq)(nil),                      // 43: api.v1alpha1.tickets.UpdateSlaReq
	(*UpdateSlaRes)(nil),                      // 44: api.v1alpha1.tickets.UpdateSlaRes
	(*ListSlaConditionReq)(nil),               // 45: api.v1alpha1.tickets.ListSlaConditionReq
	(*ListSlaConditionRes)(nil),               // 46: api.v1alpha1.tickets.ListSlaConditionRes
	(*ReplyCommentReq)(nil),                   // 47: api.v1alpha1.tickets.ReplyCommentReq
	(*ReplyCommentRes)(nil),                   // 48: api.v1alpha1.tickets.ReplyCommentRes
	(*CreateSelfAssignReq)(nil),               // 49: api.v1alpha1.tickets.CreateSelfAssignReq
	(*CreateSelfAssignRes)(nil),               // 50: api.v1alpha1.tickets.CreateSelfAssignRes
	(*ListSkillsRequest)(nil),                 // 51: api.v1alpha1.tickets.ListSkillsRequest
	(*ListSkillsResponse)(nil),                // 52: api.v1alpha1.tickets.ListSkillsResponse
	(*Skill)(nil),                             // 53: api.v1alpha1.tickets.Skill
	(*ListUsersRequest)(nil),                  // 54: api.v1alpha1.tickets.ListUsersRequest
	(*ListUsersResponse)(nil),                 // 55: api.v1alpha1.tickets.ListUsersResponse
	(*User)(nil),                              // 56: api.v1alpha1.tickets.User
	(*CreateTicketActionRequest)(nil),         // 57: api.v1alpha1.tickets.CreateTicketActionRequest
	(*CreateTicketActionResponse)(nil),        // 58: api.v1alpha1.tickets.CreateTicketActionResponse
	(*CloseTicketActionRequest)(nil),          // 59: api.v1alpha1.tickets.CloseTicketActionRequest
	(*CloseTicketActionResponse)(nil),         // 60: api.v1alpha1.tickets.CloseTicketActionResponse
	(*AssignTicketActionRequest)(nil),         // 61: api.v1alpha1.tickets.AssignTicketActionRequest
	(*AssignTicketActionResponse)(nil),        // 62: api.v1alpha1.tickets.AssignTicketActionResponse
	(*ChangeTicketStatusRequest)(nil),         // 63: api.v1alpha1.tickets.ChangeTicketStatusRequest
	(*ChangeTicketStatusResponse)(nil),        // 64: api.v1alpha1.tickets.ChangeTicketStatusResponse
	(*AddEntityRefRequest)(nil),               // 65: api.v1alpha1.tickets.AddEntityRefRequest
	(*AddEntityRefResponse)(nil),              // 66: api.v1alpha1.tickets.AddEntityRefResponse
	(*ListEntityRefsByTicketRequest)(nil),     // 67: api.v1alpha1.tickets.ListEntityRefsByTicketRequest
	(*ListEntityRefsByTicketResponse)(nil),    // 68: api.v1alpha1.tickets.ListEntityRefsByTicketResponse
	(*ListTicketsByEntityRefRequest)(nil),     // 69: api.v1alpha1.tickets.ListTicketsByEntityRefRequest
	(*ListTicketsByEntityRefResponse)(nil),    // 70: api.v1alpha1.tickets.ListTicketsByEntityRefResponse
	(*CreateCustomFieldRequest)(nil),          // 71: api.v1alpha1.tickets.CreateCustomFieldRequest
	(*CreateCustomFieldResponse)(nil),         // 72: api.v1alpha1.tickets.CreateCustomFieldResponse
	(*EditCustomFieldRequest)(nil),            // 73: api.v1alpha1.tickets.EditCustomFieldRequest
	(*EditCustomFieldResponse)(nil),           // 74: api.v1alpha1.tickets.EditCustomFieldResponse
	(*ListCustomFieldsRequest)(nil),           // 75: api.v1alpha1.tickets.ListCustomFieldsRequest
	(*ListCustomFieldsResponse)(nil),          // 76: api.v1alpha1.tickets.ListCustomFieldsResponse
	(*EntityRef)(nil),                         // 77: api.v1alpha1.tickets.EntityRef
	(*timestamppb.Timestamp)(nil),             // 78: google.protobuf.Timestamp
	(*commons.Metadata)(nil),                  // 79: api.commons.Metadata
	(*commons.Skills)(nil),                    // 80: api.commons.Skills
	(*commons.Sla)(nil),                       // 81: api.commons.Sla
	(*commons.TicketAction)(nil),              // 82: api.commons.TicketAction
	(*commons.TicketTemplate)(nil),            // 83: api.commons.TicketTemplate
	(*fieldmaskpb.FieldMask)(nil),             // 84: google.protobuf.FieldMask
	(*commons.ListTemplate)(nil),              // 85: api.commons.ListTemplate
	(*commons.TicketProjectTemplate)(nil),     // 86: api.commons.TicketProjectTemplate
	(*commons.AssignProjectTemplate)(nil),     // 87: api.commons.AssignProjectTemplate
	(*commons.TemplateDescription)(nil),       // 88: api.commons.TemplateDescription
	(*commons.Ticket)(nil),                    // 89: api.commons.Ticket
	(*commons.ActionType)(nil),                // 90: api.commons.ActionType
	(commons.PhoneNumberType)(0),              // 91: api.commons.PhoneNumberType
	(*commons.EditAttribute)(nil),             // 92: api.commons.EditAttribute
	(*commons.Comment)(nil),                   // 93: api.commons.Comment
	(*commons.ReplyComment)(nil),              // 94: api.commons.ReplyComment
	(*commons.Duration)(nil),                  // 95: api.commons.Duration
	(*commons.TicketSla)(nil),                 // 96: api.commons.TicketSla
	(*commons.SlaConditions)(nil),             // 97: api.commons.SlaConditions
	(*commons.ConfirmReplyComment)(nil),       // 98: api.commons.ConfirmReplyComment
	(commons.TicketStatus)(0),                 // 99: api.commons.TicketStatus
	(*commons.CustomField)(nil),               // 100: api.commons.CustomField
}
var file_api_v1alpha1_tickets_ticket_proto_depIdxs = []int32{
	78,  // 0: api.v1alpha1.tickets.CreateTicketReq.due_date:type_name -> google.protobuf.Timestamp
	79,  // 1: api.v1alpha1.tickets.CreateTicketReq.metadata:type_name -> api.commons.Metadata
	80,  // 2: api.v1alpha1.tickets.CreateTicketReq.ticket_skills:type_name -> api.commons.Skills
	81,  // 3: api.v1alpha1.tickets.CreateTicketReq.ticket_sla:type_name -> api.commons.Sla
	82,  // 4: api.v1alpha1.tickets.CreateTicketReq.ticket_action:type_name -> api.commons.TicketAction
	83,  // 5: api.v1alpha1.tickets.CreateTicketTemplateRequest.ticket_template:type_name -> api.commons.TicketTemplate
	83,  // 6: api.v1alpha1.tickets.CreateTicketTemplateResponse.ticket_template:type_name -> api.commons.TicketTemplate
	83,  // 7: api.v1alpha1.tickets.EditTicketTemplateRequest.edit_value:type_name -> api.commons.TicketTemplate
	84,  // 8: api.v1alpha1.tickets.EditTicketTemplateRequest.edited_fields_mask:type_name -> google.protobuf.FieldMask
	84,  // 9: api.v1alpha1.tickets.ListTicketTemplateRequest.request_mask:type_name -> google.protobuf.FieldMask
	85,  // 10: api.v1alpha1.tickets.ListTicketTemplateResponse.enabled_templates:type_name -> api.commons.ListTemplate
	86,  // 11: api.v1alpha1.tickets.ListTicketTemplateResponse.ticket_project_template:type_name -> api.commons.TicketProjectTemplate
	87,  // 12: api.v1alpha1.tickets.AssignProjectTemplateRequest.project_template:type_name -> api.commons.AssignProjectTemplate
	88,  // 13: api.v1alpha1.tickets.AssignProjectTemplateRequest.template_description:type_name -> api.commons.TemplateDescription
	89,  // 14: api.v1alpha1.tickets.CreateTicketRes.ticket:type_name -> api.commons.Ticket
	90,  // 15: api.v1alpha1.tickets.GetActionTypeResponse.action_type:type_name -> api.commons.ActionType
	91,  // 16: api.v1alpha1.tickets.GetPhoneNumberTypeResponse.phone_type:type_name -> api.commons.PhoneNumberType
	92,  // 17: api.v1alpha1.tickets.EditTicketReq.edit_value:type_name -> api.commons.EditAttribute
	89,  // 18: api.v1alpha1.tickets.EditMaskTicketReq.edit_value:type_name -> api.commons.Ticket
	84,  // 19: api.v1alpha1.tickets.EditMaskTicketReq.edited_fields_mask:type_name -> google.protobuf.FieldMask
	89,  // 20: api.v1alpha1.tickets.ListAgentTicketsResponse.ticket:type_name -> api.commons.Ticket
	84,  // 21: api.v1alpha1.tickets.ListAgentTicketsRequest.select_field_mask:type_name -> google.protobuf.FieldMask
	84,  // 22: api.v1alpha1.tickets.ListAgentTicketsRequest.filter_mask:type_name -> google.protobuf.FieldMask
	89,  // 23: api.v1alpha1.tickets.ListAvailableAgentTicketsResponse.ticket:type_name -> api.commons.Ticket
	84,  // 24: api.v1alpha1.tickets.ListAvailableAgentTicketsRequest.select_field_mask:type_name -> google.protobuf.FieldMask
	27,  // 25: api.v1alpha1.tickets.ListAvailableAgentTicketsRequest.available_filter:type_name -> api.v1alpha1.tickets.AvailableTicketsFilter
	89,  // 26: api.v1alpha1.tickets.ListTicketsRes.tickets:type_name -> api.commons.Ticket
	89,  // 27: api.v1alpha1.tickets.ViewTicketRes.ticket:type_name -> api.commons.Ticket
	93,  // 28: api.v1alpha1.tickets.ViewTicketRes.comments:type_name -> api.commons.Comment
	94,  // 29: api.v1alpha1.tickets.ViewTicketRes.reply_comment:type_name -> api.commons.ReplyComment
	93,  // 30: api.v1alpha1.tickets.CreateCommentRes.comment:type_name -> api.commons.Comment
	95,  // 31: api.v1alpha1.tickets.CreateSlaReq.duration:type_name -> api.commons.Duration
	96,  // 32: api.v1alpha1.tickets.CreateSlaRes.sla:type_name -> api.commons.TicketSla
	96,  // 33: api.v1alpha1.tickets.ListSlaRes.ticketsSla:type_name -> api.commons.TicketSla
	96,  // 34: api.v1alpha1.tickets.UpdateSlaRes.ticketsSla:type_name -> api.commons.TicketSla
	97,  // 35: api.v1alpha1.tickets.ListSlaConditionRes.slaCondition:type_name -> api.commons.SlaConditions
	98,  // 36: api.v1alpha1.tickets.ReplyCommentRes.is_created:type_name -> api.commons.ConfirmReplyComment
	53,  // 37: api.v1alpha1.tickets.ListSkillsResponse.skills:type_name -> api.v1alpha1.tickets.Skill
	56,  // 38: api.v1alpha1.tickets.ListUsersResponse.users:type_name -> api.v1alpha1.tickets.User
	82,  // 39: api.v1alpha1.tickets.CreateTicketActionRequest.ticket_action:type_name -> api.commons.TicketAction
	82,  // 40: api.v1alpha1.tickets.CreateTicketActionResponse.ticket_action:type_name -> api.commons.TicketAction
	99,  // 41: api.v1alpha1.tickets.ChangeTicketStatusRequest.ticket_status:type_name -> api.commons.TicketStatus
	77,  // 42: api.v1alpha1.tickets.AddEntityRefRequest.entity_ref:type_name -> api.v1alpha1.tickets.EntityRef
	77,  // 43: api.v1alpha1.tickets.ListEntityRefsByTicketResponse.entity_ref:type_name -> api.v1alpha1.tickets.EntityRef
	89,  // 44: api.v1alpha1.tickets.ListTicketsByEntityRefResponse.tickets:type_name -> api.commons.Ticket
	100, // 45: api.v1alpha1.tickets.CreateCustomFieldRequest.custom_field:type_name -> api.commons.CustomField
	100, // 46: api.v1alpha1.tickets.CreateCustomFieldResponse.custom_field:type_name -> api.commons.CustomField
	100, // 47: api.v1alpha1.tickets.EditCustomFieldRequest.edit_value:type_name -> api.commons.CustomField
	100, // 48: api.v1alpha1.tickets.EditCustomFieldResponse.edited_custom_field:type_name -> api.commons.CustomField
	100, // 49: api.v1alpha1.tickets.ListCustomFieldsResponse.custom_fields:type_name -> api.commons.CustomField
	50,  // [50:50] is the sub-list for method output_type
	50,  // [50:50] is the sub-list for method input_type
	50,  // [50:50] is the sub-list for extension type_name
	50,  // [50:50] is the sub-list for extension extendee
	0,   // [0:50] is the sub-list for field type_name
}

func init() { file_api_v1alpha1_tickets_ticket_proto_init() }
func file_api_v1alpha1_tickets_ticket_proto_init() {
	if File_api_v1alpha1_tickets_ticket_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_v1alpha1_tickets_ticket_proto_rawDesc), len(file_api_v1alpha1_tickets_ticket_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   76,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_v1alpha1_tickets_ticket_proto_goTypes,
		DependencyIndexes: file_api_v1alpha1_tickets_ticket_proto_depIdxs,
		EnumInfos:         file_api_v1alpha1_tickets_ticket_proto_enumTypes,
		MessageInfos:      file_api_v1alpha1_tickets_ticket_proto_msgTypes,
	}.Build()
	File_api_v1alpha1_tickets_ticket_proto = out.File
	file_api_v1alpha1_tickets_ticket_proto_goTypes = nil
	file_api_v1alpha1_tickets_ticket_proto_depIdxs = nil
}
