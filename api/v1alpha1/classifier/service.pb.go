// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        (unknown)
// source: api/v1alpha1/classifier/service.proto

package classifier

import (
	_ "github.com/tcncloud/api-go/annotations"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ParseFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Opt:
	//
	//	*ParseFileRequest_RawData
	//	*ParseFileRequest_ReparseFile
	//	*ParseFileRequest_ParseWithHints_
	Opt  isParseFileRequest_Opt `protobuf_oneof:"opt"`
	Name string                 `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ParseFileRequest) Reset() {
	*x = ParseFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_classifier_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParseFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseFileRequest) ProtoMessage() {}

func (x *ParseFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_classifier_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseFileRequest.ProtoReflect.Descriptor instead.
func (*ParseFileRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_classifier_service_proto_rawDescGZIP(), []int{0}
}

func (m *ParseFileRequest) GetOpt() isParseFileRequest_Opt {
	if m != nil {
		return m.Opt
	}
	return nil
}

func (x *ParseFileRequest) GetRawData() []byte {
	if x, ok := x.GetOpt().(*ParseFileRequest_RawData); ok {
		return x.RawData
	}
	return nil
}

func (x *ParseFileRequest) GetReparseFile() *ParseFileRequest_ReParseFile {
	if x, ok := x.GetOpt().(*ParseFileRequest_ReparseFile); ok {
		return x.ReparseFile
	}
	return nil
}

func (x *ParseFileRequest) GetParseWithHints() *ParseFileRequest_ParseWithHints {
	if x, ok := x.GetOpt().(*ParseFileRequest_ParseWithHints_); ok {
		return x.ParseWithHints
	}
	return nil
}

func (x *ParseFileRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type isParseFileRequest_Opt interface {
	isParseFileRequest_Opt()
}

type ParseFileRequest_RawData struct {
	// the raw file, no more than 2mb
	// use raw_data if file is simple.
	// a header immediately followed by data
	RawData []byte `protobuf:"bytes,3,opt,name=raw_data,json=rawData,proto3,oneof"`
}

type ParseFileRequest_ReparseFile struct {
	// reparse the file that exists for this template with new hints
	ReparseFile *ParseFileRequest_ReParseFile `protobuf:"bytes,4,opt,name=reparse_file,json=reparseFile,proto3,oneof"`
}

type ParseFileRequest_ParseWithHints_ struct {
	// parse with hints if file is not
	// a header immediately followed by data
	ParseWithHints *ParseFileRequest_ParseWithHints `protobuf:"bytes,6,opt,name=parse_with_hints,json=parseWithHints,proto3,oneof"`
}

func (*ParseFileRequest_RawData) isParseFileRequest_Opt() {}

func (*ParseFileRequest_ReparseFile) isParseFileRequest_Opt() {}

func (*ParseFileRequest_ParseWithHints_) isParseFileRequest_Opt() {}

type ParseFileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileTemplate *FileTemplate `protobuf:"bytes,1,opt,name=file_template,json=fileTemplate,proto3" json:"file_template,omitempty"`
}

func (x *ParseFileResponse) Reset() {
	*x = ParseFileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_classifier_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParseFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseFileResponse) ProtoMessage() {}

func (x *ParseFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_classifier_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseFileResponse.ProtoReflect.Descriptor instead.
func (*ParseFileResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_classifier_service_proto_rawDescGZIP(), []int{1}
}

func (x *ParseFileResponse) GetFileTemplate() *FileTemplate {
	if x != nil {
		return x.FileTemplate
	}
	return nil
}

type UpdateFileTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileTemplate *FileTemplate `protobuf:"bytes,1,opt,name=file_template,json=fileTemplate,proto3" json:"file_template,omitempty"`
}

func (x *UpdateFileTemplateRequest) Reset() {
	*x = UpdateFileTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_classifier_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFileTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFileTemplateRequest) ProtoMessage() {}

func (x *UpdateFileTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_classifier_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFileTemplateRequest.ProtoReflect.Descriptor instead.
func (*UpdateFileTemplateRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_classifier_service_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateFileTemplateRequest) GetFileTemplate() *FileTemplate {
	if x != nil {
		return x.FileTemplate
	}
	return nil
}

type UpdateFileTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateFileTemplateResponse) Reset() {
	*x = UpdateFileTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_classifier_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFileTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFileTemplateResponse) ProtoMessage() {}

func (x *UpdateFileTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_classifier_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFileTemplateResponse.ProtoReflect.Descriptor instead.
func (*UpdateFileTemplateResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_classifier_service_proto_rawDescGZIP(), []int{3}
}

type DeleteFileTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileTemplate int64 `protobuf:"varint,1,opt,name=file_template,json=fileTemplate,proto3" json:"file_template,omitempty"`
}

func (x *DeleteFileTemplateRequest) Reset() {
	*x = DeleteFileTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_classifier_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFileTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFileTemplateRequest) ProtoMessage() {}

func (x *DeleteFileTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_classifier_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFileTemplateRequest.ProtoReflect.Descriptor instead.
func (*DeleteFileTemplateRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_classifier_service_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteFileTemplateRequest) GetFileTemplate() int64 {
	if x != nil {
		return x.FileTemplate
	}
	return 0
}

type DeleteFileTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteFileTemplateResponse) Reset() {
	*x = DeleteFileTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_classifier_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFileTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFileTemplateResponse) ProtoMessage() {}

func (x *DeleteFileTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_classifier_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFileTemplateResponse.ProtoReflect.Descriptor instead.
func (*DeleteFileTemplateResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_classifier_service_proto_rawDescGZIP(), []int{5}
}

type ListFileTemplatesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// if empty we will start at begining/end of list
	PrevId int64 `protobuf:"varint,1,opt,name=prev_id,json=prevId,proto3" json:"prev_id,omitempty"`
	// sort ascending instead of descending
	Asc bool `protobuf:"varint,2,opt,name=asc,proto3" json:"asc,omitempty"`
	// how many records to get
	PageSize int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *ListFileTemplatesRequest) Reset() {
	*x = ListFileTemplatesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_classifier_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFileTemplatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFileTemplatesRequest) ProtoMessage() {}

func (x *ListFileTemplatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_classifier_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFileTemplatesRequest.ProtoReflect.Descriptor instead.
func (*ListFileTemplatesRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_classifier_service_proto_rawDescGZIP(), []int{6}
}

func (x *ListFileTemplatesRequest) GetPrevId() int64 {
	if x != nil {
		return x.PrevId
	}
	return 0
}

func (x *ListFileTemplatesRequest) GetAsc() bool {
	if x != nil {
		return x.Asc
	}
	return false
}

func (x *ListFileTemplatesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListFileTemplatesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileTemplates []*FileTemplate `protobuf:"bytes,1,rep,name=file_templates,json=fileTemplates,proto3" json:"file_templates,omitempty"`
}

func (x *ListFileTemplatesResponse) Reset() {
	*x = ListFileTemplatesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_classifier_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFileTemplatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFileTemplatesResponse) ProtoMessage() {}

func (x *ListFileTemplatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_classifier_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFileTemplatesResponse.ProtoReflect.Descriptor instead.
func (*ListFileTemplatesResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_classifier_service_proto_rawDescGZIP(), []int{7}
}

func (x *ListFileTemplatesResponse) GetFileTemplates() []*FileTemplate {
	if x != nil {
		return x.FileTemplates
	}
	return nil
}

type GetFileTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileTemplateId int64 `protobuf:"varint,1,opt,name=file_template_id,json=fileTemplateId,proto3" json:"file_template_id,omitempty"`
}

func (x *GetFileTemplateRequest) Reset() {
	*x = GetFileTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_classifier_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFileTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileTemplateRequest) ProtoMessage() {}

func (x *GetFileTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_classifier_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileTemplateRequest.ProtoReflect.Descriptor instead.
func (*GetFileTemplateRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_classifier_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetFileTemplateRequest) GetFileTemplateId() int64 {
	if x != nil {
		return x.FileTemplateId
	}
	return 0
}

type GetFileTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileTemplate *FileTemplate `protobuf:"bytes,1,opt,name=file_template,json=fileTemplate,proto3" json:"file_template,omitempty"`
}

func (x *GetFileTemplateResponse) Reset() {
	*x = GetFileTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_classifier_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFileTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileTemplateResponse) ProtoMessage() {}

func (x *GetFileTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_classifier_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileTemplateResponse.ProtoReflect.Descriptor instead.
func (*GetFileTemplateResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_classifier_service_proto_rawDescGZIP(), []int{9}
}

func (x *GetFileTemplateResponse) GetFileTemplate() *FileTemplate {
	if x != nil {
		return x.FileTemplate
	}
	return nil
}

type ParseFileRequest_ReParseFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileTemplateId int64 `protobuf:"varint,1,opt,name=file_template_id,json=fileTemplateId,proto3" json:"file_template_id,omitempty"`
	// Deprecated: Marked as deprecated in api/v1alpha1/classifier/service.proto.
	Hints *ParseHints `protobuf:"bytes,2,opt,name=hints,proto3" json:"hints,omitempty"`
	Opts  *Opts       `protobuf:"bytes,3,opt,name=opts,proto3" json:"opts,omitempty"`
}

func (x *ParseFileRequest_ReParseFile) Reset() {
	*x = ParseFileRequest_ReParseFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_classifier_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParseFileRequest_ReParseFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseFileRequest_ReParseFile) ProtoMessage() {}

func (x *ParseFileRequest_ReParseFile) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_classifier_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseFileRequest_ReParseFile.ProtoReflect.Descriptor instead.
func (*ParseFileRequest_ReParseFile) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_classifier_service_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ParseFileRequest_ReParseFile) GetFileTemplateId() int64 {
	if x != nil {
		return x.FileTemplateId
	}
	return 0
}

// Deprecated: Marked as deprecated in api/v1alpha1/classifier/service.proto.
func (x *ParseFileRequest_ReParseFile) GetHints() *ParseHints {
	if x != nil {
		return x.Hints
	}
	return nil
}

func (x *ParseFileRequest_ReParseFile) GetOpts() *Opts {
	if x != nil {
		return x.Opts
	}
	return nil
}

type ParseFileRequest_ParseWithHints struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the raw file, no more than 2mb
	RawData []byte `protobuf:"bytes,7,opt,name=raw_data,json=rawData,proto3" json:"raw_data,omitempty"`
	Opts    *Opts  `protobuf:"bytes,8,opt,name=opts,proto3" json:"opts,omitempty"`
}

func (x *ParseFileRequest_ParseWithHints) Reset() {
	*x = ParseFileRequest_ParseWithHints{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_classifier_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParseFileRequest_ParseWithHints) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseFileRequest_ParseWithHints) ProtoMessage() {}

func (x *ParseFileRequest_ParseWithHints) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_classifier_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseFileRequest_ParseWithHints.ProtoReflect.Descriptor instead.
func (*ParseFileRequest_ParseWithHints) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_classifier_service_proto_rawDescGZIP(), []int{0, 1}
}

func (x *ParseFileRequest_ParseWithHints) GetRawData() []byte {
	if x != nil {
		return x.RawData
	}
	return nil
}

func (x *ParseFileRequest_ParseWithHints) GetOpts() *Opts {
	if x != nil {
		return x.Opts
	}
	return nil
}

var File_api_v1alpha1_classifier_service_proto protoreflect.FileDescriptor

var file_api_v1alpha1_classifier_service_proto_rawDesc = []byte{
	0x0a, 0x25, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x1a, 0x17, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x75,
	0x74, 0x68, 0x7a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x26, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x9c, 0x04, 0x0a, 0x10, 0x50, 0x61, 0x72, 0x73, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x08, 0x72, 0x61, 0x77, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x07, 0x72, 0x61, 0x77, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x5a, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x61, 0x72, 0x73, 0x65, 0x5f, 0x66, 0x69, 0x6c,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x2e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x52, 0x65, 0x50, 0x61, 0x72, 0x73, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x48, 0x00,
	0x52, 0x0b, 0x72, 0x65, 0x70, 0x61, 0x72, 0x73, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x64, 0x0a,
	0x10, 0x70, 0x61, 0x72, 0x73, 0x65, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x68, 0x69, 0x6e, 0x74,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x2e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x57, 0x69, 0x74, 0x68, 0x48, 0x69, 0x6e, 0x74,
	0x73, 0x48, 0x00, 0x52, 0x0e, 0x70, 0x61, 0x72, 0x73, 0x65, 0x57, 0x69, 0x74, 0x68, 0x48, 0x69,
	0x6e, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0xad, 0x01, 0x0a, 0x0b, 0x52, 0x65, 0x50, 0x61,
	0x72, 0x73, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x2c, 0x0a, 0x10, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x0e, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x05, 0x68, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x50,
	0x61, 0x72, 0x73, 0x65, 0x48, 0x69, 0x6e, 0x74, 0x73, 0x42, 0x02, 0x18, 0x01, 0x52, 0x05, 0x68,
	0x69, 0x6e, 0x74, 0x73, 0x12, 0x31, 0x0a, 0x04, 0x6f, 0x70, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x4f, 0x70, 0x74,
	0x73, 0x52, 0x04, 0x6f, 0x70, 0x74, 0x73, 0x1a, 0x5e, 0x0a, 0x0e, 0x50, 0x61, 0x72, 0x73, 0x65,
	0x57, 0x69, 0x74, 0x68, 0x48, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x61, 0x77,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x72, 0x61, 0x77,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x31, 0x0a, 0x04, 0x6f, 0x70, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x4f, 0x70, 0x74,
	0x73, 0x52, 0x04, 0x6f, 0x70, 0x74, 0x73, 0x42, 0x05, 0x0a, 0x03, 0x6f, 0x70, 0x74, 0x22, 0x5f,
	0x0a, 0x11, 0x50, 0x61, 0x72, 0x73, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0d, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x52, 0x0c, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x22,
	0x67, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x0d,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x66, 0x69, 0x6c, 0x65,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x22, 0x1c, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x44, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x46, 0x69, 0x6c, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0d, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x0c,
	0x66, 0x69, 0x6c, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x22, 0x1c, 0x0a, 0x1a,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x66, 0x0a, 0x18, 0x4c, 0x69,
	0x73, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x07, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x06, 0x70, 0x72, 0x65,
	0x76, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x03, 0x61, 0x73, 0x63, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x22, 0x69, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4c, 0x0a, 0x0e, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x0d,
	0x66, 0x69, 0x6c, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x22, 0x46, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x10, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x0e, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x49, 0x64, 0x22, 0x65, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4a, 0x0a, 0x0d, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x0c,
	0x66, 0x69, 0x6c, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x32, 0xc5, 0x07, 0x0a,
	0x17, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x65, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x12, 0xa6, 0x01, 0x0a, 0x09, 0x50, 0x61, 0x72,
	0x73, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x2e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x72, 0x73,
	0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x42, 0xba,
	0xb8, 0x91, 0x02, 0x05, 0x0a, 0x03, 0x08, 0xe9, 0x07, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x32, 0x3a,
	0x01, 0x2a, 0x22, 0x2d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2f, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x2f, 0x70, 0x61, 0x72, 0x73,
	0x65, 0x12, 0xc2, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x32, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c,
	0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x43, 0xba, 0xb8, 0x91, 0x02, 0x05, 0x0a, 0x03, 0x08, 0xe9, 0x07, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x33, 0x3a, 0x01, 0x2a, 0x22, 0x2e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x2f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x2f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0xc2, 0x01, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x32, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x69,
	0x6c, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x33, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x43, 0xba, 0xb8, 0x91, 0x02, 0x05, 0x0a, 0x03, 0x08,
	0xe9, 0x07, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x33, 0x3a, 0x01, 0x2a, 0x2a, 0x2e, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x73, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0xbd, 0x01, 0x0a, 0x11,
	0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x73, 0x12, 0x31, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x46, 0x69, 0x6c, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x41, 0xba, 0xb8, 0x91, 0x02, 0x05, 0x0a,
	0x03, 0x08, 0xe9, 0x07, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x31, 0x3a, 0x01, 0x2a, 0x22, 0x2c, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0xb6, 0x01, 0x0a, 0x0f,
	0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12,
	0x2f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c,
	0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x30, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69,
	0x6c, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x40, 0xba, 0xb8, 0x91, 0x02, 0x05, 0x0a, 0x03, 0x08, 0xe9, 0x07, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x30, 0x3a, 0x01, 0x2a, 0x22, 0x2b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73,
	0x2f, 0x67, 0x65, 0x74, 0x42, 0xdd, 0x01, 0x0a, 0x1b, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x42, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x74, 0x63, 0x6e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x61, 0x70, 0x69, 0x2d, 0x67, 0x6f,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0xa2, 0x02, 0x03, 0x41, 0x56, 0x43, 0xaa, 0x02,
	0x17, 0x41, 0x70, 0x69, 0x2e, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0xca, 0x02, 0x17, 0x41, 0x70, 0x69, 0x5c, 0x56,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x5c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69,
	0x65, 0x72, 0xe2, 0x02, 0x23, 0x41, 0x70, 0x69, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x5c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5c, 0x47, 0x50, 0x42,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x19, 0x41, 0x70, 0x69, 0x3a, 0x3a,
	0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x3a, 0x3a, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_v1alpha1_classifier_service_proto_rawDescOnce sync.Once
	file_api_v1alpha1_classifier_service_proto_rawDescData = file_api_v1alpha1_classifier_service_proto_rawDesc
)

func file_api_v1alpha1_classifier_service_proto_rawDescGZIP() []byte {
	file_api_v1alpha1_classifier_service_proto_rawDescOnce.Do(func() {
		file_api_v1alpha1_classifier_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v1alpha1_classifier_service_proto_rawDescData)
	})
	return file_api_v1alpha1_classifier_service_proto_rawDescData
}

var file_api_v1alpha1_classifier_service_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_api_v1alpha1_classifier_service_proto_goTypes = []interface{}{
	(*ParseFileRequest)(nil),                // 0: api.v1alpha1.classifier.ParseFileRequest
	(*ParseFileResponse)(nil),               // 1: api.v1alpha1.classifier.ParseFileResponse
	(*UpdateFileTemplateRequest)(nil),       // 2: api.v1alpha1.classifier.UpdateFileTemplateRequest
	(*UpdateFileTemplateResponse)(nil),      // 3: api.v1alpha1.classifier.UpdateFileTemplateResponse
	(*DeleteFileTemplateRequest)(nil),       // 4: api.v1alpha1.classifier.DeleteFileTemplateRequest
	(*DeleteFileTemplateResponse)(nil),      // 5: api.v1alpha1.classifier.DeleteFileTemplateResponse
	(*ListFileTemplatesRequest)(nil),        // 6: api.v1alpha1.classifier.ListFileTemplatesRequest
	(*ListFileTemplatesResponse)(nil),       // 7: api.v1alpha1.classifier.ListFileTemplatesResponse
	(*GetFileTemplateRequest)(nil),          // 8: api.v1alpha1.classifier.GetFileTemplateRequest
	(*GetFileTemplateResponse)(nil),         // 9: api.v1alpha1.classifier.GetFileTemplateResponse
	(*ParseFileRequest_ReParseFile)(nil),    // 10: api.v1alpha1.classifier.ParseFileRequest.ReParseFile
	(*ParseFileRequest_ParseWithHints)(nil), // 11: api.v1alpha1.classifier.ParseFileRequest.ParseWithHints
	(*FileTemplate)(nil),                    // 12: api.v1alpha1.classifier.FileTemplate
	(*ParseHints)(nil),                      // 13: api.v1alpha1.classifier.ParseHints
	(*Opts)(nil),                            // 14: api.v1alpha1.classifier.Opts
}
var file_api_v1alpha1_classifier_service_proto_depIdxs = []int32{
	10, // 0: api.v1alpha1.classifier.ParseFileRequest.reparse_file:type_name -> api.v1alpha1.classifier.ParseFileRequest.ReParseFile
	11, // 1: api.v1alpha1.classifier.ParseFileRequest.parse_with_hints:type_name -> api.v1alpha1.classifier.ParseFileRequest.ParseWithHints
	12, // 2: api.v1alpha1.classifier.ParseFileResponse.file_template:type_name -> api.v1alpha1.classifier.FileTemplate
	12, // 3: api.v1alpha1.classifier.UpdateFileTemplateRequest.file_template:type_name -> api.v1alpha1.classifier.FileTemplate
	12, // 4: api.v1alpha1.classifier.ListFileTemplatesResponse.file_templates:type_name -> api.v1alpha1.classifier.FileTemplate
	12, // 5: api.v1alpha1.classifier.GetFileTemplateResponse.file_template:type_name -> api.v1alpha1.classifier.FileTemplate
	13, // 6: api.v1alpha1.classifier.ParseFileRequest.ReParseFile.hints:type_name -> api.v1alpha1.classifier.ParseHints
	14, // 7: api.v1alpha1.classifier.ParseFileRequest.ReParseFile.opts:type_name -> api.v1alpha1.classifier.Opts
	14, // 8: api.v1alpha1.classifier.ParseFileRequest.ParseWithHints.opts:type_name -> api.v1alpha1.classifier.Opts
	0,  // 9: api.v1alpha1.classifier.ClassifierFileTemplates.ParseFile:input_type -> api.v1alpha1.classifier.ParseFileRequest
	2,  // 10: api.v1alpha1.classifier.ClassifierFileTemplates.UpdateFileTemplate:input_type -> api.v1alpha1.classifier.UpdateFileTemplateRequest
	4,  // 11: api.v1alpha1.classifier.ClassifierFileTemplates.DeleteFileTemplate:input_type -> api.v1alpha1.classifier.DeleteFileTemplateRequest
	6,  // 12: api.v1alpha1.classifier.ClassifierFileTemplates.ListFileTemplates:input_type -> api.v1alpha1.classifier.ListFileTemplatesRequest
	8,  // 13: api.v1alpha1.classifier.ClassifierFileTemplates.GetFileTemplate:input_type -> api.v1alpha1.classifier.GetFileTemplateRequest
	1,  // 14: api.v1alpha1.classifier.ClassifierFileTemplates.ParseFile:output_type -> api.v1alpha1.classifier.ParseFileResponse
	3,  // 15: api.v1alpha1.classifier.ClassifierFileTemplates.UpdateFileTemplate:output_type -> api.v1alpha1.classifier.UpdateFileTemplateResponse
	5,  // 16: api.v1alpha1.classifier.ClassifierFileTemplates.DeleteFileTemplate:output_type -> api.v1alpha1.classifier.DeleteFileTemplateResponse
	7,  // 17: api.v1alpha1.classifier.ClassifierFileTemplates.ListFileTemplates:output_type -> api.v1alpha1.classifier.ListFileTemplatesResponse
	9,  // 18: api.v1alpha1.classifier.ClassifierFileTemplates.GetFileTemplate:output_type -> api.v1alpha1.classifier.GetFileTemplateResponse
	14, // [14:19] is the sub-list for method output_type
	9,  // [9:14] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_api_v1alpha1_classifier_service_proto_init() }
func file_api_v1alpha1_classifier_service_proto_init() {
	if File_api_v1alpha1_classifier_service_proto != nil {
		return
	}
	file_api_v1alpha1_classifier_entities_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_v1alpha1_classifier_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParseFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_classifier_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParseFileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_classifier_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFileTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_classifier_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFileTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_classifier_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFileTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_classifier_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFileTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_classifier_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFileTemplatesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_classifier_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFileTemplatesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_classifier_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFileTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_classifier_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFileTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_classifier_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParseFileRequest_ReParseFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_classifier_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParseFileRequest_ParseWithHints); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_v1alpha1_classifier_service_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*ParseFileRequest_RawData)(nil),
		(*ParseFileRequest_ReparseFile)(nil),
		(*ParseFileRequest_ParseWithHints_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v1alpha1_classifier_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v1alpha1_classifier_service_proto_goTypes,
		DependencyIndexes: file_api_v1alpha1_classifier_service_proto_depIdxs,
		MessageInfos:      file_api_v1alpha1_classifier_service_proto_msgTypes,
	}.Build()
	File_api_v1alpha1_classifier_service_proto = out.File
	file_api_v1alpha1_classifier_service_proto_rawDesc = nil
	file_api_v1alpha1_classifier_service_proto_goTypes = nil
	file_api_v1alpha1_classifier_service_proto_depIdxs = nil
}
