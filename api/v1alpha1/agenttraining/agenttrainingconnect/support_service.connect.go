// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: api/v1alpha1/agenttraining/support_service.proto

package agenttrainingconnect

import (
	context "context"
	errors "errors"
	connect_go "github.com/bufbuild/connect-go"
	agenttraining "github.com/tcncloud/api-go/api/v1alpha1/agenttraining"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect_go.IsAtLeastVersion0_1_0

const (
	// AgentTrainingSupportServiceName is the fully-qualified name of the AgentTrainingSupportService
	// service.
	AgentTrainingSupportServiceName = "api.v1alpha1.agenttraining.AgentTrainingSupportService"
)

// These constants are the fully-qualified names of the RPCs defined in this package. They're
// exposed at runtime as Spec.Procedure and as the final two segments of the HTTP route.
//
// Note that these are different from the fully-qualified method names used by
// google.golang.org/protobuf/reflect/protoreflect. To convert from these constants to
// reflection-formatted method names, remove the leading slash and convert the remaining slash to a
// period.
const (
	// AgentTrainingSupportServiceListLearningOpportunitiesByOrgIdProcedure is the fully-qualified name
	// of the AgentTrainingSupportService's ListLearningOpportunitiesByOrgId RPC.
	AgentTrainingSupportServiceListLearningOpportunitiesByOrgIdProcedure = "/api.v1alpha1.agenttraining.AgentTrainingSupportService/ListLearningOpportunitiesByOrgId"
	// AgentTrainingSupportServiceDeleteLearningOpportunityByOrgIdProcedure is the fully-qualified name
	// of the AgentTrainingSupportService's DeleteLearningOpportunityByOrgId RPC.
	AgentTrainingSupportServiceDeleteLearningOpportunityByOrgIdProcedure = "/api.v1alpha1.agenttraining.AgentTrainingSupportService/DeleteLearningOpportunityByOrgId"
)

// AgentTrainingSupportServiceClient is a client for the
// api.v1alpha1.agenttraining.AgentTrainingSupportService service.
type AgentTrainingSupportServiceClient interface {
	// ListLearningOpportunitiesByOrgId lists learning opportunities for a specific org.
	ListLearningOpportunitiesByOrgId(context.Context, *connect_go.Request[agenttraining.ListLearningOpportunitiesByOrgIdRequest]) (*connect_go.Response[agenttraining.ListLearningOpportunitiesResponse], error)
	// DeleteLearningOpportunityByOrgId deletes a learning opportunity in a specific org.
	DeleteLearningOpportunityByOrgId(context.Context, *connect_go.Request[agenttraining.DeleteLearningOpportunityByOrgIdRequest]) (*connect_go.Response[agenttraining.DeleteLearningOpportunityResponse], error)
}

// NewAgentTrainingSupportServiceClient constructs a client for the
// api.v1alpha1.agenttraining.AgentTrainingSupportService service. By default, it uses the Connect
// protocol with the binary Protobuf Codec, asks for gzipped responses, and sends uncompressed
// requests. To use the gRPC or gRPC-Web protocols, supply the connect.WithGRPC() or
// connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewAgentTrainingSupportServiceClient(httpClient connect_go.HTTPClient, baseURL string, opts ...connect_go.ClientOption) AgentTrainingSupportServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	return &agentTrainingSupportServiceClient{
		listLearningOpportunitiesByOrgId: connect_go.NewClient[agenttraining.ListLearningOpportunitiesByOrgIdRequest, agenttraining.ListLearningOpportunitiesResponse](
			httpClient,
			baseURL+AgentTrainingSupportServiceListLearningOpportunitiesByOrgIdProcedure,
			opts...,
		),
		deleteLearningOpportunityByOrgId: connect_go.NewClient[agenttraining.DeleteLearningOpportunityByOrgIdRequest, agenttraining.DeleteLearningOpportunityResponse](
			httpClient,
			baseURL+AgentTrainingSupportServiceDeleteLearningOpportunityByOrgIdProcedure,
			opts...,
		),
	}
}

// agentTrainingSupportServiceClient implements AgentTrainingSupportServiceClient.
type agentTrainingSupportServiceClient struct {
	listLearningOpportunitiesByOrgId *connect_go.Client[agenttraining.ListLearningOpportunitiesByOrgIdRequest, agenttraining.ListLearningOpportunitiesResponse]
	deleteLearningOpportunityByOrgId *connect_go.Client[agenttraining.DeleteLearningOpportunityByOrgIdRequest, agenttraining.DeleteLearningOpportunityResponse]
}

// ListLearningOpportunitiesByOrgId calls
// api.v1alpha1.agenttraining.AgentTrainingSupportService.ListLearningOpportunitiesByOrgId.
func (c *agentTrainingSupportServiceClient) ListLearningOpportunitiesByOrgId(ctx context.Context, req *connect_go.Request[agenttraining.ListLearningOpportunitiesByOrgIdRequest]) (*connect_go.Response[agenttraining.ListLearningOpportunitiesResponse], error) {
	return c.listLearningOpportunitiesByOrgId.CallUnary(ctx, req)
}

// DeleteLearningOpportunityByOrgId calls
// api.v1alpha1.agenttraining.AgentTrainingSupportService.DeleteLearningOpportunityByOrgId.
func (c *agentTrainingSupportServiceClient) DeleteLearningOpportunityByOrgId(ctx context.Context, req *connect_go.Request[agenttraining.DeleteLearningOpportunityByOrgIdRequest]) (*connect_go.Response[agenttraining.DeleteLearningOpportunityResponse], error) {
	return c.deleteLearningOpportunityByOrgId.CallUnary(ctx, req)
}

// AgentTrainingSupportServiceHandler is an implementation of the
// api.v1alpha1.agenttraining.AgentTrainingSupportService service.
type AgentTrainingSupportServiceHandler interface {
	// ListLearningOpportunitiesByOrgId lists learning opportunities for a specific org.
	ListLearningOpportunitiesByOrgId(context.Context, *connect_go.Request[agenttraining.ListLearningOpportunitiesByOrgIdRequest]) (*connect_go.Response[agenttraining.ListLearningOpportunitiesResponse], error)
	// DeleteLearningOpportunityByOrgId deletes a learning opportunity in a specific org.
	DeleteLearningOpportunityByOrgId(context.Context, *connect_go.Request[agenttraining.DeleteLearningOpportunityByOrgIdRequest]) (*connect_go.Response[agenttraining.DeleteLearningOpportunityResponse], error)
}

// NewAgentTrainingSupportServiceHandler builds an HTTP handler from the service implementation. It
// returns the path on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewAgentTrainingSupportServiceHandler(svc AgentTrainingSupportServiceHandler, opts ...connect_go.HandlerOption) (string, http.Handler) {
	agentTrainingSupportServiceListLearningOpportunitiesByOrgIdHandler := connect_go.NewUnaryHandler(
		AgentTrainingSupportServiceListLearningOpportunitiesByOrgIdProcedure,
		svc.ListLearningOpportunitiesByOrgId,
		opts...,
	)
	agentTrainingSupportServiceDeleteLearningOpportunityByOrgIdHandler := connect_go.NewUnaryHandler(
		AgentTrainingSupportServiceDeleteLearningOpportunityByOrgIdProcedure,
		svc.DeleteLearningOpportunityByOrgId,
		opts...,
	)
	return "/api.v1alpha1.agenttraining.AgentTrainingSupportService/", http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		switch r.URL.Path {
		case AgentTrainingSupportServiceListLearningOpportunitiesByOrgIdProcedure:
			agentTrainingSupportServiceListLearningOpportunitiesByOrgIdHandler.ServeHTTP(w, r)
		case AgentTrainingSupportServiceDeleteLearningOpportunityByOrgIdProcedure:
			agentTrainingSupportServiceDeleteLearningOpportunityByOrgIdHandler.ServeHTTP(w, r)
		default:
			http.NotFound(w, r)
		}
	})
}

// UnimplementedAgentTrainingSupportServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedAgentTrainingSupportServiceHandler struct{}

func (UnimplementedAgentTrainingSupportServiceHandler) ListLearningOpportunitiesByOrgId(context.Context, *connect_go.Request[agenttraining.ListLearningOpportunitiesByOrgIdRequest]) (*connect_go.Response[agenttraining.ListLearningOpportunitiesResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v1alpha1.agenttraining.AgentTrainingSupportService.ListLearningOpportunitiesByOrgId is not implemented"))
}

func (UnimplementedAgentTrainingSupportServiceHandler) DeleteLearningOpportunityByOrgId(context.Context, *connect_go.Request[agenttraining.DeleteLearningOpportunityByOrgIdRequest]) (*connect_go.Response[agenttraining.DeleteLearningOpportunityResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("api.v1alpha1.agenttraining.AgentTrainingSupportService.DeleteLearningOpportunityByOrgId is not implemented"))
}
