// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: api/v1alpha1/scorecards/scorecard.proto

package scorecards

import (
	commons "github.com/tcncloud/api-go/api/commons"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CreateScorecardRequest is the request to create a scorecard.
type CreateScorecardRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Scorecard     *commons.Scorecard     `protobuf:"bytes,1,opt,name=scorecard,proto3" json:"scorecard,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateScorecardRequest) Reset() {
	*x = CreateScorecardRequest{}
	mi := &file_api_v1alpha1_scorecards_scorecard_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateScorecardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateScorecardRequest) ProtoMessage() {}

func (x *CreateScorecardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_scorecards_scorecard_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateScorecardRequest.ProtoReflect.Descriptor instead.
func (*CreateScorecardRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_scorecards_scorecard_proto_rawDescGZIP(), []int{0}
}

func (x *CreateScorecardRequest) GetScorecard() *commons.Scorecard {
	if x != nil {
		return x.Scorecard
	}
	return nil
}

// CreateScorecardResponse contains the scorecard that was created.
type CreateScorecardResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Scorecard     *commons.Scorecard     `protobuf:"bytes,1,opt,name=scorecard,proto3" json:"scorecard,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateScorecardResponse) Reset() {
	*x = CreateScorecardResponse{}
	mi := &file_api_v1alpha1_scorecards_scorecard_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateScorecardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateScorecardResponse) ProtoMessage() {}

func (x *CreateScorecardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_scorecards_scorecard_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateScorecardResponse.ProtoReflect.Descriptor instead.
func (*CreateScorecardResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_scorecards_scorecard_proto_rawDescGZIP(), []int{1}
}

func (x *CreateScorecardResponse) GetScorecard() *commons.Scorecard {
	if x != nil {
		return x.Scorecard
	}
	return nil
}

// ListScorecardsRequest is the request for listing scorecards by certain criteria.
type ListScorecardsRequest struct {
	state           protoimpl.MessageState   `protogen:"open.v1"`
	AuthorIds       []string                 `protobuf:"bytes,2,rep,name=author_ids,json=authorIds,proto3" json:"author_ids,omitempty"`                                                           // Optional. Results include any of the authors
	CategoryIds     []int64                  `protobuf:"varint,3,rep,packed,name=category_ids,json=categoryIds,proto3" json:"category_ids,omitempty"`                                             // Optional. Results include any of the categories listed.
	States          []commons.ScorecardState `protobuf:"varint,4,rep,packed,name=states,proto3,enum=api.commons.ScorecardState" json:"states,omitempty"`                                          // Optional. Results include scorecard in any of the given states.
	EvaluationTypes []commons.EvaluationType `protobuf:"varint,5,rep,packed,name=evaluation_types,json=evaluationTypes,proto3,enum=api.commons.EvaluationType" json:"evaluation_types,omitempty"` // Optional. Results include scorecard with any of the given types
	CallTypes       []commons.CallType_Enum  `protobuf:"varint,6,rep,packed,name=call_types,json=callTypes,proto3,enum=api.commons.CallType_Enum" json:"call_types,omitempty"`                    // Optional. Results include scorecard with any of the given call types.
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ListScorecardsRequest) Reset() {
	*x = ListScorecardsRequest{}
	mi := &file_api_v1alpha1_scorecards_scorecard_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListScorecardsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListScorecardsRequest) ProtoMessage() {}

func (x *ListScorecardsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_scorecards_scorecard_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListScorecardsRequest.ProtoReflect.Descriptor instead.
func (*ListScorecardsRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_scorecards_scorecard_proto_rawDescGZIP(), []int{2}
}

func (x *ListScorecardsRequest) GetAuthorIds() []string {
	if x != nil {
		return x.AuthorIds
	}
	return nil
}

func (x *ListScorecardsRequest) GetCategoryIds() []int64 {
	if x != nil {
		return x.CategoryIds
	}
	return nil
}

func (x *ListScorecardsRequest) GetStates() []commons.ScorecardState {
	if x != nil {
		return x.States
	}
	return nil
}

func (x *ListScorecardsRequest) GetEvaluationTypes() []commons.EvaluationType {
	if x != nil {
		return x.EvaluationTypes
	}
	return nil
}

func (x *ListScorecardsRequest) GetCallTypes() []commons.CallType_Enum {
	if x != nil {
		return x.CallTypes
	}
	return nil
}

// ListScorecardsResponse includes a list of scorecards.
type ListScorecardsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Scorecards    []*commons.Scorecard   `protobuf:"bytes,1,rep,name=scorecards,proto3" json:"scorecards,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListScorecardsResponse) Reset() {
	*x = ListScorecardsResponse{}
	mi := &file_api_v1alpha1_scorecards_scorecard_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListScorecardsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListScorecardsResponse) ProtoMessage() {}

func (x *ListScorecardsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_scorecards_scorecard_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListScorecardsResponse.ProtoReflect.Descriptor instead.
func (*ListScorecardsResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_scorecards_scorecard_proto_rawDescGZIP(), []int{3}
}

func (x *ListScorecardsResponse) GetScorecards() []*commons.Scorecard {
	if x != nil {
		return x.Scorecards
	}
	return nil
}

// UpdateScorecardRequest is the request for updating a scorecard.
type UpdateScorecardRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required.
	Scorecard *commons.Scorecard `protobuf:"bytes,1,opt,name=scorecard,proto3" json:"scorecard,omitempty"`
	// Required. Valid paths: [title, description, pass_score, score_type,
	// evaluation_type, allow_feedback, distribute_weights, category.category_id].
	// To update Sections, use *Section and *ScorecardQuestion methods.
	UpdateMask    *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateScorecardRequest) Reset() {
	*x = UpdateScorecardRequest{}
	mi := &file_api_v1alpha1_scorecards_scorecard_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateScorecardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateScorecardRequest) ProtoMessage() {}

func (x *UpdateScorecardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_scorecards_scorecard_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateScorecardRequest.ProtoReflect.Descriptor instead.
func (*UpdateScorecardRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_scorecards_scorecard_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateScorecardRequest) GetScorecard() *commons.Scorecard {
	if x != nil {
		return x.Scorecard
	}
	return nil
}

func (x *UpdateScorecardRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

// UpdateScorecardResponse returns the updated scorecard.
type UpdateScorecardResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Scorecard     *commons.Scorecard     `protobuf:"bytes,1,opt,name=scorecard,proto3" json:"scorecard,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateScorecardResponse) Reset() {
	*x = UpdateScorecardResponse{}
	mi := &file_api_v1alpha1_scorecards_scorecard_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateScorecardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateScorecardResponse) ProtoMessage() {}

func (x *UpdateScorecardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_scorecards_scorecard_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateScorecardResponse.ProtoReflect.Descriptor instead.
func (*UpdateScorecardResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_scorecards_scorecard_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateScorecardResponse) GetScorecard() *commons.Scorecard {
	if x != nil {
		return x.Scorecard
	}
	return nil
}

// DeleteScorecardRequest is the request to delete a scorecard.
type DeleteScorecardRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ScorecardId   int64                  `protobuf:"varint,2,opt,name=scorecard_id,json=scorecardId,proto3" json:"scorecard_id,omitempty"` // Required.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteScorecardRequest) Reset() {
	*x = DeleteScorecardRequest{}
	mi := &file_api_v1alpha1_scorecards_scorecard_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteScorecardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteScorecardRequest) ProtoMessage() {}

func (x *DeleteScorecardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_scorecards_scorecard_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteScorecardRequest.ProtoReflect.Descriptor instead.
func (*DeleteScorecardRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_scorecards_scorecard_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteScorecardRequest) GetScorecardId() int64 {
	if x != nil {
		return x.ScorecardId
	}
	return 0
}

// DeleteScorecardResponse contains the deleted scorecard.
type DeleteScorecardResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Scorecard     *commons.Scorecard     `protobuf:"bytes,1,opt,name=scorecard,proto3" json:"scorecard,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteScorecardResponse) Reset() {
	*x = DeleteScorecardResponse{}
	mi := &file_api_v1alpha1_scorecards_scorecard_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteScorecardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteScorecardResponse) ProtoMessage() {}

func (x *DeleteScorecardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_scorecards_scorecard_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteScorecardResponse.ProtoReflect.Descriptor instead.
func (*DeleteScorecardResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_scorecards_scorecard_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteScorecardResponse) GetScorecard() *commons.Scorecard {
	if x != nil {
		return x.Scorecard
	}
	return nil
}

// GetScorecardRequest is the request for getting a scorecard.
type GetScorecardRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ScorecardId   int64                  `protobuf:"varint,2,opt,name=scorecard_id,json=scorecardId,proto3" json:"scorecard_id,omitempty"` // Required.
	UseDefault    bool                   `protobuf:"varint,3,opt,name=use_default,json=useDefault,proto3" json:"use_default,omitempty"`    // if true, will ignore id and return default
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetScorecardRequest) Reset() {
	*x = GetScorecardRequest{}
	mi := &file_api_v1alpha1_scorecards_scorecard_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetScorecardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScorecardRequest) ProtoMessage() {}

func (x *GetScorecardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_scorecards_scorecard_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScorecardRequest.ProtoReflect.Descriptor instead.
func (*GetScorecardRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_scorecards_scorecard_proto_rawDescGZIP(), []int{8}
}

func (x *GetScorecardRequest) GetScorecardId() int64 {
	if x != nil {
		return x.ScorecardId
	}
	return 0
}

func (x *GetScorecardRequest) GetUseDefault() bool {
	if x != nil {
		return x.UseDefault
	}
	return false
}

// GetScorecardResponse contains a scorecard.
type GetScorecardResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Scorecard     *commons.Scorecard     `protobuf:"bytes,1,opt,name=scorecard,proto3" json:"scorecard,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetScorecardResponse) Reset() {
	*x = GetScorecardResponse{}
	mi := &file_api_v1alpha1_scorecards_scorecard_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetScorecardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScorecardResponse) ProtoMessage() {}

func (x *GetScorecardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_scorecards_scorecard_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScorecardResponse.ProtoReflect.Descriptor instead.
func (*GetScorecardResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_scorecards_scorecard_proto_rawDescGZIP(), []int{9}
}

func (x *GetScorecardResponse) GetScorecard() *commons.Scorecard {
	if x != nil {
		return x.Scorecard
	}
	return nil
}

// ListScorecardsByOrgIdRequest is the request for listing scorecards by certain criteria.
type ListScorecardsByOrgIdRequest struct {
	state           protoimpl.MessageState   `protogen:"open.v1"`
	OrgId           string                   `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`                                                                       // Required. Specifies the org in which to list scorecards.
	AuthorIds       []string                 `protobuf:"bytes,2,rep,name=author_ids,json=authorIds,proto3" json:"author_ids,omitempty"`                                                           // Optional. Results include any of the authors
	CategoryIds     []int64                  `protobuf:"varint,3,rep,packed,name=category_ids,json=categoryIds,proto3" json:"category_ids,omitempty"`                                             // Optional. Results include any of the categories listed.
	States          []commons.ScorecardState `protobuf:"varint,4,rep,packed,name=states,proto3,enum=api.commons.ScorecardState" json:"states,omitempty"`                                          // Optional. Results include scorecard in any of the given states.
	EvaluationTypes []commons.EvaluationType `protobuf:"varint,5,rep,packed,name=evaluation_types,json=evaluationTypes,proto3,enum=api.commons.EvaluationType" json:"evaluation_types,omitempty"` // Optional. Results include scorecard with any of the given types
	CallTypes       []commons.CallType_Enum  `protobuf:"varint,6,rep,packed,name=call_types,json=callTypes,proto3,enum=api.commons.CallType_Enum" json:"call_types,omitempty"`                    // Optional. Results include scorecard with any of the given call types.
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ListScorecardsByOrgIdRequest) Reset() {
	*x = ListScorecardsByOrgIdRequest{}
	mi := &file_api_v1alpha1_scorecards_scorecard_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListScorecardsByOrgIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListScorecardsByOrgIdRequest) ProtoMessage() {}

func (x *ListScorecardsByOrgIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_scorecards_scorecard_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListScorecardsByOrgIdRequest.ProtoReflect.Descriptor instead.
func (*ListScorecardsByOrgIdRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_scorecards_scorecard_proto_rawDescGZIP(), []int{10}
}

func (x *ListScorecardsByOrgIdRequest) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *ListScorecardsByOrgIdRequest) GetAuthorIds() []string {
	if x != nil {
		return x.AuthorIds
	}
	return nil
}

func (x *ListScorecardsByOrgIdRequest) GetCategoryIds() []int64 {
	if x != nil {
		return x.CategoryIds
	}
	return nil
}

func (x *ListScorecardsByOrgIdRequest) GetStates() []commons.ScorecardState {
	if x != nil {
		return x.States
	}
	return nil
}

func (x *ListScorecardsByOrgIdRequest) GetEvaluationTypes() []commons.EvaluationType {
	if x != nil {
		return x.EvaluationTypes
	}
	return nil
}

func (x *ListScorecardsByOrgIdRequest) GetCallTypes() []commons.CallType_Enum {
	if x != nil {
		return x.CallTypes
	}
	return nil
}

var File_api_v1alpha1_scorecards_scorecard_proto protoreflect.FileDescriptor

const file_api_v1alpha1_scorecards_scorecard_proto_rawDesc = "" +
	"\n" +
	"'api/v1alpha1/scorecards/scorecard.proto\x12\x17api.v1alpha1.scorecards\x1a\x15api/commons/acd.proto\x1a\x1capi/commons/scorecards.proto\x1a google/protobuf/field_mask.proto\"N\n" +
	"\x16CreateScorecardRequest\x124\n" +
	"\tscorecard\x18\x01 \x01(\v2\x16.api.commons.ScorecardR\tscorecard\"O\n" +
	"\x17CreateScorecardResponse\x124\n" +
	"\tscorecard\x18\x01 \x01(\v2\x16.api.commons.ScorecardR\tscorecard\"\x91\x02\n" +
	"\x15ListScorecardsRequest\x12\x1d\n" +
	"\n" +
	"author_ids\x18\x02 \x03(\tR\tauthorIds\x12!\n" +
	"\fcategory_ids\x18\x03 \x03(\x03R\vcategoryIds\x123\n" +
	"\x06states\x18\x04 \x03(\x0e2\x1b.api.commons.ScorecardStateR\x06states\x12F\n" +
	"\x10evaluation_types\x18\x05 \x03(\x0e2\x1b.api.commons.EvaluationTypeR\x0fevaluationTypes\x129\n" +
	"\n" +
	"call_types\x18\x06 \x03(\x0e2\x1a.api.commons.CallType.EnumR\tcallTypes\"P\n" +
	"\x16ListScorecardsResponse\x126\n" +
	"\n" +
	"scorecards\x18\x01 \x03(\v2\x16.api.commons.ScorecardR\n" +
	"scorecards\"\x8b\x01\n" +
	"\x16UpdateScorecardRequest\x124\n" +
	"\tscorecard\x18\x01 \x01(\v2\x16.api.commons.ScorecardR\tscorecard\x12;\n" +
	"\vupdate_mask\x18\x02 \x01(\v2\x1a.google.protobuf.FieldMaskR\n" +
	"updateMask\"O\n" +
	"\x17UpdateScorecardResponse\x124\n" +
	"\tscorecard\x18\x01 \x01(\v2\x16.api.commons.ScorecardR\tscorecard\";\n" +
	"\x16DeleteScorecardRequest\x12!\n" +
	"\fscorecard_id\x18\x02 \x01(\x03R\vscorecardId\"O\n" +
	"\x17DeleteScorecardResponse\x124\n" +
	"\tscorecard\x18\x01 \x01(\v2\x16.api.commons.ScorecardR\tscorecard\"Y\n" +
	"\x13GetScorecardRequest\x12!\n" +
	"\fscorecard_id\x18\x02 \x01(\x03R\vscorecardId\x12\x1f\n" +
	"\vuse_default\x18\x03 \x01(\bR\n" +
	"useDefault\"L\n" +
	"\x14GetScorecardResponse\x124\n" +
	"\tscorecard\x18\x01 \x01(\v2\x16.api.commons.ScorecardR\tscorecard\"\xaf\x02\n" +
	"\x1cListScorecardsByOrgIdRequest\x12\x15\n" +
	"\x06org_id\x18\x01 \x01(\tR\x05orgId\x12\x1d\n" +
	"\n" +
	"author_ids\x18\x02 \x03(\tR\tauthorIds\x12!\n" +
	"\fcategory_ids\x18\x03 \x03(\x03R\vcategoryIds\x123\n" +
	"\x06states\x18\x04 \x03(\x0e2\x1b.api.commons.ScorecardStateR\x06states\x12F\n" +
	"\x10evaluation_types\x18\x05 \x03(\x0e2\x1b.api.commons.EvaluationTypeR\x0fevaluationTypes\x129\n" +
	"\n" +
	"call_types\x18\x06 \x03(\x0e2\x1a.api.commons.CallType.EnumR\tcallTypesB\xdf\x01\n" +
	"\x1bcom.api.v1alpha1.scorecardsB\x0eScorecardProtoP\x01Z2github.com/tcncloud/api-go/api/v1alpha1/scorecards\xa2\x02\x03AVS\xaa\x02\x17Api.V1alpha1.Scorecards\xca\x02\x17Api\\V1alpha1\\Scorecards\xe2\x02#Api\\V1alpha1\\Scorecards\\GPBMetadata\xea\x02\x19Api::V1alpha1::Scorecardsb\x06proto3"

var (
	file_api_v1alpha1_scorecards_scorecard_proto_rawDescOnce sync.Once
	file_api_v1alpha1_scorecards_scorecard_proto_rawDescData []byte
)

func file_api_v1alpha1_scorecards_scorecard_proto_rawDescGZIP() []byte {
	file_api_v1alpha1_scorecards_scorecard_proto_rawDescOnce.Do(func() {
		file_api_v1alpha1_scorecards_scorecard_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_v1alpha1_scorecards_scorecard_proto_rawDesc), len(file_api_v1alpha1_scorecards_scorecard_proto_rawDesc)))
	})
	return file_api_v1alpha1_scorecards_scorecard_proto_rawDescData
}

var file_api_v1alpha1_scorecards_scorecard_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_api_v1alpha1_scorecards_scorecard_proto_goTypes = []any{
	(*CreateScorecardRequest)(nil),       // 0: api.v1alpha1.scorecards.CreateScorecardRequest
	(*CreateScorecardResponse)(nil),      // 1: api.v1alpha1.scorecards.CreateScorecardResponse
	(*ListScorecardsRequest)(nil),        // 2: api.v1alpha1.scorecards.ListScorecardsRequest
	(*ListScorecardsResponse)(nil),       // 3: api.v1alpha1.scorecards.ListScorecardsResponse
	(*UpdateScorecardRequest)(nil),       // 4: api.v1alpha1.scorecards.UpdateScorecardRequest
	(*UpdateScorecardResponse)(nil),      // 5: api.v1alpha1.scorecards.UpdateScorecardResponse
	(*DeleteScorecardRequest)(nil),       // 6: api.v1alpha1.scorecards.DeleteScorecardRequest
	(*DeleteScorecardResponse)(nil),      // 7: api.v1alpha1.scorecards.DeleteScorecardResponse
	(*GetScorecardRequest)(nil),          // 8: api.v1alpha1.scorecards.GetScorecardRequest
	(*GetScorecardResponse)(nil),         // 9: api.v1alpha1.scorecards.GetScorecardResponse
	(*ListScorecardsByOrgIdRequest)(nil), // 10: api.v1alpha1.scorecards.ListScorecardsByOrgIdRequest
	(*commons.Scorecard)(nil),            // 11: api.commons.Scorecard
	(commons.ScorecardState)(0),          // 12: api.commons.ScorecardState
	(commons.EvaluationType)(0),          // 13: api.commons.EvaluationType
	(commons.CallType_Enum)(0),           // 14: api.commons.CallType.Enum
	(*fieldmaskpb.FieldMask)(nil),        // 15: google.protobuf.FieldMask
}
var file_api_v1alpha1_scorecards_scorecard_proto_depIdxs = []int32{
	11, // 0: api.v1alpha1.scorecards.CreateScorecardRequest.scorecard:type_name -> api.commons.Scorecard
	11, // 1: api.v1alpha1.scorecards.CreateScorecardResponse.scorecard:type_name -> api.commons.Scorecard
	12, // 2: api.v1alpha1.scorecards.ListScorecardsRequest.states:type_name -> api.commons.ScorecardState
	13, // 3: api.v1alpha1.scorecards.ListScorecardsRequest.evaluation_types:type_name -> api.commons.EvaluationType
	14, // 4: api.v1alpha1.scorecards.ListScorecardsRequest.call_types:type_name -> api.commons.CallType.Enum
	11, // 5: api.v1alpha1.scorecards.ListScorecardsResponse.scorecards:type_name -> api.commons.Scorecard
	11, // 6: api.v1alpha1.scorecards.UpdateScorecardRequest.scorecard:type_name -> api.commons.Scorecard
	15, // 7: api.v1alpha1.scorecards.UpdateScorecardRequest.update_mask:type_name -> google.protobuf.FieldMask
	11, // 8: api.v1alpha1.scorecards.UpdateScorecardResponse.scorecard:type_name -> api.commons.Scorecard
	11, // 9: api.v1alpha1.scorecards.DeleteScorecardResponse.scorecard:type_name -> api.commons.Scorecard
	11, // 10: api.v1alpha1.scorecards.GetScorecardResponse.scorecard:type_name -> api.commons.Scorecard
	12, // 11: api.v1alpha1.scorecards.ListScorecardsByOrgIdRequest.states:type_name -> api.commons.ScorecardState
	13, // 12: api.v1alpha1.scorecards.ListScorecardsByOrgIdRequest.evaluation_types:type_name -> api.commons.EvaluationType
	14, // 13: api.v1alpha1.scorecards.ListScorecardsByOrgIdRequest.call_types:type_name -> api.commons.CallType.Enum
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_api_v1alpha1_scorecards_scorecard_proto_init() }
func file_api_v1alpha1_scorecards_scorecard_proto_init() {
	if File_api_v1alpha1_scorecards_scorecard_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_v1alpha1_scorecards_scorecard_proto_rawDesc), len(file_api_v1alpha1_scorecards_scorecard_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_v1alpha1_scorecards_scorecard_proto_goTypes,
		DependencyIndexes: file_api_v1alpha1_scorecards_scorecard_proto_depIdxs,
		MessageInfos:      file_api_v1alpha1_scorecards_scorecard_proto_msgTypes,
	}.Build()
	File_api_v1alpha1_scorecards_scorecard_proto = out.File
	file_api_v1alpha1_scorecards_scorecard_proto_goTypes = nil
	file_api_v1alpha1_scorecards_scorecard_proto_depIdxs = nil
}
