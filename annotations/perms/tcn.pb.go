// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: annotations/perms/tcn.proto

package perms

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Tcn defines the enum value annotations which will be used for permissions.
type Tcn struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Work-in-progress tag. Used to delineate permissions that are not
	// yet ready to go live. Previously known as "A la carte" permissions
	// in the legacy customer support licensing tool.
	Wip *bool `protobuf:"varint,1,opt,name=wip" json:"wip,omitempty"`
	// Application which the permission will be grouped under.
	App *Application `protobuf:"varint,2,opt,name=app,enum=annotations.perms.Application" json:"app,omitempty"`
	// The card/sub-app section which it's assigned to.
	// If no card is provided, it will go under the application's default
	// card (under the same name as the app).
	Card *Card `protobuf:"varint,3,opt,name=card,enum=annotations.perms.Card" json:"card,omitempty"`
	// The list of features or effects the permission grants.
	Features      []string `protobuf:"bytes,4,rep,name=features" json:"features,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Tcn) Reset() {
	*x = Tcn{}
	mi := &file_annotations_perms_tcn_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tcn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tcn) ProtoMessage() {}

func (x *Tcn) ProtoReflect() protoreflect.Message {
	mi := &file_annotations_perms_tcn_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tcn.ProtoReflect.Descriptor instead.
func (*Tcn) Descriptor() ([]byte, []int) {
	return file_annotations_perms_tcn_proto_rawDescGZIP(), []int{0}
}

func (x *Tcn) GetWip() bool {
	if x != nil && x.Wip != nil {
		return *x.Wip
	}
	return false
}

func (x *Tcn) GetApp() Application {
	if x != nil && x.App != nil {
		return *x.App
	}
	return Application_APPLICATION_UNSPECIFIED
}

func (x *Tcn) GetCard() Card {
	if x != nil && x.Card != nil {
		return *x.Card
	}
	return Card_CARD_UNSPECIFIED
}

func (x *Tcn) GetFeatures() []string {
	if x != nil {
		return x.Features
	}
	return nil
}

var file_annotations_perms_tcn_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.EnumValueOptions)(nil),
		ExtensionType: (*Tcn)(nil),
		Field:         50001,
		Name:          "annotations.perms.options",
		Tag:           "bytes,50001,opt,name=options",
		Filename:      "annotations/perms/tcn.proto",
	},
}

// Extension fields to descriptorpb.EnumValueOptions.
var (
	// Options contain the permission annotation properties.
	//
	// optional annotations.perms.Tcn options = 50001;
	E_Options = &file_annotations_perms_tcn_proto_extTypes[0]
)

var File_annotations_perms_tcn_proto protoreflect.FileDescriptor

const file_annotations_perms_tcn_proto_rawDesc = "" +
	"\n" +
	"\x1bannotations/perms/tcn.proto\x12\x11annotations.perms\x1a\x1fannotations/perms/license.proto\x1a google/protobuf/descriptor.proto\"\x92\x01\n" +
	"\x03Tcn\x12\x10\n" +
	"\x03wip\x18\x01 \x01(\bR\x03wip\x120\n" +
	"\x03app\x18\x02 \x01(\x0e2\x1e.annotations.perms.ApplicationR\x03app\x12+\n" +
	"\x04card\x18\x03 \x01(\x0e2\x17.annotations.perms.CardR\x04card\x12\x1a\n" +
	"\bfeatures\x18\x04 \x03(\tR\bfeatures:U\n" +
	"\aoptions\x12!.google.protobuf.EnumValueOptions\x18Ñ†\x03 \x01(\v2\x16.annotations.perms.TcnR\aoptionsB\xb4\x01\n" +
	"\x15com.annotations.permsB\bTcnProtoP\x01Z,github.com/tcncloud/api-go/annotations/perms\xa2\x02\x03APX\xaa\x02\x11Annotations.Perms\xca\x02\x11Annotations\\Perms\xe2\x02\x1dAnnotations\\Perms\\GPBMetadata\xea\x02\x12Annotations::Perms"

var (
	file_annotations_perms_tcn_proto_rawDescOnce sync.Once
	file_annotations_perms_tcn_proto_rawDescData []byte
)

func file_annotations_perms_tcn_proto_rawDescGZIP() []byte {
	file_annotations_perms_tcn_proto_rawDescOnce.Do(func() {
		file_annotations_perms_tcn_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_annotations_perms_tcn_proto_rawDesc), len(file_annotations_perms_tcn_proto_rawDesc)))
	})
	return file_annotations_perms_tcn_proto_rawDescData
}

var file_annotations_perms_tcn_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_annotations_perms_tcn_proto_goTypes = []any{
	(*Tcn)(nil),                           // 0: annotations.perms.Tcn
	(Application)(0),                      // 1: annotations.perms.Application
	(Card)(0),                             // 2: annotations.perms.Card
	(*descriptorpb.EnumValueOptions)(nil), // 3: google.protobuf.EnumValueOptions
}
var file_annotations_perms_tcn_proto_depIdxs = []int32{
	1, // 0: annotations.perms.Tcn.app:type_name -> annotations.perms.Application
	2, // 1: annotations.perms.Tcn.card:type_name -> annotations.perms.Card
	3, // 2: annotations.perms.options:extendee -> google.protobuf.EnumValueOptions
	0, // 3: annotations.perms.options:type_name -> annotations.perms.Tcn
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	3, // [3:4] is the sub-list for extension type_name
	2, // [2:3] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_annotations_perms_tcn_proto_init() }
func file_annotations_perms_tcn_proto_init() {
	if File_annotations_perms_tcn_proto != nil {
		return
	}
	file_annotations_perms_license_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_annotations_perms_tcn_proto_rawDesc), len(file_annotations_perms_tcn_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 1,
			NumServices:   0,
		},
		GoTypes:           file_annotations_perms_tcn_proto_goTypes,
		DependencyIndexes: file_annotations_perms_tcn_proto_depIdxs,
		MessageInfos:      file_annotations_perms_tcn_proto_msgTypes,
		ExtensionInfos:    file_annotations_perms_tcn_proto_extTypes,
	}.Build()
	File_annotations_perms_tcn_proto = out.File
	file_annotations_perms_tcn_proto_goTypes = nil
	file_annotations_perms_tcn_proto_depIdxs = nil
}
