// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: annotations/authz.proto

package annotations

import (
	auth "github.com/tcncloud/api-go/api/commons/auth"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Permissions - annotation object
type Permissions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A list of permission sets - atleast one set must exist in the list
	// to allow access.
	Sets []*PermissionSet `protobuf:"bytes,1,rep,name=sets" json:"sets,omitempty"`
	// WIP inject PERMISSION_DEV into the required list
	// don't use it, it will be removed soon
	//
	// Deprecated: Marked as deprecated in annotations/authz.proto.
	Wip *bool `protobuf:"varint,2,opt,name=wip,def=0" json:"wip,omitempty"`
	// Indicate that the method will use no permissions - it will be public.
	// Be careful with this.
	NoPermissions *bool `protobuf:"varint,3,opt,name=no_permissions,json=noPermissions,def=0" json:"no_permissions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for Permissions fields.
const (
	Default_Permissions_Wip           = bool(false)
	Default_Permissions_NoPermissions = bool(false)
)

func (x *Permissions) Reset() {
	*x = Permissions{}
	mi := &file_annotations_authz_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Permissions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Permissions) ProtoMessage() {}

func (x *Permissions) ProtoReflect() protoreflect.Message {
	mi := &file_annotations_authz_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Permissions.ProtoReflect.Descriptor instead.
func (*Permissions) Descriptor() ([]byte, []int) {
	return file_annotations_authz_proto_rawDescGZIP(), []int{0}
}

func (x *Permissions) GetSets() []*PermissionSet {
	if x != nil {
		return x.Sets
	}
	return nil
}

// Deprecated: Marked as deprecated in annotations/authz.proto.
func (x *Permissions) GetWip() bool {
	if x != nil && x.Wip != nil {
		return *x.Wip
	}
	return Default_Permissions_Wip
}

func (x *Permissions) GetNoPermissions() bool {
	if x != nil && x.NoPermissions != nil {
		return *x.NoPermissions
	}
	return Default_Permissions_NoPermissions
}

type PermissionSet struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Permissions   []auth.Permission      `protobuf:"varint,1,rep,name=permissions,enum=api.commons.auth.Permission" json:"permissions,omitempty"`
	Taint         *Taint                 `protobuf:"bytes,2,opt,name=taint" json:"taint,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PermissionSet) Reset() {
	*x = PermissionSet{}
	mi := &file_annotations_authz_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PermissionSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionSet) ProtoMessage() {}

func (x *PermissionSet) ProtoReflect() protoreflect.Message {
	mi := &file_annotations_authz_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionSet.ProtoReflect.Descriptor instead.
func (*PermissionSet) Descriptor() ([]byte, []int) {
	return file_annotations_authz_proto_rawDescGZIP(), []int{1}
}

func (x *PermissionSet) GetPermissions() []auth.Permission {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *PermissionSet) GetTaint() *Taint {
	if x != nil {
		return x.Taint
	}
	return nil
}

type Taint struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// id of the request message field that will be checked.
	Id *int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// value that the request mesage field with id is required to match.
	Value         *int32 `protobuf:"varint,2,opt,name=value" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Taint) Reset() {
	*x = Taint{}
	mi := &file_annotations_authz_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Taint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Taint) ProtoMessage() {}

func (x *Taint) ProtoReflect() protoreflect.Message {
	mi := &file_annotations_authz_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Taint.ProtoReflect.Descriptor instead.
func (*Taint) Descriptor() ([]byte, []int) {
	return file_annotations_authz_proto_rawDescGZIP(), []int{2}
}

func (x *Taint) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *Taint) GetValue() int32 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

var file_annotations_authz_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.MethodOptions)(nil),
		ExtensionType: (*Permissions)(nil),
		Field:         560007,
		Name:          "annotations.authz",
		Tag:           "bytes,560007,opt,name=authz",
		Filename:      "annotations/authz.proto",
	},
}

// Extension fields to descriptorpb.MethodOptions.
var (
	// add annotations to method options
	//
	// optional annotations.Permissions authz = 560007;
	E_Authz = &file_annotations_authz_proto_extTypes[0]
)

var File_annotations_authz_proto protoreflect.FileDescriptor

const file_annotations_authz_proto_rawDesc = "" +
	"\n" +
	"\x17annotations/authz.proto\x12\vannotations\x1a\x1capi/commons/auth/perms.proto\x1a google/protobuf/descriptor.proto\"\x88\x01\n" +
	"\vPermissions\x12.\n" +
	"\x04sets\x18\x01 \x03(\v2\x1a.annotations.PermissionSetR\x04sets\x12\x1b\n" +
	"\x03wip\x18\x02 \x01(\b:\x05falseB\x02\x18\x01R\x03wip\x12,\n" +
	"\x0eno_permissions\x18\x03 \x01(\b:\x05falseR\rnoPermissions\"y\n" +
	"\rPermissionSet\x12>\n" +
	"\vpermissions\x18\x01 \x03(\x0e2\x1c.api.commons.auth.PermissionR\vpermissions\x12(\n" +
	"\x05taint\x18\x02 \x01(\v2\x12.annotations.TaintR\x05taint\"-\n" +
	"\x05Taint\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:P\n" +
	"\x05authz\x12\x1e.google.protobuf.MethodOptions\x18\x87\x97\" \x01(\v2\x18.annotations.PermissionsR\x05authzB\x91\x01\n" +
	"\x0fcom.annotationsB\n" +
	"AuthzProtoP\x01Z&github.com/tcncloud/api-go/annotations\xa2\x02\x03AXX\xaa\x02\vAnnotations\xca\x02\vAnnotations\xe2\x02\x17Annotations\\GPBMetadata\xea\x02\vAnnotations"

var (
	file_annotations_authz_proto_rawDescOnce sync.Once
	file_annotations_authz_proto_rawDescData []byte
)

func file_annotations_authz_proto_rawDescGZIP() []byte {
	file_annotations_authz_proto_rawDescOnce.Do(func() {
		file_annotations_authz_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_annotations_authz_proto_rawDesc), len(file_annotations_authz_proto_rawDesc)))
	})
	return file_annotations_authz_proto_rawDescData
}

var file_annotations_authz_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_annotations_authz_proto_goTypes = []any{
	(*Permissions)(nil),                // 0: annotations.Permissions
	(*PermissionSet)(nil),              // 1: annotations.PermissionSet
	(*Taint)(nil),                      // 2: annotations.Taint
	(auth.Permission)(0),               // 3: api.commons.auth.Permission
	(*descriptorpb.MethodOptions)(nil), // 4: google.protobuf.MethodOptions
}
var file_annotations_authz_proto_depIdxs = []int32{
	1, // 0: annotations.Permissions.sets:type_name -> annotations.PermissionSet
	3, // 1: annotations.PermissionSet.permissions:type_name -> api.commons.auth.Permission
	2, // 2: annotations.PermissionSet.taint:type_name -> annotations.Taint
	4, // 3: annotations.authz:extendee -> google.protobuf.MethodOptions
	0, // 4: annotations.authz:type_name -> annotations.Permissions
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	4, // [4:5] is the sub-list for extension type_name
	3, // [3:4] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_annotations_authz_proto_init() }
func file_annotations_authz_proto_init() {
	if File_annotations_authz_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_annotations_authz_proto_rawDesc), len(file_annotations_authz_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 1,
			NumServices:   0,
		},
		GoTypes:           file_annotations_authz_proto_goTypes,
		DependencyIndexes: file_annotations_authz_proto_depIdxs,
		MessageInfos:      file_annotations_authz_proto_msgTypes,
		ExtensionInfos:    file_annotations_authz_proto_extTypes,
	}.Build()
	File_annotations_authz_proto = out.File
	file_annotations_authz_proto_goTypes = nil
	file_annotations_authz_proto_depIdxs = nil
}
